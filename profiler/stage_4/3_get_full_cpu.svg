<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2149"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2149"> </text>
<g id="frames">
<g>
<title>all (1,224 samples, 100.00%)</title><rect x="10.0" y="2115.0" width="1180.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="2126.0">all</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (1 samples, 0.08%)</title><rect x="10.0" y="2099.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="2110.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (1 samples, 0.08%)</title><rect x="11.0" y="2099.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="14.0" y="2110.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (1 samples, 0.08%)</title><rect x="11.0" y="2083.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="14.0" y="2094.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.08%)</title><rect x="11.0" y="2067.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.0" y="2078.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.25%)</title><rect x="11.9" y="2099.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.9" y="2110.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.25%)</title><rect x="11.9" y="2083.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="14.9" y="2094.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.25%)</title><rect x="11.9" y="2067.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.9" y="2078.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.16%)</title><rect x="11.9" y="2051.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="14.9" y="2062.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.16%)</title><rect x="11.9" y="2035.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.9" y="2046.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.08%)</title><rect x="11.9" y="2019.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.9" y="2030.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.08%)</title><rect x="12.9" y="2019.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="15.9" y="2030.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.08%)</title><rect x="13.9" y="2051.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.9" y="2062.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.08%)</title><rect x="14.8" y="2099.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="17.8" y="2110.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.08%)</title><rect x="14.8" y="2083.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.8" y="2094.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.08%)</title><rect x="14.8" y="2067.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="17.8" y="2078.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.41%)</title><rect x="15.8" y="2099.0" width="4.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="18.8" y="2110.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.33%)</title><rect x="16.7" y="2083.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="19.7" y="2094.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (4 samples, 0.33%)</title><rect x="16.7" y="2067.0" width="3.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="19.7" y="2078.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.33%)</title><rect x="16.7" y="2051.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="19.7" y="2062.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.08%)</title><rect x="18.7" y="2035.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="21.7" y="2046.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.08%)</title><rect x="19.6" y="2035.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="22.6" y="2046.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.08%)</title><rect x="20.6" y="2099.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="23.6" y="2110.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.08%)</title><rect x="20.6" y="2083.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="23.6" y="2094.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (1 samples, 0.08%)</title><rect x="20.6" y="2067.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="23.6" y="2078.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.08%)</title><rect x="20.6" y="2051.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="23.6" y="2062.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="20.6" y="2035.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="23.6" y="2046.0"></text>
</g>
<g>
<title>[deoptimization] (1 samples, 0.08%)</title><rect x="21.6" y="2099.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="24.6" y="2110.0"></text>
</g>
<g>
<title>Deoptimization::uncommon_trap(JavaThread*, int, int) (1 samples, 0.08%)</title><rect x="21.6" y="2083.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="24.6" y="2094.0"></text>
</g>
<g>
<title>Deoptimization::uncommon_trap_inner(JavaThread*, int) (1 samples, 0.08%)</title><rect x="21.6" y="2067.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="24.6" y="2078.0"></text>
</g>
<g>
<title>Deoptimization::revoke_biases_of_monitors(JavaThread*, frame, RegisterMap*) (1 samples, 0.08%)</title><rect x="21.6" y="2051.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="24.6" y="2062.0"></text>
</g>
<g>
<title>collect_monitors(compiledVFrame*, GrowableArray&lt;Handle&gt;*) (1 samples, 0.08%)</title><rect x="21.6" y="2035.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="24.6" y="2046.0"></text>
</g>
<g>
<title>compiledVFrame::monitors() const (1 samples, 0.08%)</title><rect x="21.6" y="2019.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="24.6" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="21.6" y="2003.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="24.6" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="21.6" y="1987.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="24.6" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="21.6" y="1971.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="24.6" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="21.6" y="1955.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="24.6" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="21.6" y="1939.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="24.6" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="21.6" y="1923.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="24.6" y="1934.0"></text>
</g>
<g>
<title>[not_walkable_Java] (12 samples, 0.98%)</title><rect x="22.5" y="2099.0" width="11.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="25.5" y="2110.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.16%)</title><rect x="26.4" y="2083.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="29.4" y="2094.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (5 samples, 0.41%)</title><rect x="28.3" y="2083.0" width="4.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="31.3" y="2094.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.16%)</title><rect x="28.3" y="2067.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="31.3" y="2078.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.16%)</title><rect x="30.2" y="2067.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="33.2" y="2078.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.08%)</title><rect x="32.2" y="2067.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="35.2" y="2078.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.08%)</title><rect x="33.1" y="2083.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="36.1" y="2094.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="34.1" y="2099.0" width="1.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="37.1" y="2110.0"></text>
</g>
<g>
<title>__GI___open64 (1 samples, 0.08%)</title><rect x="34.1" y="2083.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="37.1" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.1" y="2067.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="37.1" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.1" y="2051.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="37.1" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.1" y="2035.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="37.1" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.1" y="2019.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="37.1" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="34.1" y="2003.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="37.1" y="2014.0"></text>
</g>
<g>
<title>__close_nocancel (1 samples, 0.08%)</title><rect x="35.1" y="2083.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="38.1" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="35.1" y="2067.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="38.1" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="35.1" y="2051.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="38.1" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="35.1" y="2035.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="38.1" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="35.1" y="2019.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="38.1" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="35.1" y="2003.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="38.1" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="35.1" y="1987.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="38.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="35.1" y="1971.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="38.1" y="1982.0"></text>
</g>
<g>
<title>[unknown_Java] (5 samples, 0.41%)</title><rect x="36.0" y="2099.0" width="4.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="39.0" y="2110.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (2 samples, 0.16%)</title><rect x="38.9" y="2083.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="41.9" y="2094.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.08%)</title><rect x="38.9" y="2067.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="41.9" y="2078.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.08%)</title><rect x="38.9" y="2051.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="41.9" y="2062.0"></text>
</g>
<g>
<title>Method::get_c2i_entry() (1 samples, 0.08%)</title><rect x="39.9" y="2067.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="42.9" y="2078.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (2 samples, 0.16%)</title><rect x="40.8" y="2099.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="43.8" y="2110.0"></text>
</g>
<g>
<title>_itoa_word (1 samples, 0.08%)</title><rect x="40.8" y="2083.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="43.8" y="2094.0"></text>
</g>
<g>
<title>vfprintf (1 samples, 0.08%)</title><rect x="41.8" y="2083.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="44.8" y="2094.0"></text>
</g>
<g>
<title>java/lang/Thread.run (661 samples, 54.00%)</title><rect x="42.8" y="2099.0" width="637.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.8" y="2110.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (661 samples, 54.00%)</title><rect x="42.8" y="2083.0" width="637.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="45.8" y="2094.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (661 samples, 54.00%)</title><rect x="42.8" y="2067.0" width="637.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.8" y="2078.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (9 samples, 0.74%)</title><rect x="43.7" y="2051.0" width="8.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.7" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.74%)</title><rect x="43.7" y="2035.0" width="8.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.7" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.74%)</title><rect x="43.7" y="2019.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="46.7" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.16%)</title><rect x="46.6" y="2003.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="49.6" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.33%)</title><rect x="48.6" y="2003.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.6" y="2014.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$62/2121189026.run (2 samples, 0.16%)</title><rect x="50.5" y="1987.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="53.5" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (131 samples, 10.70%)</title><rect x="52.4" y="2051.0" width="126.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.4" y="2062.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (131 samples, 10.70%)</title><rect x="52.4" y="2035.0" width="126.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="55.4" y="2046.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (118 samples, 9.64%)</title><rect x="52.4" y="2019.0" width="113.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="55.4" y="2030.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.33%)</title><rect x="57.2" y="2003.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="60.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="60.1" y="1987.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="63.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="60.1" y="1971.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="63.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="60.1" y="1955.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="63.1" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="60.1" y="1939.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="63.1" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="60.1" y="1923.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="63.1" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="60.1" y="1907.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="63.1" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="60.1" y="1891.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="63.1" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (6 samples, 0.49%)</title><rect x="61.1" y="2003.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="64.1" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.49%)</title><rect x="61.1" y="1987.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="62.1" y="1971.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="65.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="62.1" y="1955.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="65.1" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="62.1" y="1939.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="65.1" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.33%)</title><rect x="63.0" y="1971.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.0" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.33%)</title><rect x="63.0" y="1955.0" width="3.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.0" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (4 samples, 0.33%)</title><rect x="63.0" y="1939.0" width="3.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="66.0" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (102 samples, 8.33%)</title><rect x="66.9" y="2003.0" width="98.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.9" y="2014.0">java/util/co..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (101 samples, 8.25%)</title><rect x="67.8" y="1987.0" width="97.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.8" y="1998.0">jdk/interna..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.08%)</title><rect x="72.7" y="1971.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="75.7" y="1982.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (3 samples, 0.25%)</title><rect x="73.6" y="1971.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="76.6" y="1982.0"></text>
</g>
<g>
<title>Unsafe_Park (45 samples, 3.68%)</title><rect x="76.5" y="1971.0" width="43.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="79.5" y="1982.0">Unsa..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.16%)</title><rect x="80.4" y="1955.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="83.4" y="1966.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (15 samples, 1.23%)</title><rect x="82.3" y="1955.0" width="14.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="85.3" y="1966.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.08%)</title><rect x="94.8" y="1939.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="97.8" y="1950.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.08%)</title><rect x="95.8" y="1939.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="98.8" y="1950.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.08%)</title><rect x="96.8" y="1955.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="99.8" y="1966.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.16%)</title><rect x="97.7" y="1955.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="100.7" y="1966.0"></text>
</g>
<g>
<title>__lll_unlock_wake (12 samples, 0.98%)</title><rect x="99.7" y="1955.0" width="11.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="102.7" y="1966.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.98%)</title><rect x="99.7" y="1939.0" width="11.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="102.7" y="1950.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.98%)</title><rect x="99.7" y="1923.0" width="11.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="102.7" y="1934.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.74%)</title><rect x="102.5" y="1907.0" width="8.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="105.5" y="1918.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.65%)</title><rect x="103.5" y="1891.0" width="7.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="106.5" y="1902.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.57%)</title><rect x="104.5" y="1875.0" width="6.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="107.5" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="110.3" y="1859.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="113.3" y="1870.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.16%)</title><rect x="111.2" y="1955.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="114.2" y="1966.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.16%)</title><rect x="113.2" y="1955.0" width="1.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="116.2" y="1966.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.25%)</title><rect x="115.1" y="1955.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="118.1" y="1966.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.08%)</title><rect x="118.0" y="1955.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="121.0" y="1966.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="118.9" y="1955.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="121.9" y="1966.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 3.84%)</title><rect x="119.9" y="1971.0" width="45.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="122.9" y="1982.0">[unk..</text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.08%)</title><rect x="119.9" y="1955.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="122.9" y="1966.0"></text>
</g>
<g>
<title>__pthread_cond_wait (41 samples, 3.35%)</title><rect x="120.9" y="1955.0" width="39.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="123.9" y="1966.0">__p..</text>
</g>
<g>
<title>[unknown] (35 samples, 2.86%)</title><rect x="126.7" y="1939.0" width="33.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="129.7" y="1950.0">[u..</text>
</g>
<g>
<title>[unknown] (35 samples, 2.86%)</title><rect x="126.7" y="1923.0" width="33.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="129.7" y="1934.0">[u..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.78%)</title><rect x="127.6" y="1907.0" width="32.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="130.6" y="1918.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.70%)</title><rect x="128.6" y="1891.0" width="31.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="131.6" y="1902.0">[u..</text>
</g>
<g>
<title>[unknown] (32 samples, 2.61%)</title><rect x="129.5" y="1875.0" width="30.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="132.5" y="1886.0">[u..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.45%)</title><rect x="131.5" y="1859.0" width="28.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="134.5" y="1870.0">[u..</text>
</g>
<g>
<title>[unknown] (22 samples, 1.80%)</title><rect x="139.2" y="1843.0" width="21.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="142.2" y="1854.0">[..</text>
</g>
<g>
<title>[unknown] (16 samples, 1.31%)</title><rect x="145.0" y="1827.0" width="15.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="148.0" y="1838.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 1.31%)</title><rect x="145.0" y="1811.0" width="15.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="148.0" y="1822.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.16%)</title><rect x="160.4" y="1955.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="163.4" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1939.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="164.4" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1923.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="164.4" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1907.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="164.4" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1891.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="164.4" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1875.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="164.4" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1859.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="164.4" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1843.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="164.4" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1827.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="164.4" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1811.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="164.4" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1795.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="164.4" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1779.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="164.4" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1763.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="164.4" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1747.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="164.4" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1731.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="164.4" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="161.4" y="1715.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="164.4" y="1726.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.16%)</title><rect x="162.3" y="1955.0" width="1.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="165.3" y="1966.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.08%)</title><rect x="164.2" y="1955.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="167.2" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.08%)</title><rect x="165.2" y="2003.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="168.2" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.08%)</title><rect x="166.2" y="2019.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.2" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.16%)</title><rect x="167.1" y="2019.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="170.1" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.16%)</title><rect x="167.1" y="2003.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="170.1" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.16%)</title><rect x="167.1" y="1987.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="170.1" y="1998.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.08%)</title><rect x="168.1" y="1971.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="171.1" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.82%)</title><rect x="169.1" y="2019.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.1" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.82%)</title><rect x="169.1" y="2003.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.1" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.82%)</title><rect x="169.1" y="1987.0" width="9.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.1" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.82%)</title><rect x="169.1" y="1971.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="172.1" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.65%)</title><rect x="171.0" y="1955.0" width="7.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.0" y="1966.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.16%)</title><rect x="172.0" y="1939.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="175.0" y="1950.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.08%)</title><rect x="172.9" y="1923.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="175.9" y="1934.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.41%)</title><rect x="173.9" y="1939.0" width="4.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="176.9" y="1950.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="173.9" y="1923.0" width="4.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="176.9" y="1934.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="173.9" y="1907.0" width="4.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="176.9" y="1918.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="173.9" y="1891.0" width="4.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="176.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="173.9" y="1875.0" width="4.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="176.9" y="1886.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="173.9" y="1859.0" width="4.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="176.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.33%)</title><rect x="174.9" y="1843.0" width="3.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="177.9" y="1854.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.25%)</title><rect x="175.8" y="1827.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="178.8" y="1838.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.25%)</title><rect x="175.8" y="1811.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="178.8" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$62/2121189026.run (520 samples, 42.48%)</title><rect x="178.7" y="2051.0" width="501.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="181.7" y="2062.0">ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$62/2121189026.run</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.lambda$executeAsync$4 (519 samples, 42.40%)</title><rect x="179.7" y="2035.0" width="500.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="182.7" y="2046.0">ru/mail/polis/service/alex/AsyncServiceImpl.lambda$executeAsync$4</text>
</g>
<g>
<title>itable stub (5 samples, 0.41%)</title><rect x="179.7" y="2019.0" width="4.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="182.7" y="2030.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (250 samples, 20.42%)</title><rect x="184.5" y="2019.0" width="241.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.5" y="2030.0">one/nio/http/HttpSession.sendRes..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (246 samples, 20.10%)</title><rect x="186.4" y="2003.0" width="237.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="189.4" y="2014.0">one/nio/http/HttpSession.writeR..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.57%)</title><rect x="186.4" y="1987.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="189.4" y="1998.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.33%)</title><rect x="189.3" y="1971.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="192.3" y="1982.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.33%)</title><rect x="189.3" y="1955.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.3" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.33%)</title><rect x="189.3" y="1939.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="192.3" y="1950.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (239 samples, 19.53%)</title><rect x="193.2" y="1987.0" width="230.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.2" y="1998.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (238 samples, 19.44%)</title><rect x="194.1" y="1971.0" width="229.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="197.1" y="1982.0">one/nio/net/Session.write</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.08%)</title><rect x="195.1" y="1955.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="198.1" y="1966.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (236 samples, 19.28%)</title><rect x="196.1" y="1955.0" width="227.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.1" y="1966.0">one/nio/net/Session$ArrayQueue..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="196.1" y="1939.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="199.1" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="196.1" y="1923.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="199.1" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="196.1" y="1907.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="199.1" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="196.1" y="1891.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="199.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="196.1" y="1875.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="199.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="196.1" y="1859.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="199.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="196.1" y="1843.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="199.1" y="1854.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (235 samples, 19.20%)</title><rect x="197.0" y="1939.0" width="226.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="200.0" y="1950.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.08%)</title><rect x="197.0" y="1923.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="200.0" y="1934.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="198.0" y="1923.0" width="1.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="201.0" y="1934.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="198.0" y="1907.0" width="1.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="201.0" y="1918.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.16%)</title><rect x="198.0" y="1891.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="201.0" y="1902.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.08%)</title><rect x="199.0" y="1875.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="202.0" y="1886.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.08%)</title><rect x="199.0" y="1859.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="202.0" y="1870.0"></text>
</g>
<g>
<title>__send (232 samples, 18.95%)</title><rect x="199.9" y="1923.0" width="223.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="202.9" y="1934.0">__send</text>
</g>
<g>
<title>[unknown] (231 samples, 18.87%)</title><rect x="200.9" y="1907.0" width="222.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="203.9" y="1918.0">[unknown]</text>
</g>
<g>
<title>[unknown] (231 samples, 18.87%)</title><rect x="200.9" y="1891.0" width="222.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="203.9" y="1902.0">[unknown]</text>
</g>
<g>
<title>[unknown] (227 samples, 18.55%)</title><rect x="204.7" y="1875.0" width="218.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="207.7" y="1886.0">[unknown]</text>
</g>
<g>
<title>[unknown] (227 samples, 18.55%)</title><rect x="204.7" y="1859.0" width="218.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="207.7" y="1870.0">[unknown]</text>
</g>
<g>
<title>[unknown] (224 samples, 18.30%)</title><rect x="207.6" y="1843.0" width="216.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="210.6" y="1854.0">[unknown]</text>
</g>
<g>
<title>[unknown] (222 samples, 18.14%)</title><rect x="209.6" y="1827.0" width="214.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="212.6" y="1838.0">[unknown]</text>
</g>
<g>
<title>[unknown] (220 samples, 17.97%)</title><rect x="211.5" y="1811.0" width="212.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="214.5" y="1822.0">[unknown]</text>
</g>
<g>
<title>[unknown] (217 samples, 17.73%)</title><rect x="214.4" y="1795.0" width="209.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="217.4" y="1806.0">[unknown]</text>
</g>
<g>
<title>[unknown] (211 samples, 17.24%)</title><rect x="220.2" y="1779.0" width="203.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="223.2" y="1790.0">[unknown]</text>
</g>
<g>
<title>[unknown] (201 samples, 16.42%)</title><rect x="229.8" y="1763.0" width="193.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="232.8" y="1774.0">[unknown]</text>
</g>
<g>
<title>[unknown] (192 samples, 15.69%)</title><rect x="238.5" y="1747.0" width="185.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="241.5" y="1758.0">[unknown]</text>
</g>
<g>
<title>[unknown] (173 samples, 14.13%)</title><rect x="256.8" y="1731.0" width="166.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="259.8" y="1742.0">[unknown]</text>
</g>
<g>
<title>[unknown] (169 samples, 13.81%)</title><rect x="260.7" y="1715.0" width="162.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="263.7" y="1726.0">[unknown]</text>
</g>
<g>
<title>[unknown] (163 samples, 13.32%)</title><rect x="266.4" y="1699.0" width="157.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="269.4" y="1710.0">[unknown]</text>
</g>
<g>
<title>[unknown] (159 samples, 12.99%)</title><rect x="270.3" y="1683.0" width="153.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="273.3" y="1694.0">[unknown]</text>
</g>
<g>
<title>[unknown] (157 samples, 12.83%)</title><rect x="272.2" y="1667.0" width="151.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="275.2" y="1678.0">[unknown]</text>
</g>
<g>
<title>[unknown] (155 samples, 12.66%)</title><rect x="274.2" y="1651.0" width="149.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="277.2" y="1662.0">[unknown]</text>
</g>
<g>
<title>[unknown] (149 samples, 12.17%)</title><rect x="279.9" y="1635.0" width="143.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="282.9" y="1646.0">[unknown]</text>
</g>
<g>
<title>[unknown] (143 samples, 11.68%)</title><rect x="285.7" y="1619.0" width="137.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="288.7" y="1630.0">[unknown]</text>
</g>
<g>
<title>[unknown] (132 samples, 10.78%)</title><rect x="296.3" y="1603.0" width="127.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="299.3" y="1614.0">[unknown]</text>
</g>
<g>
<title>[unknown] (118 samples, 9.64%)</title><rect x="309.8" y="1587.0" width="113.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="312.8" y="1598.0">[unknown]</text>
</g>
<g>
<title>[unknown] (112 samples, 9.15%)</title><rect x="315.6" y="1571.0" width="108.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="318.6" y="1582.0">[unknown]</text>
</g>
<g>
<title>[unknown] (105 samples, 8.58%)</title><rect x="322.4" y="1555.0" width="101.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="325.4" y="1566.0">[unknown]</text>
</g>
<g>
<title>[unknown] (101 samples, 8.25%)</title><rect x="326.2" y="1539.0" width="97.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="329.2" y="1550.0">[unknown]</text>
</g>
<g>
<title>[unknown] (99 samples, 8.09%)</title><rect x="328.1" y="1523.0" width="95.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="331.1" y="1534.0">[unknown]</text>
</g>
<g>
<title>[unknown] (97 samples, 7.92%)</title><rect x="330.1" y="1507.0" width="93.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="333.1" y="1518.0">[unknown]</text>
</g>
<g>
<title>[unknown] (96 samples, 7.84%)</title><rect x="331.0" y="1491.0" width="92.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="334.0" y="1502.0">[unknown]</text>
</g>
<g>
<title>[unknown] (92 samples, 7.52%)</title><rect x="334.9" y="1475.0" width="88.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="337.9" y="1486.0">[unknown]</text>
</g>
<g>
<title>[unknown] (86 samples, 7.03%)</title><rect x="340.7" y="1459.0" width="82.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="343.7" y="1470.0">[unknown]</text>
</g>
<g>
<title>[unknown] (82 samples, 6.70%)</title><rect x="344.5" y="1443.0" width="79.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="347.5" y="1454.0">[unknown]</text>
</g>
<g>
<title>[unknown] (81 samples, 6.62%)</title><rect x="345.5" y="1427.0" width="78.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="348.5" y="1438.0">[unknown]</text>
</g>
<g>
<title>[unknown] (80 samples, 6.54%)</title><rect x="346.5" y="1411.0" width="77.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="349.5" y="1422.0">[unknown]</text>
</g>
<g>
<title>[unknown] (79 samples, 6.45%)</title><rect x="347.4" y="1395.0" width="76.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="350.4" y="1406.0">[unknown]</text>
</g>
<g>
<title>[unknown] (75 samples, 6.13%)</title><rect x="351.3" y="1379.0" width="72.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="354.3" y="1390.0">[unknown]</text>
</g>
<g>
<title>[unknown] (70 samples, 5.72%)</title><rect x="356.1" y="1363.0" width="67.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="359.1" y="1374.0">[unknown]</text>
</g>
<g>
<title>[unknown] (59 samples, 4.82%)</title><rect x="366.7" y="1347.0" width="56.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="369.7" y="1358.0">[unkno..</text>
</g>
<g>
<title>[unknown] (50 samples, 4.08%)</title><rect x="375.4" y="1331.0" width="48.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="378.4" y="1342.0">[unk..</text>
</g>
<g>
<title>[unknown] (44 samples, 3.59%)</title><rect x="381.2" y="1315.0" width="42.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="384.2" y="1326.0">[unk..</text>
</g>
<g>
<title>[unknown] (42 samples, 3.43%)</title><rect x="383.1" y="1299.0" width="40.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="386.1" y="1310.0">[un..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="422.6" y="1283.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="425.6" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="422.6" y="1267.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="425.6" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.16%)</title><rect x="423.6" y="2003.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.6" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.16%)</title><rect x="423.6" y="1987.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="426.6" y="1998.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.16%)</title><rect x="423.6" y="1971.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="426.6" y="1982.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.08%)</title><rect x="424.5" y="1955.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.5" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$60/1890133703.action (99 samples, 8.09%)</title><rect x="425.5" y="2019.0" width="95.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.5" y="2030.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.lambda$entity$1 (99 samples, 8.09%)</title><rect x="425.5" y="2003.0" width="95.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.5" y="2014.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.get (99 samples, 8.09%)</title><rect x="425.5" y="1987.0" width="95.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="428.5" y="1998.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.16%)</title><rect x="427.4" y="1971.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.4" y="1982.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.16%)</title><rect x="427.4" y="1955.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.4" y="1966.0"></text>
</g>
<g>
<title>java/lang/System.arraycopy (1 samples, 0.08%)</title><rect x="428.4" y="1939.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="431.4" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/DAO.get (95 samples, 7.76%)</title><rect x="429.4" y="1971.0" width="91.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="432.4" y="1982.0">ru/mail/pol..</text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.hasNext (12 samples, 0.98%)</title><rect x="429.4" y="1955.0" width="11.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="432.4" y="1966.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (12 samples, 0.98%)</title><rect x="429.4" y="1939.0" width="11.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="432.4" y="1950.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (12 samples, 0.98%)</title><rect x="429.4" y="1923.0" width="11.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="432.4" y="1934.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (12 samples, 0.98%)</title><rect x="429.4" y="1907.0" width="11.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.4" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (12 samples, 0.98%)</title><rect x="429.4" y="1891.0" width="11.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="432.4" y="1902.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (10 samples, 0.82%)</title><rect x="429.4" y="1875.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="432.4" y="1886.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (5 samples, 0.41%)</title><rect x="429.4" y="1859.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="432.4" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (5 samples, 0.41%)</title><rect x="429.4" y="1843.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="432.4" y="1854.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (5 samples, 0.41%)</title><rect x="429.4" y="1827.0" width="4.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="432.4" y="1838.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (5 samples, 0.41%)</title><rect x="429.4" y="1811.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.4" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.41%)</title><rect x="429.4" y="1795.0" width="4.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="432.4" y="1806.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.25%)</title><rect x="429.4" y="1779.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="432.4" y="1790.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.25%)</title><rect x="429.4" y="1763.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="432.4" y="1774.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.08%)</title><rect x="430.3" y="1747.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.3" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (1 samples, 0.08%)</title><rect x="431.3" y="1747.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="434.3" y="1758.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.08%)</title><rect x="431.3" y="1731.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.3" y="1742.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.08%)</title><rect x="431.3" y="1715.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="434.3" y="1726.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.08%)</title><rect x="432.3" y="1779.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.3" y="1790.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.08%)</title><rect x="432.3" y="1763.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="435.3" y="1774.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table$$Lambda$68/2007501970.apply (1 samples, 0.08%)</title><rect x="433.2" y="1779.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="436.2" y="1790.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Row.getKey (1 samples, 0.08%)</title><rect x="433.2" y="1763.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="436.2" y="1774.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.08%)</title><rect x="433.2" y="1747.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="436.2" y="1758.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.08%)</title><rect x="433.2" y="1731.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="436.2" y="1742.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="433.2" y="1715.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="436.2" y="1726.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="433.2" y="1699.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.2" y="1710.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="433.2" y="1683.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.2" y="1694.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.08%)</title><rect x="433.2" y="1667.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.2" y="1678.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5 samples, 0.41%)</title><rect x="434.2" y="1859.0" width="4.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="437.2" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (3 samples, 0.25%)</title><rect x="434.2" y="1843.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="437.2" y="1854.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (3 samples, 0.25%)</title><rect x="434.2" y="1827.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="437.2" y="1838.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (3 samples, 0.25%)</title><rect x="434.2" y="1811.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="437.2" y="1822.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.08%)</title><rect x="435.1" y="1795.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="438.1" y="1806.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.08%)</title><rect x="435.1" y="1779.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="438.1" y="1790.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Row.getKey (1 samples, 0.08%)</title><rect x="435.1" y="1763.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.1" y="1774.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.08%)</title><rect x="436.1" y="1795.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="439.1" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (2 samples, 0.16%)</title><rect x="437.1" y="1843.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="440.1" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (2 samples, 0.16%)</title><rect x="437.1" y="1827.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="440.1" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.08%)</title><rect x="438.0" y="1811.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.0" y="1822.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.16%)</title><rect x="439.0" y="1875.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="442.0" y="1886.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.16%)</title><rect x="439.0" y="1859.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="442.0" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/TransformedIterator.next (7 samples, 0.57%)</title><rect x="440.9" y="1955.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="443.9" y="1966.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (1 samples, 0.08%)</title><rect x="441.9" y="1939.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="444.9" y="1950.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$6.transform (4 samples, 0.33%)</title><rect x="442.9" y="1939.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="445.9" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/AlexDAO$$Lambda$74/1243721824.apply (4 samples, 0.33%)</title><rect x="442.9" y="1923.0" width="3.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="445.9" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/AlexDAO.lambda$iterator$0 (4 samples, 0.33%)</title><rect x="442.9" y="1907.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="445.9" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Row.getKey (4 samples, 0.33%)</title><rect x="442.9" y="1891.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="445.9" y="1902.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (4 samples, 0.33%)</title><rect x="442.9" y="1875.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="445.9" y="1886.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (4 samples, 0.33%)</title><rect x="442.9" y="1859.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.9" y="1870.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.33%)</title><rect x="442.9" y="1843.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.9" y="1854.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.33%)</title><rect x="442.9" y="1827.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="445.9" y="1838.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.08%)</title><rect x="444.8" y="1811.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="447.8" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (1 samples, 0.08%)</title><rect x="445.8" y="1811.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.8" y="1822.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="446.7" y="1939.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="449.7" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (2 samples, 0.16%)</title><rect x="447.7" y="1955.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="450.7" y="1966.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.asReadOnlyBuffer (1 samples, 0.08%)</title><rect x="448.6" y="1939.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.6" y="1950.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.08%)</title><rect x="448.6" y="1923.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="451.6" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/AlexDAO.iterator (74 samples, 6.05%)</title><rect x="449.6" y="1955.0" width="71.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.6" y="1966.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alex/AlexDAO.rowsIterator (74 samples, 6.05%)</title><rect x="449.6" y="1939.0" width="71.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.6" y="1950.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (56 samples, 4.58%)</title><rect x="449.6" y="1923.0" width="54.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.6" y="1934.0">ru/ma..</text>
</g>
<g>
<title>itable stub (1 samples, 0.08%)</title><rect x="449.6" y="1907.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="452.6" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (2 samples, 0.16%)</title><rect x="450.6" y="1907.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.6" y="1918.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.08%)</title><rect x="450.6" y="1891.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.6" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.08%)</title><rect x="451.5" y="1891.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.5" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (1 samples, 0.08%)</title><rect x="452.5" y="1907.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="455.5" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.08%)</title><rect x="452.5" y="1891.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="455.5" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.08%)</title><rect x="452.5" y="1875.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="455.5" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.08%)</title><rect x="452.5" y="1859.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="455.5" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (1 samples, 0.08%)</title><rect x="452.5" y="1843.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="455.5" y="1854.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (52 samples, 4.25%)</title><rect x="453.5" y="1907.0" width="50.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="456.5" y="1918.0">ru/ma..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (5 samples, 0.41%)</title><rect x="453.5" y="1891.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="456.5" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (5 samples, 0.41%)</title><rect x="453.5" y="1875.0" width="4.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="456.5" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (5 samples, 0.41%)</title><rect x="453.5" y="1859.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.5" y="1870.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (4 samples, 0.33%)</title><rect x="454.4" y="1843.0" width="3.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="457.4" y="1854.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.08%)</title><rect x="454.4" y="1827.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="457.4" y="1838.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (3 samples, 0.25%)</title><rect x="455.4" y="1827.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="458.4" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync$ThreadLocalHoldCounter.initialValue (1 samples, 0.08%)</title><rect x="457.3" y="1811.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.3" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (43 samples, 3.51%)</title><rect x="458.3" y="1891.0" width="41.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.3" y="1902.0">ru/..</text>
</g>
<g>
<title>itable stub (2 samples, 0.16%)</title><rect x="460.2" y="1875.0" width="1.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="463.2" y="1886.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.08%)</title><rect x="462.1" y="1875.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.1" y="1886.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.08%)</title><rect x="462.1" y="1859.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.1" y="1870.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap.entrySet (1 samples, 0.08%)</title><rect x="462.1" y="1843.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="465.1" y="1854.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (3 samples, 0.25%)</title><rect x="463.1" y="1875.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.1" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.16%)</title><rect x="464.1" y="1859.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="467.1" y="1870.0"></text>
</g>
<g>
<title>java/util/TreeMap.descendingMap (1 samples, 0.08%)</title><rect x="466.0" y="1875.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="469.0" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.08%)</title><rect x="467.0" y="1875.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.0" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.08%)</title><rect x="467.0" y="1859.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="470.0" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.08%)</title><rect x="467.0" y="1843.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.0" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (1 samples, 0.08%)</title><rect x="467.0" y="1827.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.0" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (1 samples, 0.08%)</title><rect x="467.0" y="1811.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.0" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.descendingMap (1 samples, 0.08%)</title><rect x="467.9" y="1875.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="470.9" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.descendingMap (1 samples, 0.08%)</title><rect x="467.9" y="1859.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.9" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (32 samples, 2.61%)</title><rect x="468.9" y="1875.0" width="30.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="471.9" y="1886.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (11 samples, 0.90%)</title><rect x="469.9" y="1859.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.9" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.&lt;init&gt; (1 samples, 0.08%)</title><rect x="479.5" y="1843.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="482.5" y="1854.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.08%)</title><rect x="479.5" y="1827.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.5" y="1838.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.08%)</title><rect x="479.5" y="1811.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="482.5" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (20 samples, 1.63%)</title><rect x="480.5" y="1859.0" width="19.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="483.5" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (20 samples, 1.63%)</title><rect x="480.5" y="1843.0" width="19.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="483.5" y="1854.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (19 samples, 1.55%)</title><rect x="481.4" y="1827.0" width="18.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.4" y="1838.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.08%)</title><rect x="481.4" y="1811.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="484.4" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.08%)</title><rect x="481.4" y="1795.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="484.4" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (18 samples, 1.47%)</title><rect x="482.4" y="1811.0" width="17.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="485.4" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (18 samples, 1.47%)</title><rect x="482.4" y="1795.0" width="17.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="485.4" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.16%)</title><rect x="482.4" y="1779.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.4" y="1790.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.16%)</title><rect x="482.4" y="1763.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="485.4" y="1774.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.16%)</title><rect x="482.4" y="1747.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.4" y="1758.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.16%)</title><rect x="482.4" y="1731.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="485.4" y="1742.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.08%)</title><rect x="483.3" y="1715.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.3" y="1726.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (16 samples, 1.31%)</title><rect x="484.3" y="1779.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="487.3" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (11 samples, 0.90%)</title><rect x="489.1" y="1763.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.1" y="1774.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (11 samples, 0.90%)</title><rect x="489.1" y="1747.0" width="10.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="492.1" y="1758.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (10 samples, 0.82%)</title><rect x="490.1" y="1731.0" width="9.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="493.1" y="1742.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.08%)</title><rect x="490.1" y="1715.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.1" y="1726.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (9 samples, 0.74%)</title><rect x="491.1" y="1715.0" width="8.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.1" y="1726.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.33%)</title><rect x="495.9" y="1699.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.9" y="1710.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.16%)</title><rect x="497.8" y="1683.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="500.8" y="1694.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (4 samples, 0.33%)</title><rect x="499.7" y="1891.0" width="3.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="502.7" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="499.7" y="1875.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.7" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="499.7" y="1859.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="502.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="499.7" y="1843.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="502.7" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="499.7" y="1827.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="502.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="499.7" y="1811.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="502.7" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="499.7" y="1795.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="502.7" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="499.7" y="1779.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="502.7" y="1790.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.25%)</title><rect x="500.7" y="1875.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="503.7" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.16%)</title><rect x="501.7" y="1859.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="504.7" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.08%)</title><rect x="502.6" y="1843.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.6" y="1854.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.08%)</title><rect x="502.6" y="1827.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="505.6" y="1838.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.08%)</title><rect x="502.6" y="1811.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="505.6" y="1822.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.08%)</title><rect x="502.6" y="1795.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.6" y="1806.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.08%)</title><rect x="502.6" y="1779.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.6" y="1790.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (18 samples, 1.47%)</title><rect x="503.6" y="1923.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="506.6" y="1934.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (14 samples, 1.14%)</title><rect x="503.6" y="1907.0" width="13.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.6" y="1918.0"></text>
</g>
<g>
<title>com/google/common/base/Preconditions.checkNotNull (1 samples, 0.08%)</title><rect x="503.6" y="1891.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.6" y="1902.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (13 samples, 1.06%)</title><rect x="504.6" y="1891.0" width="12.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="507.6" y="1902.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (10 samples, 0.82%)</title><rect x="505.5" y="1875.0" width="9.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.5" y="1886.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (10 samples, 0.82%)</title><rect x="505.5" y="1859.0" width="9.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.5" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (10 samples, 0.82%)</title><rect x="505.5" y="1843.0" width="9.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.5" y="1854.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (10 samples, 0.82%)</title><rect x="505.5" y="1827.0" width="9.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="508.5" y="1838.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (6 samples, 0.49%)</title><rect x="505.5" y="1811.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="508.5" y="1822.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.25%)</title><rect x="505.5" y="1795.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="508.5" y="1806.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.next (2 samples, 0.16%)</title><rect x="505.5" y="1779.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.5" y="1790.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (2 samples, 0.16%)</title><rect x="505.5" y="1763.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.5" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="506.5" y="1747.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="509.5" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="506.5" y="1731.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="509.5" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="506.5" y="1715.0" width="1.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="509.5" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="506.5" y="1699.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="509.5" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="506.5" y="1683.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="509.5" y="1694.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (1 samples, 0.08%)</title><rect x="507.5" y="1779.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="510.5" y="1790.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.08%)</title><rect x="507.5" y="1763.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="510.5" y="1774.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.08%)</title><rect x="507.5" y="1747.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.5" y="1758.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (3 samples, 0.25%)</title><rect x="508.4" y="1795.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.4" y="1806.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (3 samples, 0.25%)</title><rect x="508.4" y="1779.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="511.4" y="1790.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.16%)</title><rect x="511.3" y="1811.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="514.3" y="1822.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.16%)</title><rect x="511.3" y="1795.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="514.3" y="1806.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.08%)</title><rect x="512.3" y="1779.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="515.3" y="1790.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.08%)</title><rect x="512.3" y="1763.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="515.3" y="1774.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table$$Lambda$68/2007501970.apply (2 samples, 0.16%)</title><rect x="513.2" y="1811.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="516.2" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Row.getKey (1 samples, 0.08%)</title><rect x="514.2" y="1795.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="517.2" y="1806.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.08%)</title><rect x="514.2" y="1779.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="517.2" y="1790.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.08%)</title><rect x="514.2" y="1763.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.2" y="1774.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="514.2" y="1747.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.2" y="1758.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="514.2" y="1731.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="517.2" y="1742.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="514.2" y="1715.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.2" y="1726.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.08%)</title><rect x="514.2" y="1699.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.2" y="1710.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.08%)</title><rect x="515.2" y="1875.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.2" y="1886.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (1 samples, 0.08%)</title><rect x="515.2" y="1859.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.2" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.08%)</title><rect x="515.2" y="1843.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="518.2" y="1854.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.08%)</title><rect x="516.1" y="1875.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.1" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.33%)</title><rect x="517.1" y="1907.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="520.1" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.33%)</title><rect x="517.1" y="1891.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.1" y="1902.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.08%)</title><rect x="519.0" y="1875.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.0" y="1886.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.08%)</title><rect x="519.0" y="1859.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.0" y="1870.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.hasNext (1 samples, 0.08%)</title><rect x="519.0" y="1843.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="522.0" y="1854.0"></text>
</g>
<g>
<title>com/google/common/collect/AbstractIterator.tryToComputeNext (1 samples, 0.08%)</title><rect x="519.0" y="1827.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.0" y="1838.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$5.computeNext (1 samples, 0.08%)</title><rect x="519.0" y="1811.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="522.0" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.08%)</title><rect x="519.0" y="1795.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="522.0" y="1806.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.08%)</title><rect x="519.0" y="1779.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.0" y="1790.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="520.0" y="1875.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="523.0" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$61/1284527574.action (165 samples, 13.48%)</title><rect x="520.9" y="2019.0" width="159.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.9" y="2030.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.lambda$entity$0 (164 samples, 13.40%)</title><rect x="521.9" y="2003.0" width="158.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="524.9" y="2014.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.proxy (164 samples, 13.40%)</title><rect x="521.9" y="1987.0" width="158.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="524.9" y="1998.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (161 samples, 13.15%)</title><rect x="524.8" y="1971.0" width="155.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="527.8" y="1982.0">one/nio/http/HttpCli..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (160 samples, 13.07%)</title><rect x="525.8" y="1955.0" width="154.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="528.8" y="1966.0">one/nio/http/HttpCli..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (42 samples, 3.43%)</title><rect x="526.7" y="1939.0" width="40.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="529.7" y="1950.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (42 samples, 3.43%)</title><rect x="526.7" y="1923.0" width="40.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="529.7" y="1934.0">one..</text>
</g>
<g>
<title>[unknown] (8 samples, 0.65%)</title><rect x="527.7" y="1907.0" width="7.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="530.7" y="1918.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.65%)</title><rect x="527.7" y="1891.0" width="7.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="530.7" y="1902.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.57%)</title><rect x="527.7" y="1875.0" width="6.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="530.7" y="1886.0"></text>
</g>
<g>
<title>_init (2 samples, 0.16%)</title><rect x="530.6" y="1859.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="533.6" y="1870.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.16%)</title><rect x="532.5" y="1859.0" width="1.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="535.5" y="1870.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.08%)</title><rect x="533.5" y="1843.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="536.5" y="1854.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.08%)</title><rect x="533.5" y="1827.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="536.5" y="1838.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="534.4" y="1875.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="537.4" y="1886.0"></text>
</g>
<g>
<title>__GI___recv (32 samples, 2.61%)</title><rect x="535.4" y="1907.0" width="30.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="538.4" y="1918.0">__..</text>
</g>
<g>
<title>[unknown] (31 samples, 2.53%)</title><rect x="536.4" y="1891.0" width="29.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="539.4" y="1902.0">[u..</text>
</g>
<g>
<title>[unknown] (31 samples, 2.53%)</title><rect x="536.4" y="1875.0" width="29.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="539.4" y="1886.0">[u..</text>
</g>
<g>
<title>[unknown] (31 samples, 2.53%)</title><rect x="536.4" y="1859.0" width="29.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="539.4" y="1870.0">[u..</text>
</g>
<g>
<title>[unknown] (31 samples, 2.53%)</title><rect x="536.4" y="1843.0" width="29.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="539.4" y="1854.0">[u..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.45%)</title><rect x="537.3" y="1827.0" width="29.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="540.3" y="1838.0">[u..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.37%)</title><rect x="538.3" y="1811.0" width="28.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="541.3" y="1822.0">[..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.37%)</title><rect x="538.3" y="1795.0" width="28.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="541.3" y="1806.0">[..</text>
</g>
<g>
<title>[unknown] (25 samples, 2.04%)</title><rect x="542.2" y="1779.0" width="24.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="545.2" y="1790.0">[..</text>
</g>
<g>
<title>[unknown] (19 samples, 1.55%)</title><rect x="547.9" y="1763.0" width="18.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="550.9" y="1774.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.47%)</title><rect x="548.9" y="1747.0" width="17.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="551.9" y="1758.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 1.31%)</title><rect x="550.8" y="1731.0" width="15.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="553.8" y="1742.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.98%)</title><rect x="554.7" y="1715.0" width="11.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="557.7" y="1726.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.90%)</title><rect x="555.7" y="1699.0" width="10.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="558.7" y="1710.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="564.3" y="1683.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="567.3" y="1694.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="564.3" y="1667.0" width="2.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="567.3" y="1678.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="564.3" y="1651.0" width="2.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="567.3" y="1662.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="564.3" y="1635.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="567.3" y="1646.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="564.3" y="1619.0" width="2.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="567.3" y="1630.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="564.3" y="1603.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="567.3" y="1614.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="564.3" y="1587.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="567.3" y="1598.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="564.3" y="1571.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="567.3" y="1582.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="564.3" y="1555.0" width="2.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="567.3" y="1566.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="564.3" y="1539.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="567.3" y="1550.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="564.3" y="1523.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="567.3" y="1534.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="564.3" y="1507.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="567.3" y="1518.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="565.3" y="1491.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="568.3" y="1502.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="565.3" y="1475.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="568.3" y="1486.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="565.3" y="1459.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="568.3" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="565.3" y="1443.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="568.3" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="565.3" y="1427.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="568.3" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="565.3" y="1411.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="568.3" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="565.3" y="1395.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="568.3" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="565.3" y="1379.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="568.3" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="565.3" y="1363.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="568.3" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="565.3" y="1347.0" width="1.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="568.3" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="565.3" y="1331.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="568.3" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="565.3" y="1315.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="568.3" y="1326.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.08%)</title><rect x="566.3" y="1907.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="569.3" y="1918.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (13 samples, 1.06%)</title><rect x="567.2" y="1939.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.2" y="1950.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.33%)</title><rect x="568.2" y="1923.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="571.2" y="1934.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.33%)</title><rect x="568.2" y="1907.0" width="3.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="571.2" y="1918.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.16%)</title><rect x="568.2" y="1891.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="571.2" y="1902.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.16%)</title><rect x="568.2" y="1875.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="571.2" y="1886.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.08%)</title><rect x="569.2" y="1859.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.2" y="1870.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.16%)</title><rect x="570.1" y="1891.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="573.1" y="1902.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.16%)</title><rect x="570.1" y="1875.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="573.1" y="1886.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1 samples, 0.08%)</title><rect x="572.0" y="1923.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="575.0" y="1934.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.08%)</title><rect x="572.0" y="1907.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.0" y="1918.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.08%)</title><rect x="572.0" y="1891.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.0" y="1902.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (5 samples, 0.41%)</title><rect x="573.0" y="1923.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="576.0" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.33%)</title><rect x="574.0" y="1907.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="577.0" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.33%)</title><rect x="574.0" y="1891.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="577.0" y="1902.0"></text>
</g>
<g>
<title>one/nio/http/Response.setBody (2 samples, 0.16%)</title><rect x="577.8" y="1923.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="580.8" y="1934.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (5 samples, 0.41%)</title><rect x="579.8" y="1939.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.8" y="1950.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.41%)</title><rect x="579.8" y="1923.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.8" y="1934.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.08%)</title><rect x="580.7" y="1907.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.7" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.08%)</title><rect x="580.7" y="1891.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.7" y="1902.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.25%)</title><rect x="581.7" y="1907.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="584.7" y="1918.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.25%)</title><rect x="581.7" y="1891.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="584.7" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.08%)</title><rect x="582.6" y="1875.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="585.6" y="1886.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.08%)</title><rect x="582.6" y="1859.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.6" y="1870.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="583.6" y="1875.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="586.6" y="1886.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.08%)</title><rect x="584.6" y="1939.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.6" y="1950.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.08%)</title><rect x="584.6" y="1923.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.6" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.08%)</title><rect x="584.6" y="1907.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="587.6" y="1918.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="584.6" y="1891.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.6" y="1902.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="584.6" y="1875.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="587.6" y="1886.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.08%)</title><rect x="584.6" y="1859.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="587.6" y="1870.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (12 samples, 0.98%)</title><rect x="585.5" y="1939.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="588.5" y="1950.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.08%)</title><rect x="585.5" y="1923.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="588.5" y="1934.0"></text>
</g>
<g>
<title>__GI___setsockopt (10 samples, 0.82%)</title><rect x="586.5" y="1923.0" width="9.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="589.5" y="1934.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.82%)</title><rect x="586.5" y="1907.0" width="9.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="589.5" y="1918.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.82%)</title><rect x="586.5" y="1891.0" width="9.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="589.5" y="1902.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.82%)</title><rect x="586.5" y="1875.0" width="9.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="589.5" y="1886.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.82%)</title><rect x="586.5" y="1859.0" width="9.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="589.5" y="1870.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.82%)</title><rect x="586.5" y="1843.0" width="9.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="589.5" y="1854.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.49%)</title><rect x="590.4" y="1827.0" width="5.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="593.4" y="1838.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="591.3" y="1811.0" width="4.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="594.3" y="1822.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.25%)</title><rect x="593.3" y="1795.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="596.3" y="1806.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.25%)</title><rect x="593.3" y="1779.0" width="2.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="596.3" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="595.2" y="1763.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="598.2" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="595.2" y="1747.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="598.2" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="595.2" y="1731.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="598.2" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="595.2" y="1715.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="598.2" y="1726.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="596.1" y="1923.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="599.1" y="1934.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (83 samples, 6.78%)</title><rect x="597.1" y="1939.0" width="80.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="600.1" y="1950.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (3 samples, 0.25%)</title><rect x="597.1" y="1923.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="600.1" y="1934.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.08%)</title><rect x="599.0" y="1907.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="602.0" y="1918.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.16%)</title><rect x="600.0" y="1923.0" width="1.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="603.0" y="1934.0"></text>
</g>
<g>
<title>__send (78 samples, 6.37%)</title><rect x="601.9" y="1923.0" width="75.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="604.9" y="1934.0">__send</text>
</g>
<g>
<title>[unknown] (78 samples, 6.37%)</title><rect x="601.9" y="1907.0" width="75.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="604.9" y="1918.0">[unknown]</text>
</g>
<g>
<title>[unknown] (78 samples, 6.37%)</title><rect x="601.9" y="1891.0" width="75.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="604.9" y="1902.0">[unknown]</text>
</g>
<g>
<title>[unknown] (77 samples, 6.29%)</title><rect x="602.9" y="1875.0" width="74.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="605.9" y="1886.0">[unknown]</text>
</g>
<g>
<title>[unknown] (77 samples, 6.29%)</title><rect x="602.9" y="1859.0" width="74.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="605.9" y="1870.0">[unknown]</text>
</g>
<g>
<title>[unknown] (76 samples, 6.21%)</title><rect x="603.9" y="1843.0" width="73.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="606.9" y="1854.0">[unknown]</text>
</g>
<g>
<title>[unknown] (76 samples, 6.21%)</title><rect x="603.9" y="1827.0" width="73.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="606.9" y="1838.0">[unknown]</text>
</g>
<g>
<title>[unknown] (76 samples, 6.21%)</title><rect x="603.9" y="1811.0" width="73.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="606.9" y="1822.0">[unknown]</text>
</g>
<g>
<title>[unknown] (76 samples, 6.21%)</title><rect x="603.9" y="1795.0" width="73.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="606.9" y="1806.0">[unknown]</text>
</g>
<g>
<title>[unknown] (72 samples, 5.88%)</title><rect x="607.7" y="1779.0" width="69.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="610.7" y="1790.0">[unknown]</text>
</g>
<g>
<title>[unknown] (69 samples, 5.64%)</title><rect x="610.6" y="1763.0" width="66.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="613.6" y="1774.0">[unknown]</text>
</g>
<g>
<title>[unknown] (66 samples, 5.39%)</title><rect x="613.5" y="1747.0" width="63.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="616.5" y="1758.0">[unknown]</text>
</g>
<g>
<title>[unknown] (62 samples, 5.07%)</title><rect x="617.4" y="1731.0" width="59.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="620.4" y="1742.0">[unkno..</text>
</g>
<g>
<title>[unknown] (61 samples, 4.98%)</title><rect x="618.3" y="1715.0" width="58.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="621.3" y="1726.0">[unkno..</text>
</g>
<g>
<title>[unknown] (60 samples, 4.90%)</title><rect x="619.3" y="1699.0" width="57.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="622.3" y="1710.0">[unkno..</text>
</g>
<g>
<title>[unknown] (58 samples, 4.74%)</title><rect x="621.2" y="1683.0" width="55.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="624.2" y="1694.0">[unkn..</text>
</g>
<g>
<title>[unknown] (56 samples, 4.58%)</title><rect x="623.1" y="1667.0" width="54.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="626.1" y="1678.0">[unkn..</text>
</g>
<g>
<title>[unknown] (54 samples, 4.41%)</title><rect x="625.1" y="1651.0" width="52.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="628.1" y="1662.0">[unkn..</text>
</g>
<g>
<title>[unknown] (51 samples, 4.17%)</title><rect x="628.0" y="1635.0" width="49.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="631.0" y="1646.0">[unkn..</text>
</g>
<g>
<title>[unknown] (51 samples, 4.17%)</title><rect x="628.0" y="1619.0" width="49.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="631.0" y="1630.0">[unkn..</text>
</g>
<g>
<title>[unknown] (48 samples, 3.92%)</title><rect x="630.8" y="1603.0" width="46.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="633.8" y="1614.0">[unk..</text>
</g>
<g>
<title>[unknown] (42 samples, 3.43%)</title><rect x="636.6" y="1587.0" width="40.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="639.6" y="1598.0">[un..</text>
</g>
<g>
<title>[unknown] (38 samples, 3.10%)</title><rect x="640.5" y="1571.0" width="36.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="643.5" y="1582.0">[un..</text>
</g>
<g>
<title>[unknown] (35 samples, 2.86%)</title><rect x="643.4" y="1555.0" width="33.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="646.4" y="1566.0">[u..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.78%)</title><rect x="644.3" y="1539.0" width="32.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="647.3" y="1550.0">[u..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.78%)</title><rect x="644.3" y="1523.0" width="32.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="647.3" y="1534.0">[u..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.78%)</title><rect x="644.3" y="1507.0" width="32.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="647.3" y="1518.0">[u..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.78%)</title><rect x="644.3" y="1491.0" width="32.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="647.3" y="1502.0">[u..</text>
</g>
<g>
<title>[unknown] (32 samples, 2.61%)</title><rect x="646.3" y="1475.0" width="30.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="649.3" y="1486.0">[u..</text>
</g>
<g>
<title>[unknown] (31 samples, 2.53%)</title><rect x="647.2" y="1459.0" width="29.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="650.2" y="1470.0">[u..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.37%)</title><rect x="649.2" y="1443.0" width="27.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="652.2" y="1454.0">[..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.37%)</title><rect x="649.2" y="1427.0" width="27.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="652.2" y="1438.0">[..</text>
</g>
<g>
<title>[unknown] (26 samples, 2.12%)</title><rect x="652.1" y="1411.0" width="25.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="655.1" y="1422.0">[..</text>
</g>
<g>
<title>[unknown] (26 samples, 2.12%)</title><rect x="652.1" y="1395.0" width="25.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="655.1" y="1406.0">[..</text>
</g>
<g>
<title>[unknown] (21 samples, 1.72%)</title><rect x="656.9" y="1379.0" width="20.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="659.9" y="1390.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 1.55%)</title><rect x="658.8" y="1363.0" width="18.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="661.8" y="1374.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 1.23%)</title><rect x="662.7" y="1347.0" width="14.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="665.7" y="1358.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.98%)</title><rect x="665.6" y="1331.0" width="11.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="668.6" y="1342.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.90%)</title><rect x="666.5" y="1315.0" width="10.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="669.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.74%)</title><rect x="668.4" y="1299.0" width="8.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="671.4" y="1310.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (3 samples, 0.25%)</title><rect x="677.1" y="1939.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="680.1" y="1950.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (3 samples, 0.25%)</title><rect x="677.1" y="1923.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="680.1" y="1934.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (3 samples, 0.25%)</title><rect x="677.1" y="1907.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="680.1" y="1918.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (2 samples, 0.16%)</title><rect x="678.1" y="1891.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="681.1" y="1902.0"></text>
</g>
<g>
<title>msort_with_tmp.part.0 (1 samples, 0.08%)</title><rect x="680.0" y="2099.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="683.0" y="2110.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (355 samples, 29.00%)</title><rect x="681.0" y="2099.0" width="342.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.0" y="2110.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.25%)</title><rect x="687.7" y="2083.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.7" y="2094.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.08%)</title><rect x="690.6" y="2083.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.6" y="2094.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (80 samples, 6.54%)</title><rect x="691.6" y="2083.0" width="77.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="694.6" y="2094.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (73 samples, 5.96%)</title><rect x="698.3" y="2067.0" width="70.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.3" y="2078.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.08%)</title><rect x="706.0" y="2051.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="709.0" y="2062.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 5.23%)</title><rect x="707.0" y="2051.0" width="61.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="710.0" y="2062.0">[unkno..</text>
</g>
<g>
<title>[unknown] (7 samples, 0.57%)</title><rect x="707.0" y="2035.0" width="6.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="710.0" y="2046.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="2019.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="710.0" y="2030.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="2003.0" width="4.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="710.0" y="2014.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1987.0" width="4.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="710.0" y="1998.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1971.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="710.0" y="1982.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1955.0" width="4.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="710.0" y="1966.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1939.0" width="4.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="710.0" y="1950.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1923.0" width="4.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="710.0" y="1934.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1907.0" width="4.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="710.0" y="1918.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1891.0" width="4.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="710.0" y="1902.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1875.0" width="4.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="710.0" y="1886.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1859.0" width="4.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="710.0" y="1870.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1843.0" width="4.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="710.0" y="1854.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1827.0" width="4.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="710.0" y="1838.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1811.0" width="4.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="710.0" y="1822.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1795.0" width="4.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="710.0" y="1806.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1779.0" width="4.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="710.0" y="1790.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1763.0" width="4.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="710.0" y="1774.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1747.0" width="4.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="710.0" y="1758.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1731.0" width="4.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="710.0" y="1742.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1715.0" width="4.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="710.0" y="1726.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1699.0" width="4.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="710.0" y="1710.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1683.0" width="4.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="710.0" y="1694.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1667.0" width="4.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="710.0" y="1678.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1651.0" width="4.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="710.0" y="1662.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1635.0" width="4.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="710.0" y="1646.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1619.0" width="4.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="710.0" y="1630.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1603.0" width="4.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="710.0" y="1614.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1587.0" width="4.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="710.0" y="1598.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1571.0" width="4.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="710.0" y="1582.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1555.0" width="4.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="710.0" y="1566.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1539.0" width="4.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="710.0" y="1550.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1523.0" width="4.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="710.0" y="1534.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1507.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="710.0" y="1518.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1491.0" width="4.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="710.0" y="1502.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1475.0" width="4.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="710.0" y="1486.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1459.0" width="4.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="710.0" y="1470.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1443.0" width="4.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="710.0" y="1454.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1427.0" width="4.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="710.0" y="1438.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1411.0" width="4.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="710.0" y="1422.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1395.0" width="4.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="710.0" y="1406.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1379.0" width="4.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="710.0" y="1390.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1363.0" width="4.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="710.0" y="1374.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1347.0" width="4.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="710.0" y="1358.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1331.0" width="4.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="710.0" y="1342.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1315.0" width="4.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="710.0" y="1326.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1299.0" width="4.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="710.0" y="1310.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1283.0" width="4.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="710.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1267.0" width="4.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="710.0" y="1278.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1251.0" width="4.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="710.0" y="1262.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1235.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="710.0" y="1246.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1219.0" width="4.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="710.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1203.0" width="4.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="710.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1187.0" width="4.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="710.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1171.0" width="4.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="710.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1155.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="710.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1139.0" width="4.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="710.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1123.0" width="4.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="710.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1107.0" width="4.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="710.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1091.0" width="4.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="710.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1075.0" width="4.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="710.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1059.0" width="4.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="710.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1043.0" width="4.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="710.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1027.0" width="4.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="710.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="1011.0" width="4.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="710.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="995.0" width="4.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="710.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="979.0" width="4.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="710.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="963.0" width="4.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="710.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="947.0" width="4.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="710.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="931.0" width="4.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="710.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="915.0" width="4.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="710.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="899.0" width="4.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="710.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="883.0" width="4.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="710.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="867.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="710.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="851.0" width="4.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="710.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="835.0" width="4.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="710.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="819.0" width="4.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="710.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="803.0" width="4.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="710.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="787.0" width="4.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="710.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="771.0" width="4.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="710.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="755.0" width="4.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="710.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="739.0" width="4.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="710.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="723.0" width="4.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="710.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="707.0" width="4.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="710.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="691.0" width="4.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="710.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="675.0" width="4.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="710.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="659.0" width="4.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="710.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="643.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="710.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="627.0" width="4.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="710.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="611.0" width="4.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="710.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="595.0" width="4.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="710.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="579.0" width="4.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="710.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="563.0" width="4.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="710.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="547.0" width="4.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="710.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="531.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="710.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="515.0" width="4.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="710.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="499.0" width="4.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="710.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="483.0" width="4.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="710.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="467.0" width="4.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="710.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="451.0" width="4.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="710.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="435.0" width="4.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="710.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="419.0" width="4.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="710.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="403.0" width="4.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="710.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="387.0" width="4.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="710.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="371.0" width="4.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="710.0" y="382.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="355.0" width="4.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="710.0" y="366.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="339.0" width="4.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="710.0" y="350.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="323.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="710.0" y="334.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="307.0" width="4.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="710.0" y="318.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="291.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="710.0" y="302.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="275.0" width="4.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="710.0" y="286.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="259.0" width="4.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="710.0" y="270.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="243.0" width="4.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="710.0" y="254.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="227.0" width="4.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="710.0" y="238.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="211.0" width="4.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="710.0" y="222.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="195.0" width="4.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="710.0" y="206.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="179.0" width="4.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="710.0" y="190.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="163.0" width="4.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="710.0" y="174.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="147.0" width="4.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="710.0" y="158.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="131.0" width="4.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="710.0" y="142.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="115.0" width="4.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="710.0" y="126.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="99.0" width="4.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="710.0" y="110.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="83.0" width="4.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="710.0" y="94.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="707.0" y="67.0" width="4.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="710.0" y="78.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.33%)</title><rect x="707.0" y="51.0" width="3.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="710.0" y="62.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.33%)</title><rect x="707.0" y="35.0" width="3.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="710.0" y="46.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.08%)</title><rect x="710.9" y="51.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="713.9" y="62.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.08%)</title><rect x="710.9" y="35.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="713.9" y="46.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.08%)</title><rect x="711.8" y="2019.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="714.8" y="2030.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.08%)</title><rect x="712.8" y="2019.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="715.8" y="2030.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.16%)</title><rect x="713.8" y="2035.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="716.8" y="2046.0"></text>
</g>
<g>
<title>epoll_wait (55 samples, 4.49%)</title><rect x="715.7" y="2035.0" width="53.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="718.7" y="2046.0">epoll..</text>
</g>
<g>
<title>[unknown] (51 samples, 4.17%)</title><rect x="719.5" y="2019.0" width="49.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="722.5" y="2030.0">[unkn..</text>
</g>
<g>
<title>[unknown] (51 samples, 4.17%)</title><rect x="719.5" y="2003.0" width="49.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="722.5" y="2014.0">[unkn..</text>
</g>
<g>
<title>[unknown] (50 samples, 4.08%)</title><rect x="720.5" y="1987.0" width="48.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="723.5" y="1998.0">[unk..</text>
</g>
<g>
<title>[unknown] (49 samples, 4.00%)</title><rect x="721.5" y="1971.0" width="47.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="724.5" y="1982.0">[unk..</text>
</g>
<g>
<title>[unknown] (48 samples, 3.92%)</title><rect x="722.4" y="1955.0" width="46.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="725.4" y="1966.0">[unk..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.19%)</title><rect x="731.1" y="1939.0" width="37.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="734.1" y="1950.0">[un..</text>
</g>
<g>
<title>[unknown] (31 samples, 2.53%)</title><rect x="738.8" y="1923.0" width="29.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="741.8" y="1934.0">[u..</text>
</g>
<g>
<title>[unknown] (22 samples, 1.80%)</title><rect x="747.5" y="1907.0" width="21.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="750.5" y="1918.0">[..</text>
</g>
<g>
<title>[unknown] (18 samples, 1.47%)</title><rect x="751.4" y="1891.0" width="17.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="754.4" y="1902.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 1.31%)</title><rect x="753.3" y="1875.0" width="15.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="756.3" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="767.7" y="1859.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="770.7" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="767.7" y="1843.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="770.7" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="767.7" y="1827.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="770.7" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="767.7" y="1811.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="770.7" y="1822.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (264 samples, 21.57%)</title><rect x="768.7" y="2083.0" width="254.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="771.7" y="2094.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (257 samples, 21.00%)</title><rect x="774.5" y="2067.0" width="247.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="777.5" y="2078.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (198 samples, 16.18%)</title><rect x="774.5" y="2051.0" width="190.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.5" y="2062.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.16%)</title><rect x="839.1" y="2035.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="842.1" y="2046.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (7 samples, 0.57%)</title><rect x="841.0" y="2035.0" width="6.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="844.0" y="2046.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.08%)</title><rect x="841.0" y="2019.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="844.0" y="2030.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (4 samples, 0.33%)</title><rect x="842.0" y="2019.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="845.0" y="2030.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (3 samples, 0.25%)</title><rect x="842.9" y="2003.0" width="2.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="845.9" y="2014.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::method_back_branch_event(methodHandle const&amp;, methodHandle const&amp;, int, CompLevel, CompiledMethod*, JavaThread*) (2 samples, 0.16%)</title><rect x="842.9" y="1987.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="845.9" y="1998.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::call_event(Method*, CompLevel, JavaThread*) (1 samples, 0.08%)</title><rect x="843.9" y="1971.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="846.9" y="1982.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.08%)</title><rect x="844.9" y="1987.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="847.9" y="1998.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.08%)</title><rect x="844.9" y="1971.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="847.9" y="1982.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.08%)</title><rect x="845.8" y="2019.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="848.8" y="2030.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.08%)</title><rect x="846.8" y="2019.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="849.8" y="2030.0"></text>
</g>
<g>
<title>SharedRuntime::OSR_migration_begin(JavaThread*) (2 samples, 0.16%)</title><rect x="847.8" y="2035.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="850.8" y="2046.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, AllocFailStrategy::AllocFailEnum) (1 samples, 0.08%)</title><rect x="848.7" y="2019.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="851.7" y="2030.0"></text>
</g>
<g>
<title>os::malloc(unsigned long, MemoryType, NativeCallStack const&amp;) (1 samples, 0.08%)</title><rect x="848.7" y="2003.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="851.7" y="2014.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (100 samples, 8.17%)</title><rect x="849.7" y="2035.0" width="96.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="852.7" y="2046.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (96 samples, 7.84%)</title><rect x="853.5" y="2019.0" width="92.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="856.5" y="2030.0">one/nio/htt..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (89 samples, 7.27%)</title><rect x="853.5" y="2003.0" width="85.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="856.5" y="2014.0">RequestHan..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.entity (89 samples, 7.27%)</title><rect x="853.5" y="1987.0" width="85.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.5" y="1998.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.25%)</title><rect x="854.5" y="1971.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="857.5" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.25%)</title><rect x="854.5" y="1955.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="857.5" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (3 samples, 0.25%)</title><rect x="854.5" y="1939.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="857.5" y="1950.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.25%)</title><rect x="854.5" y="1923.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="857.5" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="857.4" y="1971.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="860.4" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="857.4" y="1955.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.4" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$61/1284527574.get$Lambda (1 samples, 0.08%)</title><rect x="857.4" y="1939.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.4" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$61/1284527574.&lt;init&gt; (1 samples, 0.08%)</title><rect x="857.4" y="1923.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.4" y="1934.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.41%)</title><rect x="858.4" y="1971.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.4" y="1982.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.41%)</title><rect x="858.4" y="1955.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="861.4" y="1966.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.41%)</title><rect x="858.4" y="1939.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="861.4" y="1950.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.41%)</title><rect x="858.4" y="1923.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.4" y="1934.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.41%)</title><rect x="858.4" y="1907.0" width="4.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.4" y="1918.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.16%)</title><rect x="859.3" y="1891.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="862.3" y="1902.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.16%)</title><rect x="859.3" y="1875.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="862.3" y="1886.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.16%)</title><rect x="861.3" y="1891.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="864.3" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.executeAsync (71 samples, 5.80%)</title><rect x="863.2" y="1971.0" width="68.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="866.2" y="1982.0">ru/mail..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.08%)</title><rect x="863.2" y="1955.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="866.2" y="1966.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.08%)</title><rect x="863.2" y="1939.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="866.2" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$62/2121189026.get$Lambda (1 samples, 0.08%)</title><rect x="863.2" y="1923.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="866.2" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (70 samples, 5.72%)</title><rect x="864.2" y="1955.0" width="67.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.2" y="1966.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (70 samples, 5.72%)</title><rect x="864.2" y="1939.0" width="67.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="867.2" y="1950.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (63 samples, 5.15%)</title><rect x="864.2" y="1923.0" width="60.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="867.2" y="1934.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.08%)</title><rect x="864.2" y="1907.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="867.2" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.08%)</title><rect x="864.2" y="1891.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="867.2" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.08%)</title><rect x="864.2" y="1875.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.2" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (62 samples, 5.07%)</title><rect x="865.1" y="1907.0" width="59.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.1" y="1918.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (62 samples, 5.07%)</title><rect x="865.1" y="1891.0" width="59.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="868.1" y="1902.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (62 samples, 5.07%)</title><rect x="865.1" y="1875.0" width="59.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="868.1" y="1886.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (62 samples, 5.07%)</title><rect x="865.1" y="1859.0" width="59.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="868.1" y="1870.0">java/u..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (62 samples, 5.07%)</title><rect x="865.1" y="1843.0" width="59.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="868.1" y="1854.0">jdk/in..</text>
</g>
<g>
<title>Parker::unpark() (2 samples, 0.16%)</title><rect x="865.1" y="1827.0" width="1.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="868.1" y="1838.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.08%)</title><rect x="867.0" y="1827.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="870.0" y="1838.0"></text>
</g>
<g>
<title>Unsafe_Unpark (19 samples, 1.55%)</title><rect x="868.0" y="1827.0" width="18.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="871.0" y="1838.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.08%)</title><rect x="871.9" y="1811.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="874.9" y="1822.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.08%)</title><rect x="872.8" y="1811.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="875.8" y="1822.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.08%)</title><rect x="873.8" y="1811.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="876.8" y="1822.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (7 samples, 0.57%)</title><rect x="874.8" y="1811.0" width="6.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="877.8" y="1822.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="881.5" y="1811.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="884.5" y="1822.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.16%)</title><rect x="882.5" y="1811.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="885.5" y="1822.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.08%)</title><rect x="884.4" y="1811.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="887.4" y="1822.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.08%)</title><rect x="885.4" y="1811.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="888.4" y="1822.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.08%)</title><rect x="886.3" y="1827.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="889.3" y="1838.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.41%)</title><rect x="887.3" y="1827.0" width="4.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="890.3" y="1838.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (34 samples, 2.78%)</title><rect x="892.1" y="1827.0" width="32.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="895.1" y="1838.0">pt..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.37%)</title><rect x="896.9" y="1811.0" width="28.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="899.9" y="1822.0">[..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.37%)</title><rect x="896.9" y="1795.0" width="28.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="899.9" y="1806.0">[..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.21%)</title><rect x="898.9" y="1779.0" width="26.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="901.9" y="1790.0">[..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.21%)</title><rect x="898.9" y="1763.0" width="26.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="901.9" y="1774.0">[..</text>
</g>
<g>
<title>[unknown] (26 samples, 2.12%)</title><rect x="899.8" y="1747.0" width="25.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="902.8" y="1758.0">[..</text>
</g>
<g>
<title>[unknown] (20 samples, 1.63%)</title><rect x="905.6" y="1731.0" width="19.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="908.6" y="1742.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.39%)</title><rect x="908.5" y="1715.0" width="16.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="911.5" y="1726.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.39%)</title><rect x="908.5" y="1699.0" width="16.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="911.5" y="1710.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.57%)</title><rect x="924.9" y="1923.0" width="6.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.9" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.57%)</title><rect x="924.9" y="1907.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.9" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.57%)</title><rect x="924.9" y="1891.0" width="6.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="927.9" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.57%)</title><rect x="924.9" y="1875.0" width="6.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="927.9" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HashingTopology.primaryFor (8 samples, 0.65%)</title><rect x="931.6" y="1971.0" width="7.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="934.6" y="1982.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.25%)</title><rect x="931.6" y="1955.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="934.6" y="1966.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.25%)</title><rect x="931.6" y="1939.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="934.6" y="1950.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (3 samples, 0.25%)</title><rect x="931.6" y="1923.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="934.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.16%)</title><rect x="932.6" y="1907.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.6" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HashingTopology.hashCode (5 samples, 0.41%)</title><rect x="934.5" y="1955.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="937.5" y="1966.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (2 samples, 0.16%)</title><rect x="937.4" y="1939.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="940.4" y="1950.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.08%)</title><rect x="938.4" y="1923.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="941.4" y="1934.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.41%)</title><rect x="939.3" y="2003.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="942.3" y="2014.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.41%)</title><rect x="939.3" y="1987.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="942.3" y="1998.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.25%)</title><rect x="939.3" y="1971.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="942.3" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.16%)</title><rect x="940.3" y="1955.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="943.3" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.16%)</title><rect x="940.3" y="1939.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="943.3" y="1950.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.16%)</title><rect x="942.2" y="1971.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="945.2" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.16%)</title><rect x="942.2" y="1955.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="945.2" y="1966.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.16%)</title><rect x="944.2" y="2003.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="947.2" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.16%)</title><rect x="944.2" y="1987.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="947.2" y="1998.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.16%)</title><rect x="944.2" y="1971.0" width="1.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.2" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.08%)</title><rect x="944.2" y="1955.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="947.2" y="1966.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.08%)</title><rect x="944.2" y="1939.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="947.2" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="944.2" y="1923.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="947.2" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="944.2" y="1907.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="947.2" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="944.2" y="1891.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="947.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="944.2" y="1875.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="947.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="944.2" y="1859.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="947.2" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="944.2" y="1843.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="947.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="944.2" y="1827.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="947.2" y="1838.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.08%)</title><rect x="945.1" y="1955.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="948.1" y="1966.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.74%)</title><rect x="946.1" y="2035.0" width="8.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="949.1" y="2046.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.41%)</title><rect x="948.0" y="2019.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="951.0" y="2030.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.41%)</title><rect x="948.0" y="2003.0" width="4.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="951.0" y="2014.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.16%)</title><rect x="952.8" y="2019.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="955.8" y="2030.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.08%)</title><rect x="953.8" y="2003.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="956.8" y="2014.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.08%)</title><rect x="954.8" y="2035.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="957.8" y="2046.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.08%)</title><rect x="954.8" y="2019.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.8" y="2030.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.08%)</title><rect x="954.8" y="2003.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="957.8" y="2014.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.08%)</title><rect x="955.7" y="2035.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="958.7" y="2046.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.49%)</title><rect x="956.7" y="2035.0" width="5.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="959.7" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.08%)</title><rect x="959.6" y="2019.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.6" y="2030.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.16%)</title><rect x="960.6" y="2019.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="963.6" y="2030.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.16%)</title><rect x="960.6" y="2003.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="963.6" y="2014.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.08%)</title><rect x="961.5" y="1987.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="964.5" y="1998.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.08%)</title><rect x="961.5" y="1971.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.5" y="1982.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.08%)</title><rect x="961.5" y="1955.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="964.5" y="1966.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeaderCount (1 samples, 0.08%)</title><rect x="962.5" y="2035.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="965.5" y="2046.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.16%)</title><rect x="963.4" y="2035.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="966.4" y="2046.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.16%)</title><rect x="963.4" y="2019.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="966.4" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (59 samples, 4.82%)</title><rect x="965.4" y="2051.0" width="56.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.4" y="2062.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (56 samples, 4.58%)</title><rect x="968.3" y="2035.0" width="54.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="971.3" y="2046.0">one/n..</text>
</g>
<g>
<title>[unknown] (19 samples, 1.55%)</title><rect x="971.2" y="2019.0" width="18.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="974.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 1.55%)</title><rect x="971.2" y="2003.0" width="18.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="974.2" y="2014.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (17 samples, 1.39%)</title><rect x="971.2" y="1987.0" width="16.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="974.2" y="1998.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.08%)</title><rect x="972.1" y="1971.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="975.1" y="1982.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="973.1" y="1971.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="976.1" y="1982.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.25%)</title><rect x="974.1" y="1971.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="977.1" y="1982.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.57%)</title><rect x="976.9" y="1971.0" width="6.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="979.9" y="1982.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="976.9" y="1955.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="979.9" y="1966.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.16%)</title><rect x="977.9" y="1955.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="980.9" y="1966.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.08%)</title><rect x="979.8" y="1955.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="982.8" y="1966.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.25%)</title><rect x="980.8" y="1955.0" width="2.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="983.8" y="1966.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.16%)</title><rect x="981.8" y="1939.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="984.8" y="1950.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (2 samples, 0.16%)</title><rect x="983.7" y="1971.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="986.7" y="1982.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.16%)</title><rect x="985.6" y="1971.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="988.6" y="1982.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.08%)</title><rect x="987.5" y="1987.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="990.5" y="1998.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.08%)</title><rect x="988.5" y="1987.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="991.5" y="1998.0"></text>
</g>
<g>
<title>__GI___recv (34 samples, 2.78%)</title><rect x="989.5" y="2019.0" width="32.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="992.5" y="2030.0">__..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.78%)</title><rect x="989.5" y="2003.0" width="32.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="992.5" y="2014.0">[u..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.78%)</title><rect x="989.5" y="1987.0" width="32.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="992.5" y="1998.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.70%)</title><rect x="990.4" y="1971.0" width="31.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="993.4" y="1982.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.70%)</title><rect x="990.4" y="1955.0" width="31.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="993.4" y="1966.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.70%)</title><rect x="990.4" y="1939.0" width="31.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="993.4" y="1950.0">[u..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.45%)</title><rect x="993.3" y="1923.0" width="29.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="996.3" y="1934.0">[u..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.21%)</title><rect x="996.2" y="1907.0" width="26.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="999.2" y="1918.0">[..</text>
</g>
<g>
<title>[unknown] (18 samples, 1.47%)</title><rect x="1004.9" y="1891.0" width="17.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1007.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 1.14%)</title><rect x="1008.8" y="1875.0" width="13.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1011.8" y="1886.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.74%)</title><rect x="1013.6" y="1859.0" width="8.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1016.6" y="1870.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.41%)</title><rect x="1017.4" y="1843.0" width="4.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1020.4" y="1854.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="1020.3" y="1827.0" width="2.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1023.3" y="1838.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.08%)</title><rect x="1022.3" y="2067.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1025.3" y="2078.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.08%)</title><rect x="1023.2" y="2099.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1026.2" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1023.2" y="2083.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1026.2" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1023.2" y="2067.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1026.2" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1023.2" y="2051.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1026.2" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1023.2" y="2035.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1026.2" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1023.2" y="2019.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1026.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1023.2" y="2003.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1026.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1023.2" y="1987.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1026.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1023.2" y="1971.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1026.2" y="1982.0"></text>
</g>
<g>
<title>start_thread (172 samples, 14.05%)</title><rect x="1024.2" y="2099.0" width="165.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1027.2" y="2110.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (172 samples, 14.05%)</title><rect x="1024.2" y="2083.0" width="165.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1027.2" y="2094.0">thread_native_entry(T..</text>
</g>
<g>
<title>Thread::call_run() (172 samples, 14.05%)</title><rect x="1024.2" y="2067.0" width="165.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1027.2" y="2078.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (10 samples, 0.82%)</title><rect x="1024.2" y="2051.0" width="9.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1027.2" y="2062.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (10 samples, 0.82%)</title><rect x="1024.2" y="2035.0" width="9.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1027.2" y="2046.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 0.74%)</title><rect x="1024.2" y="2019.0" width="8.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1027.2" y="2030.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.08%)</title><rect x="1024.2" y="2003.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1027.2" y="2014.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (4 samples, 0.33%)</title><rect x="1025.1" y="2003.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1028.1" y="2014.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.33%)</title><rect x="1025.1" y="1987.0" width="3.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1028.1" y="1998.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.16%)</title><rect x="1027.1" y="1971.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1030.1" y="1982.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.33%)</title><rect x="1029.0" y="2003.0" width="3.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1032.0" y="2014.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.08%)</title><rect x="1032.9" y="2019.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1035.9" y="2030.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.08%)</title><rect x="1032.9" y="2003.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1035.9" y="2014.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.08%)</title><rect x="1032.9" y="1987.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1035.9" y="1998.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (1 samples, 0.08%)</title><rect x="1032.9" y="1971.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1035.9" y="1982.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (1 samples, 0.08%)</title><rect x="1032.9" y="1955.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1035.9" y="1966.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)1, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.08%)</title><rect x="1032.9" y="1939.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1035.9" y="1950.0"></text>
</g>
<g>
<title>JavaThread::run() (160 samples, 13.07%)</title><rect x="1033.8" y="2051.0" width="154.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1036.8" y="2062.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (160 samples, 13.07%)</title><rect x="1033.8" y="2035.0" width="154.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1036.8" y="2046.0">JavaThread::thread_m..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (159 samples, 12.99%)</title><rect x="1033.8" y="2019.0" width="153.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1036.8" y="2030.0">CompileBroker::comp..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (158 samples, 12.91%)</title><rect x="1033.8" y="2003.0" width="152.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1036.8" y="2014.0">CompileBroker::invo..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (155 samples, 12.66%)</title><rect x="1033.8" y="1987.0" width="149.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1036.8" y="1998.0">C2Compiler::compile..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (155 samples, 12.66%)</title><rect x="1033.8" y="1971.0" width="149.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1036.8" y="1982.0">Compile::Compile(ci..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.08%)</title><rect x="1033.8" y="1955.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1036.8" y="1966.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.08%)</title><rect x="1033.8" y="1939.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1036.8" y="1950.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.08%)</title><rect x="1033.8" y="1923.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1036.8" y="1934.0"></text>
</g>
<g>
<title>ciTypeFlow::ciTypeFlow(ciEnv*, ciMethod*, int) (1 samples, 0.08%)</title><rect x="1033.8" y="1907.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1036.8" y="1918.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (84 samples, 6.86%)</title><rect x="1034.8" y="1955.0" width="81.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1037.8" y="1966.0">Compile::..</text>
</g>
<g>
<title>Compile::Output() (5 samples, 0.41%)</title><rect x="1034.8" y="1939.0" width="4.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1037.8" y="1950.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (2 samples, 0.16%)</title><rect x="1034.8" y="1923.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1037.8" y="1934.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.08%)</title><rect x="1035.8" y="1907.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1038.8" y="1918.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.08%)</title><rect x="1036.7" y="1923.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1039.7" y="1934.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.08%)</title><rect x="1036.7" y="1907.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1039.7" y="1918.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.08%)</title><rect x="1037.7" y="1923.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1040.7" y="1934.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="1038.6" y="1923.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1041.6" y="1934.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.08%)</title><rect x="1039.6" y="1939.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1042.6" y="1950.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.08%)</title><rect x="1039.6" y="1923.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1042.6" y="1934.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.08%)</title><rect x="1039.6" y="1907.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1042.6" y="1918.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.08%)</title><rect x="1039.6" y="1891.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1042.6" y="1902.0"></text>
</g>
<g>
<title>Matcher::match() (7 samples, 0.57%)</title><rect x="1040.6" y="1939.0" width="6.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1043.6" y="1950.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (1 samples, 0.08%)</title><rect x="1040.6" y="1923.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1043.6" y="1934.0"></text>
</g>
<g>
<title>Matcher::init_first_stack_mask() (1 samples, 0.08%)</title><rect x="1040.6" y="1907.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1043.6" y="1918.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (6 samples, 0.49%)</title><rect x="1041.5" y="1923.0" width="5.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1044.5" y="1934.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (2 samples, 0.16%)</title><rect x="1042.5" y="1907.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1045.5" y="1918.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.16%)</title><rect x="1044.4" y="1907.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1047.4" y="1918.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.16%)</title><rect x="1044.4" y="1891.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1047.4" y="1902.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.08%)</title><rect x="1044.4" y="1875.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1047.4" y="1886.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.08%)</title><rect x="1044.4" y="1859.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1047.4" y="1870.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.08%)</title><rect x="1045.4" y="1875.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1048.4" y="1886.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.08%)</title><rect x="1045.4" y="1859.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1048.4" y="1870.0"></text>
</g>
<g>
<title>MemBarVolatileNode::Opcode() const (1 samples, 0.08%)</title><rect x="1046.4" y="1907.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1049.4" y="1918.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.08%)</title><rect x="1047.3" y="1939.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1050.3" y="1950.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.08%)</title><rect x="1047.3" y="1923.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1050.3" y="1934.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (9 samples, 0.74%)</title><rect x="1048.3" y="1939.0" width="8.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1051.3" y="1950.0"></text>
</g>
<g>
<title>PhaseCFG::estimate_block_frequency() (1 samples, 0.08%)</title><rect x="1048.3" y="1923.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1051.3" y="1934.0"></text>
</g>
<g>
<title>CFGLoop::compute_freq() (1 samples, 0.08%)</title><rect x="1048.3" y="1907.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1051.3" y="1918.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (8 samples, 0.65%)</title><rect x="1049.2" y="1923.0" width="7.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1052.2" y="1934.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.08%)</title><rect x="1049.2" y="1907.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1052.2" y="1918.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.16%)</title><rect x="1050.2" y="1907.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1053.2" y="1918.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (1 samples, 0.08%)</title><rect x="1050.2" y="1891.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1053.2" y="1902.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (1 samples, 0.08%)</title><rect x="1051.2" y="1891.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1054.2" y="1902.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.08%)</title><rect x="1051.2" y="1875.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1054.2" y="1886.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (3 samples, 0.25%)</title><rect x="1052.1" y="1907.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1055.1" y="1918.0"></text>
</g>
<g>
<title>loadPNode::ideal_Opcode() const (1 samples, 0.08%)</title><rect x="1054.1" y="1891.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1057.1" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (1 samples, 0.08%)</title><rect x="1055.0" y="1907.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1058.0" y="1918.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.08%)</title><rect x="1056.0" y="1907.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1059.0" y="1918.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.08%)</title><rect x="1056.0" y="1891.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1059.0" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1056.0" y="1875.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1059.0" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1056.0" y="1859.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1059.0" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1056.0" y="1843.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1059.0" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1056.0" y="1827.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1059.0" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1056.0" y="1811.0" width="1.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1059.0" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1056.0" y="1795.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1059.0" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1056.0" y="1779.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1059.0" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1056.0" y="1763.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1059.0" y="1774.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (61 samples, 4.98%)</title><rect x="1057.0" y="1939.0" width="58.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1060.0" y="1950.0">PhaseC..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (2 samples, 0.16%)</title><rect x="1057.0" y="1923.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1060.0" y="1934.0"></text>
</g>
<g>
<title>MachSpillCopyNode::ideal_reg() const (1 samples, 0.08%)</title><rect x="1058.9" y="1923.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1061.9" y="1934.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (4 samples, 0.33%)</title><rect x="1059.9" y="1923.0" width="3.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1062.9" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (3 samples, 0.25%)</title><rect x="1063.7" y="1923.0" width="2.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1066.7" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.08%)</title><rect x="1063.7" y="1907.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1066.7" y="1918.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1063.7" y="1891.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1066.7" y="1902.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.08%)</title><rect x="1064.7" y="1907.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1067.7" y="1918.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1064.7" y="1891.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1067.7" y="1902.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.08%)</title><rect x="1065.6" y="1907.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1068.6" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.16%)</title><rect x="1066.6" y="1923.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1069.6" y="1934.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.08%)</title><rect x="1067.6" y="1907.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1070.6" y="1918.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1067.6" y="1891.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1070.6" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (5 samples, 0.41%)</title><rect x="1068.5" y="1923.0" width="4.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1071.5" y="1934.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.08%)</title><rect x="1070.5" y="1907.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1073.5" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (1 samples, 0.08%)</title><rect x="1071.4" y="1907.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1074.4" y="1918.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.08%)</title><rect x="1071.4" y="1891.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1074.4" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.08%)</title><rect x="1072.4" y="1907.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1075.4" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (14 samples, 1.14%)</title><rect x="1073.3" y="1923.0" width="13.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1076.3" y="1934.0"></text>
</g>
<g>
<title>JVMState::debug_start() const (1 samples, 0.08%)</title><rect x="1075.3" y="1907.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1078.3" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.08%)</title><rect x="1076.2" y="1907.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1079.2" y="1918.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.08%)</title><rect x="1076.2" y="1891.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1079.2" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (8 samples, 0.65%)</title><rect x="1077.2" y="1907.0" width="7.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1080.2" y="1918.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.33%)</title><rect x="1081.1" y="1891.0" width="3.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1084.1" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.08%)</title><rect x="1084.9" y="1907.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1087.9" y="1918.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.08%)</title><rect x="1085.9" y="1907.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1088.9" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.08%)</title><rect x="1086.8" y="1923.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1089.8" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.08%)</title><rect x="1086.8" y="1907.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1089.8" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (5 samples, 0.41%)</title><rect x="1087.8" y="1923.0" width="4.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1090.8" y="1934.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.08%)</title><rect x="1089.7" y="1907.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1092.7" y="1918.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.08%)</title><rect x="1090.7" y="1907.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1093.7" y="1918.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.08%)</title><rect x="1091.7" y="1907.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1094.7" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (1 samples, 0.08%)</title><rect x="1092.6" y="1923.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1095.6" y="1934.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (1 samples, 0.08%)</title><rect x="1092.6" y="1907.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1095.6" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.08%)</title><rect x="1093.6" y="1923.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1096.6" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (8 samples, 0.65%)</title><rect x="1094.6" y="1923.0" width="7.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1097.6" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (3 samples, 0.25%)</title><rect x="1096.5" y="1907.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1099.5" y="1918.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (3 samples, 0.25%)</title><rect x="1099.4" y="1907.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1102.4" y="1918.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (4 samples, 0.33%)</title><rect x="1102.3" y="1923.0" width="3.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1105.3" y="1934.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (3 samples, 0.25%)</title><rect x="1102.3" y="1907.0" width="2.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1105.3" y="1918.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 0.08%)</title><rect x="1102.3" y="1891.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1105.3" y="1902.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (2 samples, 0.16%)</title><rect x="1103.2" y="1891.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1106.2" y="1902.0"></text>
</g>
<g>
<title>PhaseIFG::test_edge_sq(unsigned int, unsigned int) const (1 samples, 0.08%)</title><rect x="1105.2" y="1907.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1108.2" y="1918.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.08%)</title><rect x="1106.1" y="1923.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1109.1" y="1934.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1106.1" y="1907.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1109.1" y="1918.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (3 samples, 0.25%)</title><rect x="1107.1" y="1923.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1110.1" y="1934.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.08%)</title><rect x="1108.1" y="1907.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1111.1" y="1918.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1109.0" y="1907.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1112.0" y="1918.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (3 samples, 0.25%)</title><rect x="1110.0" y="1923.0" width="2.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1113.0" y="1934.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1110.9" y="1907.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1113.9" y="1918.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (1 samples, 0.08%)</title><rect x="1111.9" y="1907.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1114.9" y="1918.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.08%)</title><rect x="1112.9" y="1923.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1115.9" y="1934.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (1 samples, 0.08%)</title><rect x="1113.8" y="1923.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1116.8" y="1934.0"></text>
</g>
<g>
<title>testN_regNode::ideal_Opcode() const (1 samples, 0.08%)</title><rect x="1114.8" y="1923.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1117.8" y="1934.0"></text>
</g>
<g>
<title>Compile::Optimize() (53 samples, 4.33%)</title><rect x="1115.8" y="1955.0" width="51.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1118.8" y="1966.0">Compi..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.08%)</title><rect x="1115.8" y="1939.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1118.8" y="1950.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.08%)</title><rect x="1115.8" y="1923.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1118.8" y="1934.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.252] (1 samples, 0.08%)</title><rect x="1115.8" y="1907.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1118.8" y="1918.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (16 samples, 1.31%)</title><rect x="1116.7" y="1939.0" width="15.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1119.7" y="1950.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (16 samples, 1.31%)</title><rect x="1116.7" y="1923.0" width="15.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1119.7" y="1934.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (13 samples, 1.06%)</title><rect x="1118.7" y="1907.0" width="12.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1121.7" y="1918.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.247] (12 samples, 0.98%)</title><rect x="1118.7" y="1891.0" width="11.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1121.7" y="1902.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field_uses_to_worklist(FieldNode*) (12 samples, 0.98%)</title><rect x="1118.7" y="1875.0" width="11.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1121.7" y="1886.0"></text>
</g>
<g>
<title>ConnectionGraph::add_fields_to_worklist(FieldNode*, PointsToNode*) (10 samples, 0.82%)</title><rect x="1120.6" y="1859.0" width="9.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1123.6" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::find_non_escaped_objects(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1130.2" y="1891.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1133.2" y="1902.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1907.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.2" y="1918.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1891.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1134.2" y="1902.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1875.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.2" y="1886.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1859.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1134.2" y="1870.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1843.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1134.2" y="1854.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1827.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1134.2" y="1838.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1811.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1134.2" y="1822.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1795.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.2" y="1806.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1779.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.2" y="1790.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1763.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1134.2" y="1774.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1747.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1134.2" y="1758.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1731.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.2" y="1742.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1715.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1134.2" y="1726.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1699.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.2" y="1710.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1683.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1134.2" y="1694.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1667.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1134.2" y="1678.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1651.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.2" y="1662.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1635.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.2" y="1646.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1619.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1134.2" y="1630.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1603.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1134.2" y="1614.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1587.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.2" y="1598.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1571.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1134.2" y="1582.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1555.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1134.2" y="1566.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1539.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.2" y="1550.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1523.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1134.2" y="1534.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1507.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.2" y="1518.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1491.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1134.2" y="1502.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1475.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.2" y="1486.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1459.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1134.2" y="1470.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1443.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.2" y="1454.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1427.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1134.2" y="1438.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1411.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1134.2" y="1422.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1395.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1134.2" y="1406.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1379.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1134.2" y="1390.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1363.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1134.2" y="1374.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1347.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1134.2" y="1358.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1331.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1134.2" y="1342.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1315.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1134.2" y="1326.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.08%)</title><rect x="1131.2" y="1299.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1134.2" y="1310.0"></text>
</g>
<g>
<title>PhiNode::unique_input(PhaseTransform*, bool) (1 samples, 0.08%)</title><rect x="1131.2" y="1283.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1134.2" y="1294.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.08%)</title><rect x="1132.2" y="1939.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1135.2" y="1950.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (25 samples, 2.04%)</title><rect x="1133.1" y="1939.0" width="24.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1136.1" y="1950.0">P..</text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.08%)</title><rect x="1133.1" y="1923.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1136.1" y="1934.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.08%)</title><rect x="1134.1" y="1923.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1137.1" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (3 samples, 0.25%)</title><rect x="1135.0" y="1923.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1138.0" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.25%)</title><rect x="1137.9" y="1923.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1140.9" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.08%)</title><rect x="1139.9" y="1907.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1142.9" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (12 samples, 0.98%)</title><rect x="1140.8" y="1923.0" width="11.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1143.8" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (11 samples, 0.90%)</title><rect x="1141.8" y="1907.0" width="10.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1144.8" y="1918.0"></text>
</g>
<g>
<title>AllocateNode::Opcode() const (1 samples, 0.08%)</title><rect x="1142.8" y="1891.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1145.8" y="1902.0"></text>
</g>
<g>
<title>MemBarVolatileNode::Opcode() const (1 samples, 0.08%)</title><rect x="1143.7" y="1891.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1146.7" y="1902.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (8 samples, 0.65%)</title><rect x="1144.7" y="1891.0" width="7.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1147.7" y="1902.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.08%)</title><rect x="1145.7" y="1875.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.7" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.08%)</title><rect x="1145.7" y="1859.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1148.7" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.118] (1 samples, 0.08%)</title><rect x="1145.7" y="1843.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1148.7" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.08%)</title><rect x="1146.6" y="1875.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1149.6" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (5 samples, 0.41%)</title><rect x="1147.6" y="1875.0" width="4.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.6" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.08%)</title><rect x="1152.4" y="1923.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.4" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.16%)</title><rect x="1153.4" y="1923.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1156.4" y="1934.0"></text>
</g>
<g>
<title>BoolNode::Opcode() const (1 samples, 0.08%)</title><rect x="1153.4" y="1907.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.4" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_split_if(Node*) (1 samples, 0.08%)</title><rect x="1154.3" y="1907.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.3" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::handle_use(Node*, Node*, small_cache*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.08%)</title><rect x="1154.3" y="1891.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.3" y="1902.0"></text>
</g>
<g>
<title>PhaseIdealLoop::spinup(Node*, Node*, Node*, Node*, Node*, small_cache*) [clone .part.39] (1 samples, 0.08%)</title><rect x="1154.3" y="1875.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.3" y="1886.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.16%)</title><rect x="1155.3" y="1923.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1158.3" y="1934.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.16%)</title><rect x="1155.3" y="1907.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1158.3" y="1918.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1155.3" y="1891.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1158.3" y="1902.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.08%)</title><rect x="1155.3" y="1875.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.3" y="1886.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.08%)</title><rect x="1155.3" y="1859.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1158.3" y="1870.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.08%)</title><rect x="1155.3" y="1843.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1158.3" y="1854.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1156.3" y="1891.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1159.3" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (7 samples, 0.57%)</title><rect x="1157.2" y="1939.0" width="6.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1160.2" y="1950.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (6 samples, 0.49%)</title><rect x="1158.2" y="1923.0" width="5.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.2" y="1934.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.08%)</title><rect x="1159.2" y="1907.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.2" y="1918.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (3 samples, 0.25%)</title><rect x="1160.1" y="1907.0" width="2.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.1" y="1918.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (2 samples, 0.16%)</title><rect x="1161.1" y="1891.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1164.1" y="1902.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.16%)</title><rect x="1161.1" y="1875.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.1" y="1886.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.16%)</title><rect x="1161.1" y="1859.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.1" y="1870.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.16%)</title><rect x="1161.1" y="1843.0" width="1.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.1" y="1854.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.16%)</title><rect x="1161.1" y="1827.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.1" y="1838.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.16%)</title><rect x="1161.1" y="1811.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1164.1" y="1822.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.16%)</title><rect x="1161.1" y="1795.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.1" y="1806.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.16%)</title><rect x="1161.1" y="1779.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.1" y="1790.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.16%)</title><rect x="1161.1" y="1763.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.1" y="1774.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1161.1" y="1747.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1164.1" y="1758.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1161.1" y="1731.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1164.1" y="1742.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1161.1" y="1715.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.1" y="1726.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1161.1" y="1699.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1164.1" y="1710.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1161.1" y="1683.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.1" y="1694.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1161.1" y="1667.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1164.1" y="1678.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.08%)</title><rect x="1161.1" y="1651.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.1" y="1662.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.08%)</title><rect x="1161.1" y="1635.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1164.1" y="1646.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.08%)</title><rect x="1162.0" y="1747.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.0" y="1758.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.08%)</title><rect x="1162.0" y="1731.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.0" y="1742.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.08%)</title><rect x="1163.0" y="1907.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1166.0" y="1918.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.08%)</title><rect x="1163.0" y="1891.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.0" y="1902.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.16%)</title><rect x="1164.0" y="1939.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1167.0" y="1950.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.16%)</title><rect x="1164.0" y="1923.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1167.0" y="1934.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.16%)</title><rect x="1164.0" y="1907.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1167.0" y="1918.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.08%)</title><rect x="1164.9" y="1891.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1167.9" y="1902.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.08%)</title><rect x="1165.9" y="1939.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.9" y="1950.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.08%)</title><rect x="1165.9" y="1923.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.9" y="1934.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.08%)</title><rect x="1165.9" y="1907.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.9" y="1918.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 1.23%)</title><rect x="1166.9" y="1955.0" width="14.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.9" y="1966.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 1.23%)</title><rect x="1166.9" y="1939.0" width="14.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.9" y="1950.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (15 samples, 1.23%)</title><rect x="1166.9" y="1923.0" width="14.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.9" y="1934.0"></text>
</g>
<g>
<title>Parse::do_one_block() (15 samples, 1.23%)</title><rect x="1166.9" y="1907.0" width="14.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.9" y="1918.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (15 samples, 1.23%)</title><rect x="1166.9" y="1891.0" width="14.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.9" y="1902.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.08%)</title><rect x="1166.9" y="1875.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.9" y="1886.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (1 samples, 0.08%)</title><rect x="1166.9" y="1859.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.9" y="1870.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.08%)</title><rect x="1166.9" y="1843.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.9" y="1854.0"></text>
</g>
<g>
<title>ConINode::Opcode() const (1 samples, 0.08%)</title><rect x="1166.9" y="1827.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.9" y="1838.0"></text>
</g>
<g>
<title>Parse::do_call() (14 samples, 1.14%)</title><rect x="1167.8" y="1875.0" width="13.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1170.8" y="1886.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.08%)</title><rect x="1167.8" y="1859.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.8" y="1870.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.08%)</title><rect x="1167.8" y="1843.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.8" y="1854.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.08%)</title><rect x="1167.8" y="1827.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1170.8" y="1838.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_box_klass() const (1 samples, 0.08%)</title><rect x="1167.8" y="1811.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.8" y="1822.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.65%)</title><rect x="1168.8" y="1859.0" width="7.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.8" y="1870.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.65%)</title><rect x="1168.8" y="1843.0" width="7.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1171.8" y="1854.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.65%)</title><rect x="1168.8" y="1827.0" width="7.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.8" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.65%)</title><rect x="1168.8" y="1811.0" width="7.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1171.8" y="1822.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.65%)</title><rect x="1168.8" y="1795.0" width="7.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.8" y="1806.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.65%)</title><rect x="1168.8" y="1779.0" width="7.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.8" y="1790.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.57%)</title><rect x="1168.8" y="1763.0" width="6.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.8" y="1774.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.57%)</title><rect x="1168.8" y="1747.0" width="6.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.8" y="1758.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.57%)</title><rect x="1168.8" y="1731.0" width="6.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.8" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.57%)</title><rect x="1168.8" y="1715.0" width="6.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.8" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.57%)</title><rect x="1168.8" y="1699.0" width="6.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1171.8" y="1710.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.49%)</title><rect x="1168.8" y="1683.0" width="5.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1171.8" y="1694.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1168.8" y="1667.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.8" y="1678.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.08%)</title><rect x="1168.8" y="1651.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.8" y="1662.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_arraycopy() (1 samples, 0.08%)</title><rect x="1168.8" y="1635.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.8" y="1646.0"></text>
</g>
<g>
<title>GraphKit::load_object_klass(Node*) (1 samples, 0.08%)</title><rect x="1168.8" y="1619.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.8" y="1630.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.08%)</title><rect x="1168.8" y="1603.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.8" y="1614.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*) (1 samples, 0.08%)</title><rect x="1168.8" y="1587.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.8" y="1598.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.25%)</title><rect x="1169.8" y="1667.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.8" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.25%)</title><rect x="1169.8" y="1651.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.8" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.25%)</title><rect x="1169.8" y="1635.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.8" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.25%)</title><rect x="1169.8" y="1619.0" width="2.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.8" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.25%)</title><rect x="1169.8" y="1603.0" width="2.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.8" y="1614.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (1 samples, 0.08%)</title><rect x="1169.8" y="1587.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.8" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1170.7" y="1587.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1173.7" y="1598.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1170.7" y="1571.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.7" y="1582.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1170.7" y="1555.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.7" y="1566.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1170.7" y="1539.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.7" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1170.7" y="1523.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.7" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1170.7" y="1507.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.7" y="1518.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.08%)</title><rect x="1170.7" y="1491.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.7" y="1502.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.08%)</title><rect x="1170.7" y="1475.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.7" y="1486.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.08%)</title><rect x="1171.7" y="1571.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.7" y="1582.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1171.7" y="1555.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.7" y="1566.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1171.7" y="1539.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1174.7" y="1550.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.08%)</title><rect x="1171.7" y="1523.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.7" y="1534.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1172.6" y="1667.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.6" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1172.6" y="1651.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.6" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1172.6" y="1635.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.6" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1172.6" y="1619.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.6" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1172.6" y="1603.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.6" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1172.6" y="1587.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.6" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1172.6" y="1571.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.6" y="1582.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1172.6" y="1555.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.6" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1172.6" y="1539.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.6" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1172.6" y="1523.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.6" y="1534.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1172.6" y="1507.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.6" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1172.6" y="1491.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.6" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1172.6" y="1475.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1175.6" y="1486.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1172.6" y="1459.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.6" y="1470.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1172.6" y="1443.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.6" y="1454.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1172.6" y="1427.0" width="2.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.6" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1172.6" y="1411.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1175.6" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1172.6" y="1395.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.6" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1172.6" y="1379.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.6" y="1390.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1172.6" y="1363.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.6" y="1374.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1172.6" y="1347.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.6" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1172.6" y="1331.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.6" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1172.6" y="1315.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.6" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1172.6" y="1299.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.6" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1172.6" y="1283.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.6" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1172.6" y="1267.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.6" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1172.6" y="1251.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.6" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1172.6" y="1235.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.6" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1172.6" y="1219.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.6" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1172.6" y="1203.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.6" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1172.6" y="1187.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.6" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1172.6" y="1171.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.6" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1172.6" y="1155.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.6" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1172.6" y="1139.0" width="2.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.6" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1172.6" y="1123.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.6" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1172.6" y="1107.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.6" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1172.6" y="1091.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.6" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1172.6" y="1075.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.6" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1172.6" y="1059.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.6" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1172.6" y="1043.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.6" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1172.6" y="1027.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.6" y="1038.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.08%)</title><rect x="1172.6" y="1011.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.6" y="1022.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.08%)</title><rect x="1172.6" y="995.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.6" y="1006.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.08%)</title><rect x="1172.6" y="979.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.6" y="990.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1172.6" y="963.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.6" y="974.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1172.6" y="947.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.6" y="958.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.08%)</title><rect x="1172.6" y="931.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.6" y="942.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.08%)</title><rect x="1172.6" y="915.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.08%)</title><rect x="1173.6" y="1059.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.6" y="1070.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.08%)</title><rect x="1173.6" y="1043.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.6" y="1054.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.08%)</title><rect x="1173.6" y="1027.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.6" y="1038.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.08%)</title><rect x="1173.6" y="1011.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.6" y="1022.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.08%)</title><rect x="1173.6" y="995.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.6" y="1006.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.08%)</title><rect x="1173.6" y="979.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.6" y="990.0"></text>
</g>
<g>
<title>IdealKit::if_then(Node*, BoolTest::mask, Node*, float, float, bool) (1 samples, 0.08%)</title><rect x="1173.6" y="963.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.6" y="974.0"></text>
</g>
<g>
<title>IdealKit::copy_cvstate() (1 samples, 0.08%)</title><rect x="1173.6" y="947.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.6" y="958.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.08%)</title><rect x="1173.6" y="931.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.6" y="942.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.08%)</title><rect x="1173.6" y="915.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.08%)</title><rect x="1174.6" y="1683.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.6" y="1694.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.08%)</title><rect x="1174.6" y="1667.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.6" y="1678.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.08%)</title><rect x="1174.6" y="1651.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.6" y="1662.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.08%)</title><rect x="1174.6" y="1635.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.6" y="1646.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.08%)</title><rect x="1174.6" y="1619.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.6" y="1630.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1175.5" y="1763.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.5" y="1774.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1175.5" y="1747.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.5" y="1758.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1175.5" y="1731.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.5" y="1742.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1175.5" y="1715.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.5" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1175.5" y="1699.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.5" y="1710.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1175.5" y="1683.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.5" y="1694.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1175.5" y="1667.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.5" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1175.5" y="1651.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.5" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1175.5" y="1635.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.5" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1175.5" y="1619.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.5" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1175.5" y="1603.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.5" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1175.5" y="1587.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.5" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1175.5" y="1571.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.5" y="1582.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1175.5" y="1555.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.5" y="1566.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1175.5" y="1539.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.5" y="1550.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1175.5" y="1523.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.5" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1175.5" y="1507.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1178.5" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1175.5" y="1491.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.5" y="1502.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1175.5" y="1475.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1178.5" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1175.5" y="1459.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.5" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1175.5" y="1443.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.5" y="1454.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1175.5" y="1427.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.5" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1175.5" y="1411.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.5" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1175.5" y="1395.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.5" y="1406.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1175.5" y="1379.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.5" y="1390.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1175.5" y="1363.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.5" y="1374.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1175.5" y="1347.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.5" y="1358.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1175.5" y="1331.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.5" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1175.5" y="1315.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1178.5" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1175.5" y="1299.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.5" y="1310.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1175.5" y="1283.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.5" y="1294.0"></text>
</g>
<g>
<title>ciMethod::find_monomorphic_target(ciInstanceKlass*, ciInstanceKlass*, ciInstanceKlass*, bool) (1 samples, 0.08%)</title><rect x="1175.5" y="1267.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.5" y="1278.0"></text>
</g>
<g>
<title>ciMethod::resolve_invoke(ciKlass*, ciKlass*, bool) (1 samples, 0.08%)</title><rect x="1175.5" y="1251.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.5" y="1262.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.08%)</title><rect x="1175.5" y="1235.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.5" y="1246.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.08%)</title><rect x="1175.5" y="1219.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.5" y="1230.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1175.5" y="1203.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1178.5" y="1214.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.08%)</title><rect x="1175.5" y="1187.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.5" y="1198.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.08%)</title><rect x="1175.5" y="1171.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.5" y="1182.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.08%)</title><rect x="1175.5" y="1155.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.5" y="1166.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.08%)</title><rect x="1175.5" y="1139.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1178.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1175.5" y="1123.0" width="1.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1178.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1175.5" y="1107.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1178.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1175.5" y="1091.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1178.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1175.5" y="1075.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1178.5" y="1086.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.41%)</title><rect x="1176.5" y="1859.0" width="4.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.5" y="1870.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1176.5" y="1843.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.5" y="1854.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1176.5" y="1827.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.5" y="1838.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1176.5" y="1811.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.5" y="1822.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1176.5" y="1795.0" width="1.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1179.5" y="1806.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1176.5" y="1779.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.5" y="1790.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1176.5" y="1763.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.5" y="1774.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.5" y="1747.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.5" y="1758.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1176.5" y="1731.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.5" y="1742.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1176.5" y="1715.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.5" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1176.5" y="1699.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.5" y="1710.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1176.5" y="1683.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.5" y="1694.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1176.5" y="1667.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.5" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.5" y="1651.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.5" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1176.5" y="1635.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.5" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1176.5" y="1619.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.5" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1176.5" y="1603.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.5" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1176.5" y="1587.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.5" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1176.5" y="1571.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.5" y="1582.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.5" y="1555.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.5" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.5" y="1539.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.5" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1176.5" y="1523.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.5" y="1534.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1176.5" y="1507.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.5" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1176.5" y="1491.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.5" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1176.5" y="1475.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.5" y="1486.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1176.5" y="1459.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.5" y="1470.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.5" y="1443.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.5" y="1454.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1176.5" y="1427.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.5" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1176.5" y="1411.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.5" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1176.5" y="1395.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.5" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1176.5" y="1379.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.5" y="1390.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1176.5" y="1363.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.5" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.5" y="1347.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.5" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1176.5" y="1331.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.5" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1176.5" y="1315.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.5" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1176.5" y="1299.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.5" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1176.5" y="1283.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.5" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1176.5" y="1267.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.5" y="1278.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.5" y="1251.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.5" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.5" y="1235.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.5" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1176.5" y="1219.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1176.5" y="1203.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1176.5" y="1187.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1176.5" y="1171.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.5" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1176.5" y="1155.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.5" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.5" y="1139.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.5" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1176.5" y="1123.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.5" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1176.5" y="1107.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.5" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1176.5" y="1091.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.5" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1176.5" y="1075.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.5" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1176.5" y="1059.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.5" y="1070.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.08%)</title><rect x="1176.5" y="1043.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.5" y="1054.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.08%)</title><rect x="1176.5" y="1027.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.5" y="1038.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.08%)</title><rect x="1176.5" y="1011.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.5" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.08%)</title><rect x="1176.5" y="995.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.5" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.08%)</title><rect x="1176.5" y="979.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.5" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1176.5" y="963.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.5" y="974.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1176.5" y="947.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.5" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1176.5" y="931.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.5" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1176.5" y="915.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.5" y="926.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.08%)</title><rect x="1176.5" y="899.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.5" y="910.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (1 samples, 0.08%)</title><rect x="1176.5" y="883.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.5" y="894.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.08%)</title><rect x="1176.5" y="867.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1179.5" y="878.0"></text>
</g>
<g>
<title>InstanceKlass::find_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.08%)</title><rect x="1176.5" y="851.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.5" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::find_local_field(Symbol*, Symbol*, fieldDescriptor*) const (1 samples, 0.08%)</title><rect x="1176.5" y="835.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.5" y="846.0"></text>
</g>
<g>
<title>fieldDescriptor::reinitialize(InstanceKlass*, int) (1 samples, 0.08%)</title><rect x="1176.5" y="819.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.5" y="830.0"></text>
</g>
<g>
<title>constantPoolHandle::operator=(constantPoolHandle const&amp;) (1 samples, 0.08%)</title><rect x="1176.5" y="803.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.5" y="814.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1177.5" y="1747.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.5" y="1758.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1177.5" y="1731.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.5" y="1742.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1177.5" y="1715.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.5" y="1726.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1177.5" y="1699.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.5" y="1710.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1177.5" y="1683.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.5" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1177.5" y="1667.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.5" y="1678.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1177.5" y="1651.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.5" y="1662.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1177.5" y="1635.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.5" y="1646.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1177.5" y="1619.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.5" y="1630.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1177.5" y="1603.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.5" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1177.5" y="1587.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.5" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1177.5" y="1571.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.5" y="1582.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1177.5" y="1555.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.5" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1177.5" y="1539.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.5" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1177.5" y="1523.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.5" y="1534.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1177.5" y="1507.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.5" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1177.5" y="1491.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.5" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1177.5" y="1475.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.5" y="1486.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1177.5" y="1459.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.5" y="1470.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1177.5" y="1443.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.5" y="1454.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1177.5" y="1427.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.5" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1177.5" y="1411.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.5" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1177.5" y="1395.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.5" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1177.5" y="1379.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.5" y="1390.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1177.5" y="1363.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.5" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1177.5" y="1347.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.5" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1177.5" y="1331.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.5" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1177.5" y="1315.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.5" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1177.5" y="1299.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.5" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1177.5" y="1283.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.5" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1177.5" y="1267.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.5" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1177.5" y="1251.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.5" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1177.5" y="1235.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.5" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1177.5" y="1219.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.5" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1177.5" y="1203.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.5" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1177.5" y="1187.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.5" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1177.5" y="1171.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.5" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1177.5" y="1155.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.5" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1177.5" y="1139.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.5" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1177.5" y="1123.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.5" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1177.5" y="1107.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.5" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1177.5" y="1091.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.5" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1177.5" y="1075.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.5" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1177.5" y="1059.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.5" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1177.5" y="1043.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1177.5" y="1027.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1177.5" y="1011.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1177.5" y="995.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1177.5" y="979.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.5" y="990.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1177.5" y="963.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.5" y="974.0"></text>
</g>
<g>
<title>GraphKit::set_edges_for_java_call(CallJavaNode*, bool, bool) (1 samples, 0.08%)</title><rect x="1177.5" y="947.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.5" y="958.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.08%)</title><rect x="1177.5" y="931.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.5" y="942.0"></text>
</g>
<g>
<title>JVMState::clone_deep(Compile*) const (1 samples, 0.08%)</title><rect x="1177.5" y="915.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.5" y="926.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.25%)</title><rect x="1178.4" y="1843.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.4" y="1854.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.25%)</title><rect x="1178.4" y="1827.0" width="2.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.4" y="1838.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.25%)</title><rect x="1178.4" y="1811.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.4" y="1822.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.25%)</title><rect x="1178.4" y="1795.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.4" y="1806.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.25%)</title><rect x="1178.4" y="1779.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.4" y="1790.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.25%)</title><rect x="1178.4" y="1763.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.4" y="1774.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.25%)</title><rect x="1178.4" y="1747.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.4" y="1758.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1178.4" y="1731.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.4" y="1742.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1178.4" y="1715.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.4" y="1726.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1178.4" y="1699.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.4" y="1710.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1178.4" y="1683.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.4" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1178.4" y="1667.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.4" y="1678.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1178.4" y="1651.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.4" y="1662.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1178.4" y="1635.0" width="2.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.4" y="1646.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1178.4" y="1619.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.4" y="1630.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1178.4" y="1603.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.4" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1178.4" y="1587.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.4" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1178.4" y="1571.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.4" y="1582.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1178.4" y="1555.0" width="2.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.4" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1178.4" y="1539.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.4" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1178.4" y="1523.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.4" y="1534.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1178.4" y="1507.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.4" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1178.4" y="1491.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.4" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1178.4" y="1475.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.4" y="1486.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1178.4" y="1459.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.4" y="1470.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.08%)</title><rect x="1178.4" y="1443.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.4" y="1454.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.08%)</title><rect x="1178.4" y="1427.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.4" y="1438.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.08%)</title><rect x="1178.4" y="1411.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.4" y="1422.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1179.4" y="1539.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.4" y="1550.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1179.4" y="1523.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.4" y="1534.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1179.4" y="1507.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.4" y="1518.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1179.4" y="1491.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.4" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1179.4" y="1475.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.4" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1179.4" y="1459.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.4" y="1470.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1179.4" y="1443.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.4" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1179.4" y="1427.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.4" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1179.4" y="1411.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.4" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1179.4" y="1395.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.4" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1179.4" y="1379.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.4" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1179.4" y="1363.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.4" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1179.4" y="1347.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.4" y="1358.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1179.4" y="1331.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.4" y="1342.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1179.4" y="1315.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1182.4" y="1326.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1179.4" y="1299.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.4" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1179.4" y="1283.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.4" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1179.4" y="1267.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.4" y="1278.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1179.4" y="1251.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.4" y="1262.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1179.4" y="1235.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.4" y="1246.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1179.4" y="1219.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.4" y="1230.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1179.4" y="1203.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.4" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1179.4" y="1187.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.4" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1179.4" y="1171.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.4" y="1182.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1179.4" y="1155.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.4" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1179.4" y="1139.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.4" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1179.4" y="1123.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.4" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1179.4" y="1107.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1179.4" y="1091.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.4" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1179.4" y="1075.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.4" y="1086.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.08%)</title><rect x="1179.4" y="1059.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.4" y="1070.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.08%)</title><rect x="1179.4" y="1043.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.4" y="1054.0"></text>
</g>
<g>
<title>BoolNode::Value(PhaseGVN*) const (1 samples, 0.08%)</title><rect x="1179.4" y="1027.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.4" y="1038.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1180.4" y="1731.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.4" y="1742.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1180.4" y="1715.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.4" y="1726.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1180.4" y="1699.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.4" y="1710.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1180.4" y="1683.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.4" y="1694.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1180.4" y="1667.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.4" y="1678.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1180.4" y="1651.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.4" y="1662.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1180.4" y="1635.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.4" y="1646.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1180.4" y="1619.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.4" y="1630.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1180.4" y="1603.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.4" y="1614.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1180.4" y="1587.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.4" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1180.4" y="1571.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.4" y="1582.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1180.4" y="1555.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.4" y="1566.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1180.4" y="1539.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.4" y="1550.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1180.4" y="1523.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.4" y="1534.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1180.4" y="1507.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.4" y="1518.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1180.4" y="1491.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.4" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1180.4" y="1475.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.4" y="1486.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1180.4" y="1459.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.4" y="1470.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1180.4" y="1443.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.4" y="1454.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1180.4" y="1427.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.4" y="1438.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1180.4" y="1411.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.4" y="1422.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1180.4" y="1395.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.4" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1180.4" y="1379.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.4" y="1390.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1180.4" y="1363.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.4" y="1374.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1180.4" y="1347.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.4" y="1358.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.08%)</title><rect x="1180.4" y="1331.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.4" y="1342.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.08%)</title><rect x="1180.4" y="1315.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.4" y="1326.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.08%)</title><rect x="1180.4" y="1299.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.4" y="1310.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.08%)</title><rect x="1180.4" y="1283.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.4" y="1294.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.08%)</title><rect x="1180.4" y="1267.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.4" y="1278.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1180.4" y="1251.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.4" y="1262.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1180.4" y="1235.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.4" y="1246.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1180.4" y="1219.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.4" y="1230.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1180.4" y="1203.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.4" y="1214.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.08%)</title><rect x="1180.4" y="1187.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.4" y="1198.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.08%)</title><rect x="1180.4" y="1171.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.4" y="1182.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.08%)</title><rect x="1180.4" y="1155.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.4" y="1166.0"></text>
</g>
<g>
<title>ciField::initialize_from(fieldDescriptor*) (1 samples, 0.08%)</title><rect x="1180.4" y="1139.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.4" y="1150.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_in_package(char const*, int) (1 samples, 0.08%)</title><rect x="1180.4" y="1123.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.4" y="1134.0"></text>
</g>
<g>
<title>ciSymbol::byte_at(int) (1 samples, 0.08%)</title><rect x="1180.4" y="1107.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.4" y="1118.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (1 samples, 0.08%)</title><rect x="1181.3" y="1955.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.3" y="1966.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.08%)</title><rect x="1182.3" y="1955.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.3" y="1966.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.08%)</title><rect x="1182.3" y="1939.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.3" y="1950.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.16%)</title><rect x="1183.3" y="1987.0" width="1.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.3" y="1998.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (2 samples, 0.16%)</title><rect x="1183.3" y="1971.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.3" y="1982.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.16%)</title><rect x="1183.3" y="1955.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.3" y="1966.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.16%)</title><rect x="1183.3" y="1939.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.3" y="1950.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (1 samples, 0.08%)</title><rect x="1183.3" y="1923.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.3" y="1934.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.08%)</title><rect x="1183.3" y="1907.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.3" y="1918.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.08%)</title><rect x="1183.3" y="1891.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.3" y="1902.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.08%)</title><rect x="1183.3" y="1875.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.3" y="1886.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.08%)</title><rect x="1183.3" y="1859.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.3" y="1870.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.08%)</title><rect x="1183.3" y="1843.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.3" y="1854.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.08%)</title><rect x="1183.3" y="1827.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.3" y="1838.0"></text>
</g>
<g>
<title>FrameMap::FrameMap(ciMethod*, int, int) (1 samples, 0.08%)</title><rect x="1184.2" y="1923.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.2" y="1934.0"></text>
</g>
<g>
<title>FrameMap::java_calling_convention(GrowableArray&lt;BasicType&gt; const*, bool) (1 samples, 0.08%)</title><rect x="1184.2" y="1907.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.2" y="1918.0"></text>
</g>
<g>
<title>FrameMap::map_to_opr(BasicType, VMRegPair*, bool) (1 samples, 0.08%)</title><rect x="1184.2" y="1891.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.2" y="1902.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (1 samples, 0.08%)</title><rect x="1185.2" y="1987.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.2" y="1998.0"></text>
</g>
<g>
<title>ciObjectFactory::ciObjectFactory(Arena*, int) (1 samples, 0.08%)</title><rect x="1185.2" y="1971.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.2" y="1982.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.08%)</title><rect x="1186.1" y="2003.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.1" y="2014.0"></text>
</g>
<g>
<title>Method::backedge_count() (1 samples, 0.08%)</title><rect x="1186.1" y="1987.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.1" y="1998.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.08%)</title><rect x="1187.1" y="2019.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.1" y="2030.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.08%)</title><rect x="1187.1" y="2003.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.1" y="2014.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.08%)</title><rect x="1187.1" y="1987.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="1998.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 0.08%)</title><rect x="1187.1" y="1971.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1190.1" y="1982.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.08%)</title><rect x="1187.1" y="1955.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1190.1" y="1966.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.16%)</title><rect x="1188.1" y="2051.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.1" y="2062.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.08%)</title><rect x="1188.1" y="2035.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.1" y="2046.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.08%)</title><rect x="1188.1" y="2019.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.1" y="2030.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.08%)</title><rect x="1188.1" y="2003.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.1" y="2014.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.08%)</title><rect x="1188.1" y="1987.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1191.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1188.1" y="1971.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1191.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1188.1" y="1955.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1191.1" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1188.1" y="1939.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1191.1" y="1950.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.08%)</title><rect x="1189.0" y="2035.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.0" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.0" y="2019.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1192.0" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.0" y="2003.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1192.0" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.0" y="1987.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1192.0" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.0" y="1971.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1192.0" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.0" y="1955.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1192.0" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.0" y="1939.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1192.0" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.0" y="1923.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1192.0" y="1934.0"></text>
</g>
</g>
</svg>
