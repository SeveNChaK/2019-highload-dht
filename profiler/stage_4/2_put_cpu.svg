<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2166" onload="init(evt)" viewBox="0 0 1200 2166" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="2149"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="2149"> </text>
<g id="frames">
<g>
<title>all (1,282 samples, 100.00%)</title><rect x="10.0" y="2115.0" width="1180.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="2126.0">all</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (6 samples, 0.47%)</title><rect x="10.0" y="2099.0" width="5.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="13.0" y="2110.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.08%)</title><rect x="10.0" y="2083.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="2094.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.08%)</title><rect x="10.9" y="2083.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.9" y="2094.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.08%)</title><rect x="10.9" y="2067.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="13.9" y="2078.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.08%)</title><rect x="10.9" y="2051.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="13.9" y="2062.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.31%)</title><rect x="11.8" y="2083.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="14.8" y="2094.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.31%)</title><rect x="11.8" y="2067.0" width="3.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.8" y="2078.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned long, Thread*) (1 samples, 0.08%)</title><rect x="11.8" y="2051.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.8" y="2062.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.23%)</title><rect x="12.8" y="2051.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="15.8" y="2062.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_outside_tlab(Klass*, HeapWord*, unsigned long, Thread*) (1 samples, 0.08%)</title><rect x="12.8" y="2035.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.8" y="2046.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.08%)</title><rect x="13.7" y="2035.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="16.7" y="2046.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.08%)</title><rect x="13.7" y="2019.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="16.7" y="2030.0"></text>
</g>
<g>
<title>__memset_erms (1 samples, 0.08%)</title><rect x="14.6" y="2035.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="17.6" y="2046.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (3 samples, 0.23%)</title><rect x="15.5" y="2099.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="18.5" y="2110.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.23%)</title><rect x="15.5" y="2083.0" width="2.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.5" y="2094.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.23%)</title><rect x="15.5" y="2067.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="18.5" y="2078.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.23%)</title><rect x="15.5" y="2051.0" width="2.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="18.5" y="2062.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.08%)</title><rect x="15.5" y="2035.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="18.5" y="2046.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.08%)</title><rect x="16.4" y="2035.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="19.4" y="2046.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.08%)</title><rect x="16.4" y="2019.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="19.4" y="2030.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.08%)</title><rect x="16.4" y="2003.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="19.4" y="2014.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.08%)</title><rect x="16.4" y="1987.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="19.4" y="1998.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.08%)</title><rect x="17.4" y="2035.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.4" y="2046.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.16%)</title><rect x="18.3" y="2099.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="21.3" y="2110.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.16%)</title><rect x="18.3" y="2083.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="21.3" y="2094.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.08%)</title><rect x="18.3" y="2067.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="21.3" y="2078.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.08%)</title><rect x="18.3" y="2051.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="21.3" y="2062.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.08%)</title><rect x="18.3" y="2035.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="21.3" y="2046.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.08%)</title><rect x="18.3" y="2019.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="21.3" y="2030.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.08%)</title><rect x="19.2" y="2067.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="22.2" y="2078.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.08%)</title><rect x="20.1" y="2099.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="23.1" y="2110.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.08%)</title><rect x="20.1" y="2083.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="23.1" y="2094.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.08%)</title><rect x="20.1" y="2067.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="23.1" y="2078.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.08%)</title><rect x="20.1" y="2051.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="23.1" y="2062.0"></text>
</g>
<g>
<title>CompileBroker::compile_method(methodHandle const&amp;, int, int, methodHandle const&amp;, int, CompileTask::CompileReason, Thread*) (1 samples, 0.08%)</title><rect x="20.1" y="2035.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="23.1" y="2046.0"></text>
</g>
<g>
<title>CompileTask::allocate() (1 samples, 0.08%)</title><rect x="20.1" y="2019.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="23.1" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="2003.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="23.1" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1987.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="23.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1971.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="23.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1955.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="23.1" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1939.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="23.1" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1923.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="23.1" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1907.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="23.1" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1891.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="23.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1875.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="23.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1859.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="23.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1843.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="23.1" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1827.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="23.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1811.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="23.1" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1795.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="23.1" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1779.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="23.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1763.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="23.1" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="20.1" y="1747.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="23.1" y="1758.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.23%)</title><rect x="21.0" y="2099.0" width="2.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="24.0" y="2110.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.23%)</title><rect x="21.0" y="2083.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="24.0" y="2094.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.08%)</title><rect x="21.0" y="2067.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="24.0" y="2078.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.08%)</title><rect x="21.0" y="2051.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="24.0" y="2062.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (2 samples, 0.16%)</title><rect x="22.0" y="2067.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="25.0" y="2078.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.16%)</title><rect x="22.0" y="2051.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="25.0" y="2062.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (2 samples, 0.16%)</title><rect x="22.0" y="2035.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="25.0" y="2046.0"></text>
</g>
<g>
<title>[not_walkable] (2 samples, 0.16%)</title><rect x="23.8" y="2099.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="26.8" y="2110.0"></text>
</g>
<g>
<title>[not_walkable_Java] (14 samples, 1.09%)</title><rect x="25.6" y="2099.0" width="12.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="28.6" y="2110.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.08%)</title><rect x="26.6" y="2083.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="29.6" y="2094.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (1 samples, 0.08%)</title><rect x="27.5" y="2083.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="30.5" y="2094.0"></text>
</g>
<g>
<title>Method::get_c2i_entry() (4 samples, 0.31%)</title><rect x="28.4" y="2083.0" width="3.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="31.4" y="2094.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.08%)</title><rect x="32.1" y="2083.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="35.1" y="2094.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.08%)</title><rect x="32.1" y="2067.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="35.1" y="2078.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.08%)</title><rect x="32.1" y="2051.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="35.1" y="2062.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.08%)</title><rect x="32.1" y="2035.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="35.1" y="2046.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.08%)</title><rect x="32.1" y="2019.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="35.1" y="2030.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (6 samples, 0.47%)</title><rect x="33.0" y="2083.0" width="5.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="36.0" y="2094.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.23%)</title><rect x="33.9" y="2067.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="36.9" y="2078.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.16%)</title><rect x="36.7" y="2067.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="39.7" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="38.5" y="2099.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="41.5" y="2110.0"></text>
</g>
<g>
<title>__GI___open64 (2 samples, 0.16%)</title><rect x="38.5" y="2083.0" width="1.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="41.5" y="2094.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="38.5" y="2067.0" width="1.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="41.5" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="38.5" y="2051.0" width="1.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="41.5" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="38.5" y="2035.0" width="1.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="41.5" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="38.5" y="2019.0" width="1.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="41.5" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="38.5" y="2003.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="41.5" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="39.5" y="1987.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="42.5" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="39.5" y="1971.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="42.5" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="39.5" y="1955.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="42.5" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="39.5" y="1939.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="42.5" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="39.5" y="1923.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="42.5" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="39.5" y="1907.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="42.5" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="39.5" y="1891.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="42.5" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="39.5" y="1875.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="42.5" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="39.5" y="1859.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="42.5" y="1870.0"></text>
</g>
<g>
<title>[unknown_Java] (12 samples, 0.94%)</title><rect x="40.4" y="2099.0" width="11.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="43.4" y="2110.0"></text>
</g>
<g>
<title>SharedRuntime::fixup_callers_callsite(Method*, unsigned char*) (5 samples, 0.39%)</title><rect x="45.9" y="2083.0" width="4.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="48.9" y="2094.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.16%)</title><rect x="46.8" y="2067.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="49.8" y="2078.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.16%)</title><rect x="46.8" y="2051.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="49.8" y="2062.0"></text>
</g>
<g>
<title>Method::from_compiled_entry_no_trampoline() const (1 samples, 0.08%)</title><rect x="48.7" y="2067.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="51.7" y="2078.0"></text>
</g>
<g>
<title>Method::get_c2i_entry() (1 samples, 0.08%)</title><rect x="49.6" y="2067.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="52.6" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="50.5" y="2083.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="53.5" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="50.5" y="2067.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="53.5" y="2078.0"></text>
</g>
<g>
<title>SharedRuntime::OSR_migration_end(long*) (1 samples, 0.08%)</title><rect x="50.5" y="2051.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="53.5" y="2062.0"></text>
</g>
<g>
<title>__GI___vsnprintf_chk (3 samples, 0.23%)</title><rect x="51.4" y="2099.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="54.4" y="2110.0"></text>
</g>
<g>
<title>__strchrnul_sse2 (2 samples, 0.16%)</title><rect x="51.4" y="2083.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="54.4" y="2094.0"></text>
</g>
<g>
<title>vfprintf (1 samples, 0.08%)</title><rect x="53.3" y="2083.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="56.3" y="2094.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.16%)</title><rect x="54.2" y="2099.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="57.2" y="2110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="54.2" y="2083.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="57.2" y="2094.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="54.2" y="2067.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="57.2" y="2078.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="54.2" y="2051.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="57.2" y="2062.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="54.2" y="2035.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="57.2" y="2046.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="54.2" y="2019.0" width="1.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="57.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="54.2" y="2003.0" width="1.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="57.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="54.2" y="1987.0" width="1.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="57.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="54.2" y="1971.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="57.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="54.2" y="1955.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="57.2" y="1966.0"></text>
</g>
<g>
<title>java/lang/Thread.run (647 samples, 50.47%)</title><rect x="56.0" y="2099.0" width="595.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="59.0" y="2110.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (647 samples, 50.47%)</title><rect x="56.0" y="2083.0" width="595.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="59.0" y="2094.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (647 samples, 50.47%)</title><rect x="56.0" y="2067.0" width="595.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="59.0" y="2078.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (7 samples, 0.55%)</title><rect x="57.9" y="2051.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="60.9" y="2062.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.55%)</title><rect x="57.9" y="2035.0" width="6.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="60.9" y="2046.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.55%)</title><rect x="57.9" y="2019.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.9" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.16%)</title><rect x="62.5" y="2003.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="65.5" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (143 samples, 11.15%)</title><rect x="64.3" y="2051.0" width="131.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.3" y="2062.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (142 samples, 11.08%)</title><rect x="65.2" y="2035.0" width="130.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.2" y="2046.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (123 samples, 9.59%)</title><rect x="65.2" y="2019.0" width="113.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.2" y="2030.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.16%)</title><rect x="68.9" y="2003.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.9" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (14 samples, 1.09%)</title><rect x="70.7" y="2003.0" width="12.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.7" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 1.09%)</title><rect x="70.7" y="1987.0" width="12.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.7" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.47%)</title><rect x="77.2" y="1971.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.2" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.47%)</title><rect x="77.2" y="1955.0" width="5.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.2" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.23%)</title><rect x="78.1" y="1939.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.1" y="1950.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.16%)</title><rect x="80.9" y="1939.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="83.9" y="1950.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.08%)</title><rect x="80.9" y="1923.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="83.9" y="1934.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.08%)</title><rect x="80.9" y="1907.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="83.9" y="1918.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.08%)</title><rect x="81.8" y="1923.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="84.8" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="81.8" y="1907.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="84.8" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="81.8" y="1891.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="84.8" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="81.8" y="1875.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="84.8" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="81.8" y="1859.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="84.8" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="81.8" y="1843.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="84.8" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="81.8" y="1827.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="84.8" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="81.8" y="1811.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="84.8" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="81.8" y="1795.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="84.8" y="1806.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.08%)</title><rect x="82.7" y="1971.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="85.7" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (103 samples, 8.03%)</title><rect x="83.6" y="2003.0" width="94.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="86.6" y="2014.0">java/util/c..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (103 samples, 8.03%)</title><rect x="83.6" y="1987.0" width="94.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.6" y="1998.0">jdk/interna..</text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.08%)</title><rect x="88.2" y="1971.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="91.2" y="1982.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.08%)</title><rect x="89.2" y="1971.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="92.2" y="1982.0"></text>
</g>
<g>
<title>Unsafe_Park (48 samples, 3.74%)</title><rect x="90.1" y="1971.0" width="44.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="93.1" y="1982.0">Unsa..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.08%)</title><rect x="93.8" y="1955.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="96.8" y="1966.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.08%)</title><rect x="94.7" y="1955.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="97.7" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="94.7" y="1939.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="97.7" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="94.7" y="1923.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="97.7" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="94.7" y="1907.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="97.7" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="94.7" y="1891.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="97.7" y="1902.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.08%)</title><rect x="95.6" y="1955.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="98.6" y="1966.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.08%)</title><rect x="96.5" y="1955.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="99.5" y="1966.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (19 samples, 1.48%)</title><rect x="97.4" y="1955.0" width="17.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="100.4" y="1966.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.39%)</title><rect x="107.6" y="1939.0" width="4.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="110.6" y="1950.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.16%)</title><rect x="112.2" y="1939.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="115.2" y="1950.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.08%)</title><rect x="114.0" y="1939.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="117.0" y="1950.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.16%)</title><rect x="114.9" y="1955.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="117.9" y="1966.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.08%)</title><rect x="116.8" y="1955.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="119.8" y="1966.0"></text>
</g>
<g>
<title>__lll_unlock_wake (13 samples, 1.01%)</title><rect x="117.7" y="1955.0" width="12.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="120.7" y="1966.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.94%)</title><rect x="118.6" y="1939.0" width="11.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="121.6" y="1950.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.94%)</title><rect x="118.6" y="1923.0" width="11.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="121.6" y="1934.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.78%)</title><rect x="120.5" y="1907.0" width="9.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="123.5" y="1918.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.78%)</title><rect x="120.5" y="1891.0" width="9.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="123.5" y="1902.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.70%)</title><rect x="121.4" y="1875.0" width="8.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="124.4" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="128.7" y="1859.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="131.7" y="1870.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.08%)</title><rect x="129.7" y="1955.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="132.7" y="1966.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.08%)</title><rect x="130.6" y="1955.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="133.6" y="1966.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.23%)</title><rect x="131.5" y="1955.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="134.5" y="1966.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 3.74%)</title><rect x="134.3" y="1971.0" width="44.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="137.3" y="1982.0">[unk..</text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.08%)</title><rect x="134.3" y="1955.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="137.3" y="1966.0"></text>
</g>
<g>
<title>__pthread_cond_wait (41 samples, 3.20%)</title><rect x="135.2" y="1955.0" width="37.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="138.2" y="1966.0">__p..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.65%)</title><rect x="141.6" y="1939.0" width="31.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="144.6" y="1950.0">[u..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.65%)</title><rect x="141.6" y="1923.0" width="31.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="144.6" y="1934.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.57%)</title><rect x="142.5" y="1907.0" width="30.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="145.5" y="1918.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.57%)</title><rect x="142.5" y="1891.0" width="30.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="145.5" y="1902.0">[u..</text>
</g>
<g>
<title>[unknown] (31 samples, 2.42%)</title><rect x="144.4" y="1875.0" width="28.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="147.4" y="1886.0">[u..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.34%)</title><rect x="145.3" y="1859.0" width="27.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="148.3" y="1870.0">[..</text>
</g>
<g>
<title>[unknown] (23 samples, 1.79%)</title><rect x="151.7" y="1843.0" width="21.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="154.7" y="1854.0">[..</text>
</g>
<g>
<title>[unknown] (21 samples, 1.64%)</title><rect x="153.6" y="1827.0" width="19.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="156.6" y="1838.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.56%)</title><rect x="154.5" y="1811.0" width="18.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="157.5" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="172.0" y="1795.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="175.0" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="172.0" y="1779.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="175.0" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="172.0" y="1763.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="175.0" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="172.0" y="1747.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="175.0" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="172.0" y="1731.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="175.0" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="172.0" y="1715.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="175.0" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="172.0" y="1699.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="175.0" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="172.0" y="1683.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="175.0" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="172.0" y="1667.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="175.0" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="172.0" y="1651.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="175.0" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="172.0" y="1635.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="175.0" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="172.0" y="1619.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="175.0" y="1630.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.23%)</title><rect x="172.9" y="1955.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="175.9" y="1966.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.08%)</title><rect x="175.7" y="1955.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="178.7" y="1966.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.08%)</title><rect x="176.6" y="1955.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="179.6" y="1966.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.08%)</title><rect x="177.5" y="1955.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="180.5" y="1966.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.16%)</title><rect x="178.4" y="2019.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.4" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.16%)</title><rect x="180.3" y="2019.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.3" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.16%)</title><rect x="180.3" y="2003.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.3" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.16%)</title><rect x="180.3" y="1987.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="183.3" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (1 samples, 0.08%)</title><rect x="181.2" y="1971.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.2" y="1982.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.08%)</title><rect x="181.2" y="1955.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="184.2" y="1966.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.08%)</title><rect x="181.2" y="1939.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.2" y="1950.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.08%)</title><rect x="181.2" y="1923.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="184.2" y="1934.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.08%)</title><rect x="181.2" y="1907.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="184.2" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 1.17%)</title><rect x="182.1" y="2019.0" width="13.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="185.1" y="2030.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 1.17%)</title><rect x="182.1" y="2003.0" width="13.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.1" y="2014.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 1.17%)</title><rect x="182.1" y="1987.0" width="13.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="185.1" y="1998.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 1.17%)</title><rect x="182.1" y="1971.0" width="13.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.1" y="1982.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.55%)</title><rect x="189.5" y="1955.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="192.5" y="1966.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.16%)</title><rect x="189.5" y="1939.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="192.5" y="1950.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.08%)</title><rect x="189.5" y="1923.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="192.5" y="1934.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.08%)</title><rect x="190.4" y="1923.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="193.4" y="1934.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.39%)</title><rect x="191.3" y="1939.0" width="4.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="194.3" y="1950.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="191.3" y="1923.0" width="4.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="194.3" y="1934.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="191.3" y="1907.0" width="4.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="194.3" y="1918.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="191.3" y="1891.0" width="4.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="194.3" y="1902.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="191.3" y="1875.0" width="4.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="194.3" y="1886.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="191.3" y="1859.0" width="4.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="194.3" y="1870.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="192.2" y="1843.0" width="3.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="195.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="192.2" y="1827.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="195.2" y="1838.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="192.2" y="1811.0" width="3.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="195.2" y="1822.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$62/2121189026.run (495 samples, 38.61%)</title><rect x="195.9" y="2051.0" width="455.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="198.9" y="2062.0">ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$62/21211890..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.lambda$executeAsync$4 (495 samples, 38.61%)</title><rect x="195.9" y="2035.0" width="455.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.9" y="2046.0">ru/mail/polis/service/alex/AsyncServiceImpl.lambda$executeAsync$4</text>
</g>
<g>
<title>itable stub (7 samples, 0.55%)</title><rect x="197.8" y="2019.0" width="6.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="200.8" y="2030.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (236 samples, 18.41%)</title><rect x="204.2" y="2019.0" width="217.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.2" y="2030.0">one/nio/http/HttpSession.send..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="205.1" y="2003.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="208.1" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="205.1" y="1987.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="208.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="205.1" y="1971.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="208.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="205.1" y="1955.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="208.1" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="205.1" y="1939.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="208.1" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="205.1" y="1923.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="208.1" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="205.1" y="1907.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="208.1" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="205.1" y="1891.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="208.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="205.1" y="1875.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="208.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="205.1" y="1859.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="208.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="205.1" y="1843.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="208.1" y="1854.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (230 samples, 17.94%)</title><rect x="206.1" y="2003.0" width="211.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="209.1" y="2014.0">one/nio/http/HttpSession.wri..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.31%)</title><rect x="206.1" y="1987.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.1" y="1998.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.23%)</title><rect x="207.0" y="1971.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="210.0" y="1982.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.23%)</title><rect x="207.0" y="1955.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="210.0" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.23%)</title><rect x="207.0" y="1939.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="210.0" y="1950.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (226 samples, 17.63%)</title><rect x="209.7" y="1987.0" width="208.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="212.7" y="1998.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (225 samples, 17.55%)</title><rect x="210.7" y="1971.0" width="207.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="213.7" y="1982.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (225 samples, 17.55%)</title><rect x="210.7" y="1955.0" width="207.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="213.7" y="1966.0">one/nio/net/Session$ArrayQu..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (225 samples, 17.55%)</title><rect x="210.7" y="1939.0" width="207.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="213.7" y="1950.0">one/nio/net/NativeSocket.wr..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.08%)</title><rect x="212.5" y="1923.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="215.5" y="1934.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="213.4" y="1923.0" width="5.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="216.4" y="1934.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="213.4" y="1907.0" width="5.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="216.4" y="1918.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.47%)</title><rect x="213.4" y="1891.0" width="5.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="216.4" y="1902.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.08%)</title><rect x="214.3" y="1875.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="217.3" y="1886.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.23%)</title><rect x="215.3" y="1875.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="218.3" y="1886.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.08%)</title><rect x="216.2" y="1859.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="219.2" y="1870.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.08%)</title><rect x="217.1" y="1859.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="220.1" y="1870.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.08%)</title><rect x="217.1" y="1843.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="220.1" y="1854.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.08%)</title><rect x="218.0" y="1875.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="221.0" y="1886.0"></text>
</g>
<g>
<title>__send (216 samples, 16.85%)</title><rect x="218.9" y="1923.0" width="198.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="221.9" y="1934.0">__send</text>
</g>
<g>
<title>[unknown] (215 samples, 16.77%)</title><rect x="219.9" y="1907.0" width="197.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="222.9" y="1918.0">[unknown]</text>
</g>
<g>
<title>[unknown] (215 samples, 16.77%)</title><rect x="219.9" y="1891.0" width="197.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="222.9" y="1902.0">[unknown]</text>
</g>
<g>
<title>[unknown] (215 samples, 16.77%)</title><rect x="219.9" y="1875.0" width="197.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="222.9" y="1886.0">[unknown]</text>
</g>
<g>
<title>[unknown] (215 samples, 16.77%)</title><rect x="219.9" y="1859.0" width="197.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="222.9" y="1870.0">[unknown]</text>
</g>
<g>
<title>[unknown] (212 samples, 16.54%)</title><rect x="222.6" y="1843.0" width="195.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="225.6" y="1854.0">[unknown]</text>
</g>
<g>
<title>[unknown] (212 samples, 16.54%)</title><rect x="222.6" y="1827.0" width="195.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="225.6" y="1838.0">[unknown]</text>
</g>
<g>
<title>[unknown] (211 samples, 16.46%)</title><rect x="223.5" y="1811.0" width="194.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="226.5" y="1822.0">[unknown]</text>
</g>
<g>
<title>[unknown] (210 samples, 16.38%)</title><rect x="224.5" y="1795.0" width="193.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="227.5" y="1806.0">[unknown]</text>
</g>
<g>
<title>[unknown] (203 samples, 15.83%)</title><rect x="230.9" y="1779.0" width="186.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="233.9" y="1790.0">[unknown]</text>
</g>
<g>
<title>[unknown] (192 samples, 14.98%)</title><rect x="241.0" y="1763.0" width="176.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="244.0" y="1774.0">[unknown]</text>
</g>
<g>
<title>[unknown] (187 samples, 14.59%)</title><rect x="245.6" y="1747.0" width="172.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="248.6" y="1758.0">[unknown]</text>
</g>
<g>
<title>[unknown] (177 samples, 13.81%)</title><rect x="254.8" y="1731.0" width="163.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="257.8" y="1742.0">[unknown]</text>
</g>
<g>
<title>[unknown] (166 samples, 12.95%)</title><rect x="265.0" y="1715.0" width="152.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="268.0" y="1726.0">[unknown]</text>
</g>
<g>
<title>[unknown] (162 samples, 12.64%)</title><rect x="268.6" y="1699.0" width="149.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="271.6" y="1710.0">[unknown]</text>
</g>
<g>
<title>[unknown] (157 samples, 12.25%)</title><rect x="273.2" y="1683.0" width="144.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="276.2" y="1694.0">[unknown]</text>
</g>
<g>
<title>[unknown] (157 samples, 12.25%)</title><rect x="273.2" y="1667.0" width="144.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="276.2" y="1678.0">[unknown]</text>
</g>
<g>
<title>[unknown] (151 samples, 11.78%)</title><rect x="278.8" y="1651.0" width="139.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="281.8" y="1662.0">[unknown]</text>
</g>
<g>
<title>[unknown] (142 samples, 11.08%)</title><rect x="287.1" y="1635.0" width="130.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="290.1" y="1646.0">[unknown]</text>
</g>
<g>
<title>[unknown] (135 samples, 10.53%)</title><rect x="293.5" y="1619.0" width="124.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="296.5" y="1630.0">[unknown]</text>
</g>
<g>
<title>[unknown] (130 samples, 10.14%)</title><rect x="298.1" y="1603.0" width="119.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="301.1" y="1614.0">[unknown]</text>
</g>
<g>
<title>[unknown] (115 samples, 8.97%)</title><rect x="311.9" y="1587.0" width="105.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="314.9" y="1598.0">[unknown]</text>
</g>
<g>
<title>[unknown] (107 samples, 8.35%)</title><rect x="319.3" y="1571.0" width="98.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="322.3" y="1582.0">[unknown]</text>
</g>
<g>
<title>[unknown] (96 samples, 7.49%)</title><rect x="329.4" y="1555.0" width="88.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="332.4" y="1566.0">[unknown]</text>
</g>
<g>
<title>[unknown] (89 samples, 6.94%)</title><rect x="335.8" y="1539.0" width="82.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="338.8" y="1550.0">[unknown]</text>
</g>
<g>
<title>[unknown] (84 samples, 6.55%)</title><rect x="340.4" y="1523.0" width="77.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="343.4" y="1534.0">[unknown]</text>
</g>
<g>
<title>[unknown] (82 samples, 6.40%)</title><rect x="342.3" y="1507.0" width="75.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="345.3" y="1518.0">[unknown]</text>
</g>
<g>
<title>[unknown] (81 samples, 6.32%)</title><rect x="343.2" y="1491.0" width="74.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="346.2" y="1502.0">[unknown]</text>
</g>
<g>
<title>[unknown] (79 samples, 6.16%)</title><rect x="345.0" y="1475.0" width="72.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="348.0" y="1486.0">[unknown]</text>
</g>
<g>
<title>[unknown] (74 samples, 5.77%)</title><rect x="349.6" y="1459.0" width="68.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="352.6" y="1470.0">[unknown]</text>
</g>
<g>
<title>[unknown] (71 samples, 5.54%)</title><rect x="352.4" y="1443.0" width="65.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="355.4" y="1454.0">[unknown]</text>
</g>
<g>
<title>[unknown] (71 samples, 5.54%)</title><rect x="352.4" y="1427.0" width="65.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="355.4" y="1438.0">[unknown]</text>
</g>
<g>
<title>[unknown] (70 samples, 5.46%)</title><rect x="353.3" y="1411.0" width="64.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="356.3" y="1422.0">[unknown]</text>
</g>
<g>
<title>[unknown] (68 samples, 5.30%)</title><rect x="355.2" y="1395.0" width="62.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="358.2" y="1406.0">[unkno..</text>
</g>
<g>
<title>[unknown] (65 samples, 5.07%)</title><rect x="357.9" y="1379.0" width="59.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="360.9" y="1390.0">[unkno..</text>
</g>
<g>
<title>[unknown] (61 samples, 4.76%)</title><rect x="361.6" y="1363.0" width="56.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="364.6" y="1374.0">[unkno..</text>
</g>
<g>
<title>[unknown] (49 samples, 3.82%)</title><rect x="372.7" y="1347.0" width="45.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="375.7" y="1358.0">[unk..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.57%)</title><rect x="387.4" y="1331.0" width="30.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="390.4" y="1342.0">[u..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.34%)</title><rect x="390.1" y="1315.0" width="27.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="393.1" y="1326.0">[..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.34%)</title><rect x="390.1" y="1299.0" width="27.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="393.1" y="1310.0">[..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="416.8" y="1283.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="419.8" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="416.8" y="1267.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="419.8" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.31%)</title><rect x="417.8" y="2003.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.8" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.31%)</title><rect x="417.8" y="1987.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.8" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.16%)</title><rect x="418.7" y="1971.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="421.7" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.08%)</title><rect x="420.5" y="1971.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="423.5" y="1982.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="420.5" y="1955.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="423.5" y="1966.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="420.5" y="1939.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.5" y="1950.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.08%)</title><rect x="420.5" y="1923.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.5" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$61/1284527574.action (200 samples, 15.60%)</title><rect x="421.4" y="2019.0" width="184.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.4" y="2030.0">ru/mail/polis/service/al..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.lambda$entity$0 (198 samples, 15.44%)</title><rect x="423.3" y="2003.0" width="182.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="426.3" y="2014.0">ru/mail/polis/service/al..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.proxy (198 samples, 15.44%)</title><rect x="423.3" y="1987.0" width="182.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="426.3" y="1998.0">ru/mail/polis/service/al..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (198 samples, 15.44%)</title><rect x="423.3" y="1971.0" width="182.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.3" y="1982.0">one/nio/http/HttpClient...</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (197 samples, 15.37%)</title><rect x="424.2" y="1955.0" width="181.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="427.2" y="1966.0">one/nio/http/HttpClient..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (60 samples, 4.68%)</title><rect x="427.9" y="1939.0" width="55.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.9" y="1950.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (57 samples, 4.45%)</title><rect x="430.6" y="1923.0" width="52.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="433.6" y="1934.0">one/n..</text>
</g>
<g>
<title>[unknown] (20 samples, 1.56%)</title><rect x="432.5" y="1907.0" width="18.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="435.5" y="1918.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.56%)</title><rect x="432.5" y="1891.0" width="18.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="435.5" y="1902.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 1.25%)</title><rect x="432.5" y="1875.0" width="14.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="435.5" y="1886.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.16%)</title><rect x="434.3" y="1859.0" width="1.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="437.3" y="1870.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="436.2" y="1859.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="439.2" y="1870.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.08%)</title><rect x="437.1" y="1859.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="440.1" y="1870.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.23%)</title><rect x="438.0" y="1859.0" width="2.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="441.0" y="1870.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="440.8" y="1859.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="443.8" y="1870.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.31%)</title><rect x="441.7" y="1859.0" width="3.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="444.7" y="1870.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.08%)</title><rect x="442.6" y="1843.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="445.6" y="1854.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.08%)</title><rect x="443.5" y="1843.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="446.5" y="1854.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.08%)</title><rect x="444.4" y="1843.0" width="1.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="447.4" y="1854.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.08%)</title><rect x="444.4" y="1827.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="447.4" y="1838.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.16%)</title><rect x="445.4" y="1859.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="448.4" y="1870.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.08%)</title><rect x="447.2" y="1875.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="450.2" y="1886.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.23%)</title><rect x="448.1" y="1875.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="451.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="450.0" y="1859.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="453.0" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="450.0" y="1843.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="453.0" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="450.0" y="1827.0" width="0.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="453.0" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="450.0" y="1811.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="453.0" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="450.0" y="1795.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="453.0" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="450.0" y="1779.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="453.0" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="450.0" y="1763.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="453.0" y="1774.0"></text>
</g>
<g>
<title>__GI___recv (34 samples, 2.65%)</title><rect x="450.9" y="1907.0" width="31.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="453.9" y="1918.0">__..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.65%)</title><rect x="450.9" y="1891.0" width="31.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="453.9" y="1902.0">[u..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.65%)</title><rect x="450.9" y="1875.0" width="31.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="453.9" y="1886.0">[u..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.65%)</title><rect x="450.9" y="1859.0" width="31.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="453.9" y="1870.0">[u..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.65%)</title><rect x="450.9" y="1843.0" width="31.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="453.9" y="1854.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.57%)</title><rect x="451.8" y="1827.0" width="30.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="454.8" y="1838.0">[u..</text>
</g>
<g>
<title>[unknown] (32 samples, 2.50%)</title><rect x="452.7" y="1811.0" width="29.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="455.7" y="1822.0">[u..</text>
</g>
<g>
<title>[unknown] (32 samples, 2.50%)</title><rect x="452.7" y="1795.0" width="29.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="455.7" y="1806.0">[u..</text>
</g>
<g>
<title>[unknown] (31 samples, 2.42%)</title><rect x="453.7" y="1779.0" width="28.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="456.7" y="1790.0">[u..</text>
</g>
<g>
<title>[unknown] (26 samples, 2.03%)</title><rect x="458.3" y="1763.0" width="23.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="461.3" y="1774.0">[..</text>
</g>
<g>
<title>[unknown] (23 samples, 1.79%)</title><rect x="461.0" y="1747.0" width="21.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="464.0" y="1758.0">[..</text>
</g>
<g>
<title>[unknown] (18 samples, 1.40%)</title><rect x="465.6" y="1731.0" width="16.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="468.6" y="1742.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 1.01%)</title><rect x="470.2" y="1715.0" width="12.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="473.2" y="1726.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="476.7" y="1699.0" width="5.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="479.7" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="481.3" y="1683.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="484.3" y="1694.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="481.3" y="1667.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="484.3" y="1678.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="481.3" y="1651.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="484.3" y="1662.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="481.3" y="1635.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="484.3" y="1646.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="481.3" y="1619.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="484.3" y="1630.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="481.3" y="1603.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="484.3" y="1614.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.08%)</title><rect x="482.2" y="1907.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="485.2" y="1918.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (15 samples, 1.17%)</title><rect x="483.1" y="1939.0" width="13.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="486.1" y="1950.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.31%)</title><rect x="484.0" y="1923.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.0" y="1934.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.31%)</title><rect x="484.0" y="1907.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="487.0" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.31%)</title><rect x="484.0" y="1891.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="487.0" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.08%)</title><rect x="485.9" y="1875.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.9" y="1886.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.08%)</title><rect x="486.8" y="1875.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="489.8" y="1886.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.08%)</title><rect x="487.7" y="1923.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="490.7" y="1934.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.08%)</title><rect x="487.7" y="1907.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="490.7" y="1918.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.31%)</title><rect x="488.6" y="1923.0" width="3.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="491.6" y="1934.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.31%)</title><rect x="488.6" y="1907.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="491.6" y="1918.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.31%)</title><rect x="488.6" y="1891.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="491.6" y="1902.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (3 samples, 0.23%)</title><rect x="492.3" y="1923.0" width="2.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="495.3" y="1934.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.16%)</title><rect x="493.2" y="1907.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.2" y="1918.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.16%)</title><rect x="493.2" y="1891.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.2" y="1902.0"></text>
</g>
<g>
<title>one/nio/http/Response.setBody (2 samples, 0.16%)</title><rect x="495.1" y="1923.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="498.1" y="1934.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (12 samples, 0.94%)</title><rect x="496.9" y="1939.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="499.9" y="1950.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 0.78%)</title><rect x="498.8" y="1923.0" width="9.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.8" y="1934.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.08%)</title><rect x="499.7" y="1907.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.7" y="1918.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.08%)</title><rect x="499.7" y="1891.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.7" y="1902.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.16%)</title><rect x="500.6" y="1907.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.6" y="1918.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.16%)</title><rect x="500.6" y="1891.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="503.6" y="1902.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.08%)</title><rect x="501.5" y="1875.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.5" y="1886.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (6 samples, 0.47%)</title><rect x="502.4" y="1907.0" width="5.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.4" y="1918.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (5 samples, 0.39%)</title><rect x="503.4" y="1891.0" width="4.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="506.4" y="1902.0"></text>
</g>
<g>
<title>java/lang/String.charAt (3 samples, 0.23%)</title><rect x="503.4" y="1875.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="506.4" y="1886.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.08%)</title><rect x="504.3" y="1859.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.3" y="1870.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.08%)</title><rect x="505.2" y="1859.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.2" y="1870.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.08%)</title><rect x="505.2" y="1843.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.2" y="1854.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.08%)</title><rect x="506.1" y="1875.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="509.1" y="1886.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.08%)</title><rect x="506.1" y="1859.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="509.1" y="1870.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="507.0" y="1875.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="510.0" y="1886.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (12 samples, 0.94%)</title><rect x="508.0" y="1939.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="511.0" y="1950.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.08%)</title><rect x="508.0" y="1923.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="511.0" y="1934.0"></text>
</g>
<g>
<title>__GI___setsockopt (10 samples, 0.78%)</title><rect x="508.9" y="1923.0" width="9.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="511.9" y="1934.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.78%)</title><rect x="508.9" y="1907.0" width="9.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="511.9" y="1918.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.78%)</title><rect x="508.9" y="1891.0" width="9.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="511.9" y="1902.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.78%)</title><rect x="508.9" y="1875.0" width="9.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="511.9" y="1886.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.78%)</title><rect x="508.9" y="1859.0" width="9.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="511.9" y="1870.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.78%)</title><rect x="508.9" y="1843.0" width="9.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="511.9" y="1854.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.47%)</title><rect x="512.6" y="1827.0" width="5.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="515.6" y="1838.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.31%)</title><rect x="514.4" y="1811.0" width="3.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="517.4" y="1822.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="515.3" y="1795.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="518.3" y="1806.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="516.2" y="1779.0" width="1.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="519.2" y="1790.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="516.2" y="1763.0" width="1.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="519.2" y="1774.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="518.1" y="1923.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="521.1" y="1934.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (93 samples, 7.25%)</title><rect x="519.0" y="1939.0" width="85.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.0" y="1950.0">one/nio/ne..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (6 samples, 0.47%)</title><rect x="519.0" y="1923.0" width="5.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="522.0" y="1934.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.16%)</title><rect x="519.0" y="1907.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="522.0" y="1918.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.08%)</title><rect x="520.8" y="1907.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="523.8" y="1918.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.08%)</title><rect x="521.8" y="1907.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="524.8" y="1918.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.08%)</title><rect x="521.8" y="1891.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="524.8" y="1902.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.16%)</title><rect x="522.7" y="1907.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="525.7" y="1918.0"></text>
</g>
<g>
<title>__send (87 samples, 6.79%)</title><rect x="524.5" y="1923.0" width="80.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="527.5" y="1934.0">__send</text>
</g>
<g>
<title>[unknown] (86 samples, 6.71%)</title><rect x="525.4" y="1907.0" width="79.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="528.4" y="1918.0">[unknown]</text>
</g>
<g>
<title>[unknown] (86 samples, 6.71%)</title><rect x="525.4" y="1891.0" width="79.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="528.4" y="1902.0">[unknown]</text>
</g>
<g>
<title>[unknown] (86 samples, 6.71%)</title><rect x="525.4" y="1875.0" width="79.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="528.4" y="1886.0">[unknown]</text>
</g>
<g>
<title>[unknown] (86 samples, 6.71%)</title><rect x="525.4" y="1859.0" width="79.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="528.4" y="1870.0">[unknown]</text>
</g>
<g>
<title>[unknown] (86 samples, 6.71%)</title><rect x="525.4" y="1843.0" width="79.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="528.4" y="1854.0">[unknown]</text>
</g>
<g>
<title>[unknown] (86 samples, 6.71%)</title><rect x="525.4" y="1827.0" width="79.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="528.4" y="1838.0">[unknown]</text>
</g>
<g>
<title>[unknown] (84 samples, 6.55%)</title><rect x="527.3" y="1811.0" width="77.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="530.3" y="1822.0">[unknown]</text>
</g>
<g>
<title>[unknown] (83 samples, 6.47%)</title><rect x="528.2" y="1795.0" width="76.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="531.2" y="1806.0">[unknown]</text>
</g>
<g>
<title>[unknown] (82 samples, 6.40%)</title><rect x="529.1" y="1779.0" width="75.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="532.1" y="1790.0">[unknown]</text>
</g>
<g>
<title>[unknown] (80 samples, 6.24%)</title><rect x="531.0" y="1763.0" width="73.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="534.0" y="1774.0">[unknown]</text>
</g>
<g>
<title>[unknown] (77 samples, 6.01%)</title><rect x="533.7" y="1747.0" width="70.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="536.7" y="1758.0">[unknown]</text>
</g>
<g>
<title>[unknown] (73 samples, 5.69%)</title><rect x="537.4" y="1731.0" width="67.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="540.4" y="1742.0">[unknown]</text>
</g>
<g>
<title>[unknown] (71 samples, 5.54%)</title><rect x="539.3" y="1715.0" width="65.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="542.3" y="1726.0">[unknown]</text>
</g>
<g>
<title>[unknown] (69 samples, 5.38%)</title><rect x="541.1" y="1699.0" width="63.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="544.1" y="1710.0">[unknown]</text>
</g>
<g>
<title>[unknown] (67 samples, 5.23%)</title><rect x="542.9" y="1683.0" width="61.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="545.9" y="1694.0">[unkno..</text>
</g>
<g>
<title>[unknown] (66 samples, 5.15%)</title><rect x="543.9" y="1667.0" width="60.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="546.9" y="1678.0">[unkno..</text>
</g>
<g>
<title>[unknown] (62 samples, 4.84%)</title><rect x="547.5" y="1651.0" width="57.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="550.5" y="1662.0">[unkno..</text>
</g>
<g>
<title>[unknown] (59 samples, 4.60%)</title><rect x="550.3" y="1635.0" width="54.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="553.3" y="1646.0">[unkn..</text>
</g>
<g>
<title>[unknown] (58 samples, 4.52%)</title><rect x="551.2" y="1619.0" width="53.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="554.2" y="1630.0">[unkn..</text>
</g>
<g>
<title>[unknown] (55 samples, 4.29%)</title><rect x="554.0" y="1603.0" width="50.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="557.0" y="1614.0">[unkn..</text>
</g>
<g>
<title>[unknown] (49 samples, 3.82%)</title><rect x="559.5" y="1587.0" width="45.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="562.5" y="1598.0">[unk..</text>
</g>
<g>
<title>[unknown] (45 samples, 3.51%)</title><rect x="563.2" y="1571.0" width="41.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="566.2" y="1582.0">[un..</text>
</g>
<g>
<title>[unknown] (42 samples, 3.28%)</title><rect x="565.9" y="1555.0" width="38.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="568.9" y="1566.0">[un..</text>
</g>
<g>
<title>[unknown] (40 samples, 3.12%)</title><rect x="567.8" y="1539.0" width="36.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="570.8" y="1550.0">[un..</text>
</g>
<g>
<title>[unknown] (40 samples, 3.12%)</title><rect x="567.8" y="1523.0" width="36.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="570.8" y="1534.0">[un..</text>
</g>
<g>
<title>[unknown] (40 samples, 3.12%)</title><rect x="567.8" y="1507.0" width="36.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="570.8" y="1518.0">[un..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.04%)</title><rect x="568.7" y="1491.0" width="35.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="571.7" y="1502.0">[un..</text>
</g>
<g>
<title>[unknown] (37 samples, 2.89%)</title><rect x="570.5" y="1475.0" width="34.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="573.5" y="1486.0">[u..</text>
</g>
<g>
<title>[unknown] (37 samples, 2.89%)</title><rect x="570.5" y="1459.0" width="34.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="573.5" y="1470.0">[u..</text>
</g>
<g>
<title>[unknown] (37 samples, 2.89%)</title><rect x="570.5" y="1443.0" width="34.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="573.5" y="1454.0">[u..</text>
</g>
<g>
<title>[unknown] (36 samples, 2.81%)</title><rect x="571.5" y="1427.0" width="33.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="574.5" y="1438.0">[u..</text>
</g>
<g>
<title>[unknown] (36 samples, 2.81%)</title><rect x="571.5" y="1411.0" width="33.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="574.5" y="1422.0">[u..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.57%)</title><rect x="574.2" y="1395.0" width="30.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="577.2" y="1406.0">[u..</text>
</g>
<g>
<title>[unknown] (28 samples, 2.18%)</title><rect x="578.8" y="1379.0" width="25.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="581.8" y="1390.0">[..</text>
</g>
<g>
<title>[unknown] (28 samples, 2.18%)</title><rect x="578.8" y="1363.0" width="25.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="581.8" y="1374.0">[..</text>
</g>
<g>
<title>[unknown] (24 samples, 1.87%)</title><rect x="582.5" y="1347.0" width="22.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="585.5" y="1358.0">[..</text>
</g>
<g>
<title>[unknown] (19 samples, 1.48%)</title><rect x="587.1" y="1331.0" width="17.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="590.1" y="1342.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 1.48%)</title><rect x="587.1" y="1315.0" width="17.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="590.1" y="1326.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.40%)</title><rect x="588.0" y="1299.0" width="16.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="591.0" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="602.8" y="1283.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="605.8" y="1294.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.16%)</title><rect x="602.8" y="1267.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="605.8" y="1278.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.08%)</title><rect x="604.6" y="1939.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="607.6" y="1950.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.08%)</title><rect x="604.6" y="1923.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.6" y="1934.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.08%)</title><rect x="604.6" y="1907.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="607.6" y="1918.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="604.6" y="1891.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="607.6" y="1902.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$78/334405021.action (50 samples, 3.90%)</title><rect x="605.5" y="2019.0" width="46.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="608.5" y="2030.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.lambda$entity$2 (49 samples, 3.82%)</title><rect x="606.4" y="2003.0" width="45.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.4" y="2014.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.put (49 samples, 3.82%)</title><rect x="606.4" y="1987.0" width="45.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="609.4" y="1998.0">ru/m..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.47%)</title><rect x="606.4" y="1971.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="609.4" y="1982.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.47%)</title><rect x="606.4" y="1955.0" width="5.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.4" y="1966.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.47%)</title><rect x="606.4" y="1939.0" width="5.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="609.4" y="1950.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.16%)</title><rect x="607.4" y="1923.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="610.4" y="1934.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.08%)</title><rect x="609.2" y="1923.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.2" y="1934.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.16%)</title><rect x="610.1" y="1923.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="613.1" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/AlexDAO.upsert (43 samples, 3.35%)</title><rect x="612.0" y="1971.0" width="39.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="615.0" y="1982.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (42 samples, 3.28%)</title><rect x="612.9" y="1955.0" width="38.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.9" y="1966.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.08%)</title><rect x="615.6" y="1939.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="618.6" y="1950.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.08%)</title><rect x="615.6" y="1923.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.08%)</title><rect x="615.6" y="1907.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.6" y="1918.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.08%)</title><rect x="615.6" y="1891.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.6" y="1902.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.08%)</title><rect x="615.6" y="1875.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="618.6" y="1886.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.08%)</title><rect x="615.6" y="1859.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="618.6" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.08%)</title><rect x="616.6" y="1939.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.6" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (36 samples, 2.81%)</title><rect x="617.5" y="1939.0" width="33.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.5" y="1950.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (33 samples, 2.57%)</title><rect x="617.5" y="1923.0" width="30.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.5" y="1934.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (33 samples, 2.57%)</title><rect x="617.5" y="1907.0" width="30.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="620.5" y="1918.0">ja..</text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethod (1 samples, 0.08%)</title><rect x="618.4" y="1891.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.4" y="1902.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.linkMethodImpl (1 samples, 0.08%)</title><rect x="618.4" y="1875.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="621.4" y="1886.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandleNatives.varHandleOperationLinkerMethod (1 samples, 0.08%)</title><rect x="618.4" y="1859.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.4" y="1870.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolveOrNull (1 samples, 0.08%)</title><rect x="618.4" y="1843.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.4" y="1854.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName$Factory.resolve (1 samples, 0.08%)</title><rect x="618.4" y="1827.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="621.4" y="1838.0"></text>
</g>
<g>
<title>java/lang/invoke/MemberName.checkForTypeAlias (1 samples, 0.08%)</title><rect x="618.4" y="1811.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="621.4" y="1822.0"></text>
</g>
<g>
<title>sun/invoke/util/VerifyAccess.isTypeVisible (1 samples, 0.08%)</title><rect x="618.4" y="1795.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="621.4" y="1806.0"></text>
</g>
<g>
<title>sun/invoke/util/VerifyAccess.isTypeVisible (1 samples, 0.08%)</title><rect x="618.4" y="1779.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="621.4" y="1790.0"></text>
</g>
<g>
<title>java/lang/Class.getName (1 samples, 0.08%)</title><rect x="618.4" y="1763.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.4" y="1774.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.08%)</title><rect x="619.3" y="1891.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.3" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (4 samples, 0.31%)</title><rect x="620.2" y="1891.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="623.2" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.&lt;init&gt; (3 samples, 0.23%)</title><rect x="621.2" y="1875.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.2" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/Striped64.&lt;init&gt; (3 samples, 0.23%)</title><rect x="621.2" y="1859.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.2" y="1870.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (3 samples, 0.23%)</title><rect x="623.9" y="1891.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.9" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.08%)</title><rect x="623.9" y="1875.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="626.9" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.16%)</title><rect x="624.9" y="1875.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.9" y="1886.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.08%)</title><rect x="625.8" y="1859.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="628.8" y="1870.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.08%)</title><rect x="625.8" y="1843.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="628.8" y="1854.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.08%)</title><rect x="625.8" y="1827.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.8" y="1838.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.08%)</title><rect x="625.8" y="1811.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="628.8" y="1822.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (23 samples, 1.79%)</title><rect x="626.7" y="1891.0" width="21.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.7" y="1902.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (23 samples, 1.79%)</title><rect x="626.7" y="1875.0" width="21.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="629.7" y="1886.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (22 samples, 1.72%)</title><rect x="627.6" y="1859.0" width="20.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="630.6" y="1870.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (20 samples, 1.56%)</title><rect x="627.6" y="1843.0" width="18.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.6" y="1854.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (19 samples, 1.48%)</title><rect x="628.5" y="1827.0" width="17.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="631.5" y="1838.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (17 samples, 1.33%)</title><rect x="630.4" y="1811.0" width="15.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.4" y="1822.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.16%)</title><rect x="646.0" y="1843.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="649.0" y="1854.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.08%)</title><rect x="646.9" y="1827.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="649.9" y="1838.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Row.getSizeOfFlushedRow (1 samples, 0.08%)</title><rect x="647.9" y="1923.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.9" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.of (2 samples, 0.16%)</title><rect x="648.8" y="1923.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="651.8" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.&lt;init&gt; (1 samples, 0.08%)</title><rect x="649.7" y="1907.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.7" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.setToFlush (1 samples, 0.08%)</title><rect x="650.6" y="1939.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="653.6" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Row.getSizeOfFlushedRow (1 samples, 0.08%)</title><rect x="650.6" y="1923.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.6" y="1934.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (1 samples, 0.08%)</title><rect x="650.6" y="1907.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.6" y="1918.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (389 samples, 30.34%)</title><rect x="651.5" y="2099.0" width="358.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.5" y="2110.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (88 samples, 6.86%)</title><rect x="657.1" y="2083.0" width="81.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.1" y="2094.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (83 samples, 6.47%)</title><rect x="661.7" y="2067.0" width="76.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="664.7" y="2078.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.16%)</title><rect x="665.4" y="2051.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="668.4" y="2062.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 5.69%)</title><rect x="667.2" y="2051.0" width="67.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="670.2" y="2062.0">[unknown]</text>
</g>
<g>
<title>[unknown] (7 samples, 0.55%)</title><rect x="667.2" y="2035.0" width="6.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="670.2" y="2046.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="2019.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="670.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="2003.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="670.2" y="2014.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1987.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="670.2" y="1998.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1971.0" width="2.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="670.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1955.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="670.2" y="1966.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1939.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="670.2" y="1950.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1923.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="670.2" y="1934.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1907.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="670.2" y="1918.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1891.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="670.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1875.0" width="2.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="670.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1859.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="670.2" y="1870.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1843.0" width="2.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="670.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1827.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="670.2" y="1838.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1811.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="670.2" y="1822.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1795.0" width="2.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="670.2" y="1806.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1779.0" width="2.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="670.2" y="1790.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1763.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="670.2" y="1774.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1747.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="670.2" y="1758.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1731.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="670.2" y="1742.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1715.0" width="2.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="670.2" y="1726.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1699.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="670.2" y="1710.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1683.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="670.2" y="1694.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1667.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="670.2" y="1678.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1651.0" width="2.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="670.2" y="1662.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1635.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="670.2" y="1646.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1619.0" width="2.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="670.2" y="1630.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1603.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="670.2" y="1614.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1587.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="670.2" y="1598.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1571.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="670.2" y="1582.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1555.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="670.2" y="1566.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1539.0" width="2.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="670.2" y="1550.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1523.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="670.2" y="1534.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1507.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="670.2" y="1518.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1491.0" width="2.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="670.2" y="1502.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1475.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="670.2" y="1486.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1459.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="670.2" y="1470.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1443.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="670.2" y="1454.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1427.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="670.2" y="1438.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1411.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="670.2" y="1422.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1395.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="670.2" y="1406.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1379.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="670.2" y="1390.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1363.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="670.2" y="1374.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1347.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="670.2" y="1358.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1331.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="670.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1315.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="670.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1299.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="670.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1283.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="670.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1267.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="670.2" y="1278.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1251.0" width="2.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="670.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1235.0" width="2.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="670.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1219.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="670.2" y="1230.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1203.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="670.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1187.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="670.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1171.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="670.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1155.0" width="2.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="670.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1139.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="670.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1123.0" width="2.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="670.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1107.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="670.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1091.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="670.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1075.0" width="2.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="670.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1059.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="670.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1043.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="670.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1027.0" width="2.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="670.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="1011.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="670.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="995.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="670.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="979.0" width="2.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="670.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="963.0" width="2.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="670.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="947.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="670.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="931.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="670.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="915.0" width="2.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="670.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="899.0" width="2.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="670.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="883.0" width="2.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="670.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="867.0" width="2.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="670.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="851.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="670.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="835.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="670.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="819.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="670.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="803.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="670.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="787.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="670.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="771.0" width="2.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="670.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="755.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="670.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="739.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="670.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="723.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="670.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="707.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="670.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="691.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="670.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="675.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="670.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="659.0" width="2.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="670.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="643.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="670.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="627.0" width="2.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="670.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="611.0" width="2.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="670.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="595.0" width="2.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="670.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="579.0" width="2.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="670.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="563.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="670.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="547.0" width="2.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="670.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="531.0" width="2.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="670.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="515.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="670.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="499.0" width="2.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="670.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="483.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="670.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="467.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="670.2" y="478.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="451.0" width="2.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="670.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="435.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="670.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="419.0" width="2.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="670.2" y="430.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="403.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="670.2" y="414.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="387.0" width="2.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="670.2" y="398.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="371.0" width="2.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="670.2" y="382.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="355.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="670.2" y="366.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="339.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="670.2" y="350.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="323.0" width="2.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="670.2" y="334.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="307.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="670.2" y="318.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="291.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="670.2" y="302.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="275.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="670.2" y="286.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="259.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="670.2" y="270.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="243.0" width="2.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="670.2" y="254.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="227.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="670.2" y="238.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="211.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="670.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="195.0" width="2.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="670.2" y="206.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="179.0" width="2.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="670.2" y="190.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="163.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="670.2" y="174.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="147.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="670.2" y="158.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="131.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="670.2" y="142.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="115.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="670.2" y="126.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="99.0" width="2.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="670.2" y="110.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="83.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="670.2" y="94.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="67.0" width="2.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="670.2" y="78.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="667.2" y="51.0" width="2.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="670.2" y="62.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.08%)</title><rect x="667.2" y="35.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="670.2" y="46.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.16%)</title><rect x="668.1" y="35.0" width="1.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="671.1" y="46.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.23%)</title><rect x="670.0" y="2019.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="673.0" y="2030.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.08%)</title><rect x="672.7" y="2019.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="675.7" y="2030.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.31%)</title><rect x="673.6" y="2035.0" width="3.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="676.6" y="2046.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.08%)</title><rect x="677.3" y="2035.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="680.3" y="2046.0"></text>
</g>
<g>
<title>epoll_wait (61 samples, 4.76%)</title><rect x="678.2" y="2035.0" width="56.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="681.2" y="2046.0">epoll_..</text>
</g>
<g>
<title>[unknown] (55 samples, 4.29%)</title><rect x="683.8" y="2019.0" width="50.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="686.8" y="2030.0">[unkn..</text>
</g>
<g>
<title>[unknown] (55 samples, 4.29%)</title><rect x="683.8" y="2003.0" width="50.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="686.8" y="2014.0">[unkn..</text>
</g>
<g>
<title>[unknown] (54 samples, 4.21%)</title><rect x="684.7" y="1987.0" width="49.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="687.7" y="1998.0">[unkn..</text>
</g>
<g>
<title>[unknown] (53 samples, 4.13%)</title><rect x="685.6" y="1971.0" width="48.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="688.6" y="1982.0">[unk..</text>
</g>
<g>
<title>[unknown] (52 samples, 4.06%)</title><rect x="686.5" y="1955.0" width="47.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="689.5" y="1966.0">[unk..</text>
</g>
<g>
<title>[unknown] (47 samples, 3.67%)</title><rect x="691.1" y="1939.0" width="43.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="694.1" y="1950.0">[unk..</text>
</g>
<g>
<title>[unknown] (40 samples, 3.12%)</title><rect x="697.6" y="1923.0" width="36.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="700.6" y="1934.0">[un..</text>
</g>
<g>
<title>[unknown] (33 samples, 2.57%)</title><rect x="704.0" y="1907.0" width="30.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="707.0" y="1918.0">[u..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.11%)</title><rect x="709.5" y="1891.0" width="24.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="712.5" y="1902.0">[..</text>
</g>
<g>
<title>[unknown] (25 samples, 1.95%)</title><rect x="711.4" y="1875.0" width="23.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="714.4" y="1886.0">[..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="731.6" y="1859.0" width="2.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="734.6" y="1870.0"></text>
</g>
<g>
<title>_init (2 samples, 0.16%)</title><rect x="734.4" y="2051.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="737.4" y="2062.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.16%)</title><rect x="736.2" y="2051.0" width="1.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="739.2" y="2062.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (295 samples, 23.01%)</title><rect x="738.1" y="2083.0" width="271.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="741.1" y="2094.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (287 samples, 22.39%)</title><rect x="745.4" y="2067.0" width="264.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="748.4" y="2078.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (219 samples, 17.08%)</title><rect x="745.4" y="2051.0" width="201.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="748.4" y="2062.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>I2C/C2I adapters (4 samples, 0.31%)</title><rect x="811.7" y="2035.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="814.7" y="2046.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow(JavaThread*, unsigned char*) (3 samples, 0.23%)</title><rect x="815.4" y="2035.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="818.4" y="2046.0"></text>
</g>
<g>
<title>InterpreterRuntime::frequency_counter_overflow_inner(JavaThread*, unsigned char*) (3 samples, 0.23%)</title><rect x="815.4" y="2019.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="818.4" y="2030.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (3 samples, 0.23%)</title><rect x="815.4" y="2003.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="818.4" y="2014.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::call_event(Method*, CompLevel, JavaThread*) (1 samples, 0.08%)</title><rect x="815.4" y="1987.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="818.4" y="1998.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::method_back_branch_event(methodHandle const&amp;, methodHandle const&amp;, int, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.08%)</title><rect x="816.3" y="1987.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="819.3" y="1998.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::submit_compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.08%)</title><rect x="816.3" y="1971.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="819.3" y="1982.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::method_invocation_event(methodHandle const&amp;, methodHandle const&amp;, CompLevel, CompiledMethod*, JavaThread*) (1 samples, 0.08%)</title><rect x="817.2" y="1987.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="820.2" y="1998.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::compile(methodHandle const&amp;, int, CompLevel, JavaThread*) (1 samples, 0.08%)</title><rect x="817.2" y="1971.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="820.2" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="818.1" y="2035.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="821.1" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="818.1" y="2019.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="821.1" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="818.1" y="2003.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="821.1" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="818.1" y="1987.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="821.1" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="818.1" y="1971.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="821.1" y="1982.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="818.1" y="1955.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="821.1" y="1966.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (110 samples, 8.58%)</title><rect x="819.1" y="2035.0" width="101.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.1" y="2046.0">one/nio/http..</text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.08%)</title><rect x="820.9" y="2019.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="823.9" y="2030.0"></text>
</g>
<g>
<title>SharedRuntime::reresolve_call_site(JavaThread*, Thread*) (1 samples, 0.08%)</title><rect x="820.9" y="2003.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="823.9" y="2014.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_method(JavaThread*, Thread*) (1 samples, 0.08%)</title><rect x="820.9" y="1987.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="823.9" y="1998.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.08%)</title><rect x="820.9" y="1971.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="823.9" y="1982.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.08%)</title><rect x="820.9" y="1955.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="823.9" y="1966.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.08%)</title><rect x="820.9" y="1939.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="823.9" y="1950.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (107 samples, 8.35%)</title><rect x="821.8" y="2019.0" width="98.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="824.8" y="2030.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (92 samples, 7.18%)</title><rect x="822.7" y="2003.0" width="84.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="825.7" y="2014.0">RequestHan..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.39%)</title><rect x="822.7" y="1987.0" width="4.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="825.7" y="1998.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.16%)</title><rect x="825.5" y="1971.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="828.5" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="826.4" y="1955.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="829.4" y="1966.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="826.4" y="1939.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="829.4" y="1950.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.08%)</title><rect x="826.4" y="1923.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="829.4" y="1934.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.entity (87 samples, 6.79%)</title><rect x="827.3" y="1987.0" width="80.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.3" y="1998.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.16%)</title><rect x="827.3" y="1971.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="830.3" y="1982.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.16%)</title><rect x="827.3" y="1955.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="830.3" y="1966.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.16%)</title><rect x="827.3" y="1939.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="830.3" y="1950.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.08%)</title><rect x="828.3" y="1923.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.3" y="1934.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.23%)</title><rect x="829.2" y="1971.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="832.2" y="1982.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.23%)</title><rect x="829.2" y="1955.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="832.2" y="1966.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$61/1284527574.get$Lambda (2 samples, 0.16%)</title><rect x="829.2" y="1939.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="832.2" y="1950.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$78/334405021.get$Lambda (1 samples, 0.08%)</title><rect x="831.0" y="1939.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.0" y="1950.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.23%)</title><rect x="832.0" y="1971.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.0" y="1982.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.23%)</title><rect x="832.0" y="1955.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.0" y="1966.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.23%)</title><rect x="832.0" y="1939.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.0" y="1950.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.23%)</title><rect x="832.0" y="1923.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.0" y="1934.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.23%)</title><rect x="832.0" y="1907.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="835.0" y="1918.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.16%)</title><rect x="832.9" y="1891.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.9" y="1902.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.08%)</title><rect x="833.8" y="1875.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.8" y="1886.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.08%)</title><rect x="833.8" y="1859.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.8" y="1870.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.executeAsync (73 samples, 5.69%)</title><rect x="834.7" y="1971.0" width="67.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="837.7" y="1982.0">ru/mail..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (73 samples, 5.69%)</title><rect x="834.7" y="1955.0" width="67.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="837.7" y="1966.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (73 samples, 5.69%)</title><rect x="834.7" y="1939.0" width="67.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.7" y="1950.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (64 samples, 4.99%)</title><rect x="834.7" y="1923.0" width="58.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="837.7" y="1934.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.31%)</title><rect x="834.7" y="1907.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="837.7" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.31%)</title><rect x="834.7" y="1891.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="837.7" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (4 samples, 0.31%)</title><rect x="834.7" y="1875.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.7" y="1886.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (60 samples, 4.68%)</title><rect x="838.4" y="1907.0" width="55.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.4" y="1918.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (60 samples, 4.68%)</title><rect x="838.4" y="1891.0" width="55.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="841.4" y="1902.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (60 samples, 4.68%)</title><rect x="838.4" y="1875.0" width="55.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="841.4" y="1886.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (60 samples, 4.68%)</title><rect x="838.4" y="1859.0" width="55.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="841.4" y="1870.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (60 samples, 4.68%)</title><rect x="838.4" y="1843.0" width="55.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="841.4" y="1854.0">jdk/i..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.08%)</title><rect x="838.4" y="1827.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="841.4" y="1838.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.94%)</title><rect x="839.3" y="1827.0" width="11.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="842.3" y="1838.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.08%)</title><rect x="840.2" y="1811.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="843.2" y="1822.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.08%)</title><rect x="841.2" y="1811.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="844.2" y="1822.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.16%)</title><rect x="842.1" y="1811.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="845.1" y="1822.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.23%)</title><rect x="843.9" y="1811.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="846.9" y="1822.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="846.7" y="1811.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="849.7" y="1822.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.16%)</title><rect x="847.6" y="1811.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="850.6" y="1822.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.08%)</title><rect x="849.4" y="1811.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="852.4" y="1822.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.08%)</title><rect x="850.4" y="1827.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="853.4" y="1838.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.31%)</title><rect x="851.3" y="1827.0" width="3.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="854.3" y="1838.0"></text>
</g>
<g>
<title>_init (1 samples, 0.08%)</title><rect x="855.0" y="1827.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="858.0" y="1838.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (41 samples, 3.20%)</title><rect x="855.9" y="1827.0" width="37.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="858.9" y="1838.0">pth..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.04%)</title><rect x="857.7" y="1811.0" width="35.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="860.7" y="1822.0">[un..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.04%)</title><rect x="857.7" y="1795.0" width="35.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="860.7" y="1806.0">[un..</text>
</g>
<g>
<title>[unknown] (38 samples, 2.96%)</title><rect x="858.6" y="1779.0" width="35.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="861.6" y="1790.0">[u..</text>
</g>
<g>
<title>[unknown] (38 samples, 2.96%)</title><rect x="858.6" y="1763.0" width="35.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="861.6" y="1774.0">[u..</text>
</g>
<g>
<title>[unknown] (37 samples, 2.89%)</title><rect x="859.6" y="1747.0" width="34.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="862.6" y="1758.0">[u..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.34%)</title><rect x="866.0" y="1731.0" width="27.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="869.0" y="1742.0">[..</text>
</g>
<g>
<title>[unknown] (25 samples, 1.95%)</title><rect x="870.6" y="1715.0" width="23.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="873.6" y="1726.0">[..</text>
</g>
<g>
<title>[unknown] (23 samples, 1.79%)</title><rect x="872.4" y="1699.0" width="21.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="875.4" y="1710.0">[..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.08%)</title><rect x="893.6" y="1923.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.6" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.08%)</title><rect x="893.6" y="1907.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="896.6" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.62%)</title><rect x="894.5" y="1923.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="897.5" y="1934.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.62%)</title><rect x="894.5" y="1907.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="897.5" y="1918.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.62%)</title><rect x="894.5" y="1891.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="897.5" y="1902.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.62%)</title><rect x="894.5" y="1875.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="897.5" y="1886.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HashingTopology.primaryFor (6 samples, 0.47%)</title><rect x="901.9" y="1971.0" width="5.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="904.9" y="1982.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.16%)</title><rect x="901.9" y="1955.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.9" y="1966.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.16%)</title><rect x="901.9" y="1939.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.9" y="1950.0"></text>
</g>
<g>
<title>java/lang/Integer.hashCode (2 samples, 0.16%)</title><rect x="901.9" y="1923.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.9" y="1934.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.08%)</title><rect x="902.8" y="1907.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="905.8" y="1918.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HashingTopology.hashCode (4 samples, 0.31%)</title><rect x="903.7" y="1955.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="906.7" y="1966.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.16%)</title><rect x="907.4" y="2003.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.4" y="2014.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.47%)</title><rect x="909.3" y="2003.0" width="5.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="912.3" y="2014.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.47%)</title><rect x="909.3" y="1987.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="912.3" y="1998.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (5 samples, 0.39%)</title><rect x="910.2" y="1971.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.2" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.23%)</title><rect x="912.0" y="1955.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="915.0" y="1966.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (6 samples, 0.47%)</title><rect x="914.8" y="2003.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.8" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.47%)</title><rect x="914.8" y="1987.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.8" y="1998.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.47%)</title><rect x="914.8" y="1971.0" width="5.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="917.8" y="1982.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 0.47%)</title><rect x="914.8" y="1955.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.8" y="1966.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (1 samples, 0.08%)</title><rect x="914.8" y="1939.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="917.8" y="1950.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.39%)</title><rect x="915.7" y="1939.0" width="4.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="918.7" y="1950.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (15 samples, 1.17%)</title><rect x="920.3" y="2035.0" width="13.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.3" y="2046.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.23%)</title><rect x="922.2" y="2019.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.2" y="2030.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="924.0" y="2003.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="927.0" y="2014.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.08%)</title><rect x="924.0" y="1987.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="927.0" y="1998.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.08%)</title><rect x="924.0" y="1971.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="927.0" y="1982.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.62%)</title><rect x="924.9" y="2019.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="927.9" y="2030.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.62%)</title><rect x="924.9" y="2003.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="927.9" y="2014.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.16%)</title><rect x="932.3" y="2019.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.3" y="2030.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.16%)</title><rect x="932.3" y="2003.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="935.3" y="2014.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.08%)</title><rect x="934.1" y="2035.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="937.1" y="2046.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.23%)</title><rect x="935.0" y="2035.0" width="2.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="938.0" y="2046.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.62%)</title><rect x="937.8" y="2035.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.8" y="2046.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.08%)</title><rect x="937.8" y="2019.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="940.8" y="2030.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.47%)</title><rect x="938.7" y="2019.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="941.7" y="2030.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.39%)</title><rect x="939.6" y="2003.0" width="4.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="942.6" y="2014.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.08%)</title><rect x="943.3" y="1987.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="946.3" y="1998.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.08%)</title><rect x="944.2" y="2019.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="947.2" y="2030.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.08%)</title><rect x="944.2" y="2003.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="947.2" y="2014.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.08%)</title><rect x="944.2" y="1987.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.2" y="1998.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.16%)</title><rect x="945.2" y="2035.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="948.2" y="2046.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.16%)</title><rect x="945.2" y="2019.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.2" y="2030.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (68 samples, 5.30%)</title><rect x="947.0" y="2051.0" width="62.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="950.0" y="2062.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (63 samples, 4.91%)</title><rect x="951.6" y="2035.0" width="58.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="954.6" y="2046.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.16%)</title><rect x="954.4" y="2019.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="957.4" y="2030.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.56%)</title><rect x="956.2" y="2019.0" width="18.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="959.2" y="2030.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 1.56%)</title><rect x="956.2" y="2003.0" width="18.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="959.2" y="2014.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (19 samples, 1.48%)</title><rect x="956.2" y="1987.0" width="17.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="959.2" y="1998.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.16%)</title><rect x="958.0" y="1971.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="961.0" y="1982.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.16%)</title><rect x="959.9" y="1971.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="962.9" y="1982.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (4 samples, 0.31%)</title><rect x="961.7" y="1971.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="964.7" y="1982.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.16%)</title><rect x="965.4" y="1971.0" width="1.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="968.4" y="1982.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.55%)</title><rect x="967.3" y="1971.0" width="6.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="970.3" y="1982.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.08%)</title><rect x="968.2" y="1955.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="971.2" y="1966.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.08%)</title><rect x="969.1" y="1955.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="972.1" y="1966.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.31%)</title><rect x="970.0" y="1955.0" width="3.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="973.0" y="1966.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.23%)</title><rect x="970.9" y="1939.0" width="2.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="973.9" y="1950.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.08%)</title><rect x="973.7" y="1987.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="976.7" y="1998.0"></text>
</g>
<g>
<title>__GI___recv (38 samples, 2.96%)</title><rect x="974.6" y="2019.0" width="35.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="977.6" y="2030.0">__..</text>
</g>
<g>
<title>[unknown] (38 samples, 2.96%)</title><rect x="974.6" y="2003.0" width="35.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="977.6" y="2014.0">[u..</text>
</g>
<g>
<title>[unknown] (38 samples, 2.96%)</title><rect x="974.6" y="1987.0" width="35.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="977.6" y="1998.0">[u..</text>
</g>
<g>
<title>[unknown] (37 samples, 2.89%)</title><rect x="975.5" y="1971.0" width="34.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="978.5" y="1982.0">[u..</text>
</g>
<g>
<title>[unknown] (37 samples, 2.89%)</title><rect x="975.5" y="1955.0" width="34.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="978.5" y="1966.0">[u..</text>
</g>
<g>
<title>[unknown] (36 samples, 2.81%)</title><rect x="976.5" y="1939.0" width="33.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="979.5" y="1950.0">[u..</text>
</g>
<g>
<title>[unknown] (35 samples, 2.73%)</title><rect x="977.4" y="1923.0" width="32.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="980.4" y="1934.0">[u..</text>
</g>
<g>
<title>[unknown] (34 samples, 2.65%)</title><rect x="978.3" y="1907.0" width="31.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="981.3" y="1918.0">[u..</text>
</g>
<g>
<title>[unknown] (28 samples, 2.18%)</title><rect x="983.8" y="1891.0" width="25.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="986.8" y="1902.0">[..</text>
</g>
<g>
<title>[unknown] (23 samples, 1.79%)</title><rect x="988.4" y="1875.0" width="21.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="991.4" y="1886.0">[..</text>
</g>
<g>
<title>[unknown] (13 samples, 1.01%)</title><rect x="997.6" y="1859.0" width="12.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1000.6" y="1870.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.39%)</title><rect x="1005.0" y="1843.0" width="4.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1008.0" y="1854.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.23%)</title><rect x="1006.8" y="1827.0" width="2.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1009.8" y="1838.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.08%)</title><rect x="1009.6" y="2099.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1012.6" y="2110.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1009.6" y="2083.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1012.6" y="2094.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1009.6" y="2067.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1012.6" y="2078.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1009.6" y="2051.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1012.6" y="2062.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1009.6" y="2035.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1012.6" y="2046.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1009.6" y="2019.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1012.6" y="2030.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1009.6" y="2003.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1012.6" y="2014.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1009.6" y="1987.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1012.6" y="1998.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1009.6" y="1971.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1012.6" y="1982.0"></text>
</g>
<g>
<title>start_thread (195 samples, 15.21%)</title><rect x="1010.5" y="2099.0" width="179.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1013.5" y="2110.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (195 samples, 15.21%)</title><rect x="1010.5" y="2083.0" width="179.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1013.5" y="2094.0">thread_native_entry(Thr..</text>
</g>
<g>
<title>Thread::call_run() (195 samples, 15.21%)</title><rect x="1010.5" y="2067.0" width="179.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1013.5" y="2078.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.47%)</title><rect x="1010.5" y="2051.0" width="5.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1013.5" y="2062.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.47%)</title><rect x="1010.5" y="2035.0" width="5.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1013.5" y="2046.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.39%)</title><rect x="1010.5" y="2019.0" width="4.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1013.5" y="2030.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (4 samples, 0.31%)</title><rect x="1010.5" y="2003.0" width="3.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1013.5" y="2014.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (4 samples, 0.31%)</title><rect x="1010.5" y="1987.0" width="3.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1013.5" y="1998.0"></text>
</g>
<g>
<title>PLABStats::desired_plab_sz(unsigned int) (1 samples, 0.08%)</title><rect x="1013.3" y="1971.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1016.3" y="1982.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.08%)</title><rect x="1014.2" y="2003.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1017.2" y="2014.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.08%)</title><rect x="1015.1" y="2019.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1018.1" y="2030.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)0, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.08%)</title><rect x="1015.1" y="2003.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1018.1" y="2014.0"></text>
</g>
<g>
<title>JavaThread::run() (188 samples, 14.66%)</title><rect x="1016.0" y="2051.0" width="173.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1019.0" y="2062.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (188 samples, 14.66%)</title><rect x="1016.0" y="2035.0" width="173.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1019.0" y="2046.0">JavaThread::thread_mai..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (187 samples, 14.59%)</title><rect x="1016.0" y="2019.0" width="172.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1019.0" y="2030.0">CompileBroker::compile..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (187 samples, 14.59%)</title><rect x="1016.0" y="2003.0" width="172.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1019.0" y="2014.0">CompileBroker::invoke_..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (182 samples, 14.20%)</title><rect x="1017.0" y="1987.0" width="167.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1020.0" y="1998.0">C2Compiler::compile_m..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (182 samples, 14.20%)</title><rect x="1017.0" y="1971.0" width="167.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1020.0" y="1982.0">Compile::Compile(ciEn..</text>
</g>
<g>
<title>Compile::Code_Gen() (103 samples, 8.03%)</title><rect x="1017.0" y="1955.0" width="94.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1020.0" y="1966.0">Compile::Co..</text>
</g>
<g>
<title>Compile::Output() (3 samples, 0.23%)</title><rect x="1017.0" y="1939.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1020.0" y="1950.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (3 samples, 0.23%)</title><rect x="1017.0" y="1923.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1020.0" y="1934.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (2 samples, 0.16%)</title><rect x="1017.9" y="1907.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1020.9" y="1918.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.08%)</title><rect x="1018.8" y="1891.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1021.8" y="1902.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (3 samples, 0.23%)</title><rect x="1019.7" y="1939.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1022.7" y="1950.0"></text>
</g>
<g>
<title>Assembler::mov64(RegisterImpl*, long) (1 samples, 0.08%)</title><rect x="1020.6" y="1923.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1023.6" y="1934.0"></text>
</g>
<g>
<title>MachCallNode::returns_pointer() const (1 samples, 0.08%)</title><rect x="1021.6" y="1923.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1024.6" y="1934.0"></text>
</g>
<g>
<title>Matcher::match() (7 samples, 0.55%)</title><rect x="1022.5" y="1939.0" width="6.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1025.5" y="1950.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.08%)</title><rect x="1022.5" y="1923.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1025.5" y="1934.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.08%)</title><rect x="1023.4" y="1923.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1026.4" y="1934.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (5 samples, 0.39%)</title><rect x="1024.3" y="1923.0" width="4.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1027.3" y="1934.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.08%)</title><rect x="1025.2" y="1907.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1028.2" y="1918.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.16%)</title><rect x="1026.2" y="1907.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1029.2" y="1918.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.16%)</title><rect x="1026.2" y="1891.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1029.2" y="1902.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.08%)</title><rect x="1027.1" y="1875.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1030.1" y="1886.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.08%)</title><rect x="1027.1" y="1859.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1030.1" y="1870.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.08%)</title><rect x="1027.1" y="1843.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1030.1" y="1854.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.08%)</title><rect x="1027.1" y="1827.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1030.1" y="1838.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.08%)</title><rect x="1027.1" y="1811.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1030.1" y="1822.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.08%)</title><rect x="1027.1" y="1795.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1030.1" y="1806.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.08%)</title><rect x="1027.1" y="1779.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1030.1" y="1790.0"></text>
</g>
<g>
<title>State::_sub_Op_AndI(Node const*) (1 samples, 0.08%)</title><rect x="1027.1" y="1763.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1030.1" y="1774.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.08%)</title><rect x="1028.0" y="1907.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1031.0" y="1918.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (1 samples, 0.08%)</title><rect x="1028.9" y="1939.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1031.9" y="1950.0"></text>
</g>
<g>
<title>PhaseBlockLayout::reorder_traces(int) (1 samples, 0.08%)</title><rect x="1028.9" y="1923.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1031.9" y="1934.0"></text>
</g>
<g>
<title>Trace::fixup_blocks(PhaseCFG&amp;) (1 samples, 0.08%)</title><rect x="1028.9" y="1907.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1031.9" y="1918.0"></text>
</g>
<g>
<title>Block::num_fall_throughs() (1 samples, 0.08%)</title><rect x="1028.9" y="1891.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1031.9" y="1902.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (9 samples, 0.70%)</title><rect x="1029.8" y="1939.0" width="8.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1032.8" y="1950.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (9 samples, 0.70%)</title><rect x="1029.8" y="1923.0" width="8.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1032.8" y="1934.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.08%)</title><rect x="1029.8" y="1907.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1032.8" y="1918.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.08%)</title><rect x="1030.8" y="1907.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1033.8" y="1918.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.16%)</title><rect x="1031.7" y="1907.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1034.7" y="1918.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.08%)</title><rect x="1032.6" y="1891.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1035.6" y="1902.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.08%)</title><rect x="1033.5" y="1907.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1036.5" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::compute_exit_block_pressure(Block*) (1 samples, 0.08%)</title><rect x="1033.5" y="1891.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1036.5" y="1902.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1033.5" y="1875.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1036.5" y="1886.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.08%)</title><rect x="1034.4" y="1907.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1037.4" y="1918.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.16%)</title><rect x="1035.4" y="1907.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1038.4" y="1918.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (1 samples, 0.08%)</title><rect x="1036.3" y="1891.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1039.3" y="1902.0"></text>
</g>
<g>
<title>jmpDirNode::pinned() const (1 samples, 0.08%)</title><rect x="1037.2" y="1907.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1040.2" y="1918.0"></text>
</g>
<g>
<title>PhaseCFG::remove_empty_blocks() (1 samples, 0.08%)</title><rect x="1038.1" y="1939.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1041.1" y="1950.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (76 samples, 5.93%)</title><rect x="1039.0" y="1939.0" width="70.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1042.0" y="1950.0">PhaseCh..</text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.08%)</title><rect x="1039.0" y="1923.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1042.0" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (3 samples, 0.23%)</title><rect x="1040.0" y="1923.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1043.0" y="1934.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.08%)</title><rect x="1040.9" y="1907.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1043.9" y="1918.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.08%)</title><rect x="1041.8" y="1907.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1044.8" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (6 samples, 0.47%)</title><rect x="1042.7" y="1923.0" width="5.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1045.7" y="1934.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.31%)</title><rect x="1043.7" y="1907.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1046.7" y="1918.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.08%)</title><rect x="1047.3" y="1907.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.3" y="1918.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1047.3" y="1891.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.3" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (5 samples, 0.39%)</title><rect x="1048.3" y="1923.0" width="4.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1051.3" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::split_DEF(Node*, Block*, int, unsigned int, Node**, Node**, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.08%)</title><rect x="1051.0" y="1907.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1054.0" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.08%)</title><rect x="1051.0" y="1891.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1054.0" y="1902.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.08%)</title><rect x="1051.0" y="1875.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1054.0" y="1886.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.08%)</title><rect x="1051.9" y="1907.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1054.9" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (14 samples, 1.09%)</title><rect x="1052.9" y="1923.0" width="12.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1055.9" y="1934.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.08%)</title><rect x="1052.9" y="1907.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1055.9" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.08%)</title><rect x="1053.8" y="1907.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1056.8" y="1918.0"></text>
</g>
<g>
<title>compU_rReg_immNode::rule() const (1 samples, 0.08%)</title><rect x="1053.8" y="1891.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1056.8" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (5 samples, 0.39%)</title><rect x="1054.7" y="1907.0" width="4.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1057.7" y="1918.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.16%)</title><rect x="1057.5" y="1891.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1060.5" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (7 samples, 0.55%)</title><rect x="1059.3" y="1907.0" width="6.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1062.3" y="1918.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1060.2" y="1891.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1063.2" y="1902.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.08%)</title><rect x="1061.1" y="1891.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1064.1" y="1902.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (4 samples, 0.31%)</title><rect x="1062.1" y="1891.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1065.1" y="1902.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (2 samples, 0.16%)</title><rect x="1065.7" y="1923.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1068.7" y="1934.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1066.7" y="1907.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1069.7" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (10 samples, 0.78%)</title><rect x="1067.6" y="1923.0" width="9.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1070.6" y="1934.0"></text>
</g>
<g>
<title>MachProjNode::bottom_type() const (1 samples, 0.08%)</title><rect x="1071.3" y="1907.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1074.3" y="1918.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.23%)</title><rect x="1072.2" y="1907.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1075.2" y="1918.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.08%)</title><rect x="1074.9" y="1907.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1077.9" y="1918.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.08%)</title><rect x="1075.9" y="1907.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1078.9" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (2 samples, 0.16%)</title><rect x="1076.8" y="1923.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1079.8" y="1934.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.16%)</title><rect x="1076.8" y="1907.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1079.8" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (3 samples, 0.23%)</title><rect x="1078.6" y="1923.0" width="2.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1081.6" y="1934.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (8 samples, 0.62%)</title><rect x="1081.4" y="1923.0" width="7.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1084.4" y="1934.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.08%)</title><rect x="1086.0" y="1907.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1089.0" y="1918.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.08%)</title><rect x="1086.9" y="1907.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1089.9" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1087.8" y="1907.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1090.8" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1087.8" y="1891.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1090.8" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1087.8" y="1875.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1090.8" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1087.8" y="1859.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1090.8" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1087.8" y="1843.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1090.8" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1087.8" y="1827.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1090.8" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1087.8" y="1811.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1090.8" y="1822.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (3 samples, 0.23%)</title><rect x="1088.8" y="1923.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1091.8" y="1934.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (1 samples, 0.08%)</title><rect x="1088.8" y="1907.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1091.8" y="1918.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 0.16%)</title><rect x="1089.7" y="1907.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1092.7" y="1918.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 0.08%)</title><rect x="1089.7" y="1891.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1092.7" y="1902.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (1 samples, 0.08%)</title><rect x="1090.6" y="1891.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1093.6" y="1902.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.08%)</title><rect x="1091.5" y="1923.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1094.5" y="1934.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.08%)</title><rect x="1092.4" y="1923.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1095.4" y="1934.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1092.4" y="1907.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1095.4" y="1918.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.08%)</title><rect x="1093.4" y="1923.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1096.4" y="1934.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.08%)</title><rect x="1093.4" y="1907.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1096.4" y="1918.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (11 samples, 0.86%)</title><rect x="1094.3" y="1923.0" width="10.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1097.3" y="1934.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int, Arena*) (1 samples, 0.08%)</title><rect x="1098.9" y="1907.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1101.9" y="1918.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (5 samples, 0.39%)</title><rect x="1099.8" y="1907.0" width="4.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1102.8" y="1918.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.08%)</title><rect x="1103.5" y="1891.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1106.5" y="1902.0"></text>
</g>
<g>
<title>RegMask::is_vector(unsigned int) (1 samples, 0.08%)</title><rect x="1104.4" y="1923.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1107.4" y="1934.0"></text>
</g>
<g>
<title>__memset_erms (2 samples, 0.16%)</title><rect x="1105.3" y="1923.0" width="1.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1108.3" y="1934.0"></text>
</g>
<g>
<title>immPOper::type() const (1 samples, 0.08%)</title><rect x="1107.2" y="1923.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1110.2" y="1934.0"></text>
</g>
<g>
<title>safePoint_poll_tlsNode::ideal_Opcode() const (1 samples, 0.08%)</title><rect x="1108.1" y="1923.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1111.1" y="1934.0"></text>
</g>
<g>
<title>PhasePeephole::do_transform() (2 samples, 0.16%)</title><rect x="1109.0" y="1939.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.0" y="1950.0"></text>
</g>
<g>
<title>testU_regNode::ideal_Opcode() const (1 samples, 0.08%)</title><rect x="1110.8" y="1939.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1113.8" y="1950.0"></text>
</g>
<g>
<title>Compile::Optimize() (55 samples, 4.29%)</title><rect x="1111.8" y="1955.0" width="50.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1114.8" y="1966.0">Compi..</text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.256] (2 samples, 0.16%)</title><rect x="1111.8" y="1939.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1114.8" y="1950.0"></text>
</g>
<g>
<title>Type::remove_speculative() const (1 samples, 0.08%)</title><rect x="1112.7" y="1923.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1115.7" y="1934.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.16%)</title><rect x="1113.6" y="1939.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1116.6" y="1950.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.16%)</title><rect x="1113.6" y="1923.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1116.6" y="1934.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field(Node*, PointsToNode::EscapeState, int) [clone .part.170] (1 samples, 0.08%)</title><rect x="1113.6" y="1907.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1116.6" y="1918.0"></text>
</g>
<g>
<title>ConnectionGraph::is_oop_field(Node*, int, bool*) (1 samples, 0.08%)</title><rect x="1113.6" y="1891.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1116.6" y="1902.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (1 samples, 0.08%)</title><rect x="1113.6" y="1875.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1116.6" y="1886.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.08%)</title><rect x="1113.6" y="1859.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1116.6" y="1870.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.08%)</title><rect x="1113.6" y="1843.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1116.6" y="1854.0"></text>
</g>
<g>
<title>ConnectionGraph::process_call_arguments(CallNode*) (1 samples, 0.08%)</title><rect x="1114.5" y="1907.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1117.5" y="1918.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (1 samples, 0.08%)</title><rect x="1114.5" y="1891.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1117.5" y="1902.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.08%)</title><rect x="1114.5" y="1875.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1117.5" y="1886.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.08%)</title><rect x="1114.5" y="1859.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1117.5" y="1870.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.08%)</title><rect x="1114.5" y="1843.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1117.5" y="1854.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) [clone .constprop.67] (1 samples, 0.08%)</title><rect x="1114.5" y="1827.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1117.5" y="1838.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&amp;, Bytecodes::Code, ciMethod*, ciKlass*) (1 samples, 0.08%)</title><rect x="1114.5" y="1811.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1117.5" y="1822.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.08%)</title><rect x="1114.5" y="1795.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1117.5" y="1806.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.08%)</title><rect x="1114.5" y="1779.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1117.5" y="1790.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.08%)</title><rect x="1114.5" y="1763.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1117.5" y="1774.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) [clone .constprop.67] (1 samples, 0.08%)</title><rect x="1114.5" y="1747.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1117.5" y="1758.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&amp;, Bytecodes::Code, ciMethod*, ciKlass*) (1 samples, 0.08%)</title><rect x="1114.5" y="1731.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1117.5" y="1742.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.08%)</title><rect x="1114.5" y="1715.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1117.5" y="1726.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.08%)</title><rect x="1114.5" y="1699.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1117.5" y="1710.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.08%)</title><rect x="1114.5" y="1683.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1117.5" y="1694.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) [clone .constprop.67] (1 samples, 0.08%)</title><rect x="1114.5" y="1667.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1117.5" y="1678.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&amp;, Bytecodes::Code, ciMethod*, ciKlass*) (1 samples, 0.08%)</title><rect x="1114.5" y="1651.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1117.5" y="1662.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.08%)</title><rect x="1114.5" y="1635.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1117.5" y="1646.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.08%)</title><rect x="1114.5" y="1619.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1117.5" y="1630.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.08%)</title><rect x="1114.5" y="1603.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1117.5" y="1614.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) [clone .constprop.67] (1 samples, 0.08%)</title><rect x="1114.5" y="1587.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1117.5" y="1598.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::invoke(BCEscapeAnalyzer::StateInfo&amp;, Bytecodes::Code, ciMethod*, ciKlass*) (1 samples, 0.08%)</title><rect x="1114.5" y="1571.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1117.5" y="1582.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.08%)</title><rect x="1114.5" y="1555.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1117.5" y="1566.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.08%)</title><rect x="1114.5" y="1539.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1117.5" y="1550.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.08%)</title><rect x="1114.5" y="1523.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1117.5" y="1534.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) [clone .constprop.67] (1 samples, 0.08%)</title><rect x="1114.5" y="1507.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1117.5" y="1518.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.08%)</title><rect x="1114.5" y="1491.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1117.5" y="1502.0"></text>
</g>
<g>
<title>ciField::will_link(ciMethod*, Bytecodes::Code) (1 samples, 0.08%)</title><rect x="1114.5" y="1475.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1117.5" y="1486.0"></text>
</g>
<g>
<title>LinkResolver::resolve_field(fieldDescriptor&amp;, LinkInfo const&amp;, Bytecodes::Code, bool, Thread*) (1 samples, 0.08%)</title><rect x="1114.5" y="1459.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1117.5" y="1470.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (2 samples, 0.16%)</title><rect x="1115.4" y="1939.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1118.4" y="1950.0"></text>
</g>
<g>
<title>TypeLong::filter_helper(Type const*, bool) const (1 samples, 0.08%)</title><rect x="1116.4" y="1923.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1119.4" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (39 samples, 3.04%)</title><rect x="1117.3" y="1939.0" width="35.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1120.3" y="1950.0">Pha..</text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (2 samples, 0.16%)</title><rect x="1117.3" y="1923.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1120.3" y="1934.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (2 samples, 0.16%)</title><rect x="1117.3" y="1907.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1120.3" y="1918.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (2 samples, 0.16%)</title><rect x="1117.3" y="1891.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1120.3" y="1902.0"></text>
</g>
<g>
<title>CountedLoopNode::phi() const (1 samples, 0.08%)</title><rect x="1117.3" y="1875.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1120.3" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1117.3" y="1859.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1120.3" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1117.3" y="1843.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1120.3" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1117.3" y="1827.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1120.3" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1117.3" y="1811.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1120.3" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1117.3" y="1795.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1120.3" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1117.3" y="1779.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1120.3" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1117.3" y="1763.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1120.3" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1117.3" y="1747.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1120.3" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1117.3" y="1731.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1120.3" y="1742.0"></text>
</g>
<g>
<title>IdealLoopTree::counted_loop(PhaseIdealLoop*) (1 samples, 0.08%)</title><rect x="1118.2" y="1875.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1121.2" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::replace_parallel_iv(IdealLoopTree*) (1 samples, 0.08%)</title><rect x="1118.2" y="1859.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1121.2" y="1870.0"></text>
</g>
<g>
<title>LoopNode::is_valid_counted_loop() const [clone .part.128] (1 samples, 0.08%)</title><rect x="1118.2" y="1843.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1121.2" y="1854.0"></text>
</g>
<g>
<title>CountedLoopEndNode::Opcode() const (1 samples, 0.08%)</title><rect x="1118.2" y="1827.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1121.2" y="1838.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.08%)</title><rect x="1119.1" y="1923.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1122.1" y="1934.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.08%)</title><rect x="1119.1" y="1907.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1122.1" y="1918.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.08%)</title><rect x="1119.1" y="1891.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1122.1" y="1902.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.08%)</title><rect x="1119.1" y="1875.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1122.1" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.08%)</title><rect x="1119.1" y="1859.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1122.1" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop_handle_data_uses(Node*, Node_List&amp;, IdealLoopTree*, IdealLoopTree*, Node_List*&amp;, Node_List*&amp;, Node_List*&amp;, Node_List&amp;, unsigned int, PhaseIdealLoop::CloneLoopMode) (1 samples, 0.08%)</title><rect x="1119.1" y="1843.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1122.1" y="1854.0"></text>
</g>
<g>
<title>PhaseIterGVN::replace_input_of(Node*, int, Node*) [clone .constprop.111] (1 samples, 0.08%)</title><rect x="1119.1" y="1827.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1122.1" y="1838.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.08%)</title><rect x="1119.1" y="1811.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1122.1" y="1822.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.08%)</title><rect x="1119.1" y="1795.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1122.1" y="1806.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.08%)</title><rect x="1119.1" y="1779.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1122.1" y="1790.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.08%)</title><rect x="1120.0" y="1923.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1123.0" y="1934.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.08%)</title><rect x="1120.0" y="1907.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1123.0" y="1918.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.08%)</title><rect x="1120.0" y="1891.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1123.0" y="1902.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.08%)</title><rect x="1120.0" y="1875.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1123.0" y="1886.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.08%)</title><rect x="1120.0" y="1859.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1123.0" y="1870.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (1 samples, 0.08%)</title><rect x="1120.0" y="1843.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1123.0" y="1854.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.08%)</title><rect x="1120.0" y="1827.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1123.0" y="1838.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.08%)</title><rect x="1120.0" y="1811.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1123.0" y="1822.0"></text>
</g>
<g>
<title>IdealLoopTree::reassociate_invariants(PhaseIdealLoop*) (1 samples, 0.08%)</title><rect x="1121.0" y="1923.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1124.0" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (5 samples, 0.39%)</title><rect x="1121.9" y="1923.0" width="4.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.9" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (7 samples, 0.55%)</title><rect x="1126.5" y="1923.0" width="6.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1129.5" y="1934.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.08%)</title><rect x="1131.1" y="1907.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1134.1" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.08%)</title><rect x="1132.0" y="1907.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1135.0" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (6 samples, 0.47%)</title><rect x="1132.9" y="1923.0" width="5.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1135.9" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (5 samples, 0.39%)</title><rect x="1132.9" y="1907.0" width="4.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1135.9" y="1918.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.08%)</title><rect x="1132.9" y="1891.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1135.9" y="1902.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.08%)</title><rect x="1133.9" y="1891.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1136.9" y="1902.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.08%)</title><rect x="1133.9" y="1875.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1136.9" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.08%)</title><rect x="1134.8" y="1891.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1137.8" y="1902.0"></text>
</g>
<g>
<title>ProjNode::Opcode() const (1 samples, 0.08%)</title><rect x="1135.7" y="1891.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.7" y="1902.0"></text>
</g>
<g>
<title>ProjNode::is_uncommon_trap_if_pattern(Deoptimization::DeoptReason) (1 samples, 0.08%)</title><rect x="1136.6" y="1891.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.6" y="1902.0"></text>
</g>
<g>
<title>Node::unique_ctrl_out() const (1 samples, 0.08%)</title><rect x="1136.6" y="1875.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.6" y="1886.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.08%)</title><rect x="1137.5" y="1907.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1140.5" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (4 samples, 0.31%)</title><rect x="1138.5" y="1923.0" width="3.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1141.5" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (6 samples, 0.47%)</title><rect x="1142.1" y="1923.0" width="5.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1145.1" y="1934.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.08%)</title><rect x="1146.7" y="1907.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1149.7" y="1918.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.08%)</title><rect x="1146.7" y="1891.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1149.7" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (6 samples, 0.47%)</title><rect x="1147.7" y="1923.0" width="5.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.7" y="1934.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.08%)</title><rect x="1147.7" y="1907.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.7" y="1918.0"></text>
</g>
<g>
<title>Node::has_special_unique_user() const (1 samples, 0.08%)</title><rect x="1147.7" y="1891.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1150.7" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.39%)</title><rect x="1148.6" y="1907.0" width="4.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.6" y="1918.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.08%)</title><rect x="1148.6" y="1891.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1151.6" y="1902.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1149.5" y="1891.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.5" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.08%)</title><rect x="1149.5" y="1875.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.5" y="1886.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1150.4" y="1891.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.4" y="1902.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (1 samples, 0.08%)</title><rect x="1150.4" y="1875.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.4" y="1886.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1150.4" y="1859.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1153.4" y="1870.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1150.4" y="1843.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1153.4" y="1854.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1150.4" y="1827.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1153.4" y="1838.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1150.4" y="1811.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1153.4" y="1822.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1150.4" y="1795.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.4" y="1806.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1150.4" y="1779.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1153.4" y="1790.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1150.4" y="1763.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1153.4" y="1774.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1150.4" y="1747.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.4" y="1758.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1150.4" y="1731.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1153.4" y="1742.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1150.4" y="1715.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1153.4" y="1726.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1150.4" y="1699.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.4" y="1710.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.08%)</title><rect x="1150.4" y="1683.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.4" y="1694.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.08%)</title><rect x="1150.4" y="1667.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1153.4" y="1678.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.08%)</title><rect x="1150.4" y="1651.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.4" y="1662.0"></text>
</g>
<g>
<title>SubNode::Identity(PhaseGVN*) (1 samples, 0.08%)</title><rect x="1151.3" y="1891.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.3" y="1902.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.08%)</title><rect x="1151.3" y="1875.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.3" y="1886.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.08%)</title><rect x="1151.3" y="1859.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1154.3" y="1870.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.08%)</title><rect x="1151.3" y="1843.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.3" y="1854.0"></text>
</g>
<g>
<title>split_if(IfNode*, PhaseIterGVN*) (1 samples, 0.08%)</title><rect x="1152.3" y="1891.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1155.3" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (9 samples, 0.70%)</title><rect x="1153.2" y="1939.0" width="8.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.2" y="1950.0"></text>
</g>
<g>
<title>CmpNode::Identity(PhaseGVN*) (1 samples, 0.08%)</title><rect x="1153.2" y="1923.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.2" y="1934.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (8 samples, 0.62%)</title><rect x="1154.1" y="1923.0" width="7.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.1" y="1934.0"></text>
</g>
<g>
<title>AddNode::Value(PhaseGVN*) const (1 samples, 0.08%)</title><rect x="1154.1" y="1907.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.1" y="1918.0"></text>
</g>
<g>
<title>AddNode::add_of_identity(Type const*, Type const*) const (1 samples, 0.08%)</title><rect x="1154.1" y="1891.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.1" y="1902.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.08%)</title><rect x="1154.1" y="1875.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.1" y="1886.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.08%)</title><rect x="1154.1" y="1859.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1157.1" y="1870.0"></text>
</g>
<g>
<title>ConINode::Opcode() const (1 samples, 0.08%)</title><rect x="1155.0" y="1907.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1158.0" y="1918.0"></text>
</g>
<g>
<title>LoadBNode::Ideal(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1155.9" y="1907.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1158.9" y="1918.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.08%)</title><rect x="1155.9" y="1891.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1158.9" y="1902.0"></text>
</g>
<g>
<title>AllocateNode::Ideal_allocation(Node*, PhaseTransform*, long&amp;) (1 samples, 0.08%)</title><rect x="1155.9" y="1875.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.9" y="1886.0"></text>
</g>
<g>
<title>AddPNode::Ideal_base_and_offset(Node*, PhaseTransform*, long&amp;) (1 samples, 0.08%)</title><rect x="1155.9" y="1859.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.9" y="1870.0"></text>
</g>
<g>
<title>MemBarNode::Ideal(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1156.9" y="1907.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.9" y="1918.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.08%)</title><rect x="1157.8" y="1907.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.8" y="1918.0"></text>
</g>
<g>
<title>Node::hash() const (1 samples, 0.08%)</title><rect x="1157.8" y="1891.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1160.8" y="1902.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.08%)</title><rect x="1158.7" y="1907.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.7" y="1918.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1159.6" y="1907.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.6" y="1918.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1159.6" y="1891.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.6" y="1902.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.08%)</title><rect x="1159.6" y="1875.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.6" y="1886.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.08%)</title><rect x="1159.6" y="1859.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.6" y="1870.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (1 samples, 0.08%)</title><rect x="1159.6" y="1843.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.6" y="1854.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.08%)</title><rect x="1159.6" y="1827.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1162.6" y="1838.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.08%)</title><rect x="1160.5" y="1907.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.5" y="1918.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.08%)</title><rect x="1160.5" y="1891.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.5" y="1902.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.08%)</title><rect x="1161.5" y="1939.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1164.5" y="1950.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.08%)</title><rect x="1161.5" y="1923.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.5" y="1934.0"></text>
</g>
<g>
<title>SubINode::sub(Type const*, Type const*) const (1 samples, 0.08%)</title><rect x="1161.5" y="1907.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1164.5" y="1918.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (1 samples, 0.08%)</title><rect x="1162.4" y="1955.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.4" y="1966.0"></text>
</g>
<g>
<title>PhaseStringOpts::PhaseStringOpts(PhaseGVN*, Unique_Node_List*) (1 samples, 0.08%)</title><rect x="1162.4" y="1939.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.4" y="1950.0"></text>
</g>
<g>
<title>PhaseStringOpts::replace_string_concat(StringConcat*) (1 samples, 0.08%)</title><rect x="1162.4" y="1923.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1165.4" y="1934.0"></text>
</g>
<g>
<title>GraphKit::replace_call(CallNode*, Node*, bool) (1 samples, 0.08%)</title><rect x="1162.4" y="1907.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.4" y="1918.0"></text>
</g>
<g>
<title>Compile::gvn_replace_by(Node*, Node*) (1 samples, 0.08%)</title><rect x="1162.4" y="1891.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.4" y="1902.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.08%)</title><rect x="1162.4" y="1875.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.4" y="1886.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.08%)</title><rect x="1163.3" y="1955.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.3" y="1966.0"></text>
</g>
<g>
<title>Type::Initialize(Compile*) (1 samples, 0.08%)</title><rect x="1163.3" y="1939.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.3" y="1950.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.08%)</title><rect x="1163.3" y="1923.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1166.3" y="1934.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.08%)</title><rect x="1163.3" y="1907.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.3" y="1918.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="1163.3" y="1891.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1166.3" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1163.3" y="1875.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1166.3" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1163.3" y="1859.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1166.3" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1163.3" y="1843.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1166.3" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1163.3" y="1827.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1166.3" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1163.3" y="1811.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1166.3" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1163.3" y="1795.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1166.3" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1163.3" y="1779.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1166.3" y="1790.0"></text>
</g>
<g>
<title>Matcher::Matcher() (1 samples, 0.08%)</title><rect x="1164.2" y="1955.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1167.2" y="1966.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1164.2" y="1939.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1167.2" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1164.2" y="1923.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1167.2" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1164.2" y="1907.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1167.2" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1164.2" y="1891.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1167.2" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1164.2" y="1875.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1167.2" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1164.2" y="1859.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1167.2" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1164.2" y="1843.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1167.2" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1164.2" y="1827.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1167.2" y="1838.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (18 samples, 1.40%)</title><rect x="1165.1" y="1955.0" width="16.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.1" y="1966.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (18 samples, 1.40%)</title><rect x="1165.1" y="1939.0" width="16.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.1" y="1950.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (18 samples, 1.40%)</title><rect x="1165.1" y="1923.0" width="16.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.1" y="1934.0"></text>
</g>
<g>
<title>Parse::do_one_block() (18 samples, 1.40%)</title><rect x="1165.1" y="1907.0" width="16.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.1" y="1918.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (18 samples, 1.40%)</title><rect x="1165.1" y="1891.0" width="16.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.1" y="1902.0"></text>
</g>
<g>
<title>Parse::do_call() (18 samples, 1.40%)</title><rect x="1165.1" y="1875.0" width="16.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.1" y="1886.0"></text>
</g>
<g>
<title>LateInlineMHCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1165.1" y="1859.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.1" y="1870.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1165.1" y="1843.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.1" y="1854.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool) (1 samples, 0.08%)</title><rect x="1165.1" y="1827.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.1" y="1838.0"></text>
</g>
<g>
<title>GraphKit::set_all_memory(Node*) (1 samples, 0.08%)</title><rect x="1165.1" y="1811.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1168.1" y="1822.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.08%)</title><rect x="1165.1" y="1795.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.1" y="1806.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.08%)</title><rect x="1165.1" y="1779.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.1" y="1790.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.08%)</title><rect x="1165.1" y="1763.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.1" y="1774.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 1.17%)</title><rect x="1166.1" y="1859.0" width="13.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.1" y="1870.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 1.17%)</title><rect x="1166.1" y="1843.0" width="13.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.1" y="1854.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (15 samples, 1.17%)</title><rect x="1166.1" y="1827.0" width="13.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.1" y="1838.0"></text>
</g>
<g>
<title>Parse::do_one_block() (15 samples, 1.17%)</title><rect x="1166.1" y="1811.0" width="13.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.1" y="1822.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.08%)</title><rect x="1166.1" y="1795.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.1" y="1806.0"></text>
</g>
<g>
<title>Parse::catch_inline_exceptions(SafePointNode*) (1 samples, 0.08%)</title><rect x="1166.1" y="1779.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.1" y="1790.0"></text>
</g>
<g>
<title>LoadKlassNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, TypeKlassPtr const*) (1 samples, 0.08%)</title><rect x="1166.1" y="1763.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.1" y="1774.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.08%)</title><rect x="1166.1" y="1747.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.1" y="1758.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.08%)</title><rect x="1166.1" y="1731.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.1" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (14 samples, 1.09%)</title><rect x="1167.0" y="1795.0" width="12.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.0" y="1806.0"></text>
</g>
<g>
<title>Parse::do_call() (14 samples, 1.09%)</title><rect x="1167.0" y="1779.0" width="12.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.0" y="1790.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.94%)</title><rect x="1167.0" y="1763.0" width="11.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.0" y="1774.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.94%)</title><rect x="1167.0" y="1747.0" width="11.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1170.0" y="1758.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.94%)</title><rect x="1167.0" y="1731.0" width="11.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.0" y="1742.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.94%)</title><rect x="1167.0" y="1715.0" width="11.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.0" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.94%)</title><rect x="1167.0" y="1699.0" width="11.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1170.0" y="1710.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.78%)</title><rect x="1167.9" y="1683.0" width="9.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1170.9" y="1694.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.08%)</title><rect x="1167.9" y="1667.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.9" y="1678.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.08%)</title><rect x="1167.9" y="1651.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.9" y="1662.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.08%)</title><rect x="1167.9" y="1635.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.9" y="1646.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.08%)</title><rect x="1167.9" y="1619.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.9" y="1630.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.08%)</title><rect x="1167.9" y="1603.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1170.9" y="1614.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1167.9" y="1587.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1170.9" y="1598.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1167.9" y="1571.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.9" y="1582.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1167.9" y="1555.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1170.9" y="1566.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1167.9" y="1539.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1170.9" y="1550.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.08%)</title><rect x="1167.9" y="1523.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.9" y="1534.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.08%)</title><rect x="1167.9" y="1507.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.9" y="1518.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.55%)</title><rect x="1168.8" y="1667.0" width="6.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.8" y="1678.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.55%)</title><rect x="1168.8" y="1651.0" width="6.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.8" y="1662.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.39%)</title><rect x="1168.8" y="1635.0" width="4.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.8" y="1646.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.39%)</title><rect x="1168.8" y="1619.0" width="4.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.8" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.39%)</title><rect x="1168.8" y="1603.0" width="4.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1171.8" y="1614.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.31%)</title><rect x="1168.8" y="1587.0" width="3.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1171.8" y="1598.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.08%)</title><rect x="1168.8" y="1571.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.8" y="1582.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.08%)</title><rect x="1168.8" y="1555.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1171.8" y="1566.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.08%)</title><rect x="1168.8" y="1539.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1171.8" y="1550.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.08%)</title><rect x="1168.8" y="1523.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1171.8" y="1534.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.08%)</title><rect x="1168.8" y="1507.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1171.8" y="1518.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1168.8" y="1491.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.8" y="1502.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1168.8" y="1475.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.8" y="1486.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1168.8" y="1459.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.8" y="1470.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_new(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1168.8" y="1443.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.8" y="1454.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_klass(bool&amp;) (1 samples, 0.08%)</title><rect x="1168.8" y="1427.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.8" y="1438.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1168.8" y="1411.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.8" y="1422.0"></text>
</g>
<g>
<title>ConstantPool::klass_at_if_loaded(constantPoolHandle const&amp;, int) (1 samples, 0.08%)</title><rect x="1168.8" y="1395.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.8" y="1406.0"></text>
</g>
<g>
<title>SystemDictionary::find(Symbol*, Handle, Handle, Thread*) (1 samples, 0.08%)</title><rect x="1168.8" y="1379.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.8" y="1390.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.08%)</title><rect x="1168.8" y="1363.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.8" y="1374.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.08%)</title><rect x="1169.8" y="1571.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.8" y="1582.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.08%)</title><rect x="1169.8" y="1555.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.8" y="1566.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.08%)</title><rect x="1169.8" y="1539.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.8" y="1550.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.08%)</title><rect x="1169.8" y="1523.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.8" y="1534.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1170.7" y="1571.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.7" y="1582.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1170.7" y="1555.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.7" y="1566.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1170.7" y="1539.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.7" y="1550.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1170.7" y="1523.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.7" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1170.7" y="1507.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.7" y="1518.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1170.7" y="1491.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.7" y="1502.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1170.7" y="1475.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.7" y="1486.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1170.7" y="1459.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.7" y="1470.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1170.7" y="1443.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.7" y="1454.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1170.7" y="1427.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.7" y="1438.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1170.7" y="1411.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.7" y="1422.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1170.7" y="1395.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.7" y="1406.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1170.7" y="1379.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1173.7" y="1390.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1170.7" y="1363.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.7" y="1374.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1170.7" y="1347.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.7" y="1358.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1170.7" y="1331.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.7" y="1342.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1170.7" y="1315.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.7" y="1326.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.08%)</title><rect x="1170.7" y="1299.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1173.7" y="1310.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.08%)</title><rect x="1170.7" y="1283.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.7" y="1294.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.08%)</title><rect x="1170.7" y="1267.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.7" y="1278.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.08%)</title><rect x="1170.7" y="1251.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.7" y="1262.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.08%)</title><rect x="1170.7" y="1235.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.7" y="1246.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.08%)</title><rect x="1170.7" y="1219.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.7" y="1230.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.08%)</title><rect x="1170.7" y="1203.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.7" y="1214.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.08%)</title><rect x="1171.6" y="1299.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.6" y="1310.0"></text>
</g>
<g>
<title>Parse::dynamic_branch_prediction(float&amp;, BoolTest::mask, Node*) (1 samples, 0.08%)</title><rect x="1171.6" y="1283.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.6" y="1294.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.08%)</title><rect x="1171.6" y="1267.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.6" y="1278.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.08%)</title><rect x="1172.5" y="1587.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.5" y="1598.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.08%)</title><rect x="1172.5" y="1571.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.5" y="1582.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.08%)</title><rect x="1172.5" y="1555.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.5" y="1566.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.08%)</title><rect x="1172.5" y="1539.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.5" y="1550.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.08%)</title><rect x="1172.5" y="1523.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.5" y="1534.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.08%)</title><rect x="1172.5" y="1507.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.5" y="1518.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.08%)</title><rect x="1172.5" y="1491.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.5" y="1502.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool) (1 samples, 0.08%)</title><rect x="1172.5" y="1475.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.5" y="1486.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.08%)</title><rect x="1172.5" y="1459.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.5" y="1470.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.08%)</title><rect x="1172.5" y="1443.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.5" y="1454.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.08%)</title><rect x="1172.5" y="1427.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.5" y="1438.0"></text>
</g>
<g>
<title>MemBarVolatileNode::Opcode() const (1 samples, 0.08%)</title><rect x="1172.5" y="1411.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.5" y="1422.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.08%)</title><rect x="1173.4" y="1635.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.4" y="1646.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (1 samples, 0.08%)</title><rect x="1174.4" y="1635.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.4" y="1646.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.08%)</title><rect x="1174.4" y="1619.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.4" y="1630.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.08%)</title><rect x="1174.4" y="1603.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.4" y="1614.0"></text>
</g>
<g>
<title>ciMethodData::ciMethodData(MethodData*) (1 samples, 0.08%)</title><rect x="1174.4" y="1587.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.4" y="1598.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.08%)</title><rect x="1174.4" y="1571.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1177.4" y="1582.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1175.3" y="1667.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.3" y="1678.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1175.3" y="1651.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.3" y="1662.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1175.3" y="1635.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.3" y="1646.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1175.3" y="1619.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1178.3" y="1630.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1175.3" y="1603.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.3" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1175.3" y="1587.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.3" y="1598.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1175.3" y="1571.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.3" y="1582.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1175.3" y="1555.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.3" y="1566.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1175.3" y="1539.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.3" y="1550.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1175.3" y="1523.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.3" y="1534.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1175.3" y="1507.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.3" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1175.3" y="1491.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.3" y="1502.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1175.3" y="1475.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.3" y="1486.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1175.3" y="1459.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.3" y="1470.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1175.3" y="1443.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.3" y="1454.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (1 samples, 0.08%)</title><rect x="1175.3" y="1427.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.3" y="1438.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.08%)</title><rect x="1175.3" y="1411.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.3" y="1422.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.08%)</title><rect x="1175.3" y="1395.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.3" y="1406.0"></text>
</g>
<g>
<title>ciMethodData::ciMethodData(MethodData*) (1 samples, 0.08%)</title><rect x="1175.3" y="1379.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.3" y="1390.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.08%)</title><rect x="1175.3" y="1363.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1178.3" y="1374.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.2" y="1459.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.2" y="1470.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.2" y="1443.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.2" y="1454.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1176.2" y="1427.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.2" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1176.2" y="1411.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.2" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1176.2" y="1395.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.2" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1176.2" y="1379.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.2" y="1390.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1176.2" y="1363.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.2" y="1374.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.2" y="1347.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.2" y="1358.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1176.2" y="1331.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.2" y="1342.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1176.2" y="1315.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.2" y="1326.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1176.2" y="1299.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.2" y="1310.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1176.2" y="1283.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.2" y="1294.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1176.2" y="1267.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.2" y="1278.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.2" y="1251.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.2" y="1262.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1176.2" y="1235.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.2" y="1246.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1176.2" y="1219.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.2" y="1230.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1176.2" y="1203.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.2" y="1214.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1176.2" y="1187.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.2" y="1198.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1176.2" y="1171.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.2" y="1182.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.2" y="1155.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.2" y="1166.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1176.2" y="1139.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.2" y="1150.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1176.2" y="1123.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.2" y="1134.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1176.2" y="1107.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.2" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1176.2" y="1091.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.2" y="1102.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1176.2" y="1075.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.2" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1176.2" y="1059.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.2" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1176.2" y="1043.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.2" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1176.2" y="1027.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.2" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1176.2" y="1011.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.2" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1176.2" y="995.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.2" y="1006.0"></text>
</g>
<g>
<title>Parse::do_instanceof() (1 samples, 0.08%)</title><rect x="1176.2" y="979.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.2" y="990.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.08%)</title><rect x="1176.2" y="963.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.2" y="974.0"></text>
</g>
<g>
<title>ConNode::make(Type const*) (1 samples, 0.08%)</title><rect x="1176.2" y="947.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.2" y="958.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.08%)</title><rect x="1177.1" y="1683.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.1" y="1694.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.08%)</title><rect x="1177.1" y="1667.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.1" y="1678.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.08%)</title><rect x="1177.1" y="1651.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.1" y="1662.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.08%)</title><rect x="1177.1" y="1635.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.1" y="1646.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.08%)</title><rect x="1177.1" y="1619.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.1" y="1630.0"></text>
</g>
<g>
<title>G1BarrierSetC2::post_barrier(GraphKit*, Node*, Node*, Node*, Node*, unsigned int, Node*, BasicType, bool) const (1 samples, 0.08%)</title><rect x="1177.1" y="1603.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.1" y="1614.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*) (1 samples, 0.08%)</title><rect x="1177.1" y="1587.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.1" y="1598.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1178.0" y="1763.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.0" y="1774.0"></text>
</g>
<g>
<title>UncommonTrapCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1178.0" y="1747.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.0" y="1758.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.08%)</title><rect x="1178.0" y="1731.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.0" y="1742.0"></text>
</g>
<g>
<title>OptoRuntime::uncommon_trap_Type() (1 samples, 0.08%)</title><rect x="1178.0" y="1715.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.0" y="1726.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.08%)</title><rect x="1178.0" y="1699.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.0" y="1710.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.08%)</title><rect x="1178.0" y="1683.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.0" y="1694.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.08%)</title><rect x="1179.0" y="1763.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.0" y="1774.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1179.0" y="1747.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.0" y="1758.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1179.0" y="1731.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.0" y="1742.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.08%)</title><rect x="1179.0" y="1715.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.0" y="1726.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.08%)</title><rect x="1179.0" y="1699.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.0" y="1710.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1179.9" y="1859.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.9" y="1870.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1179.9" y="1843.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.9" y="1854.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1179.9" y="1827.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.9" y="1838.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1179.9" y="1811.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.9" y="1822.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1179.9" y="1795.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.9" y="1806.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1179.9" y="1779.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.9" y="1790.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.16%)</title><rect x="1179.9" y="1763.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.9" y="1774.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.16%)</title><rect x="1179.9" y="1747.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.9" y="1758.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.16%)</title><rect x="1179.9" y="1731.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.9" y="1742.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.16%)</title><rect x="1179.9" y="1715.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.9" y="1726.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.16%)</title><rect x="1179.9" y="1699.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.9" y="1710.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.16%)</title><rect x="1179.9" y="1683.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.9" y="1694.0"></text>
</g>
<g>
<title>Parse::add_safepoint() (1 samples, 0.08%)</title><rect x="1179.9" y="1667.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.9" y="1678.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.08%)</title><rect x="1179.9" y="1651.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.9" y="1662.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.08%)</title><rect x="1179.9" y="1635.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.9" y="1646.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1180.8" y="1667.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.8" y="1678.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1180.8" y="1651.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.8" y="1662.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1180.8" y="1635.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.8" y="1646.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1180.8" y="1619.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.8" y="1630.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1180.8" y="1603.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.8" y="1614.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1180.8" y="1587.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.8" y="1598.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1180.8" y="1571.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.8" y="1582.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1180.8" y="1555.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.8" y="1566.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1180.8" y="1539.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.8" y="1550.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1180.8" y="1523.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.8" y="1534.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1180.8" y="1507.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.8" y="1518.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1180.8" y="1491.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.8" y="1502.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1180.8" y="1475.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.8" y="1486.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1180.8" y="1459.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.8" y="1470.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.08%)</title><rect x="1180.8" y="1443.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.8" y="1454.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.08%)</title><rect x="1180.8" y="1427.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.8" y="1438.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.08%)</title><rect x="1180.8" y="1411.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.8" y="1422.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.08%)</title><rect x="1180.8" y="1395.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.8" y="1406.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.08%)</title><rect x="1180.8" y="1379.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.8" y="1390.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.08%)</title><rect x="1180.8" y="1363.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.8" y="1374.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.08%)</title><rect x="1180.8" y="1347.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.8" y="1358.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.08%)</title><rect x="1180.8" y="1331.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.8" y="1342.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.08%)</title><rect x="1180.8" y="1315.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.8" y="1326.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.08%)</title><rect x="1180.8" y="1299.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.8" y="1310.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.08%)</title><rect x="1180.8" y="1283.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.8" y="1294.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1180.8" y="1267.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.8" y="1278.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.08%)</title><rect x="1180.8" y="1251.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.8" y="1262.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1180.8" y="1235.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.8" y="1246.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.08%)</title><rect x="1180.8" y="1219.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.8" y="1230.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.08%)</title><rect x="1180.8" y="1203.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.8" y="1214.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.08%)</title><rect x="1180.8" y="1187.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.8" y="1198.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.08%)</title><rect x="1180.8" y="1171.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.8" y="1182.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.08%)</title><rect x="1180.8" y="1155.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.8" y="1166.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.08%)</title><rect x="1180.8" y="1139.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.8" y="1150.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.16%)</title><rect x="1181.7" y="1955.0" width="1.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.7" y="1966.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.08%)</title><rect x="1181.7" y="1939.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.7" y="1950.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.08%)</title><rect x="1182.6" y="1939.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.6" y="1950.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.08%)</title><rect x="1183.6" y="1955.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.6" y="1966.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.08%)</title><rect x="1183.6" y="1939.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.6" y="1950.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.08%)</title><rect x="1183.6" y="1923.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.6" y="1934.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (1 samples, 0.08%)</title><rect x="1183.6" y="1907.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.6" y="1918.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.08%)</title><rect x="1183.6" y="1891.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1186.6" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.6" y="1875.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1186.6" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.6" y="1859.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1186.6" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.6" y="1843.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1186.6" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.6" y="1827.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1186.6" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.6" y="1811.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1186.6" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.6" y="1795.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1186.6" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.6" y="1779.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1186.6" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1183.6" y="1763.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1186.6" y="1774.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (4 samples, 0.31%)</title><rect x="1184.5" y="1987.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.5" y="1998.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (4 samples, 0.31%)</title><rect x="1184.5" y="1971.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.5" y="1982.0"></text>
</g>
<g>
<title>Compilation::compile_method() (4 samples, 0.31%)</title><rect x="1184.5" y="1955.0" width="3.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.5" y="1966.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (4 samples, 0.31%)</title><rect x="1184.5" y="1939.0" width="3.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.5" y="1950.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (1 samples, 0.08%)</title><rect x="1184.5" y="1923.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.5" y="1934.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.08%)</title><rect x="1184.5" y="1907.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.5" y="1918.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.08%)</title><rect x="1184.5" y="1891.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.5" y="1902.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.08%)</title><rect x="1184.5" y="1875.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.5" y="1886.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.08%)</title><rect x="1184.5" y="1859.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.5" y="1870.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.08%)</title><rect x="1184.5" y="1843.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.5" y="1854.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.08%)</title><rect x="1184.5" y="1827.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.5" y="1838.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.08%)</title><rect x="1184.5" y="1811.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.5" y="1822.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.08%)</title><rect x="1184.5" y="1795.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.5" y="1806.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.08%)</title><rect x="1184.5" y="1779.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.5" y="1790.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.08%)</title><rect x="1184.5" y="1763.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.5" y="1774.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.08%)</title><rect x="1185.4" y="1923.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.4" y="1934.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.08%)</title><rect x="1185.4" y="1907.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.4" y="1918.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_profile_call(LIR_OpProfileCall*) (1 samples, 0.08%)</title><rect x="1185.4" y="1891.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.4" y="1902.0"></text>
</g>
<g>
<title>Assembler::addq(Address, int) (1 samples, 0.08%)</title><rect x="1185.4" y="1875.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.4" y="1886.0"></text>
</g>
<g>
<title>Assembler::emit_arith_operand(int, RegisterImpl*, Address, int) (1 samples, 0.08%)</title><rect x="1185.4" y="1859.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.4" y="1870.0"></text>
</g>
<g>
<title>Assembler::emit_operand(RegisterImpl*, RegisterImpl*, RegisterImpl*, Address::ScaleFactor, int, RelocationHolder const&amp;, int) (1 samples, 0.08%)</title><rect x="1185.4" y="1843.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.4" y="1854.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (2 samples, 0.16%)</title><rect x="1186.3" y="1923.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.3" y="1934.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (1 samples, 0.08%)</title><rect x="1186.3" y="1907.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.3" y="1918.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (1 samples, 0.08%)</title><rect x="1186.3" y="1891.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.3" y="1902.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (1 samples, 0.08%)</title><rect x="1186.3" y="1875.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.3" y="1886.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (1 samples, 0.08%)</title><rect x="1186.3" y="1859.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.3" y="1870.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (1 samples, 0.08%)</title><rect x="1186.3" y="1843.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.3" y="1854.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.08%)</title><rect x="1187.2" y="1907.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.2" y="1918.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.08%)</title><rect x="1187.2" y="1891.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.2" y="1902.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.08%)</title><rect x="1187.2" y="1875.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.2" y="1886.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.08%)</title><rect x="1187.2" y="1859.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.2" y="1870.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.08%)</title><rect x="1187.2" y="1843.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.2" y="1854.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.08%)</title><rect x="1187.2" y="1827.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.2" y="1838.0"></text>
</g>
<g>
<title>ThreadCritical::ThreadCritical() (1 samples, 0.08%)</title><rect x="1187.2" y="1811.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.2" y="1822.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.08%)</title><rect x="1188.2" y="2019.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.2" y="2030.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.08%)</title><rect x="1188.2" y="2003.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.2" y="2014.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.08%)</title><rect x="1188.2" y="1987.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.2" y="1998.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (1 samples, 0.08%)</title><rect x="1188.2" y="1971.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1191.2" y="1982.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.08%)</title><rect x="1188.2" y="1955.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.2" y="1966.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.08%)</title><rect x="1189.1" y="2051.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.1" y="2062.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.08%)</title><rect x="1189.1" y="2035.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.1" y="2046.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.08%)</title><rect x="1189.1" y="2019.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.1" y="2030.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.08%)</title><rect x="1189.1" y="2003.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.1" y="2014.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.08%)</title><rect x="1189.1" y="1987.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.1" y="1998.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.08%)</title><rect x="1189.1" y="1971.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.1" y="1982.0"></text>
</g>
<g>
<title>G1CollectedHeap::gc_prologue(bool) (1 samples, 0.08%)</title><rect x="1189.1" y="1955.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.1" y="1966.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::accumulate_statistics_before_gc() (1 samples, 0.08%)</title><rect x="1189.1" y="1939.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.1" y="1950.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1923.0" width="0.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1192.1" y="1934.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1907.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1192.1" y="1918.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1891.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1192.1" y="1902.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1875.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1192.1" y="1886.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1859.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1192.1" y="1870.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1843.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1192.1" y="1854.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1827.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1192.1" y="1838.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1811.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1192.1" y="1822.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1795.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1192.1" y="1806.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1779.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1192.1" y="1790.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1763.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1192.1" y="1774.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1747.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1192.1" y="1758.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1731.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1192.1" y="1742.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1715.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1192.1" y="1726.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1699.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1192.1" y="1710.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.08%)</title><rect x="1189.1" y="1683.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1192.1" y="1694.0"></text>
</g>
</g>
</svg>
