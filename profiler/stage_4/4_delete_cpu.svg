<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1334" onload="init(evt)" viewBox="0 0 1200 1334" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1317"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1317"> </text>
<g id="frames">
<g>
<title>all (1,094 samples, 100.00%)</title><rect x="10.0" y="1283.0" width="1180.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="1294.0">all</text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.09%)</title><rect x="10.0" y="1267.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.0" y="1278.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (7 samples, 0.64%)</title><rect x="11.1" y="1267.0" width="7.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.1" y="1278.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.55%)</title><rect x="12.2" y="1251.0" width="6.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.2" y="1262.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.55%)</title><rect x="12.2" y="1235.0" width="6.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="15.2" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.55%)</title><rect x="12.2" y="1219.0" width="6.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.2" y="1230.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.09%)</title><rect x="12.2" y="1203.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.2" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.09%)</title><rect x="13.2" y="1203.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.2" y="1214.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.09%)</title><rect x="14.3" y="1203.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.3" y="1214.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.09%)</title><rect x="15.4" y="1203.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="18.4" y="1214.0"></text>
</g>
<g>
<title>__memset_erms (2 samples, 0.18%)</title><rect x="16.5" y="1203.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="19.5" y="1214.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.09%)</title><rect x="18.6" y="1267.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="21.6" y="1278.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.09%)</title><rect x="18.6" y="1251.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="21.6" y="1262.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.09%)</title><rect x="18.6" y="1235.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="21.6" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.09%)</title><rect x="18.6" y="1219.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="21.6" y="1230.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.09%)</title><rect x="18.6" y="1203.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="21.6" y="1214.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.09%)</title><rect x="18.6" y="1187.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="21.6" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.18%)</title><rect x="19.7" y="1267.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="22.7" y="1278.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.18%)</title><rect x="19.7" y="1251.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="22.7" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.09%)</title><rect x="19.7" y="1235.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="22.7" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.09%)</title><rect x="19.7" y="1219.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="22.7" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (1 samples, 0.09%)</title><rect x="20.8" y="1235.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="23.8" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.09%)</title><rect x="20.8" y="1219.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="23.8" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.09%)</title><rect x="20.8" y="1203.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="23.8" y="1214.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.09%)</title><rect x="21.9" y="1267.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="24.9" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.09%)</title><rect x="21.9" y="1251.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="24.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="22.9" y="1267.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="25.9" y="1278.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.09%)</title><rect x="22.9" y="1251.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="25.9" y="1262.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.27%)</title><rect x="24.0" y="1267.0" width="3.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="27.0" y="1278.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.09%)</title><rect x="27.3" y="1267.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="30.3" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="27.3" y="1251.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="30.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="27.3" y="1235.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="30.3" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="27.3" y="1219.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="30.3" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="27.3" y="1203.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="30.3" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="27.3" y="1187.0" width="1.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="30.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="27.3" y="1171.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="30.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="27.3" y="1155.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="30.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.run (686 samples, 62.71%)</title><rect x="28.3" y="1267.0" width="740.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.3" y="1278.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (686 samples, 62.71%)</title><rect x="28.3" y="1251.0" width="740.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="31.3" y="1262.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (686 samples, 62.71%)</title><rect x="28.3" y="1235.0" width="740.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.3" y="1246.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (11 samples, 1.01%)</title><rect x="29.4" y="1219.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="32.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 1.01%)</title><rect x="29.4" y="1203.0" width="11.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="32.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 1.01%)</title><rect x="29.4" y="1187.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="32.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (2 samples, 0.18%)</title><rect x="37.0" y="1171.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="40.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="39.1" y="1171.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="42.1" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$62/2121189026.run (1 samples, 0.09%)</title><rect x="40.2" y="1155.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (152 samples, 13.89%)</title><rect x="41.3" y="1219.0" width="163.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="44.3" y="1230.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (150 samples, 13.71%)</title><rect x="43.4" y="1203.0" width="161.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.4" y="1214.0">java/util/concurrent/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (143 samples, 13.07%)</title><rect x="43.4" y="1187.0" width="154.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.4" y="1198.0">java/util/concurrent..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.09%)</title><rect x="49.9" y="1171.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (7 samples, 0.64%)</title><rect x="51.0" y="1171.0" width="7.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="54.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.64%)</title><rect x="51.0" y="1155.0" width="7.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="54.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.18%)</title><rect x="55.3" y="1139.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="58.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="55.3" y="1123.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="58.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.09%)</title><rect x="55.3" y="1107.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="58.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="56.4" y="1107.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.4" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.09%)</title><rect x="56.4" y="1091.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="59.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="56.4" y="1075.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="59.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="56.4" y="1059.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="59.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="56.4" y="1043.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="59.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="56.4" y="1027.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="59.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="56.4" y="1011.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="59.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="56.4" y="995.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="59.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="56.4" y="979.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="59.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="56.4" y="963.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="59.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.09%)</title><rect x="57.5" y="1139.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="60.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (127 samples, 11.61%)</title><rect x="58.5" y="1171.0" width="137.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.5" y="1182.0">java/util/concurr..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (126 samples, 11.52%)</title><rect x="59.6" y="1155.0" width="135.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="62.6" y="1166.0">jdk/internal/misc..</text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.18%)</title><rect x="61.8" y="1139.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="64.8" y="1150.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.09%)</title><rect x="63.9" y="1139.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="66.9" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Park (57 samples, 5.21%)</title><rect x="65.0" y="1139.0" width="61.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="68.0" y="1150.0">Unsafe..</text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.09%)</title><rect x="70.4" y="1123.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="73.4" y="1134.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.18%)</title><rect x="71.5" y="1123.0" width="2.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="74.5" y="1134.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.09%)</title><rect x="73.6" y="1123.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="76.6" y="1134.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (19 samples, 1.74%)</title><rect x="74.7" y="1123.0" width="20.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="77.7" y="1134.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.55%)</title><rect x="87.7" y="1107.0" width="6.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="90.7" y="1118.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.09%)</title><rect x="94.1" y="1107.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="97.1" y="1118.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.09%)</title><rect x="95.2" y="1123.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="98.2" y="1134.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.09%)</title><rect x="96.3" y="1123.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="99.3" y="1134.0"></text>
</g>
<g>
<title>__lll_unlock_wake (14 samples, 1.28%)</title><rect x="97.4" y="1123.0" width="15.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="100.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 1.19%)</title><rect x="98.4" y="1107.0" width="14.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="101.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 1.19%)</title><rect x="98.4" y="1091.0" width="14.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="101.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.82%)</title><rect x="102.8" y="1075.0" width="9.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="105.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.64%)</title><rect x="104.9" y="1059.0" width="7.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="107.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.64%)</title><rect x="104.9" y="1043.0" width="7.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="107.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="111.4" y="1027.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="114.4" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.09%)</title><rect x="112.5" y="1123.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="115.5" y="1134.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.27%)</title><rect x="113.5" y="1123.0" width="3.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="116.5" y="1134.0"></text>
</g>
<g>
<title>_init (1 samples, 0.09%)</title><rect x="116.8" y="1123.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="119.8" y="1134.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.09%)</title><rect x="117.9" y="1123.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="120.9" y="1134.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.27%)</title><rect x="118.9" y="1123.0" width="3.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="121.9" y="1134.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.37%)</title><rect x="122.2" y="1123.0" width="4.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="125.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 5.67%)</title><rect x="126.5" y="1139.0" width="66.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="129.5" y="1150.0">[unknown]</text>
</g>
<g>
<title>__pthread_cond_wait (55 samples, 5.03%)</title><rect x="126.5" y="1123.0" width="59.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="129.5" y="1134.0">__pthr..</text>
</g>
<g>
<title>[unknown] (43 samples, 3.93%)</title><rect x="139.4" y="1107.0" width="46.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="142.4" y="1118.0">[unk..</text>
</g>
<g>
<title>[unknown] (43 samples, 3.93%)</title><rect x="139.4" y="1091.0" width="46.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="142.4" y="1102.0">[unk..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.56%)</title><rect x="143.7" y="1075.0" width="42.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="146.7" y="1086.0">[unk..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.56%)</title><rect x="143.7" y="1059.0" width="42.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="146.7" y="1070.0">[unk..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.56%)</title><rect x="143.7" y="1043.0" width="42.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="146.7" y="1054.0">[unk..</text>
</g>
<g>
<title>[unknown] (37 samples, 3.38%)</title><rect x="145.9" y="1027.0" width="39.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="148.9" y="1038.0">[un..</text>
</g>
<g>
<title>[unknown] (28 samples, 2.56%)</title><rect x="155.6" y="1011.0" width="30.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="158.6" y="1022.0">[u..</text>
</g>
<g>
<title>[unknown] (23 samples, 2.10%)</title><rect x="161.0" y="995.0" width="24.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="164.0" y="1006.0">[..</text>
</g>
<g>
<title>[unknown] (21 samples, 1.92%)</title><rect x="163.2" y="979.0" width="22.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="166.2" y="990.0">[..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="184.7" y="963.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="187.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="184.7" y="947.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="187.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="184.7" y="931.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="187.7" y="942.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.27%)</title><rect x="185.8" y="1123.0" width="3.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="188.8" y="1134.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.09%)</title><rect x="189.0" y="1123.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="192.0" y="1134.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.27%)</title><rect x="190.1" y="1123.0" width="3.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="193.1" y="1134.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.18%)</title><rect x="193.4" y="1139.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="196.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.18%)</title><rect x="195.5" y="1171.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.09%)</title><rect x="197.7" y="1187.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.55%)</title><rect x="198.8" y="1187.0" width="6.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="201.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.55%)</title><rect x="198.8" y="1171.0" width="6.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="201.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.55%)</title><rect x="198.8" y="1155.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.55%)</title><rect x="198.8" y="1139.0" width="6.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.37%)</title><rect x="200.9" y="1123.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="203.9" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.09%)</title><rect x="200.9" y="1107.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="203.9" y="1118.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.09%)</title><rect x="200.9" y="1091.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="203.9" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.27%)</title><rect x="202.0" y="1107.0" width="3.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="205.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="202.0" y="1091.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="205.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="202.0" y="1075.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="205.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="202.0" y="1059.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="205.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="202.0" y="1043.0" width="3.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="205.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="202.0" y="1027.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="205.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="202.0" y="1011.0" width="3.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="205.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="202.0" y="995.0" width="3.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="205.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="202.0" y="979.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="205.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$62/2121189026.run (522 samples, 47.71%)</title><rect x="205.2" y="1219.0" width="563.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="208.2" y="1230.0">ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$62/2121189026.run</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.lambda$executeAsync$4 (522 samples, 47.71%)</title><rect x="205.2" y="1203.0" width="563.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.2" y="1214.0">ru/mail/polis/service/alex/AsyncServiceImpl.lambda$executeAsync$4</text>
</g>
<g>
<title>itable stub (3 samples, 0.27%)</title><rect x="208.5" y="1187.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="211.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (251 samples, 22.94%)</title><rect x="211.7" y="1187.0" width="270.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="214.7" y="1198.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (248 samples, 22.67%)</title><rect x="211.7" y="1171.0" width="267.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="214.7" y="1182.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.27%)</title><rect x="211.7" y="1155.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="214.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.18%)</title><rect x="212.8" y="1139.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="215.8" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.18%)</title><rect x="212.8" y="1123.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.18%)</title><rect x="212.8" y="1107.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.8" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (245 samples, 22.39%)</title><rect x="214.9" y="1155.0" width="264.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="217.9" y="1166.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (244 samples, 22.30%)</title><rect x="216.0" y="1139.0" width="263.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="219.0" y="1150.0">one/nio/net/Session.write</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="216.0" y="1123.0" width="1.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="219.0" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="216.0" y="1107.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="219.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (242 samples, 22.12%)</title><rect x="217.1" y="1123.0" width="261.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="220.1" y="1134.0">one/nio/net/Session$ArrayQueueItem...</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (242 samples, 22.12%)</title><rect x="217.1" y="1107.0" width="261.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="220.1" y="1118.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.18%)</title><rect x="219.3" y="1091.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="222.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.55%)</title><rect x="221.4" y="1091.0" width="6.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="224.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.55%)</title><rect x="221.4" y="1075.0" width="6.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="224.4" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.46%)</title><rect x="221.4" y="1059.0" width="5.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="224.4" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.09%)</title><rect x="221.4" y="1043.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="224.4" y="1054.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.37%)</title><rect x="222.5" y="1043.0" width="4.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="225.5" y="1054.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.09%)</title><rect x="223.6" y="1027.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="226.6" y="1038.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.18%)</title><rect x="224.6" y="1027.0" width="2.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="227.6" y="1038.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.09%)</title><rect x="225.7" y="1011.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="228.7" y="1022.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.09%)</title><rect x="226.8" y="1059.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="229.8" y="1070.0"></text>
</g>
<g>
<title>__send (232 samples, 21.21%)</title><rect x="227.9" y="1091.0" width="250.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="230.9" y="1102.0">__send</text>
</g>
<g>
<title>[unknown] (232 samples, 21.21%)</title><rect x="227.9" y="1075.0" width="250.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="230.9" y="1086.0">[unknown]</text>
</g>
<g>
<title>[unknown] (232 samples, 21.21%)</title><rect x="227.9" y="1059.0" width="250.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="230.9" y="1070.0">[unknown]</text>
</g>
<g>
<title>[unknown] (232 samples, 21.21%)</title><rect x="227.9" y="1043.0" width="250.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="230.9" y="1054.0">[unknown]</text>
</g>
<g>
<title>[unknown] (232 samples, 21.21%)</title><rect x="227.9" y="1027.0" width="250.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="230.9" y="1038.0">[unknown]</text>
</g>
<g>
<title>[unknown] (231 samples, 21.12%)</title><rect x="229.0" y="1011.0" width="249.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="232.0" y="1022.0">[unknown]</text>
</g>
<g>
<title>[unknown] (229 samples, 20.93%)</title><rect x="231.1" y="995.0" width="247.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="234.1" y="1006.0">[unknown]</text>
</g>
<g>
<title>[unknown] (227 samples, 20.75%)</title><rect x="233.3" y="979.0" width="244.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="236.3" y="990.0">[unknown]</text>
</g>
<g>
<title>[unknown] (223 samples, 20.38%)</title><rect x="237.6" y="963.0" width="240.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="240.6" y="974.0">[unknown]</text>
</g>
<g>
<title>[unknown] (206 samples, 18.83%)</title><rect x="255.9" y="947.0" width="222.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="258.9" y="958.0">[unknown]</text>
</g>
<g>
<title>[unknown] (200 samples, 18.28%)</title><rect x="262.4" y="931.0" width="215.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="265.4" y="942.0">[unknown]</text>
</g>
<g>
<title>[unknown] (190 samples, 17.37%)</title><rect x="273.2" y="915.0" width="204.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="276.2" y="926.0">[unknown]</text>
</g>
<g>
<title>[unknown] (183 samples, 16.73%)</title><rect x="280.7" y="899.0" width="197.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="283.7" y="910.0">[unknown]</text>
</g>
<g>
<title>[unknown] (173 samples, 15.81%)</title><rect x="291.5" y="883.0" width="186.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="294.5" y="894.0">[unknown]</text>
</g>
<g>
<title>[unknown] (169 samples, 15.45%)</title><rect x="295.8" y="867.0" width="182.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="298.8" y="878.0">[unknown]</text>
</g>
<g>
<title>[unknown] (166 samples, 15.17%)</title><rect x="299.1" y="851.0" width="179.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="302.1" y="862.0">[unknown]</text>
</g>
<g>
<title>[unknown] (162 samples, 14.81%)</title><rect x="303.4" y="835.0" width="174.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="306.4" y="846.0">[unknown]</text>
</g>
<g>
<title>[unknown] (161 samples, 14.72%)</title><rect x="304.5" y="819.0" width="173.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="307.5" y="830.0">[unknown]</text>
</g>
<g>
<title>[unknown] (156 samples, 14.26%)</title><rect x="309.9" y="803.0" width="168.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="312.9" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (149 samples, 13.62%)</title><rect x="317.4" y="787.0" width="160.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="320.4" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (140 samples, 12.80%)</title><rect x="327.1" y="771.0" width="151.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="330.1" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (119 samples, 10.88%)</title><rect x="349.8" y="755.0" width="128.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="352.8" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (108 samples, 9.87%)</title><rect x="361.6" y="739.0" width="116.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="364.6" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (104 samples, 9.51%)</title><rect x="365.9" y="723.0" width="112.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="368.9" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (99 samples, 9.05%)</title><rect x="371.3" y="707.0" width="106.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="374.3" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (97 samples, 8.87%)</title><rect x="373.5" y="691.0" width="104.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="376.5" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (97 samples, 8.87%)</title><rect x="373.5" y="675.0" width="104.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="376.5" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (97 samples, 8.87%)</title><rect x="373.5" y="659.0" width="104.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="376.5" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (95 samples, 8.68%)</title><rect x="375.6" y="643.0" width="102.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="378.6" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (91 samples, 8.32%)</title><rect x="380.0" y="627.0" width="98.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="383.0" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (90 samples, 8.23%)</title><rect x="381.0" y="611.0" width="97.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="384.0" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (86 samples, 7.86%)</title><rect x="385.4" y="595.0" width="92.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="388.4" y="606.0">[unknown]</text>
</g>
<g>
<title>[unknown] (85 samples, 7.77%)</title><rect x="386.4" y="579.0" width="91.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="389.4" y="590.0">[unknown]</text>
</g>
<g>
<title>[unknown] (80 samples, 7.31%)</title><rect x="391.8" y="563.0" width="86.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="394.8" y="574.0">[unknown]</text>
</g>
<g>
<title>[unknown] (74 samples, 6.76%)</title><rect x="398.3" y="547.0" width="79.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="401.3" y="558.0">[unknown]</text>
</g>
<g>
<title>[unknown] (66 samples, 6.03%)</title><rect x="406.9" y="531.0" width="71.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="409.9" y="542.0">[unknown]</text>
</g>
<g>
<title>[unknown] (49 samples, 4.48%)</title><rect x="425.3" y="515.0" width="52.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="428.3" y="526.0">[unkn..</text>
</g>
<g>
<title>[unknown] (38 samples, 3.47%)</title><rect x="437.1" y="499.0" width="41.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="440.1" y="510.0">[un..</text>
</g>
<g>
<title>[unknown] (35 samples, 3.20%)</title><rect x="440.4" y="483.0" width="37.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="443.4" y="494.0">[un..</text>
</g>
<g>
<title>[unknown] (33 samples, 3.02%)</title><rect x="442.5" y="467.0" width="35.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="445.5" y="478.0">[un..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="477.0" y="451.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="480.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="477.0" y="435.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="480.0" y="446.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="478.1" y="1123.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="481.1" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="478.1" y="1107.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="481.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.18%)</title><rect x="479.2" y="1171.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.18%)</title><rect x="479.2" y="1155.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="482.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.18%)</title><rect x="479.2" y="1139.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="482.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.09%)</title><rect x="480.3" y="1123.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="483.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.09%)</title><rect x="481.4" y="1171.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.09%)</title><rect x="481.4" y="1155.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.4" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$61/1284527574.action (216 samples, 19.74%)</title><rect x="482.4" y="1187.0" width="233.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="485.4" y="1198.0">ru/mail/polis/service/alex/Asyn..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.lambda$entity$0 (215 samples, 19.65%)</title><rect x="483.5" y="1171.0" width="231.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="486.5" y="1182.0">ru/mail/polis/service/alex/Asyn..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.proxy (215 samples, 19.65%)</title><rect x="483.5" y="1155.0" width="231.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="486.5" y="1166.0">ru/mail/polis/service/alex/Asyn..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (215 samples, 19.65%)</title><rect x="483.5" y="1139.0" width="231.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.5" y="1150.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (213 samples, 19.47%)</title><rect x="485.7" y="1123.0" width="229.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="488.7" y="1134.0">one/nio/http/HttpClient.invoke</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (46 samples, 4.20%)</title><rect x="487.8" y="1107.0" width="49.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.8" y="1118.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (46 samples, 4.20%)</title><rect x="487.8" y="1091.0" width="49.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.8" y="1102.0">one/n..</text>
</g>
<g>
<title>[unknown] (5 samples, 0.46%)</title><rect x="488.9" y="1075.0" width="5.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="491.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.46%)</title><rect x="488.9" y="1059.0" width="5.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="491.9" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.46%)</title><rect x="488.9" y="1043.0" width="5.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="491.9" y="1054.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="488.9" y="1027.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="491.9" y="1038.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.09%)</title><rect x="490.0" y="1027.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="493.0" y="1038.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.18%)</title><rect x="491.1" y="1027.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="494.1" y="1038.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.09%)</title><rect x="491.1" y="1011.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="494.1" y="1022.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.09%)</title><rect x="492.1" y="1011.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="495.1" y="1022.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.09%)</title><rect x="492.1" y="995.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="495.1" y="1006.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.09%)</title><rect x="493.2" y="1027.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="496.2" y="1038.0"></text>
</g>
<g>
<title>__GI___recv (39 samples, 3.56%)</title><rect x="494.3" y="1075.0" width="42.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="497.3" y="1086.0">__GI..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.56%)</title><rect x="494.3" y="1059.0" width="42.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="497.3" y="1070.0">[unk..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.56%)</title><rect x="494.3" y="1043.0" width="42.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="497.3" y="1054.0">[unk..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.56%)</title><rect x="494.3" y="1027.0" width="42.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="497.3" y="1038.0">[unk..</text>
</g>
<g>
<title>[unknown] (39 samples, 3.56%)</title><rect x="494.3" y="1011.0" width="42.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="497.3" y="1022.0">[unk..</text>
</g>
<g>
<title>[unknown] (37 samples, 3.38%)</title><rect x="496.5" y="995.0" width="39.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="499.5" y="1006.0">[un..</text>
</g>
<g>
<title>[unknown] (36 samples, 3.29%)</title><rect x="497.5" y="979.0" width="38.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="500.5" y="990.0">[un..</text>
</g>
<g>
<title>[unknown] (35 samples, 3.20%)</title><rect x="498.6" y="963.0" width="37.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="501.6" y="974.0">[un..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.65%)</title><rect x="505.1" y="947.0" width="31.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="508.1" y="958.0">[u..</text>
</g>
<g>
<title>[unknown] (26 samples, 2.38%)</title><rect x="508.3" y="931.0" width="28.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="511.3" y="942.0">[u..</text>
</g>
<g>
<title>[unknown] (23 samples, 2.10%)</title><rect x="511.6" y="915.0" width="24.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="514.6" y="926.0">[..</text>
</g>
<g>
<title>[unknown] (18 samples, 1.65%)</title><rect x="516.9" y="899.0" width="19.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="519.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 1.10%)</title><rect x="523.4" y="883.0" width="13.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="526.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.82%)</title><rect x="526.7" y="867.0" width="9.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="529.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="535.3" y="851.0" width="1.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="538.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="535.3" y="835.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="538.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="535.3" y="819.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="538.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="535.3" y="803.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="538.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="535.3" y="787.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="538.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="535.3" y="771.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="538.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="535.3" y="755.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="538.3" y="766.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.09%)</title><rect x="536.4" y="1075.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="539.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (12 samples, 1.10%)</title><rect x="537.4" y="1107.0" width="13.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="540.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.37%)</title><rect x="538.5" y="1091.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="541.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (4 samples, 0.37%)</title><rect x="538.5" y="1075.0" width="4.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="541.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.37%)</title><rect x="538.5" y="1059.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="541.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.18%)</title><rect x="540.7" y="1043.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="542.8" y="1091.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="545.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="542.8" y="1075.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.09%)</title><rect x="542.8" y="1059.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (5 samples, 0.46%)</title><rect x="543.9" y="1091.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.46%)</title><rect x="543.9" y="1075.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="546.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.46%)</title><rect x="543.9" y="1059.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.09%)</title><rect x="549.3" y="1091.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.09%)</title><rect x="549.3" y="1075.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.09%)</title><rect x="549.3" y="1059.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="552.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (14 samples, 1.28%)</title><rect x="550.4" y="1107.0" width="15.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="553.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.09%)</title><rect x="553.6" y="1091.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 0.91%)</title><rect x="554.7" y="1091.0" width="10.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.09%)</title><rect x="556.9" y="1075.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.09%)</title><rect x="557.9" y="1075.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.46%)</title><rect x="559.0" y="1075.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.18%)</title><rect x="562.2" y="1059.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="564.4" y="1075.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.09%)</title><rect x="564.4" y="1059.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.09%)</title><rect x="564.4" y="1043.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="567.4" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.09%)</title><rect x="564.4" y="1027.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.18%)</title><rect x="565.5" y="1107.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.18%)</title><rect x="565.5" y="1091.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.18%)</title><rect x="565.5" y="1075.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.18%)</title><rect x="565.5" y="1059.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.18%)</title><rect x="565.5" y="1043.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="568.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.18%)</title><rect x="565.5" y="1027.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (20 samples, 1.83%)</title><rect x="567.6" y="1107.0" width="21.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.6" y="1118.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.09%)</title><rect x="568.7" y="1091.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="571.7" y="1102.0"></text>
</g>
<g>
<title>__GI___setsockopt (17 samples, 1.55%)</title><rect x="569.8" y="1091.0" width="18.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="572.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.55%)</title><rect x="569.8" y="1075.0" width="18.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="572.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.55%)</title><rect x="569.8" y="1059.0" width="18.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="572.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.55%)</title><rect x="569.8" y="1043.0" width="18.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="572.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 1.55%)</title><rect x="569.8" y="1027.0" width="18.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="572.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 1.46%)</title><rect x="570.9" y="1011.0" width="17.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="573.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 1.28%)</title><rect x="573.0" y="995.0" width="15.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="576.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.64%)</title><rect x="580.6" y="979.0" width="7.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="583.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.55%)</title><rect x="581.7" y="963.0" width="6.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="584.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="587.1" y="947.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="590.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="587.1" y="931.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="590.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="587.1" y="915.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="590.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="587.1" y="899.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="590.1" y="910.0"></text>
</g>
<g>
<title>_init (1 samples, 0.09%)</title><rect x="588.1" y="1091.0" width="1.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="591.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (117 samples, 10.69%)</title><rect x="589.2" y="1107.0" width="126.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="592.2" y="1118.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (4 samples, 0.37%)</title><rect x="591.4" y="1091.0" width="4.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="594.4" y="1102.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.18%)</title><rect x="592.4" y="1075.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="595.4" y="1086.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.09%)</title><rect x="594.6" y="1075.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="597.6" y="1086.0"></text>
</g>
<g>
<title>__send (111 samples, 10.15%)</title><rect x="595.7" y="1091.0" width="119.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="598.7" y="1102.0">__send</text>
</g>
<g>
<title>[unknown] (108 samples, 9.87%)</title><rect x="598.9" y="1075.0" width="116.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="601.9" y="1086.0">[unknown]</text>
</g>
<g>
<title>[unknown] (108 samples, 9.87%)</title><rect x="598.9" y="1059.0" width="116.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="601.9" y="1070.0">[unknown]</text>
</g>
<g>
<title>[unknown] (107 samples, 9.78%)</title><rect x="600.0" y="1043.0" width="115.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="603.0" y="1054.0">[unknown]</text>
</g>
<g>
<title>[unknown] (106 samples, 9.69%)</title><rect x="601.1" y="1027.0" width="114.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="604.1" y="1038.0">[unknown]</text>
</g>
<g>
<title>[unknown] (106 samples, 9.69%)</title><rect x="601.1" y="1011.0" width="114.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="604.1" y="1022.0">[unknown]</text>
</g>
<g>
<title>[unknown] (105 samples, 9.60%)</title><rect x="602.2" y="995.0" width="113.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="605.2" y="1006.0">[unknown]</text>
</g>
<g>
<title>[unknown] (103 samples, 9.41%)</title><rect x="604.3" y="979.0" width="111.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="607.3" y="990.0">[unknown]</text>
</g>
<g>
<title>[unknown] (103 samples, 9.41%)</title><rect x="604.3" y="963.0" width="111.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="607.3" y="974.0">[unknown]</text>
</g>
<g>
<title>[unknown] (97 samples, 8.87%)</title><rect x="610.8" y="947.0" width="104.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="613.8" y="958.0">[unknown]</text>
</g>
<g>
<title>[unknown] (95 samples, 8.68%)</title><rect x="612.9" y="931.0" width="102.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="615.9" y="942.0">[unknown]</text>
</g>
<g>
<title>[unknown] (92 samples, 8.41%)</title><rect x="616.2" y="915.0" width="99.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="619.2" y="926.0">[unknown]</text>
</g>
<g>
<title>[unknown] (85 samples, 7.77%)</title><rect x="623.7" y="899.0" width="91.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="626.7" y="910.0">[unknown]</text>
</g>
<g>
<title>[unknown] (71 samples, 6.49%)</title><rect x="638.8" y="883.0" width="76.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="641.8" y="894.0">[unknown]</text>
</g>
<g>
<title>[unknown] (71 samples, 6.49%)</title><rect x="638.8" y="867.0" width="76.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="641.8" y="878.0">[unknown]</text>
</g>
<g>
<title>[unknown] (70 samples, 6.40%)</title><rect x="639.9" y="851.0" width="75.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="642.9" y="862.0">[unknown]</text>
</g>
<g>
<title>[unknown] (68 samples, 6.22%)</title><rect x="642.1" y="835.0" width="73.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="645.1" y="846.0">[unknown]</text>
</g>
<g>
<title>[unknown] (67 samples, 6.12%)</title><rect x="643.1" y="819.0" width="72.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="646.1" y="830.0">[unknown]</text>
</g>
<g>
<title>[unknown] (64 samples, 5.85%)</title><rect x="646.4" y="803.0" width="69.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="649.4" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (64 samples, 5.85%)</title><rect x="646.4" y="787.0" width="69.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="649.4" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (59 samples, 5.39%)</title><rect x="651.8" y="771.0" width="63.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="654.8" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (50 samples, 4.57%)</title><rect x="661.5" y="755.0" width="53.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="664.5" y="766.0">[unkn..</text>
</g>
<g>
<title>[unknown] (46 samples, 4.20%)</title><rect x="665.8" y="739.0" width="49.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="668.8" y="750.0">[unkn..</text>
</g>
<g>
<title>[unknown] (46 samples, 4.20%)</title><rect x="665.8" y="723.0" width="49.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="668.8" y="734.0">[unkn..</text>
</g>
<g>
<title>[unknown] (45 samples, 4.11%)</title><rect x="666.9" y="707.0" width="48.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="669.9" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (45 samples, 4.11%)</title><rect x="666.9" y="691.0" width="48.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="669.9" y="702.0">[unk..</text>
</g>
<g>
<title>[unknown] (44 samples, 4.02%)</title><rect x="668.0" y="675.0" width="47.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="671.0" y="686.0">[unk..</text>
</g>
<g>
<title>[unknown] (43 samples, 3.93%)</title><rect x="669.0" y="659.0" width="46.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="672.0" y="670.0">[unk..</text>
</g>
<g>
<title>[unknown] (42 samples, 3.84%)</title><rect x="670.1" y="643.0" width="45.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="673.1" y="654.0">[unk..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.75%)</title><rect x="671.2" y="627.0" width="44.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="674.2" y="638.0">[unk..</text>
</g>
<g>
<title>[unknown] (40 samples, 3.66%)</title><rect x="672.3" y="611.0" width="43.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="675.3" y="622.0">[unk..</text>
</g>
<g>
<title>[unknown] (40 samples, 3.66%)</title><rect x="672.3" y="595.0" width="43.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="675.3" y="606.0">[unk..</text>
</g>
<g>
<title>[unknown] (37 samples, 3.38%)</title><rect x="675.5" y="579.0" width="39.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="678.5" y="590.0">[un..</text>
</g>
<g>
<title>[unknown] (35 samples, 3.20%)</title><rect x="677.7" y="563.0" width="37.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="680.7" y="574.0">[un..</text>
</g>
<g>
<title>[unknown] (32 samples, 2.93%)</title><rect x="680.9" y="547.0" width="34.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="683.9" y="558.0">[u..</text>
</g>
<g>
<title>[unknown] (32 samples, 2.93%)</title><rect x="680.9" y="531.0" width="34.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="683.9" y="542.0">[u..</text>
</g>
<g>
<title>[unknown] (26 samples, 2.38%)</title><rect x="687.4" y="515.0" width="28.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="690.4" y="526.0">[u..</text>
</g>
<g>
<title>[unknown] (23 samples, 2.10%)</title><rect x="690.6" y="499.0" width="24.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="693.6" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (23 samples, 2.10%)</title><rect x="690.6" y="483.0" width="24.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="693.6" y="494.0">[..</text>
</g>
<g>
<title>[unknown] (20 samples, 1.83%)</title><rect x="693.8" y="467.0" width="21.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="696.8" y="478.0">[..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="714.3" y="451.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="717.3" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="714.3" y="435.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="717.3" y="446.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$86/960349145.action (49 samples, 4.48%)</title><rect x="715.4" y="1187.0" width="52.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.4" y="1198.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.lambda$entity$3 (46 samples, 4.20%)</title><rect x="718.6" y="1171.0" width="49.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="721.6" y="1182.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.delete (46 samples, 4.20%)</title><rect x="718.6" y="1155.0" width="49.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="721.6" y="1166.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.09%)</title><rect x="718.6" y="1139.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.6" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/AlexDAO.remove (45 samples, 4.11%)</title><rect x="719.7" y="1139.0" width="48.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.7" y="1150.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.remove (45 samples, 4.11%)</title><rect x="719.7" y="1123.0" width="48.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.7" y="1134.0">ru/m..</text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.09%)</title><rect x="720.8" y="1107.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="723.8" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.09%)</title><rect x="720.8" y="1091.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="723.8" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.09%)</title><rect x="720.8" y="1075.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="723.8" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.09%)</title><rect x="720.8" y="1059.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="723.8" y="1070.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.09%)</title><rect x="720.8" y="1043.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="723.8" y="1054.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.09%)</title><rect x="720.8" y="1027.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="723.8" y="1038.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.09%)</title><rect x="720.8" y="1011.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="723.8" y="1022.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.09%)</title><rect x="720.8" y="995.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="723.8" y="1006.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.09%)</title><rect x="720.8" y="979.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="723.8" y="990.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.09%)</title><rect x="720.8" y="963.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="723.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="720.8" y="947.0" width="1.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="723.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="720.8" y="931.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="723.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="720.8" y="915.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="723.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="720.8" y="899.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="723.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="720.8" y="883.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="723.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="720.8" y="867.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="723.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="720.8" y="851.0" width="1.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="723.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="720.8" y="835.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="723.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="720.8" y="819.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="723.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.37%)</title><rect x="721.9" y="1107.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.37%)</title><rect x="721.9" y="1091.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="724.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.37%)</title><rect x="721.9" y="1075.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.09%)</title><rect x="723.0" y="1059.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="726.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.09%)</title><rect x="723.0" y="1043.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.09%)</title><rect x="724.0" y="1059.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="727.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.09%)</title><rect x="724.0" y="1043.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="727.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.09%)</title><rect x="724.0" y="1027.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="727.0" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="724.0" y="1011.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="727.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.09%)</title><rect x="725.1" y="1059.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.1" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.remove (37 samples, 3.38%)</title><rect x="726.2" y="1107.0" width="39.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="729.2" y="1118.0">ru/..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (33 samples, 3.02%)</title><rect x="726.2" y="1091.0" width="35.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="729.2" y="1102.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (33 samples, 3.02%)</title><rect x="726.2" y="1075.0" width="35.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.2" y="1086.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.37%)</title><rect x="731.6" y="1059.0" width="4.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="734.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.09%)</title><rect x="734.8" y="1043.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="737.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (1 samples, 0.09%)</title><rect x="735.9" y="1059.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="738.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (23 samples, 2.10%)</title><rect x="737.0" y="1059.0" width="24.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.0" y="1070.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (23 samples, 2.10%)</title><rect x="737.0" y="1043.0" width="24.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="740.0" y="1054.0">j..</text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (20 samples, 1.83%)</title><rect x="740.2" y="1027.0" width="21.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="743.2" y="1038.0">j..</text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (16 samples, 1.46%)</title><rect x="740.2" y="1011.0" width="17.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="743.2" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (14 samples, 1.28%)</title><rect x="742.4" y="995.0" width="15.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="745.4" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (14 samples, 1.28%)</title><rect x="742.4" y="979.0" width="15.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="745.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="756.4" y="963.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="759.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="756.4" y="947.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="759.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="756.4" y="931.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="759.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="756.4" y="915.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="759.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="756.4" y="899.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="759.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="756.4" y="883.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="759.4" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.37%)</title><rect x="757.5" y="1011.0" width="4.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.5" y="1022.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (4 samples, 0.37%)</title><rect x="757.5" y="995.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.5" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.09%)</title><rect x="761.8" y="1091.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="764.8" y="1102.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="761.8" y="1075.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="764.8" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.getData (2 samples, 0.18%)</title><rect x="762.9" y="1091.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="765.9" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.18%)</title><rect x="762.9" y="1075.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="765.9" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.09%)</title><rect x="762.9" y="1059.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="765.9" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.09%)</title><rect x="762.9" y="1043.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="765.9" y="1054.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.09%)</title><rect x="763.9" y="1059.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="766.9" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.tombstone (1 samples, 0.09%)</title><rect x="765.0" y="1091.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="768.0" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.&lt;init&gt; (1 samples, 0.09%)</title><rect x="765.0" y="1075.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="768.0" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.setToFlush (2 samples, 0.18%)</title><rect x="766.1" y="1107.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="769.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.sizeInBytes (1 samples, 0.09%)</title><rect x="767.2" y="1091.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="770.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (1 samples, 0.09%)</title><rect x="767.2" y="1075.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="770.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (343 samples, 31.35%)</title><rect x="768.3" y="1267.0" width="369.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="771.3" y="1278.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1251.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="783.1" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1235.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="783.1" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1219.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="783.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1203.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="783.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1187.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="783.1" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1171.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="783.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1155.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="783.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1139.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="783.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1123.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="783.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1107.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="783.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1091.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="783.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1075.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="783.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1059.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="783.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1043.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="783.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="780.1" y="1027.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="783.1" y="1038.0"></text>
</g>
<g>
<title>_init (1 samples, 0.09%)</title><rect x="781.2" y="1251.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="784.2" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.09%)</title><rect x="782.3" y="1251.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="785.3" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.09%)</title><rect x="783.4" y="1251.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="786.4" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (109 samples, 9.96%)</title><rect x="784.4" y="1251.0" width="117.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.4" y="1262.0">one/nio/net/Na..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (102 samples, 9.32%)</title><rect x="792.0" y="1235.0" width="110.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="795.0" y="1246.0">one/nio/net/N..</text>
</g>
<g>
<title>JavaThread::check_special_condition_for_native_trans(JavaThread*) (1 samples, 0.09%)</title><rect x="802.8" y="1219.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="805.8" y="1230.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.18%)</title><rect x="803.9" y="1219.0" width="2.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="806.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="804.9" y="1203.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="807.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="804.9" y="1187.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="807.9" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="804.9" y="1171.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="807.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="804.9" y="1155.0" width="1.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="807.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="804.9" y="1139.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="807.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="804.9" y="1123.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="807.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="804.9" y="1107.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="807.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (83 samples, 7.59%)</title><rect x="806.0" y="1219.0" width="89.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="809.0" y="1230.0">[unknown]</text>
</g>
<g>
<title>[vdso] (3 samples, 0.27%)</title><rect x="806.0" y="1203.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="809.0" y="1214.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.18%)</title><rect x="809.3" y="1203.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="812.3" y="1214.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.18%)</title><rect x="811.4" y="1203.0" width="2.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="814.4" y="1214.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.09%)</title><rect x="812.5" y="1187.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="815.5" y="1198.0"></text>
</g>
<g>
<title>epoll_wait (76 samples, 6.95%)</title><rect x="813.6" y="1203.0" width="81.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="816.6" y="1214.0">epoll_wait</text>
</g>
<g>
<title>[unknown] (68 samples, 6.22%)</title><rect x="822.2" y="1187.0" width="73.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="825.2" y="1198.0">[unknown]</text>
</g>
<g>
<title>[unknown] (68 samples, 6.22%)</title><rect x="822.2" y="1171.0" width="73.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="825.2" y="1182.0">[unknown]</text>
</g>
<g>
<title>[unknown] (68 samples, 6.22%)</title><rect x="822.2" y="1155.0" width="73.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="825.2" y="1166.0">[unknown]</text>
</g>
<g>
<title>[unknown] (68 samples, 6.22%)</title><rect x="822.2" y="1139.0" width="73.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="825.2" y="1150.0">[unknown]</text>
</g>
<g>
<title>[unknown] (68 samples, 6.22%)</title><rect x="822.2" y="1123.0" width="73.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="825.2" y="1134.0">[unknown]</text>
</g>
<g>
<title>[unknown] (57 samples, 5.21%)</title><rect x="834.1" y="1107.0" width="61.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="837.1" y="1118.0">[unkno..</text>
</g>
<g>
<title>[unknown] (53 samples, 4.84%)</title><rect x="838.4" y="1091.0" width="57.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="841.4" y="1102.0">[unkno..</text>
</g>
<g>
<title>[unknown] (45 samples, 4.11%)</title><rect x="847.0" y="1075.0" width="48.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="850.0" y="1086.0">[unk..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.75%)</title><rect x="851.3" y="1059.0" width="44.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="854.3" y="1070.0">[unk..</text>
</g>
<g>
<title>[unknown] (37 samples, 3.38%)</title><rect x="855.6" y="1043.0" width="39.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="858.6" y="1054.0">[un..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="892.3" y="1027.0" width="3.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="895.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="893.4" y="1011.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="896.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="893.4" y="995.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="896.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="893.4" y="979.0" width="2.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="896.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="893.4" y="963.0" width="2.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="896.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="893.4" y="947.0" width="2.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="896.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.18%)</title><rect x="893.4" y="931.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="896.4" y="942.0"></text>
</g>
<g>
<title>_init (3 samples, 0.27%)</title><rect x="895.5" y="1219.0" width="3.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="898.5" y="1230.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.18%)</title><rect x="898.8" y="1219.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="901.8" y="1230.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.09%)</title><rect x="900.9" y="1219.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="903.9" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (219 samples, 20.02%)</title><rect x="902.0" y="1251.0" width="236.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="905.0" y="1262.0">one/nio/net/Session.process</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.09%)</title><rect x="910.6" y="1235.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="913.6" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (210 samples, 19.20%)</title><rect x="911.7" y="1235.0" width="226.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="914.7" y="1246.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (133 samples, 12.16%)</title><rect x="911.7" y="1219.0" width="143.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="914.7" y="1230.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="916.0" y="1203.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="919.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="916.0" y="1187.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="919.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="916.0" y="1171.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="919.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="916.0" y="1155.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="919.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="916.0" y="1139.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="919.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="916.0" y="1123.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="919.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="916.0" y="1107.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="919.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (97 samples, 8.87%)</title><rect x="917.1" y="1203.0" width="104.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="920.1" y="1214.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (96 samples, 8.78%)</title><rect x="918.2" y="1187.0" width="103.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="921.2" y="1198.0">one/nio/http..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (89 samples, 8.14%)</title><rect x="919.3" y="1171.0" width="96.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="922.3" y="1182.0">RequestHand..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.82%)</title><rect x="919.3" y="1155.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="922.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.18%)</title><rect x="922.5" y="1139.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="925.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.18%)</title><rect x="922.5" y="1123.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="925.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="924.7" y="1139.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="927.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.09%)</title><rect x="924.7" y="1123.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="927.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.09%)</title><rect x="924.7" y="1107.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="927.7" y="1118.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.09%)</title><rect x="925.7" y="1139.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="928.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.18%)</title><rect x="926.8" y="1139.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="929.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.18%)</title><rect x="926.8" y="1123.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.18%)</title><rect x="926.8" y="1107.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="929.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.18%)</title><rect x="926.8" y="1091.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="929.8" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.entity (80 samples, 7.31%)</title><rect x="929.0" y="1155.0" width="86.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="932.0" y="1166.0">ru/mail/po..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.09%)</title><rect x="929.0" y="1139.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="932.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.09%)</title><rect x="929.0" y="1123.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="932.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.09%)</title><rect x="929.0" y="1107.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="932.0" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.09%)</title><rect x="929.0" y="1091.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="932.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.18%)</title><rect x="930.1" y="1139.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="933.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.18%)</title><rect x="930.1" y="1123.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="933.1" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$86/960349145.get$Lambda (2 samples, 0.18%)</title><rect x="930.1" y="1107.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="933.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl$$Lambda$86/960349145.&lt;init&gt; (2 samples, 0.18%)</title><rect x="930.1" y="1091.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="933.1" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.27%)</title><rect x="932.2" y="1139.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="935.2" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.27%)</title><rect x="932.2" y="1123.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="935.2" y="1134.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.27%)</title><rect x="932.2" y="1107.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="935.2" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.27%)</title><rect x="932.2" y="1091.0" width="3.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.2" y="1102.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.27%)</title><rect x="932.2" y="1075.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="935.2" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.09%)</title><rect x="934.4" y="1059.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="937.4" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.executeAsync (70 samples, 6.40%)</title><rect x="935.4" y="1139.0" width="75.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="938.4" y="1150.0">ru/mail/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (69 samples, 6.31%)</title><rect x="936.5" y="1123.0" width="74.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="939.5" y="1134.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (69 samples, 6.31%)</title><rect x="936.5" y="1107.0" width="74.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="939.5" y="1118.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (66 samples, 6.03%)</title><rect x="936.5" y="1091.0" width="71.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="939.5" y="1102.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (3 samples, 0.27%)</title><rect x="936.5" y="1075.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="939.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (3 samples, 0.27%)</title><rect x="936.5" y="1059.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="939.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.27%)</title><rect x="936.5" y="1043.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="939.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (63 samples, 5.76%)</title><rect x="939.8" y="1075.0" width="67.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="942.8" y="1086.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (63 samples, 5.76%)</title><rect x="939.8" y="1059.0" width="67.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="942.8" y="1070.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (63 samples, 5.76%)</title><rect x="939.8" y="1043.0" width="67.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="942.8" y="1054.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (63 samples, 5.76%)</title><rect x="939.8" y="1027.0" width="67.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="942.8" y="1038.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (63 samples, 5.76%)</title><rect x="939.8" y="1011.0" width="67.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="942.8" y="1022.0">jdk/int..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.09%)</title><rect x="941.9" y="995.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="944.9" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (3 samples, 0.27%)</title><rect x="943.0" y="995.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="946.0" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 1.37%)</title><rect x="946.2" y="995.0" width="16.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="949.2" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.09%)</title><rect x="948.4" y="979.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="951.4" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.09%)</title><rect x="949.5" y="979.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="952.5" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.27%)</title><rect x="950.5" y="979.0" width="3.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="953.5" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (5 samples, 0.46%)</title><rect x="953.8" y="979.0" width="5.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="956.8" y="990.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.09%)</title><rect x="959.2" y="979.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="962.2" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.09%)</title><rect x="960.3" y="979.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="963.3" y="990.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.09%)</title><rect x="961.3" y="979.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="964.3" y="990.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.18%)</title><rect x="962.4" y="995.0" width="2.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="965.4" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.27%)</title><rect x="964.6" y="995.0" width="3.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="967.6" y="1006.0"></text>
</g>
<g>
<title>_init (4 samples, 0.37%)</title><rect x="967.8" y="995.0" width="4.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="970.8" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (33 samples, 3.02%)</title><rect x="972.1" y="995.0" width="35.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="975.1" y="1006.0">pth..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.74%)</title><rect x="975.4" y="979.0" width="32.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="978.4" y="990.0">[u..</text>
</g>
<g>
<title>[unknown] (30 samples, 2.74%)</title><rect x="975.4" y="963.0" width="32.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="978.4" y="974.0">[u..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.65%)</title><rect x="976.4" y="947.0" width="31.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="979.4" y="958.0">[u..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.47%)</title><rect x="978.6" y="931.0" width="29.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="981.6" y="942.0">[u..</text>
</g>
<g>
<title>[unknown] (27 samples, 2.47%)</title><rect x="978.6" y="915.0" width="29.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="981.6" y="926.0">[u..</text>
</g>
<g>
<title>[unknown] (26 samples, 2.38%)</title><rect x="979.7" y="899.0" width="28.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="982.7" y="910.0">[u..</text>
</g>
<g>
<title>[unknown] (24 samples, 2.19%)</title><rect x="981.8" y="883.0" width="25.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="984.8" y="894.0">[..</text>
</g>
<g>
<title>[unknown] (24 samples, 2.19%)</title><rect x="981.8" y="867.0" width="25.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="984.8" y="878.0">[..</text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.09%)</title><rect x="1007.7" y="1091.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1010.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.09%)</title><rect x="1007.7" y="1075.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1010.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.09%)</title><rect x="1007.7" y="1059.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1010.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.18%)</title><rect x="1008.8" y="1091.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1011.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.18%)</title><rect x="1008.8" y="1075.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1011.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.18%)</title><rect x="1008.8" y="1059.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1011.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.18%)</title><rect x="1008.8" y="1043.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1011.8" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HashingTopology.primaryFor (4 samples, 0.37%)</title><rect x="1011.0" y="1139.0" width="4.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1014.0" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.27%)</title><rect x="1011.0" y="1123.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1014.0" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.27%)</title><rect x="1011.0" y="1107.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1014.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/Integer.equals (2 samples, 0.18%)</title><rect x="1011.0" y="1091.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1014.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.09%)</title><rect x="1012.0" y="1075.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1015.0" y="1086.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.09%)</title><rect x="1013.1" y="1091.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1016.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HashingTopology.hashCode (1 samples, 0.09%)</title><rect x="1014.2" y="1123.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.2" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.hashCode (1 samples, 0.09%)</title><rect x="1014.2" y="1107.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1017.2" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.09%)</title><rect x="1015.3" y="1171.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1018.3" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.09%)</title><rect x="1015.3" y="1155.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1018.3" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.09%)</title><rect x="1015.3" y="1139.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1018.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.09%)</title><rect x="1015.3" y="1123.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1018.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.09%)</title><rect x="1015.3" y="1107.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1018.3" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.37%)</title><rect x="1016.3" y="1171.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1019.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.27%)</title><rect x="1017.4" y="1155.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.27%)</title><rect x="1017.4" y="1139.0" width="3.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1020.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.18%)</title><rect x="1018.5" y="1123.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1021.5" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/AsyncServiceImpl.handleDefault (1 samples, 0.09%)</title><rect x="1020.7" y="1171.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1023.7" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (19 samples, 1.74%)</title><rect x="1021.7" y="1203.0" width="20.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1024.7" y="1214.0"></text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (5 samples, 0.46%)</title><rect x="1023.9" y="1187.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.9" y="1198.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.37%)</title><rect x="1029.3" y="1187.0" width="4.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1032.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.09%)</title><rect x="1033.6" y="1187.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1036.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.64%)</title><rect x="1034.7" y="1187.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1037.7" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.55%)</title><rect x="1035.8" y="1171.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1038.8" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.09%)</title><rect x="1042.2" y="1203.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (1 samples, 0.09%)</title><rect x="1042.2" y="1187.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1045.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.09%)</title><rect x="1043.3" y="1203.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1046.3" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.82%)</title><rect x="1044.4" y="1203.0" width="9.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1047.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.73%)</title><rect x="1044.4" y="1187.0" width="8.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.64%)</title><rect x="1045.5" y="1171.0" width="7.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1048.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.09%)</title><rect x="1047.6" y="1155.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.09%)</title><rect x="1047.6" y="1139.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1050.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.09%)</title><rect x="1047.6" y="1123.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1050.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.09%)</title><rect x="1048.7" y="1155.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1051.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.27%)</title><rect x="1049.8" y="1155.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1052.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.09%)</title><rect x="1053.0" y="1187.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1056.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="1054.1" y="1203.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1057.1" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.09%)</title><rect x="1054.1" y="1187.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1057.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.09%)</title><rect x="1055.2" y="1219.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1058.2" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (76 samples, 6.95%)</title><rect x="1056.3" y="1219.0" width="81.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1059.3" y="1230.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (75 samples, 6.86%)</title><rect x="1057.3" y="1203.0" width="80.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1060.3" y="1214.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.09%)</title><rect x="1064.9" y="1187.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1067.9" y="1198.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.65%)</title><rect x="1066.0" y="1187.0" width="19.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1069.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 1.65%)</title><rect x="1066.0" y="1171.0" width="19.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1069.0" y="1182.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (15 samples, 1.37%)</title><rect x="1066.0" y="1155.0" width="16.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1069.0" y="1166.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.09%)</title><rect x="1066.0" y="1139.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1069.0" y="1150.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.27%)</title><rect x="1067.0" y="1139.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1070.0" y="1150.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.09%)</title><rect x="1070.3" y="1139.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1073.3" y="1150.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (10 samples, 0.91%)</title><rect x="1071.4" y="1139.0" width="10.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1074.4" y="1150.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.18%)</title><rect x="1071.4" y="1123.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1074.4" y="1134.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (8 samples, 0.73%)</title><rect x="1073.5" y="1123.0" width="8.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1076.5" y="1134.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (5 samples, 0.46%)</title><rect x="1076.7" y="1107.0" width="5.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1079.7" y="1118.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.09%)</title><rect x="1082.1" y="1155.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1085.1" y="1166.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.09%)</title><rect x="1083.2" y="1155.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1086.2" y="1166.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.09%)</title><rect x="1084.3" y="1155.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1087.3" y="1166.0"></text>
</g>
<g>
<title>__GI___recv (49 samples, 4.48%)</title><rect x="1085.4" y="1187.0" width="52.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1088.4" y="1198.0">__GI_..</text>
</g>
<g>
<title>[unknown] (47 samples, 4.30%)</title><rect x="1087.5" y="1171.0" width="50.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1090.5" y="1182.0">[unkn..</text>
</g>
<g>
<title>[unknown] (47 samples, 4.30%)</title><rect x="1087.5" y="1155.0" width="50.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1090.5" y="1166.0">[unkn..</text>
</g>
<g>
<title>[unknown] (45 samples, 4.11%)</title><rect x="1089.7" y="1139.0" width="48.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1092.7" y="1150.0">[unk..</text>
</g>
<g>
<title>[unknown] (45 samples, 4.11%)</title><rect x="1089.7" y="1123.0" width="48.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1092.7" y="1134.0">[unk..</text>
</g>
<g>
<title>[unknown] (44 samples, 4.02%)</title><rect x="1090.8" y="1107.0" width="47.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1093.8" y="1118.0">[unk..</text>
</g>
<g>
<title>[unknown] (41 samples, 3.75%)</title><rect x="1094.0" y="1091.0" width="44.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1097.0" y="1102.0">[unk..</text>
</g>
<g>
<title>[unknown] (38 samples, 3.47%)</title><rect x="1097.2" y="1075.0" width="41.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1100.2" y="1086.0">[un..</text>
</g>
<g>
<title>[unknown] (29 samples, 2.65%)</title><rect x="1106.9" y="1059.0" width="31.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1109.9" y="1070.0">[u..</text>
</g>
<g>
<title>[unknown] (22 samples, 2.01%)</title><rect x="1114.5" y="1043.0" width="23.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1117.5" y="1054.0">[..</text>
</g>
<g>
<title>[unknown] (14 samples, 1.28%)</title><rect x="1123.1" y="1027.0" width="15.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1126.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.64%)</title><rect x="1130.7" y="1011.0" width="7.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1133.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.27%)</title><rect x="1135.0" y="995.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1138.0" y="1006.0"></text>
</g>
<g>
<title>start_thread (48 samples, 4.39%)</title><rect x="1138.2" y="1267.0" width="51.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1141.2" y="1278.0">start..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (48 samples, 4.39%)</title><rect x="1138.2" y="1251.0" width="51.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1141.2" y="1262.0">threa..</text>
</g>
<g>
<title>Thread::call_run() (48 samples, 4.39%)</title><rect x="1138.2" y="1235.0" width="51.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.2" y="1246.0">Threa..</text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.55%)</title><rect x="1138.2" y="1219.0" width="6.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1141.2" y="1230.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.55%)</title><rect x="1138.2" y="1203.0" width="6.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.2" y="1214.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.18%)</title><rect x="1138.2" y="1187.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1141.2" y="1198.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (2 samples, 0.18%)</title><rect x="1138.2" y="1171.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1141.2" y="1182.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.09%)</title><rect x="1139.3" y="1155.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1142.3" y="1166.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.37%)</title><rect x="1140.4" y="1187.0" width="4.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.4" y="1198.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.37%)</title><rect x="1140.4" y="1171.0" width="4.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.4" y="1182.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.37%)</title><rect x="1140.4" y="1155.0" width="4.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1143.4" y="1166.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.37%)</title><rect x="1140.4" y="1139.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1143.4" y="1150.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.37%)</title><rect x="1140.4" y="1123.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1143.4" y="1134.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.37%)</title><rect x="1140.4" y="1107.0" width="4.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1143.4" y="1118.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.18%)</title><rect x="1142.5" y="1091.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1145.5" y="1102.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.18%)</title><rect x="1142.5" y="1075.0" width="2.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1145.5" y="1086.0"></text>
</g>
<g>
<title>JavaThread::run() (39 samples, 3.56%)</title><rect x="1144.7" y="1219.0" width="42.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.7" y="1230.0">Java..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (39 samples, 3.56%)</title><rect x="1144.7" y="1203.0" width="42.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.7" y="1214.0">Java..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (39 samples, 3.56%)</title><rect x="1144.7" y="1187.0" width="42.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1147.7" y="1198.0">Comp..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (39 samples, 3.56%)</title><rect x="1144.7" y="1171.0" width="42.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1147.7" y="1182.0">Comp..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (36 samples, 3.29%)</title><rect x="1144.7" y="1155.0" width="38.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1147.7" y="1166.0">C2C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (36 samples, 3.29%)</title><rect x="1144.7" y="1139.0" width="38.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1147.7" y="1150.0">Com..</text>
</g>
<g>
<title>Compile::Code_Gen() (20 samples, 1.83%)</title><rect x="1144.7" y="1123.0" width="21.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1147.7" y="1134.0">C..</text>
</g>
<g>
<title>Compile::Output() (3 samples, 0.27%)</title><rect x="1144.7" y="1107.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1147.7" y="1118.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.09%)</title><rect x="1144.7" y="1091.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1147.7" y="1102.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (2 samples, 0.18%)</title><rect x="1145.8" y="1091.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.8" y="1102.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (2 samples, 0.18%)</title><rect x="1145.8" y="1075.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1148.8" y="1086.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (2 samples, 0.18%)</title><rect x="1145.8" y="1059.0" width="2.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1148.8" y="1070.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (1 samples, 0.09%)</title><rect x="1145.8" y="1043.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1148.8" y="1054.0"></text>
</g>
<g>
<title>cmpFastLockNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.09%)</title><rect x="1146.9" y="1043.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1149.9" y="1054.0"></text>
</g>
<g>
<title>MacroAssembler::fast_lock(RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*, RegisterImpl*, BiasedLockingCounters*, RTMLockingCounters*, RTMLockingCounters*, Metadata*, bool, bool) (1 samples, 0.09%)</title><rect x="1146.9" y="1027.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1149.9" y="1038.0"></text>
</g>
<g>
<title>Assembler::prefixq(Address, RegisterImpl*) (1 samples, 0.09%)</title><rect x="1146.9" y="1011.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1149.9" y="1022.0"></text>
</g>
<g>
<title>Matcher::match() (3 samples, 0.27%)</title><rect x="1147.9" y="1107.0" width="3.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.9" y="1118.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (3 samples, 0.27%)</title><rect x="1147.9" y="1091.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1150.9" y="1102.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.18%)</title><rect x="1149.0" y="1075.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.0" y="1086.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.18%)</title><rect x="1149.0" y="1059.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.0" y="1070.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.09%)</title><rect x="1149.0" y="1043.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1152.0" y="1054.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.09%)</title><rect x="1149.0" y="1027.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1152.0" y="1038.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.09%)</title><rect x="1149.0" y="1011.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.0" y="1022.0"></text>
</g>
<g>
<title>State::_sub_Op_ConI(Node const*) (1 samples, 0.09%)</title><rect x="1149.0" y="995.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.0" y="1006.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.09%)</title><rect x="1150.1" y="1043.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1153.1" y="1054.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.18%)</title><rect x="1151.2" y="1107.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1154.2" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.18%)</title><rect x="1151.2" y="1091.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1154.2" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.09%)</title><rect x="1151.2" y="1075.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1154.2" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.09%)</title><rect x="1152.2" y="1075.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.2" y="1086.0"></text>
</g>
<g>
<title>Node::is_iteratively_computed() (1 samples, 0.09%)</title><rect x="1152.2" y="1059.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1155.2" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (12 samples, 1.10%)</title><rect x="1153.3" y="1107.0" width="13.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.3" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.09%)</title><rect x="1153.3" y="1091.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.3" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.09%)</title><rect x="1154.4" y="1091.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.4" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (1 samples, 0.09%)</title><rect x="1155.5" y="1091.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1158.5" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.09%)</title><rect x="1155.5" y="1075.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.5" y="1086.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.09%)</title><rect x="1155.5" y="1059.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.5" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (1 samples, 0.09%)</title><rect x="1156.6" y="1091.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.6" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (1 samples, 0.09%)</title><rect x="1157.6" y="1091.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.6" y="1102.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.09%)</title><rect x="1157.6" y="1075.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1160.6" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.18%)</title><rect x="1158.7" y="1091.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.7" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.09%)</title><rect x="1159.8" y="1075.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.8" y="1086.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (1 samples, 0.09%)</title><rect x="1160.9" y="1091.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.9" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (1 samples, 0.09%)</title><rect x="1160.9" y="1075.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.9" y="1086.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.09%)</title><rect x="1162.0" y="1091.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.0" y="1102.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.18%)</title><rect x="1163.0" y="1091.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.0" y="1102.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.09%)</title><rect x="1165.2" y="1091.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1165.2" y="1075.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1168.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1165.2" y="1059.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1168.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1165.2" y="1043.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1168.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1165.2" y="1027.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1168.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1165.2" y="1011.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1168.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1165.2" y="995.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1168.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1165.2" y="979.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1168.2" y="990.0"></text>
</g>
<g>
<title>Compile::Optimize() (9 samples, 0.82%)</title><rect x="1166.3" y="1123.0" width="9.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.3" y="1134.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.09%)</title><rect x="1166.3" y="1107.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.3" y="1118.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.09%)</title><rect x="1166.3" y="1091.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.3" y="1102.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.252] (1 samples, 0.09%)</title><rect x="1166.3" y="1075.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.3" y="1086.0"></text>
</g>
<g>
<title>ConNode::make(Type const*) (1 samples, 0.09%)</title><rect x="1166.3" y="1059.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.3" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (6 samples, 0.55%)</title><rect x="1167.3" y="1107.0" width="6.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.3" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (2 samples, 0.18%)</title><rect x="1167.3" y="1091.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.3" y="1102.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.09%)</title><rect x="1168.4" y="1075.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1171.4" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.09%)</title><rect x="1169.5" y="1091.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.5" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.09%)</title><rect x="1170.6" y="1091.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.6" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.09%)</title><rect x="1171.7" y="1091.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.7" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (1 samples, 0.09%)</title><rect x="1171.7" y="1075.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1174.7" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.09%)</title><rect x="1172.7" y="1091.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.7" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.09%)</title><rect x="1172.7" y="1075.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.7" y="1086.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.09%)</title><rect x="1172.7" y="1059.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.7" y="1070.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.18%)</title><rect x="1173.8" y="1107.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.8" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.18%)</title><rect x="1173.8" y="1091.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.8" y="1102.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1173.8" y="1075.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.8" y="1086.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.09%)</title><rect x="1173.8" y="1059.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.8" y="1070.0"></text>
</g>
<g>
<title>Type::higher_equal(Type const*) const (1 samples, 0.09%)</title><rect x="1173.8" y="1043.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.8" y="1054.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.09%)</title><rect x="1173.8" y="1027.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.8" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.09%)</title><rect x="1174.9" y="1075.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.9" y="1086.0"></text>
</g>
<g>
<title>LoadLNode::Opcode() const (1 samples, 0.09%)</title><rect x="1174.9" y="1059.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1177.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1174.9" y="1043.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1177.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1174.9" y="1027.0" width="1.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1177.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1174.9" y="1011.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1177.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1174.9" y="995.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1177.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1174.9" y="979.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1177.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1174.9" y="963.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1177.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1174.9" y="947.0" width="1.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1177.9" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.64%)</title><rect x="1176.0" y="1123.0" width="7.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1179.0" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.64%)</title><rect x="1176.0" y="1107.0" width="7.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1179.0" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.64%)</title><rect x="1176.0" y="1091.0" width="7.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.0" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.64%)</title><rect x="1176.0" y="1075.0" width="7.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.0" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.64%)</title><rect x="1176.0" y="1059.0" width="7.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.0" y="1070.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.64%)</title><rect x="1176.0" y="1043.0" width="7.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.0" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.55%)</title><rect x="1176.0" y="1027.0" width="6.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.0" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.55%)</title><rect x="1176.0" y="1011.0" width="6.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.0" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.55%)</title><rect x="1176.0" y="995.0" width="6.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.0" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.46%)</title><rect x="1177.1" y="979.0" width="5.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.1" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.46%)</title><rect x="1177.1" y="963.0" width="5.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.1" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.46%)</title><rect x="1177.1" y="947.0" width="5.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.1" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.37%)</title><rect x="1177.1" y="931.0" width="4.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.1" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.37%)</title><rect x="1177.1" y="915.0" width="4.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.1" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.37%)</title><rect x="1177.1" y="899.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.1" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.37%)</title><rect x="1177.1" y="883.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.37%)</title><rect x="1177.1" y="867.0" width="4.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.37%)</title><rect x="1177.1" y="851.0" width="4.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.1" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.27%)</title><rect x="1177.1" y="835.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.1" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.27%)</title><rect x="1177.1" y="819.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.1" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.18%)</title><rect x="1177.1" y="803.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.1" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.18%)</title><rect x="1177.1" y="787.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.1" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.18%)</title><rect x="1177.1" y="771.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.1" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.18%)</title><rect x="1177.1" y="755.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.1" y="766.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1177.1" y="739.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.1" y="750.0"></text>
</g>
<g>
<title>GraphKit::set_edges_for_java_call(CallJavaNode*, bool, bool) (1 samples, 0.09%)</title><rect x="1177.1" y="723.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.1" y="734.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.09%)</title><rect x="1177.1" y="707.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.1" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1178.1" y="739.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.1" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1178.1" y="723.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.1" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1178.1" y="707.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.1" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1178.1" y="691.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.1" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1178.1" y="675.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.1" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1178.1" y="659.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.1" y="670.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1178.1" y="643.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.1" y="654.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1178.1" y="627.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.1" y="638.0"></text>
</g>
<g>
<title>InlineTree::build_inline_tree_for_callee(ciMethod*, JVMState*, int) (1 samples, 0.09%)</title><rect x="1178.1" y="611.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1181.1" y="622.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (1 samples, 0.09%)</title><rect x="1179.2" y="803.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.2" y="814.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1180.3" y="835.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.3" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1180.3" y="819.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.3" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1180.3" y="803.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1180.3" y="787.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.3" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1180.3" y="771.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1180.3" y="755.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1180.3" y="739.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.3" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1180.3" y="723.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.3" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1180.3" y="707.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1180.3" y="691.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1180.3" y="675.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1180.3" y="659.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1180.3" y="643.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.3" y="654.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1180.3" y="627.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.3" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1180.3" y="611.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.3" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1180.3" y="595.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1180.3" y="579.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1180.3" y="563.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1180.3" y="547.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1180.3" y="531.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.3" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1180.3" y="515.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.3" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1180.3" y="499.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1180.3" y="483.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1180.3" y="467.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.3" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1180.3" y="451.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.3" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1180.3" y="435.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.3" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1180.3" y="419.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.3" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1180.3" y="403.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.3" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1180.3" y="387.0" width="1.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.3" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1180.3" y="371.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.3" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1180.3" y="355.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.3" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1180.3" y="339.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.3" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1180.3" y="323.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.3" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1180.3" y="307.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.3" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1180.3" y="291.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.3" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1180.3" y="275.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.3" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1180.3" y="259.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.3" y="270.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1180.3" y="243.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.3" y="254.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1180.3" y="227.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.3" y="238.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1180.3" y="211.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.3" y="222.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1180.3" y="195.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.3" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1180.3" y="179.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.3" y="190.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1180.3" y="163.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.3" y="174.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.09%)</title><rect x="1180.3" y="147.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.3" y="158.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.09%)</title><rect x="1180.3" y="131.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.3" y="142.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.09%)</title><rect x="1180.3" y="115.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.3" y="126.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.09%)</title><rect x="1180.3" y="99.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.3" y="110.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.09%)</title><rect x="1180.3" y="83.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.3" y="94.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.09%)</title><rect x="1180.3" y="67.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1183.3" y="78.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool) (1 samples, 0.09%)</title><rect x="1180.3" y="51.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.3" y="62.0"></text>
</g>
<g>
<title>Arena::Amalloc_D(unsigned long, AllocFailStrategy::AllocFailEnum) [clone .constprop.148] (1 samples, 0.09%)</title><rect x="1180.3" y="35.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.3" y="46.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1181.4" y="931.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.4" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1181.4" y="915.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.4" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1181.4" y="899.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1181.4" y="883.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.4" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1181.4" y="867.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.4" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1181.4" y="851.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1181.4" y="835.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.4" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1181.4" y="819.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.4" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1181.4" y="803.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.4" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1181.4" y="787.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1181.4" y="771.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1181.4" y="755.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1181.4" y="739.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.4" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1181.4" y="723.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.4" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1181.4" y="707.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1181.4" y="691.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.4" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1181.4" y="675.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1181.4" y="659.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1181.4" y="643.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.4" y="654.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1181.4" y="627.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.4" y="638.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1181.4" y="611.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.4" y="622.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1181.4" y="595.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.4" y="606.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.09%)</title><rect x="1181.4" y="579.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.4" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.09%)</title><rect x="1181.4" y="563.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.4" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.09%)</title><rect x="1181.4" y="547.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.4" y="558.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1181.4" y="531.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.4" y="542.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1181.4" y="515.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.4" y="526.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.09%)</title><rect x="1181.4" y="499.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.4" y="510.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_checkcast(ciBytecodeStream*) (1 samples, 0.09%)</title><rect x="1181.4" y="483.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.4" y="494.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_klass(bool&amp;) (1 samples, 0.09%)</title><rect x="1181.4" y="467.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1184.4" y="478.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1181.4" y="451.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.4" y="462.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.09%)</title><rect x="1181.4" y="435.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.4" y="446.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1182.4" y="1027.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.4" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1182.4" y="1011.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.4" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1182.4" y="995.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1182.4" y="979.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.4" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1182.4" y="963.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.4" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1182.4" y="947.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.4" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1182.4" y="931.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.4" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1182.4" y="915.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.4" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1182.4" y="899.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1182.4" y="883.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.4" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1182.4" y="867.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.4" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1182.4" y="851.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.4" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1182.4" y="835.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.4" y="846.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1182.4" y="819.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.4" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1182.4" y="803.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.4" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1182.4" y="787.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1182.4" y="771.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1182.4" y="755.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1182.4" y="739.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1182.4" y="723.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.4" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1182.4" y="707.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.4" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1182.4" y="691.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.4" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1182.4" y="675.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1182.4" y="659.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1182.4" y="643.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1182.4" y="627.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.4" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1182.4" y="611.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.4" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1182.4" y="595.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1182.4" y="579.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1182.4" y="563.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1182.4" y="547.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1182.4" y="531.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.4" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.09%)</title><rect x="1182.4" y="515.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.4" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.09%)</title><rect x="1182.4" y="499.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.09%)</title><rect x="1182.4" y="483.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.09%)</title><rect x="1182.4" y="467.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.09%)</title><rect x="1182.4" y="451.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.09%)</title><rect x="1182.4" y="435.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.4" y="446.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.09%)</title><rect x="1182.4" y="419.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.4" y="430.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.09%)</title><rect x="1182.4" y="403.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.4" y="414.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.09%)</title><rect x="1182.4" y="387.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.4" y="398.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.09%)</title><rect x="1182.4" y="371.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.4" y="382.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.09%)</title><rect x="1182.4" y="355.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.4" y="366.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1182.4" y="339.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.4" y="350.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.09%)</title><rect x="1182.4" y="323.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.4" y="334.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.09%)</title><rect x="1182.4" y="307.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.4" y="318.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.09%)</title><rect x="1182.4" y="291.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.4" y="302.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.09%)</title><rect x="1182.4" y="275.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.4" y="286.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1182.4" y="259.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.4" y="270.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1182.4" y="243.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.4" y="254.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1182.4" y="227.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.4" y="238.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.09%)</title><rect x="1182.4" y="211.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.4" y="222.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.09%)</title><rect x="1182.4" y="195.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.4" y="206.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.09%)</title><rect x="1182.4" y="179.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.4" y="190.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.09%)</title><rect x="1182.4" y="163.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.4" y="174.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1 samples, 0.09%)</title><rect x="1183.5" y="1155.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.5" y="1166.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (1 samples, 0.09%)</title><rect x="1183.5" y="1139.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.5" y="1150.0"></text>
</g>
<g>
<title>Compilation::compile_method() (1 samples, 0.09%)</title><rect x="1183.5" y="1123.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.5" y="1134.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (1 samples, 0.09%)</title><rect x="1183.5" y="1107.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.5" y="1118.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.09%)</title><rect x="1183.5" y="1091.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.5" y="1102.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.09%)</title><rect x="1183.5" y="1075.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.5" y="1086.0"></text>
</g>
<g>
<title>LIR_Assembler::append_code_stub(CodeStub*) (1 samples, 0.09%)</title><rect x="1183.5" y="1059.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.5" y="1070.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (2 samples, 0.18%)</title><rect x="1184.6" y="1155.0" width="2.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.6" y="1166.0"></text>
</g>
<g>
<title>ciObjectFactory::get(oopDesc*) (2 samples, 0.18%)</title><rect x="1184.6" y="1139.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.6" y="1150.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.18%)</title><rect x="1184.6" y="1123.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.6" y="1134.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.18%)</title><rect x="1184.6" y="1107.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.6" y="1118.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;573558ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 573558ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.09%)</title><rect x="1184.6" y="1091.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.6" y="1102.0"></text>
</g>
<g>
<title>ciInstanceKlass::ciInstanceKlass(Klass*) (1 samples, 0.09%)</title><rect x="1185.7" y="1091.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.7" y="1102.0"></text>
</g>
<g>
<title>ciKlass::ciKlass(Klass*) (1 samples, 0.09%)</title><rect x="1185.7" y="1075.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.7" y="1086.0"></text>
</g>
<g>
<title>ciObjectFactory::get_symbol(Symbol*) (1 samples, 0.09%)</title><rect x="1185.7" y="1059.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.7" y="1070.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.09%)</title><rect x="1185.7" y="1043.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.7" y="1054.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.09%)</title><rect x="1186.8" y="1219.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.8" y="1230.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.09%)</title><rect x="1186.8" y="1203.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="1214.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.09%)</title><rect x="1186.8" y="1187.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.8" y="1198.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.18%)</title><rect x="1187.8" y="1219.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.8" y="1230.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.09%)</title><rect x="1187.8" y="1203.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.8" y="1214.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.09%)</title><rect x="1187.8" y="1187.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.8" y="1198.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.09%)</title><rect x="1187.8" y="1171.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.8" y="1182.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.09%)</title><rect x="1187.8" y="1155.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1190.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1187.8" y="1139.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1190.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1187.8" y="1123.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1190.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1187.8" y="1107.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1190.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1187.8" y="1091.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1190.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.09%)</title><rect x="1187.8" y="1075.0" width="1.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1190.8" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.09%)</title><rect x="1188.9" y="1203.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.9" y="1214.0"></text>
</g>
</g>
</svg>
