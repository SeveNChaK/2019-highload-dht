<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1301"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1301"> </text>
<g id="frames">
<g>
<title>all (2,607 samples, 100.00%)</title><rect x="10.0" y="1267.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1278.0">all</text>
</g>
<g>
<title>[AsyncWorker-0 tid=31421] (107 samples, 4.10%)</title><rect x="10.0" y="1251.0" width="48.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="1262.0">[Asy..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="10.0" y="1235.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="10.0" y="1219.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.0" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="10.0" y="1203.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="13.0" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="10.0" y="1187.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.0" y="1198.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::myThread() (1 samples, 0.04%)</title><rect x="10.0" y="1171.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.run (106 samples, 4.07%)</title><rect x="10.5" y="1235.0" width="47.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.5" y="1246.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (106 samples, 4.07%)</title><rect x="10.5" y="1219.0" width="47.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.5" y="1230.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (106 samples, 4.07%)</title><rect x="10.5" y="1203.0" width="47.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.5" y="1214.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.54%)</title><rect x="11.4" y="1187.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="14.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (13 samples, 0.50%)</title><rect x="11.8" y="1171.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="14.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.42%)</title><rect x="11.8" y="1155.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.04%)</title><rect x="11.8" y="1139.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="14.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="11.8" y="1123.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="14.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="11.8" y="1107.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.04%)</title><rect x="11.8" y="1091.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="14.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="11.8" y="1075.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="14.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="11.8" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="14.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.38%)</title><rect x="12.3" y="1139.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="15.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.38%)</title><rect x="12.3" y="1123.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="15.3" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.23%)</title><rect x="12.3" y="1107.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="15.3" y="1118.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="13.2" y="1091.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.2" y="1102.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="13.6" y="1091.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="16.6" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.04%)</title><rect x="14.1" y="1091.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.1" y="1102.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="14.5" y="1091.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="17.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="15.0" y="1107.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="18.0" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.08%)</title><rect x="15.0" y="1091.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="18.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="15.4" y="1075.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="18.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="15.4" y="1059.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="18.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="15.4" y="1043.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="18.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="15.4" y="1027.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="18.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="15.4" y="1011.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="18.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="15.4" y="995.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="18.4" y="1006.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="15.9" y="1091.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="18.9" y="1102.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="16.3" y="1107.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.08%)</title><rect x="16.8" y="1155.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="19.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.08%)</title><rect x="16.8" y="1139.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="19.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="16.8" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="19.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="17.2" y="1123.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="17.2" y="1107.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="20.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.04%)</title><rect x="17.2" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="20.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (90 samples, 3.45%)</title><rect x="17.7" y="1187.0" width="40.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="20.7" y="1198.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (90 samples, 3.45%)</title><rect x="17.7" y="1171.0" width="40.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="20.7" y="1182.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (58 samples, 2.22%)</title><rect x="17.7" y="1155.0" width="26.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.7" y="1166.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$1 (58 samples, 2.22%)</title><rect x="17.7" y="1139.0" width="26.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="20.7" y="1150.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.upsert (56 samples, 2.15%)</title><rect x="18.1" y="1123.0" width="25.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="21.1" y="1134.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="18.1" y="1107.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="21.1" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="18.1" y="1091.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.1" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="18.6" y="1075.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="21.6" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="18.6" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="21.6" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="18.6" y="1043.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.6" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="18.6" y="1027.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="21.6" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="18.6" y="1011.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.6" y="1022.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="18.6" y="995.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="21.6" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="19.1" y="1107.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="22.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.04%)</title><rect x="19.5" y="1107.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.04%)</title><rect x="19.5" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="22.5" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (17 samples, 0.65%)</title><rect x="20.0" y="1107.0" width="7.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="23.0" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (17 samples, 0.65%)</title><rect x="20.0" y="1091.0" width="7.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="23.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="20.0" y="1075.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="20.0" y="1059.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="23.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="20.0" y="1043.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="23.0" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="20.0" y="1027.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="23.0" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="20.0" y="1011.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="23.0" y="1022.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="20.0" y="995.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="23.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (16 samples, 0.61%)</title><rect x="20.4" y="1075.0" width="7.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (15 samples, 0.58%)</title><rect x="20.4" y="1059.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (15 samples, 0.58%)</title><rect x="20.4" y="1043.0" width="6.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.12%)</title><rect x="20.4" y="1027.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="23.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.12%)</title><rect x="20.4" y="1011.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="23.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (3 samples, 0.12%)</title><rect x="21.8" y="1027.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="23.1" y="1027.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="23.1" y="1011.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="23.1" y="995.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="23.1" y="979.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="23.1" y="963.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="23.1" y="947.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="26.1" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="23.1" y="931.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="26.1" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="23.1" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.1" y="926.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.04%)</title><rect x="23.1" y="899.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="26.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (8 samples, 0.31%)</title><rect x="23.6" y="1027.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.6" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.31%)</title><rect x="23.6" y="1011.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="26.6" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.31%)</title><rect x="23.6" y="995.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="26.6" y="1006.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (7 samples, 0.27%)</title><rect x="23.6" y="979.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.6" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (7 samples, 0.27%)</title><rect x="23.6" y="963.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="26.3" y="947.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="29.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="26.3" y="931.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="29.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="26.3" y="915.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="29.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="26.3" y="899.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="29.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="26.3" y="883.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="29.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="26.3" y="867.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="29.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="26.3" y="851.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="29.3" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="26.7" y="979.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="29.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.of (1 samples, 0.04%)</title><rect x="27.2" y="1059.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="30.2" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (6 samples, 0.23%)</title><rect x="27.7" y="1107.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.7" y="1118.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.04%)</title><rect x="27.7" y="1091.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="30.7" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.04%)</title><rect x="27.7" y="1075.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="30.7" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (1 samples, 0.04%)</title><rect x="27.7" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="30.7" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="27.7" y="1043.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="30.7" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="27.7" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="30.7" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (5 samples, 0.19%)</title><rect x="28.1" y="1091.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="31.1" y="1102.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (4 samples, 0.15%)</title><rect x="28.1" y="1075.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="31.1" y="1086.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (1 samples, 0.04%)</title><rect x="28.1" y="1059.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="31.1" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (1 samples, 0.04%)</title><rect x="28.1" y="1043.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.1" y="1054.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (3 samples, 0.12%)</title><rect x="28.6" y="1059.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="31.6" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (2 samples, 0.08%)</title><rect x="29.0" y="1043.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="32.0" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.04%)</title><rect x="29.5" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="32.5" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="29.5" y="1011.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="32.5" y="1022.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="29.5" y="995.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="32.5" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="29.5" y="979.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="32.5" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.processRemaining (1 samples, 0.04%)</title><rect x="29.9" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.getResponsesFromRelicas (29 samples, 1.11%)</title><rect x="30.4" y="1107.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="33.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="30.8" y="1091.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="33.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="30.8" y="1075.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="33.8" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.get$Lambda (2 samples, 0.08%)</title><rect x="30.8" y="1059.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="33.8" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.&lt;init&gt; (2 samples, 0.08%)</title><rect x="30.8" y="1043.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="33.8" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.contains (1 samples, 0.04%)</title><rect x="31.7" y="1091.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="34.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (14 samples, 0.54%)</title><rect x="32.2" y="1091.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="35.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (1 samples, 0.04%)</title><rect x="32.2" y="1075.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="35.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (1 samples, 0.04%)</title><rect x="32.2" y="1059.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.50%)</title><rect x="32.6" y="1075.0" width="5.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="35.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.46%)</title><rect x="33.1" y="1059.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="36.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.27%)</title><rect x="33.1" y="1043.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.27%)</title><rect x="33.1" y="1027.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="36.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.27%)</title><rect x="33.1" y="1011.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="36.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.27%)</title><rect x="33.1" y="995.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="36.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.27%)</title><rect x="33.1" y="979.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="36.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.27%)</title><rect x="33.1" y="963.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="36.1" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.08%)</title><rect x="33.1" y="947.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="36.1" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.04%)</title><rect x="33.1" y="931.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="36.1" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="33.5" y="931.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="36.5" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.19%)</title><rect x="34.0" y="947.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="37.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="34.4" y="931.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="37.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="34.4" y="915.0" width="1.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="37.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="34.4" y="899.0" width="1.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="37.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="34.4" y="883.0" width="1.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="37.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="34.4" y="867.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="37.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="34.4" y="851.0" width="1.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="37.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="34.4" y="835.0" width="1.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="37.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="34.4" y="819.0" width="1.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="37.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="36.3" y="1043.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="39.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="36.3" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="39.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.15%)</title><rect x="36.7" y="1043.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="39.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.15%)</title><rect x="36.7" y="1027.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="39.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (4 samples, 0.15%)</title><rect x="36.7" y="1011.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="39.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="36.7" y="995.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="39.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.04%)</title><rect x="36.7" y="979.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="39.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="36.7" y="963.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="39.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.04%)</title><rect x="37.2" y="995.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="40.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.04%)</title><rect x="37.2" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="40.2" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="37.2" y="963.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.08%)</title><rect x="37.6" y="995.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.08%)</title><rect x="37.6" y="979.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="40.6" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.08%)</title><rect x="37.6" y="963.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (11 samples, 0.42%)</title><rect x="38.5" y="1091.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (11 samples, 0.42%)</title><rect x="38.5" y="1075.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="41.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.38%)</title><rect x="38.5" y="1059.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="41.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="38.5" y="1043.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.35%)</title><rect x="39.0" y="1043.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="42.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.35%)</title><rect x="39.0" y="1027.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="42.0" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.23%)</title><rect x="39.0" y="1011.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="42.0" y="1022.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.08%)</title><rect x="39.4" y="995.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="42.4" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="40.3" y="995.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="43.3" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="40.3" y="979.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="43.3" y="990.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="40.8" y="995.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="43.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="40.8" y="979.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="43.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="40.8" y="963.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="43.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="40.8" y="947.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="43.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="40.8" y="931.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="43.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="40.8" y="915.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="43.8" y="926.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.04%)</title><rect x="41.2" y="995.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="44.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="41.7" y="1011.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="44.7" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.08%)</title><rect x="41.7" y="995.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="44.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="41.7" y="979.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="44.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="41.7" y="963.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="44.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="41.7" y="947.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="44.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="41.7" y="931.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="44.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="41.7" y="915.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="44.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="42.1" y="899.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="45.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="42.1" y="883.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="45.1" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="42.6" y="995.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="45.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="43.0" y="1059.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="43.0" y="1043.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="43.0" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="46.0" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (1 samples, 0.04%)</title><rect x="43.5" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="46.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="43.5" y="1107.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="46.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="43.5" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.04%)</title><rect x="43.5" y="1075.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="46.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (32 samples, 1.23%)</title><rect x="43.9" y="1155.0" width="14.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="46.9" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (32 samples, 1.23%)</title><rect x="43.9" y="1139.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="43.9" y="1123.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="46.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="43.9" y="1107.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="46.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="43.9" y="1091.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (31 samples, 1.19%)</title><rect x="44.4" y="1123.0" width="14.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (31 samples, 1.19%)</title><rect x="44.4" y="1107.0" width="14.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (31 samples, 1.19%)</title><rect x="44.4" y="1091.0" width="14.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="47.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (31 samples, 1.19%)</title><rect x="44.4" y="1075.0" width="14.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (31 samples, 1.19%)</title><rect x="44.4" y="1059.0" width="14.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="47.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="44.4" y="1043.0" width="1.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="47.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="44.4" y="1027.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="47.4" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.15%)</title><rect x="44.4" y="1011.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="47.4" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.08%)</title><rect x="44.9" y="995.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="47.9" y="1006.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="45.8" y="995.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="48.8" y="1006.0"></text>
</g>
<g>
<title>__send (27 samples, 1.04%)</title><rect x="46.2" y="1043.0" width="12.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="49.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="46.2" y="1027.0" width="12.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="49.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="46.2" y="1011.0" width="12.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="49.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="46.2" y="995.0" width="12.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="49.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="46.2" y="979.0" width="12.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="49.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="46.2" y="963.0" width="12.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="49.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="46.2" y="947.0" width="12.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="49.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="46.2" y="931.0" width="12.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="49.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="46.2" y="915.0" width="12.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="49.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="46.7" y="899.0" width="11.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="49.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="46.7" y="883.0" width="11.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="49.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="47.1" y="867.0" width="11.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="50.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.88%)</title><rect x="48.0" y="851.0" width="10.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="51.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="48.9" y="835.0" width="9.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="51.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="48.9" y="819.0" width="9.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="51.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="49.4" y="803.0" width="9.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="52.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="49.4" y="787.0" width="9.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="52.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="49.4" y="771.0" width="9.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="52.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="49.4" y="755.0" width="9.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="52.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="50.7" y="739.0" width="7.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="53.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="51.6" y="723.0" width="6.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="54.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="52.5" y="707.0" width="5.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="55.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="53.9" y="691.0" width="4.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="56.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="54.4" y="675.0" width="4.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="57.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="55.3" y="659.0" width="3.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="58.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="55.3" y="643.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="58.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="55.3" y="627.0" width="3.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="58.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="55.3" y="611.0" width="3.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="58.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="55.3" y="595.0" width="3.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="58.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="55.3" y="579.0" width="3.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="58.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="55.3" y="563.0" width="3.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="58.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="55.3" y="547.0" width="3.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="58.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="55.3" y="531.0" width="3.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="58.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="55.3" y="515.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="58.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="55.7" y="499.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="58.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="55.7" y="483.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="58.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="56.6" y="467.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="59.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="56.6" y="451.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="59.6" y="462.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="57.1" y="435.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="60.1" y="446.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="57.1" y="419.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="60.1" y="430.0"></text>
</g>
<g>
<title>[AsyncWorker-0 tid=31430] (68 samples, 2.61%)</title><rect x="58.4" y="1251.0" width="30.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="61.4" y="1262.0">[A..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="58.4" y="1235.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="61.4" y="1246.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="58.4" y="1219.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="61.4" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (1 samples, 0.04%)</title><rect x="58.4" y="1203.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="61.4" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.04%)</title><rect x="58.4" y="1187.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="61.4" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.04%)</title><rect x="58.4" y="1171.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="61.4" y="1182.0"></text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.04%)</title><rect x="58.9" y="1235.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="61.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.run (66 samples, 2.53%)</title><rect x="59.3" y="1235.0" width="29.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.3" y="1246.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (66 samples, 2.53%)</title><rect x="59.3" y="1219.0" width="29.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="62.3" y="1230.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (66 samples, 2.53%)</title><rect x="59.3" y="1203.0" width="29.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="62.3" y="1214.0">ja..</text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="59.8" y="1187.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="62.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.35%)</title><rect x="60.2" y="1187.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="63.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (9 samples, 0.35%)</title><rect x="60.2" y="1171.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="63.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.27%)</title><rect x="60.7" y="1155.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="63.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.27%)</title><rect x="60.7" y="1139.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="63.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.27%)</title><rect x="60.7" y="1123.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.7" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.15%)</title><rect x="60.7" y="1107.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="63.7" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="61.1" y="1091.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="64.1" y="1102.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="61.1" y="1075.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="64.1" y="1086.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="61.6" y="1091.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="64.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="61.6" y="1075.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="64.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="61.6" y="1059.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="64.6" y="1070.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.04%)</title><rect x="62.1" y="1091.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="65.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="62.5" y="1107.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="65.5" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.12%)</title><rect x="62.5" y="1091.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="65.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="62.5" y="1075.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="65.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="62.5" y="1059.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="65.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="62.5" y="1043.0" width="1.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="65.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="62.5" y="1027.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="65.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="62.5" y="1011.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="65.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="62.5" y="995.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="65.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="63.4" y="979.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="66.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="63.9" y="1155.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="66.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="63.9" y="1139.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="63.9" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="66.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="63.9" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="63.9" y="1091.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="66.9" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (55 samples, 2.11%)</title><rect x="64.3" y="1187.0" width="24.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="67.3" y="1198.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (55 samples, 2.11%)</title><rect x="64.3" y="1171.0" width="24.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.3" y="1182.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (16 samples, 0.61%)</title><rect x="64.3" y="1155.0" width="7.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="67.3" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$1 (16 samples, 0.61%)</title><rect x="64.3" y="1139.0" width="7.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.3" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.upsert (12 samples, 0.46%)</title><rect x="64.3" y="1123.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (11 samples, 0.42%)</title><rect x="64.8" y="1107.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.8" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (11 samples, 0.42%)</title><rect x="64.8" y="1091.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="64.8" y="1075.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="67.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="64.8" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="64.8" y="1043.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="67.8" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (10 samples, 0.38%)</title><rect x="65.2" y="1075.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 0.31%)</title><rect x="65.2" y="1059.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 0.31%)</title><rect x="65.2" y="1043.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="68.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.04%)</title><rect x="65.7" y="1027.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.23%)</title><rect x="66.1" y="1027.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.1" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.23%)</title><rect x="66.1" y="1011.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="69.1" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.23%)</title><rect x="66.1" y="995.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="69.1" y="1006.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.19%)</title><rect x="66.1" y="979.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.1" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.19%)</title><rect x="66.1" y="963.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="69.1" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="68.4" y="979.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Row.of (1 samples, 0.04%)</title><rect x="68.8" y="1059.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.8" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.of (1 samples, 0.04%)</title><rect x="69.3" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="72.3" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (4 samples, 0.15%)</title><rect x="69.7" y="1123.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="72.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="70.2" y="1107.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="70.2" y="1091.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="70.2" y="1075.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="73.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.08%)</title><rect x="70.7" y="1107.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="70.7" y="1091.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="70.7" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="71.1" y="1091.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="71.1" y="1075.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="71.1" y="1059.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="71.1" y="1043.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (39 samples, 1.50%)</title><rect x="71.6" y="1155.0" width="17.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="74.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (39 samples, 1.50%)</title><rect x="71.6" y="1139.0" width="17.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="74.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (39 samples, 1.50%)</title><rect x="71.6" y="1123.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 1.50%)</title><rect x="71.6" y="1107.0" width="17.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 1.50%)</title><rect x="71.6" y="1091.0" width="17.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="74.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (38 samples, 1.46%)</title><rect x="71.6" y="1075.0" width="17.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="74.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (38 samples, 1.46%)</title><rect x="71.6" y="1059.0" width="17.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.6" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="71.6" y="1043.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="74.6" y="1054.0"></text>
</g>
<g>
<title>__send (37 samples, 1.42%)</title><rect x="72.0" y="1043.0" width="16.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="75.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.42%)</title><rect x="72.0" y="1027.0" width="16.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="75.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.42%)</title><rect x="72.0" y="1011.0" width="16.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="75.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.34%)</title><rect x="72.9" y="995.0" width="15.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="75.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.34%)</title><rect x="72.9" y="979.0" width="15.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="75.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="73.8" y="963.0" width="15.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="76.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="73.8" y="947.0" width="15.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="76.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="73.8" y="931.0" width="15.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="76.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="73.8" y="915.0" width="15.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="76.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="75.2" y="899.0" width="13.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="78.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="76.5" y="883.0" width="12.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="79.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="76.5" y="867.0" width="12.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="79.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="77.4" y="851.0" width="11.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="80.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.88%)</title><rect x="78.3" y="835.0" width="10.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="81.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.88%)</title><rect x="78.3" y="819.0" width="10.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="81.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.84%)</title><rect x="78.8" y="803.0" width="10.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="81.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="79.3" y="787.0" width="9.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="82.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="79.3" y="771.0" width="9.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="82.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="79.7" y="755.0" width="9.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="82.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="80.2" y="739.0" width="8.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="83.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="80.6" y="723.0" width="8.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="83.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="82.0" y="707.0" width="6.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="85.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="82.4" y="691.0" width="6.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="85.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="82.9" y="675.0" width="5.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="85.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="83.3" y="659.0" width="5.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="86.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="83.8" y="643.0" width="5.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="86.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="84.7" y="627.0" width="4.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="87.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="84.7" y="611.0" width="4.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="87.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="85.1" y="595.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="88.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="85.1" y="579.0" width="3.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="88.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="85.1" y="563.0" width="3.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="88.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="85.1" y="547.0" width="3.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="88.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="85.1" y="531.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="88.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="85.6" y="515.0" width="3.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="88.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="86.0" y="499.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="89.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="86.5" y="483.0" width="2.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="89.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="87.4" y="467.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="90.4" y="478.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="87.4" y="451.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="90.4" y="462.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="87.4" y="435.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="90.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="87.4" y="419.0" width="1.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="90.4" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="88.3" y="403.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="91.3" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="88.3" y="387.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="91.3" y="398.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="88.8" y="1075.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="91.8" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="88.8" y="1059.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="91.8" y="1070.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="88.8" y="1043.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="91.8" y="1054.0"></text>
</g>
<g>
<title>[AsyncWorker-0 tid=31431] (73 samples, 2.80%)</title><rect x="89.2" y="1251.0" width="33.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="92.2" y="1262.0">[A..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="89.2" y="1235.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="92.2" y="1246.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="89.2" y="1219.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="92.2" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="89.2" y="1203.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="92.2" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.04%)</title><rect x="89.2" y="1187.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="92.2" y="1198.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.04%)</title><rect x="89.7" y="1235.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="92.7" y="1246.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="89.7" y="1219.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="92.7" y="1230.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.04%)</title><rect x="89.7" y="1203.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="92.7" y="1214.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="89.7" y="1187.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="92.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.run (71 samples, 2.72%)</title><rect x="90.1" y="1235.0" width="32.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="93.1" y="1246.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (71 samples, 2.72%)</title><rect x="90.1" y="1219.0" width="32.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.1" y="1230.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (71 samples, 2.72%)</title><rect x="90.1" y="1203.0" width="32.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="93.1" y="1214.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.04%)</title><rect x="90.6" y="1187.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="93.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 0.77%)</title><rect x="91.0" y="1187.0" width="9.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="94.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (20 samples, 0.77%)</title><rect x="91.0" y="1171.0" width="9.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (16 samples, 0.61%)</title><rect x="91.0" y="1155.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 0.61%)</title><rect x="91.0" y="1139.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.61%)</title><rect x="91.0" y="1123.0" width="7.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.0" y="1134.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="91.0" y="1107.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="94.0" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.23%)</title><rect x="91.5" y="1107.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="94.5" y="1118.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="91.5" y="1091.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="94.5" y="1102.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (5 samples, 0.19%)</title><rect x="91.9" y="1091.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="94.9" y="1102.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="93.7" y="1075.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="96.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="94.2" y="1107.0" width="4.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="97.2" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.31%)</title><rect x="94.2" y="1091.0" width="3.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="97.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="94.6" y="1075.0" width="3.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="97.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="94.6" y="1059.0" width="3.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="97.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="94.6" y="1043.0" width="3.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="97.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="95.1" y="1027.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="98.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="95.5" y="1011.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="98.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="96.0" y="995.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="99.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="96.9" y="979.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="99.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="96.9" y="963.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="99.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="96.9" y="947.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="99.9" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="97.8" y="1091.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="100.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.15%)</title><rect x="98.3" y="1155.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.15%)</title><rect x="98.3" y="1139.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.12%)</title><rect x="98.3" y="1123.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.12%)</title><rect x="98.3" y="1107.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="98.3" y="1091.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="101.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.08%)</title><rect x="98.7" y="1091.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="99.6" y="1123.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="99.6" y="1107.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="102.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.04%)</title><rect x="99.6" y="1091.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.6" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (49 samples, 1.88%)</title><rect x="100.1" y="1187.0" width="22.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.1" y="1198.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (49 samples, 1.88%)</title><rect x="100.1" y="1171.0" width="22.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.1" y="1182.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (13 samples, 0.50%)</title><rect x="100.1" y="1155.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.1" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$1 (13 samples, 0.50%)</title><rect x="100.1" y="1139.0" width="5.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.1" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.upsert (12 samples, 0.46%)</title><rect x="100.1" y="1123.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="100.5" y="1107.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="103.5" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="101.0" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.0" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="101.0" y="1075.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.0" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="101.0" y="1059.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.0" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="101.0" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.0" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="101.0" y="1027.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.04%)</title><rect x="101.4" y="1107.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (1 samples, 0.04%)</title><rect x="101.4" y="1091.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.4" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (8 samples, 0.31%)</title><rect x="101.9" y="1107.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (8 samples, 0.31%)</title><rect x="101.9" y="1091.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="104.9" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (8 samples, 0.31%)</title><rect x="101.9" y="1075.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="104.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 0.31%)</title><rect x="101.9" y="1059.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="104.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 0.31%)</title><rect x="101.9" y="1043.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="101.9" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="102.3" y="1027.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="102.3" y="1011.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="102.3" y="995.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="102.3" y="979.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.23%)</title><rect x="102.8" y="1027.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="105.8" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.23%)</title><rect x="102.8" y="1011.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.8" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.23%)</title><rect x="102.8" y="995.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.08%)</title><rect x="103.2" y="979.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="106.2" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.08%)</title><rect x="103.2" y="963.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.2" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.12%)</title><rect x="104.1" y="979.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="107.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (1 samples, 0.04%)</title><rect x="105.5" y="1123.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="105.5" y="1107.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="105.5" y="1091.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="105.5" y="1075.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (36 samples, 1.38%)</title><rect x="106.0" y="1155.0" width="16.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (36 samples, 1.38%)</title><rect x="106.0" y="1139.0" width="16.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="106.0" y="1123.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="109.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="106.0" y="1107.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="106.0" y="1091.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (35 samples, 1.34%)</title><rect x="106.4" y="1123.0" width="15.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="109.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="106.4" y="1107.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="109.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="106.4" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="109.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 1.30%)</title><rect x="106.9" y="1107.0" width="15.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.9" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 1.30%)</title><rect x="106.9" y="1091.0" width="15.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (34 samples, 1.30%)</title><rect x="106.9" y="1075.0" width="15.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (34 samples, 1.30%)</title><rect x="106.9" y="1059.0" width="15.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="106.9" y="1043.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="109.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="106.9" y="1027.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="109.9" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.12%)</title><rect x="106.9" y="1011.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="109.9" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.04%)</title><rect x="106.9" y="995.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="109.9" y="1006.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.08%)</title><rect x="107.3" y="995.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="110.3" y="1006.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="107.8" y="979.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="110.8" y="990.0"></text>
</g>
<g>
<title>__send (31 samples, 1.19%)</title><rect x="108.2" y="1043.0" width="14.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="111.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="108.7" y="1027.0" width="13.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="111.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="108.7" y="1011.0" width="13.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="111.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="108.7" y="995.0" width="13.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="111.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="108.7" y="979.0" width="13.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="111.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="108.7" y="963.0" width="13.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="111.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="108.7" y="947.0" width="13.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="111.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="108.7" y="931.0" width="13.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="111.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.11%)</title><rect x="109.1" y="915.0" width="13.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="112.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="110.0" y="899.0" width="12.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="113.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="110.0" y="883.0" width="12.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="113.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="110.0" y="867.0" width="12.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="113.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="110.9" y="851.0" width="11.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="113.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="113.7" y="835.0" width="8.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="116.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="113.7" y="819.0" width="8.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="116.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="113.7" y="803.0" width="8.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="116.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="113.7" y="787.0" width="8.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="116.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="113.7" y="771.0" width="8.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="116.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="113.7" y="755.0" width="8.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="116.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="114.6" y="739.0" width="7.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="117.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="115.5" y="723.0" width="6.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="118.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="116.8" y="707.0" width="5.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="119.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="116.8" y="691.0" width="5.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="119.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="116.8" y="675.0" width="5.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="119.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="116.8" y="659.0" width="5.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="119.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="117.7" y="643.0" width="4.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="120.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="117.7" y="627.0" width="4.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="120.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="117.7" y="611.0" width="4.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="120.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="118.2" y="595.0" width="4.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="121.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="118.2" y="579.0" width="4.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="121.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="118.2" y="563.0" width="4.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="121.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="118.2" y="547.0" width="4.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="121.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="118.2" y="531.0" width="4.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="121.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="118.6" y="515.0" width="3.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="121.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="118.6" y="499.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="121.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="118.6" y="483.0" width="3.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="121.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="119.1" y="467.0" width="3.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="122.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="119.1" y="451.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="122.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="120.4" y="435.0" width="1.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="123.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="120.4" y="419.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="123.4" y="430.0"></text>
</g>
<g>
<title>[AsyncWorker-1 tid=31422] (108 samples, 4.14%)</title><rect x="122.3" y="1251.0" width="48.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="125.3" y="1262.0">[Asy..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="122.3" y="1235.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="125.3" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="122.3" y="1219.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="125.3" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="122.3" y="1203.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="125.3" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="122.3" y="1187.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="125.3" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.04%)</title><rect x="122.3" y="1171.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="125.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.run (107 samples, 4.10%)</title><rect x="122.7" y="1235.0" width="48.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.7" y="1246.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (107 samples, 4.10%)</title><rect x="122.7" y="1219.0" width="48.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.7" y="1230.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (107 samples, 4.10%)</title><rect x="122.7" y="1203.0" width="48.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.7" y="1214.0">java..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.04%)</title><rect x="125.0" y="1187.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 0.58%)</title><rect x="125.4" y="1187.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="128.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (13 samples, 0.50%)</title><rect x="126.3" y="1171.0" width="5.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.42%)</title><rect x="126.3" y="1155.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="129.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.04%)</title><rect x="126.3" y="1139.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="129.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.38%)</title><rect x="126.8" y="1139.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.38%)</title><rect x="126.8" y="1123.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="129.8" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.08%)</title><rect x="126.8" y="1107.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="129.8" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="126.8" y="1091.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="129.8" y="1102.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="127.2" y="1091.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="130.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="127.2" y="1075.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="130.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="127.2" y="1059.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="130.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="127.2" y="1043.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="130.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="127.2" y="1027.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="130.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="127.2" y="1011.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="130.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="127.7" y="1107.0" width="3.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="130.7" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.31%)</title><rect x="127.7" y="1091.0" width="3.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="130.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="127.7" y="1075.0" width="3.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="130.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="127.7" y="1059.0" width="3.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="130.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="127.7" y="1043.0" width="3.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="130.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="127.7" y="1027.0" width="3.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="130.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="127.7" y="1011.0" width="3.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="130.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="127.7" y="995.0" width="3.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="130.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="128.1" y="979.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="131.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="128.1" y="963.0" width="3.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="131.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="128.1" y="947.0" width="3.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="131.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.08%)</title><rect x="131.3" y="1155.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="131.3" y="1139.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="134.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="131.3" y="1123.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="134.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="131.3" y="1107.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="134.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="131.3" y="1091.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.04%)</title><rect x="131.8" y="1139.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="134.8" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (86 samples, 3.30%)</title><rect x="132.2" y="1187.0" width="38.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.2" y="1198.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (84 samples, 3.22%)</title><rect x="133.1" y="1171.0" width="38.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="136.1" y="1182.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (1 samples, 0.04%)</title><rect x="133.1" y="1155.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.1" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (1 samples, 0.04%)</title><rect x="133.1" y="1139.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="136.1" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (1 samples, 0.04%)</title><rect x="133.1" y="1123.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="133.1" y="1107.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="136.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (55 samples, 2.11%)</title><rect x="133.6" y="1155.0" width="24.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="136.6" y="1166.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$1 (55 samples, 2.11%)</title><rect x="133.6" y="1139.0" width="24.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="136.6" y="1150.0">r..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="133.6" y="1123.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="136.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="133.6" y="1107.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="136.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="133.6" y="1091.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="136.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="133.6" y="1075.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="136.6" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.upsert (52 samples, 1.99%)</title><rect x="134.0" y="1123.0" width="23.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="137.0" y="1134.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="134.9" y="1107.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.04%)</title><rect x="134.9" y="1091.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="137.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.04%)</title><rect x="134.9" y="1075.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="137.9" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="135.4" y="1107.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.4" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="135.4" y="1091.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="138.4" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="135.4" y="1075.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="138.4" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="135.8" y="1059.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.8" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="135.8" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="138.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.04%)</title><rect x="136.3" y="1107.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (12 samples, 0.46%)</title><rect x="136.7" y="1107.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="139.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (12 samples, 0.46%)</title><rect x="136.7" y="1091.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="136.7" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="136.7" y="1059.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="136.7" y="1043.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (11 samples, 0.42%)</title><rect x="137.2" y="1075.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.2" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="137.2" y="1059.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="140.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="137.2" y="1043.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="140.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="137.2" y="1027.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="140.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="137.2" y="1011.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="140.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="137.2" y="995.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="140.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="137.2" y="979.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="140.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="137.2" y="963.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="140.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="137.2" y="947.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="140.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (10 samples, 0.38%)</title><rect x="137.6" y="1059.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (10 samples, 0.38%)</title><rect x="137.6" y="1043.0" width="4.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (3 samples, 0.12%)</title><rect x="137.6" y="1027.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (1 samples, 0.04%)</title><rect x="139.0" y="1027.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.04%)</title><rect x="139.0" y="1011.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/Striped64.casBase (1 samples, 0.04%)</title><rect x="139.0" y="995.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="142.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.23%)</title><rect x="139.5" y="1027.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.5" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.23%)</title><rect x="139.5" y="1011.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.5" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.23%)</title><rect x="139.5" y="995.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="142.5" y="1006.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.19%)</title><rect x="139.5" y="979.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="142.5" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.19%)</title><rect x="139.5" y="963.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="142.5" y="974.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="141.3" y="947.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.3" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="141.7" y="979.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.7" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.04%)</title><rect x="141.7" y="963.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.7" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (10 samples, 0.38%)</title><rect x="142.2" y="1107.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.2" y="1118.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.08%)</title><rect x="142.2" y="1091.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="145.2" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.08%)</title><rect x="142.2" y="1075.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.2" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2 samples, 0.08%)</title><rect x="142.2" y="1059.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="145.2" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.&lt;init&gt; (2 samples, 0.08%)</title><rect x="142.2" y="1043.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="145.2" y="1054.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="142.6" y="1027.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="145.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (8 samples, 0.31%)</title><rect x="143.1" y="1091.0" width="3.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.1" y="1102.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (8 samples, 0.31%)</title><rect x="143.1" y="1075.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="146.1" y="1086.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (1 samples, 0.04%)</title><rect x="143.1" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="146.1" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (1 samples, 0.04%)</title><rect x="143.1" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.1" y="1054.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (1 samples, 0.04%)</title><rect x="143.1" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="146.1" y="1038.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1 samples, 0.04%)</title><rect x="143.1" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.1" y="1022.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1 samples, 0.04%)</title><rect x="143.1" y="995.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="146.1" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.04%)</title><rect x="143.1" y="979.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.1" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="143.1" y="963.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.1" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (4 samples, 0.15%)</title><rect x="143.5" y="1059.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.5" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (3 samples, 0.12%)</title><rect x="143.5" y="1043.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="146.5" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.12%)</title><rect x="143.5" y="1027.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="146.5" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.12%)</title><rect x="143.5" y="1011.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="146.5" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="143.5" y="995.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="146.5" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="143.5" y="979.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="146.5" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (2 samples, 0.08%)</title><rect x="144.0" y="963.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="147.0" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.04%)</title><rect x="144.4" y="947.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="147.4" y="958.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.processRemaining (1 samples, 0.04%)</title><rect x="144.9" y="1043.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="147.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="144.9" y="1027.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="147.9" y="1038.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (3 samples, 0.12%)</title><rect x="145.3" y="1059.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.3" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (2 samples, 0.08%)</title><rect x="145.3" y="1043.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.3" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.08%)</title><rect x="145.3" y="1027.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="148.3" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.08%)</title><rect x="145.3" y="1011.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.08%)</title><rect x="145.3" y="995.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="148.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="145.8" y="979.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.8" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.order (1 samples, 0.04%)</title><rect x="146.2" y="1043.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.getResponsesFromRelicas (24 samples, 0.92%)</title><rect x="146.7" y="1107.0" width="10.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="146.7" y="1091.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="146.7" y="1075.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="149.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.get$Lambda (2 samples, 0.08%)</title><rect x="146.7" y="1059.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.&lt;init&gt; (2 samples, 0.08%)</title><rect x="146.7" y="1043.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="149.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (13 samples, 0.50%)</title><rect x="147.6" y="1091.0" width="5.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="150.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (2 samples, 0.08%)</title><rect x="147.6" y="1075.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="150.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (1 samples, 0.04%)</title><rect x="147.6" y="1059.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="150.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (1 samples, 0.04%)</title><rect x="147.6" y="1043.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="150.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="147.6" y="1027.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.04%)</title><rect x="148.1" y="1059.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.42%)</title><rect x="148.5" y="1075.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.42%)</title><rect x="148.5" y="1059.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.38%)</title><rect x="148.5" y="1043.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.38%)</title><rect x="148.5" y="1027.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.38%)</title><rect x="148.5" y="1011.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="151.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.38%)</title><rect x="148.5" y="995.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.38%)</title><rect x="148.5" y="979.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.38%)</title><rect x="148.5" y="963.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.5" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.15%)</title><rect x="148.5" y="947.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="151.5" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.08%)</title><rect x="149.0" y="931.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="152.0" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.04%)</title><rect x="149.9" y="931.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="152.9" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.23%)</title><rect x="150.3" y="947.0" width="2.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="153.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="150.8" y="931.0" width="2.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="153.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="150.8" y="915.0" width="2.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="153.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="150.8" y="899.0" width="2.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="153.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="150.8" y="883.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="153.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="150.8" y="867.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="153.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="150.8" y="851.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="153.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="150.8" y="835.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="153.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="150.8" y="819.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="153.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="153.0" y="1043.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="153.0" y="1027.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (9 samples, 0.35%)</title><rect x="153.5" y="1091.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (9 samples, 0.35%)</title><rect x="153.5" y="1075.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.31%)</title><rect x="153.5" y="1059.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="153.5" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="153.5" y="1027.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="156.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="153.5" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.04%)</title><rect x="153.9" y="1043.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="156.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="153.9" y="1027.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="153.9" y="1011.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="153.9" y="995.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.04%)</title><rect x="153.9" y="979.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.9" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="153.9" y="963.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="156.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="153.9" y="947.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="156.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="153.9" y="931.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="156.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="153.9" y="915.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="156.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="153.9" y="899.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="156.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="153.9" y="883.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="156.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="153.9" y="867.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="156.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="153.9" y="851.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="156.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="153.9" y="835.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="156.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.23%)</title><rect x="154.4" y="1043.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.19%)</title><rect x="154.8" y="1027.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="157.8" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.04%)</title><rect x="154.8" y="1011.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="157.8" y="1022.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="154.8" y="995.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="157.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="155.3" y="1011.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="158.3" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.15%)</title><rect x="155.3" y="995.0" width="1.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="158.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="155.3" y="979.0" width="1.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="158.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="155.3" y="963.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="158.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="155.3" y="947.0" width="1.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="158.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="155.3" y="931.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="158.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="155.7" y="915.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="158.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="156.2" y="899.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="159.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="156.2" y="883.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="159.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="156.2" y="867.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="159.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="156.2" y="851.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="159.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="156.7" y="835.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="159.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="156.7" y="819.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="159.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="156.7" y="803.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="159.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="156.7" y="787.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="159.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.04%)</title><rect x="157.1" y="1059.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="157.1" y="1043.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="157.1" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="157.1" y="1011.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="160.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.04%)</title><rect x="157.1" y="995.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="160.1" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="157.1" y="979.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="160.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="157.1" y="963.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="160.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="157.1" y="947.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="160.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="157.1" y="931.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="160.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="157.1" y="915.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="160.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="157.1" y="899.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="160.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="157.1" y="883.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="160.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="157.1" y="867.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="160.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="157.1" y="851.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="160.1" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (2 samples, 0.08%)</title><rect x="157.6" y="1123.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="160.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="157.6" y="1107.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="157.6" y="1091.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="158.0" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="161.0" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (28 samples, 1.07%)</title><rect x="158.5" y="1155.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="161.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (28 samples, 1.07%)</title><rect x="158.5" y="1139.0" width="12.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="161.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="158.5" y="1123.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="161.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="158.5" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="161.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="158.5" y="1091.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="161.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 1.00%)</title><rect x="158.9" y="1123.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 1.00%)</title><rect x="158.9" y="1107.0" width="11.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.9" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 1.00%)</title><rect x="158.9" y="1091.0" width="11.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="161.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="158.9" y="1075.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="161.9" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="158.9" y="1059.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="161.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (25 samples, 0.96%)</title><rect x="159.4" y="1075.0" width="11.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="162.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (25 samples, 0.96%)</title><rect x="159.4" y="1059.0" width="11.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.4" y="1070.0"></text>
</g>
<g>
<title>__send (25 samples, 0.96%)</title><rect x="159.4" y="1043.0" width="11.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="162.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="159.4" y="1027.0" width="11.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="162.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="159.4" y="1011.0" width="11.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="162.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="159.4" y="995.0" width="11.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="162.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="159.4" y="979.0" width="11.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="162.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="159.4" y="963.0" width="11.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="162.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="159.4" y="947.0" width="11.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="162.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="159.4" y="931.0" width="11.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="162.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="159.4" y="915.0" width="11.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="162.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.92%)</title><rect x="159.8" y="899.0" width="10.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="162.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.92%)</title><rect x="159.8" y="883.0" width="10.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="162.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.92%)</title><rect x="159.8" y="867.0" width="10.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="162.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="161.2" y="851.0" width="9.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="164.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="161.6" y="835.0" width="9.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="164.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="161.6" y="819.0" width="9.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="164.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="161.6" y="803.0" width="9.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="164.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="161.6" y="787.0" width="9.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="164.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="162.1" y="771.0" width="8.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="165.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="162.1" y="755.0" width="8.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="165.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="162.1" y="739.0" width="8.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="165.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="163.4" y="723.0" width="7.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="166.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="164.3" y="707.0" width="6.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="167.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="164.8" y="691.0" width="5.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="167.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="165.3" y="675.0" width="5.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="168.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="165.3" y="659.0" width="5.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="168.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="165.7" y="643.0" width="5.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="168.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="165.7" y="627.0" width="5.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="168.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="165.7" y="611.0" width="5.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="168.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="166.2" y="595.0" width="4.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="169.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="166.2" y="579.0" width="4.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="169.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="166.6" y="563.0" width="4.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="169.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="166.6" y="547.0" width="4.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="169.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="166.6" y="531.0" width="4.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="169.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="166.6" y="515.0" width="4.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="169.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="167.1" y="499.0" width="3.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="170.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="167.5" y="483.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="170.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="167.5" y="467.0" width="3.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="170.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="168.0" y="451.0" width="2.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="171.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="168.0" y="435.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="171.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="168.4" y="419.0" width="2.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="171.4" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="170.2" y="403.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="173.2" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="170.2" y="387.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="173.2" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="170.7" y="1123.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="173.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="170.7" y="1107.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="173.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="170.7" y="1091.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="173.7" y="1102.0"></text>
</g>
<g>
<title>[AsyncWorker-1 tid=31432] (72 samples, 2.76%)</title><rect x="171.1" y="1251.0" width="32.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="174.1" y="1262.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="171.1" y="1235.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="174.1" y="1246.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="171.1" y="1219.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="174.1" y="1230.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="171.6" y="1235.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="174.6" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="171.6" y="1219.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="174.6" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="171.6" y="1203.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="174.6" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="171.6" y="1187.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="174.6" y="1198.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::myThread() (1 samples, 0.04%)</title><rect x="171.6" y="1171.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="174.6" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.08%)</title><rect x="172.0" y="1235.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="175.0" y="1246.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.08%)</title><rect x="172.0" y="1219.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="175.0" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.08%)</title><rect x="172.0" y="1203.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="175.0" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.04%)</title><rect x="172.5" y="1187.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="175.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.run (68 samples, 2.61%)</title><rect x="172.9" y="1235.0" width="30.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="175.9" y="1246.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (68 samples, 2.61%)</title><rect x="172.9" y="1219.0" width="30.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.9" y="1230.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (68 samples, 2.61%)</title><rect x="172.9" y="1203.0" width="30.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="175.9" y="1214.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.08%)</title><rect x="174.3" y="1187.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="177.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="174.8" y="1171.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="177.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="174.8" y="1155.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="177.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="174.8" y="1139.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="177.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="174.8" y="1123.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="177.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="174.8" y="1107.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="177.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="174.8" y="1091.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="177.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="174.8" y="1075.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="177.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="175.2" y="1187.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="178.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.04%)</title><rect x="175.7" y="1187.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="178.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="175.7" y="1171.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.04%)</title><rect x="175.7" y="1155.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.46%)</title><rect x="176.1" y="1187.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="179.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (11 samples, 0.42%)</title><rect x="176.6" y="1171.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="179.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.38%)</title><rect x="176.6" y="1155.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="179.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.38%)</title><rect x="176.6" y="1139.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="179.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.38%)</title><rect x="176.6" y="1123.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="179.6" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.08%)</title><rect x="176.6" y="1107.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="179.6" y="1118.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="177.0" y="1091.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="180.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="177.5" y="1107.0" width="3.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="180.5" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.27%)</title><rect x="177.5" y="1091.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="180.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="177.5" y="1075.0" width="3.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="180.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="177.5" y="1059.0" width="3.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="180.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="178.4" y="1043.0" width="2.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="181.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="178.4" y="1027.0" width="2.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="181.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="178.4" y="1011.0" width="2.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="181.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="178.4" y="995.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="181.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="178.4" y="979.0" width="2.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="181.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="179.3" y="963.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="182.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="179.3" y="947.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="182.3" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.04%)</title><rect x="180.6" y="1091.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="183.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="181.1" y="1155.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="181.1" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="181.1" y="1123.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.predecessor (1 samples, 0.04%)</title><rect x="181.1" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="184.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.04%)</title><rect x="181.1" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="184.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.04%)</title><rect x="181.5" y="1187.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="184.5" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (48 samples, 1.84%)</title><rect x="182.0" y="1187.0" width="21.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="185.0" y="1198.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (48 samples, 1.84%)</title><rect x="182.0" y="1171.0" width="21.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="185.0" y="1182.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (8 samples, 0.31%)</title><rect x="182.0" y="1155.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="185.0" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$1 (8 samples, 0.31%)</title><rect x="182.0" y="1139.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.0" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.upsert (6 samples, 0.23%)</title><rect x="182.0" y="1123.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.0" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (5 samples, 0.19%)</title><rect x="182.5" y="1107.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="185.5" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (5 samples, 0.19%)</title><rect x="182.5" y="1091.0" width="2.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="185.5" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (5 samples, 0.19%)</title><rect x="182.5" y="1075.0" width="2.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="185.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (5 samples, 0.19%)</title><rect x="182.5" y="1059.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="185.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (5 samples, 0.19%)</title><rect x="182.5" y="1043.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="185.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.19%)</title><rect x="182.5" y="1027.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.5" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.19%)</title><rect x="182.5" y="1011.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="185.5" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.15%)</title><rect x="182.9" y="995.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="185.9" y="1006.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.15%)</title><rect x="182.9" y="979.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="185.9" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.15%)</title><rect x="182.9" y="963.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="185.9" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (2 samples, 0.08%)</title><rect x="184.7" y="1123.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="187.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="185.2" y="1107.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="185.2" y="1091.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="188.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (40 samples, 1.53%)</title><rect x="185.6" y="1155.0" width="18.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (40 samples, 1.53%)</title><rect x="185.6" y="1139.0" width="18.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="188.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (40 samples, 1.53%)</title><rect x="185.6" y="1123.0" width="18.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.08%)</title><rect x="185.6" y="1107.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="188.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="185.6" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="188.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="186.1" y="1091.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="189.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.04%)</title><rect x="186.1" y="1075.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="189.1" y="1086.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="186.1" y="1059.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="189.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (38 samples, 1.46%)</title><rect x="186.5" y="1107.0" width="17.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="189.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (38 samples, 1.46%)</title><rect x="186.5" y="1091.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="189.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (37 samples, 1.42%)</title><rect x="187.0" y="1075.0" width="16.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="190.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (37 samples, 1.42%)</title><rect x="187.0" y="1059.0" width="16.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="187.4" y="1043.0" width="2.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="190.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="187.4" y="1027.0" width="2.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="190.4" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.15%)</title><rect x="187.4" y="1011.0" width="1.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="190.4" y="1022.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="187.9" y="995.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="190.9" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.04%)</title><rect x="188.3" y="995.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="191.3" y="1006.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.04%)</title><rect x="188.8" y="995.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="191.8" y="1006.0"></text>
</g>
<g>
<title>__send (2 samples, 0.08%)</title><rect x="189.2" y="1011.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="192.2" y="1022.0"></text>
</g>
<g>
<title>__send (30 samples, 1.15%)</title><rect x="190.1" y="1043.0" width="13.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="193.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="190.1" y="1027.0" width="13.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="193.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="190.1" y="1011.0" width="13.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="193.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="190.1" y="995.0" width="13.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="193.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="190.1" y="979.0" width="13.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="193.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="190.1" y="963.0" width="13.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="193.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="190.1" y="947.0" width="13.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="193.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="190.1" y="931.0" width="13.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="193.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="190.1" y="915.0" width="13.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="193.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="191.5" y="899.0" width="12.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="194.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="192.0" y="883.0" width="11.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="195.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="192.4" y="867.0" width="11.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="195.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="194.2" y="851.0" width="9.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="197.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="195.6" y="835.0" width="8.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="198.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="195.6" y="819.0" width="8.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="198.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="196.0" y="803.0" width="7.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="199.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="196.5" y="787.0" width="7.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="199.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="196.5" y="771.0" width="7.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="199.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="196.9" y="755.0" width="6.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="199.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="196.9" y="739.0" width="6.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="199.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="197.8" y="723.0" width="5.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="200.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="198.7" y="707.0" width="5.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="201.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="199.7" y="691.0" width="4.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="202.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="200.1" y="675.0" width="3.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="203.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="200.6" y="659.0" width="3.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="203.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="200.6" y="643.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="203.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="200.6" y="627.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="203.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="201.0" y="611.0" width="2.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="204.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="201.0" y="595.0" width="2.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="204.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="201.0" y="579.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="204.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="201.0" y="563.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="204.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="201.0" y="547.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="204.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="201.0" y="531.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="204.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="201.0" y="515.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="204.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="201.0" y="499.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="204.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="201.0" y="483.0" width="2.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="204.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="201.5" y="467.0" width="2.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="204.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="202.4" y="451.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="205.4" y="462.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="202.4" y="435.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="205.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="202.4" y="419.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="205.4" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="203.3" y="403.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="206.3" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="203.3" y="387.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="206.3" y="398.0"></text>
</g>
<g>
<title>[AsyncWorker-1 tid=31434] (69 samples, 2.65%)</title><rect x="203.7" y="1251.0" width="31.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="206.7" y="1262.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.08%)</title><rect x="203.7" y="1235.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="206.7" y="1246.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.08%)</title><rect x="203.7" y="1219.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="206.7" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.08%)</title><rect x="203.7" y="1203.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="206.7" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.08%)</title><rect x="203.7" y="1187.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="206.7" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="203.7" y="1171.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="206.7" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.04%)</title><rect x="203.7" y="1155.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="206.7" y="1166.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.04%)</title><rect x="204.2" y="1171.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="207.2" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="204.6" y="1235.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="207.6" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="204.6" y="1219.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="207.6" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="204.6" y="1203.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="207.6" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="204.6" y="1187.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="207.6" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="204.6" y="1171.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="207.6" y="1182.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.04%)</title><rect x="204.6" y="1155.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="207.6" y="1166.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="204.6" y="1139.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="207.6" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.08%)</title><rect x="205.1" y="1235.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="208.1" y="1246.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="205.5" y="1219.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="208.5" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.04%)</title><rect x="205.5" y="1203.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="208.5" y="1214.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="205.5" y="1187.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="208.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.run (64 samples, 2.45%)</title><rect x="206.0" y="1235.0" width="29.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.0" y="1246.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (64 samples, 2.45%)</title><rect x="206.0" y="1219.0" width="29.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="209.0" y="1230.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (64 samples, 2.45%)</title><rect x="206.0" y="1203.0" width="29.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.0" y="1214.0">ja..</text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="206.9" y="1187.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="209.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 0.58%)</title><rect x="207.3" y="1187.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="210.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (15 samples, 0.58%)</title><rect x="207.3" y="1171.0" width="6.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.58%)</title><rect x="207.3" y="1155.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.08%)</title><rect x="207.3" y="1139.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.08%)</title><rect x="207.3" y="1123.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="210.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="207.3" y="1107.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="210.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.04%)</title><rect x="207.3" y="1091.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="210.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="207.3" y="1075.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="207.3" y="1059.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.04%)</title><rect x="207.8" y="1107.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.50%)</title><rect x="208.3" y="1139.0" width="5.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.50%)</title><rect x="208.3" y="1123.0" width="5.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="211.3" y="1134.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.04%)</title><rect x="208.7" y="1107.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="211.7" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.23%)</title><rect x="209.2" y="1107.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="212.2" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.08%)</title><rect x="209.6" y="1091.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="212.6" y="1102.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="210.1" y="1075.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="213.1" y="1086.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="210.5" y="1091.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="213.5" y="1102.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="211.0" y="1091.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="214.0" y="1102.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="211.4" y="1091.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="214.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="211.9" y="1107.0" width="2.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="214.9" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.19%)</title><rect x="211.9" y="1091.0" width="2.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="214.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="211.9" y="1075.0" width="2.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="214.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="211.9" y="1059.0" width="2.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="214.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="211.9" y="1043.0" width="2.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="214.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="211.9" y="1027.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="214.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="211.9" y="1011.0" width="2.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="214.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="213.2" y="995.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="216.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="213.2" y="979.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="216.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="213.2" y="963.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="216.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="213.2" y="947.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="216.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (46 samples, 1.76%)</title><rect x="214.1" y="1187.0" width="20.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="217.1" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (46 samples, 1.76%)</title><rect x="214.1" y="1171.0" width="20.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.1" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (11 samples, 0.42%)</title><rect x="214.1" y="1155.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="217.1" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$1 (11 samples, 0.42%)</title><rect x="214.1" y="1139.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="217.1" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.upsert (11 samples, 0.42%)</title><rect x="214.1" y="1123.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="217.1" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (11 samples, 0.42%)</title><rect x="214.1" y="1107.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (11 samples, 0.42%)</title><rect x="214.1" y="1091.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="217.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (11 samples, 0.42%)</title><rect x="214.1" y="1075.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="217.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (11 samples, 0.42%)</title><rect x="214.1" y="1059.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="217.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (11 samples, 0.42%)</title><rect x="214.1" y="1043.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="214.6" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="217.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (9 samples, 0.35%)</title><rect x="215.0" y="1027.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.0" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (9 samples, 0.35%)</title><rect x="215.0" y="1011.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.0" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (8 samples, 0.31%)</title><rect x="215.5" y="995.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.5" y="1006.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.23%)</title><rect x="215.5" y="979.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.5" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.23%)</title><rect x="215.5" y="963.0" width="2.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.5" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.08%)</title><rect x="218.2" y="979.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="221.2" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (35 samples, 1.34%)</title><rect x="219.1" y="1155.0" width="15.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="222.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (35 samples, 1.34%)</title><rect x="219.1" y="1139.0" width="15.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="222.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="219.1" y="1123.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="222.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="219.1" y="1107.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="222.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="219.1" y="1091.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="222.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (34 samples, 1.30%)</title><rect x="219.6" y="1123.0" width="15.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="222.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 1.30%)</title><rect x="219.6" y="1107.0" width="15.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="222.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 1.30%)</title><rect x="219.6" y="1091.0" width="15.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="222.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (34 samples, 1.30%)</title><rect x="219.6" y="1075.0" width="15.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="222.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (33 samples, 1.27%)</title><rect x="220.0" y="1059.0" width="15.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="223.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="220.0" y="1043.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="223.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="220.0" y="1027.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="223.0" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.08%)</title><rect x="220.0" y="1011.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="223.0" y="1022.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="220.0" y="995.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="223.0" y="1006.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="220.5" y="995.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="223.5" y="1006.0"></text>
</g>
<g>
<title>__send (31 samples, 1.19%)</title><rect x="220.9" y="1043.0" width="14.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="223.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="220.9" y="1027.0" width="14.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="223.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="220.9" y="1011.0" width="14.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="223.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="220.9" y="995.0" width="14.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="223.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="220.9" y="979.0" width="14.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="223.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="220.9" y="963.0" width="14.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="223.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="220.9" y="947.0" width="14.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="223.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="220.9" y="931.0" width="14.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="223.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="220.9" y="915.0" width="14.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="223.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.11%)</title><rect x="221.8" y="899.0" width="13.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="224.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.11%)</title><rect x="221.8" y="883.0" width="13.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="224.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 1.07%)</title><rect x="222.3" y="867.0" width="12.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="225.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.88%)</title><rect x="224.5" y="851.0" width="10.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="227.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="225.5" y="835.0" width="9.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="228.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="225.5" y="819.0" width="9.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="228.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="225.9" y="803.0" width="9.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="228.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="226.8" y="787.0" width="8.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="229.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="226.8" y="771.0" width="8.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="229.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="227.3" y="755.0" width="7.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="230.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="228.2" y="739.0" width="6.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="231.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="229.1" y="723.0" width="5.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="232.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="229.5" y="707.0" width="5.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="232.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="230.0" y="691.0" width="5.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="233.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="230.0" y="675.0" width="5.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="233.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="230.4" y="659.0" width="4.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="233.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="230.4" y="643.0" width="4.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="233.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="230.9" y="627.0" width="4.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="233.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="230.9" y="611.0" width="4.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="233.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="230.9" y="595.0" width="4.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="233.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="230.9" y="579.0" width="4.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="233.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="230.9" y="563.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="233.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="230.9" y="547.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="233.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="231.8" y="531.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="234.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="232.2" y="515.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="235.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="232.7" y="499.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="235.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="233.1" y="483.0" width="1.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="236.1" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="233.6" y="467.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="236.6" y="478.0"></text>
</g>
<g>
<title>[AsyncWorker-2 tid=31423] (108 samples, 4.14%)</title><rect x="235.0" y="1251.0" width="48.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="238.0" y="1262.0">[Asy..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="235.0" y="1235.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="238.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.run (107 samples, 4.10%)</title><rect x="235.4" y="1235.0" width="48.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="238.4" y="1246.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (107 samples, 4.10%)</title><rect x="235.4" y="1219.0" width="48.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="238.4" y="1230.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (107 samples, 4.10%)</title><rect x="235.4" y="1203.0" width="48.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.4" y="1214.0">java..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.04%)</title><rect x="236.8" y="1187.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="239.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="236.8" y="1171.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="239.8" y="1182.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="236.8" y="1155.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="239.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.35%)</title><rect x="237.2" y="1187.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (9 samples, 0.35%)</title><rect x="237.2" y="1171.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="240.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (5 samples, 0.19%)</title><rect x="237.2" y="1155.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="240.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (5 samples, 0.19%)</title><rect x="237.2" y="1139.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="240.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (5 samples, 0.19%)</title><rect x="237.2" y="1123.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="240.2" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.08%)</title><rect x="237.2" y="1107.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="240.2" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="237.7" y="1091.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="240.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="238.1" y="1107.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="241.1" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.08%)</title><rect x="238.1" y="1091.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="241.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="238.1" y="1075.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="241.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="238.1" y="1059.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="241.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="238.1" y="1043.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="241.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="238.1" y="1027.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="241.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="238.1" y="1011.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="241.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="238.1" y="995.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="241.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="238.6" y="979.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="241.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="238.6" y="963.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="241.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="238.6" y="947.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="241.6" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.04%)</title><rect x="239.0" y="1091.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="242.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.08%)</title><rect x="239.5" y="1155.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="242.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.08%)</title><rect x="239.5" y="1139.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="242.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="239.5" y="1123.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="239.9" y="1123.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="242.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="239.9" y="1107.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="242.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.04%)</title><rect x="239.9" y="1091.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="242.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.08%)</title><rect x="240.4" y="1155.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.08%)</title><rect x="240.4" y="1139.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.08%)</title><rect x="240.4" y="1123.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="243.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.08%)</title><rect x="240.4" y="1107.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="243.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.08%)</title><rect x="240.4" y="1091.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.4" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="240.4" y="1075.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="243.4" y="1086.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="240.4" y="1059.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="243.4" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="240.8" y="1075.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="243.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="240.8" y="1059.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="243.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="240.8" y="1043.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="243.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="240.8" y="1027.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="243.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="240.8" y="1011.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="243.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="240.8" y="995.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="243.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="240.8" y="979.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="243.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="240.8" y="963.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="243.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="240.8" y="947.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="243.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (94 samples, 3.61%)</title><rect x="241.3" y="1187.0" width="42.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="244.3" y="1198.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (94 samples, 3.61%)</title><rect x="241.3" y="1171.0" width="42.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="244.3" y="1182.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (55 samples, 2.11%)</title><rect x="241.7" y="1155.0" width="24.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="244.7" y="1166.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$1 (55 samples, 2.11%)</title><rect x="241.7" y="1139.0" width="24.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="244.7" y="1150.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.upsert (52 samples, 1.99%)</title><rect x="241.7" y="1123.0" width="23.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="244.7" y="1134.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="241.7" y="1107.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="244.7" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="241.7" y="1091.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="244.7" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="241.7" y="1075.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="244.7" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="242.2" y="1059.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="245.2" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="242.2" y="1043.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (9 samples, 0.35%)</title><rect x="242.7" y="1107.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="245.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (8 samples, 0.31%)</title><rect x="243.1" y="1091.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="246.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.04%)</title><rect x="243.1" y="1075.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="246.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.04%)</title><rect x="243.1" y="1059.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="246.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.04%)</title><rect x="243.1" y="1043.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="243.1" y="1027.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="246.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="243.1" y="1011.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="246.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="243.1" y="995.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="246.1" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (7 samples, 0.27%)</title><rect x="243.6" y="1075.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="246.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.23%)</title><rect x="244.0" y="1059.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="247.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.23%)</title><rect x="244.0" y="1043.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="244.0" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="247.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="244.0" y="1011.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.0" y="1022.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="244.0" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.19%)</title><rect x="244.5" y="1027.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="247.5" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.19%)</title><rect x="244.5" y="1011.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.5" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.19%)</title><rect x="244.5" y="995.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="247.5" y="1006.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.08%)</title><rect x="244.9" y="979.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="247.9" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.08%)</title><rect x="244.9" y="963.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="247.9" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.08%)</title><rect x="245.8" y="979.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="248.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (8 samples, 0.31%)</title><rect x="246.7" y="1107.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="249.7" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="246.7" y="1091.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="249.7" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.08%)</title><rect x="247.2" y="1091.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="250.2" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.08%)</title><rect x="247.2" y="1075.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.2" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2 samples, 0.08%)</title><rect x="247.2" y="1059.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="250.2" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="247.2" y="1043.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="250.2" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="247.2" y="1027.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="250.2" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (1 samples, 0.04%)</title><rect x="247.6" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="250.6" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (1 samples, 0.04%)</title><rect x="247.6" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="250.6" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="248.1" y="1091.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.1" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="248.1" y="1075.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="251.1" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="248.1" y="1059.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.1" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="248.1" y="1043.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (4 samples, 0.15%)</title><rect x="248.5" y="1091.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.5" y="1102.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (4 samples, 0.15%)</title><rect x="248.5" y="1075.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="251.5" y="1086.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (2 samples, 0.08%)</title><rect x="249.0" y="1059.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="252.0" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (1 samples, 0.04%)</title><rect x="249.0" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.0" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="249.0" y="1027.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="252.0" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="249.0" y="1011.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.0" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="249.0" y="995.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="252.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="249.0" y="979.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="252.0" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.04%)</title><rect x="249.0" y="963.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.0" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.processRemaining (1 samples, 0.04%)</title><rect x="249.4" y="1043.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="252.4" y="1054.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (1 samples, 0.04%)</title><rect x="249.9" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="252.9" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (1 samples, 0.04%)</title><rect x="249.9" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="252.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.04%)</title><rect x="249.9" y="1027.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="252.9" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="249.9" y="1011.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="252.9" y="1022.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="249.9" y="995.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.9" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="249.9" y="979.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="252.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.getResponsesFromRelicas (33 samples, 1.27%)</title><rect x="250.3" y="1107.0" width="15.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="250.8" y="1091.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="253.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="250.8" y="1075.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.8" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.get$Lambda (1 samples, 0.04%)</title><rect x="250.8" y="1059.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.8" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.&lt;init&gt; (1 samples, 0.04%)</title><rect x="250.8" y="1043.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="253.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (14 samples, 0.54%)</title><rect x="251.3" y="1091.0" width="6.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (2 samples, 0.08%)</title><rect x="251.7" y="1075.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (2 samples, 0.08%)</title><rect x="251.7" y="1059.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="254.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (1 samples, 0.04%)</title><rect x="252.6" y="1075.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (1 samples, 0.04%)</title><rect x="252.6" y="1059.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (1 samples, 0.04%)</title><rect x="252.6" y="1043.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="255.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="252.6" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.38%)</title><rect x="253.1" y="1075.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.38%)</title><rect x="253.1" y="1059.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.38%)</title><rect x="253.1" y="1043.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.38%)</title><rect x="253.1" y="1027.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.38%)</title><rect x="253.1" y="1011.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.38%)</title><rect x="253.1" y="995.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.38%)</title><rect x="253.1" y="979.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="256.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.38%)</title><rect x="253.1" y="963.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="256.1" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.12%)</title><rect x="253.1" y="947.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="256.1" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="253.5" y="931.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="256.5" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="254.0" y="931.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="257.0" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.27%)</title><rect x="254.4" y="947.0" width="3.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="257.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="255.3" y="931.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="258.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="255.3" y="915.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="258.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="255.3" y="899.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="258.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="255.3" y="883.0" width="2.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="258.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="255.3" y="867.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="258.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="255.3" y="851.0" width="2.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="258.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="255.3" y="835.0" width="2.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="258.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="255.3" y="819.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="258.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (16 samples, 0.61%)</title><rect x="257.6" y="1091.0" width="7.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="260.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (16 samples, 0.61%)</title><rect x="257.6" y="1075.0" width="7.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="260.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (13 samples, 0.50%)</title><rect x="257.6" y="1059.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="260.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="257.6" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="257.6" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="260.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="257.6" y="1011.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.04%)</title><rect x="258.0" y="1043.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="261.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="258.0" y="1027.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.04%)</title><rect x="258.0" y="1011.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="261.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (1 samples, 0.04%)</title><rect x="258.0" y="995.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.42%)</title><rect x="258.5" y="1043.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.42%)</title><rect x="258.5" y="1027.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="261.5" y="1038.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="258.9" y="1011.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="261.9" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.15%)</title><rect x="259.4" y="1011.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="262.4" y="1022.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="259.9" y="995.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="262.9" y="1006.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="260.3" y="995.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="263.3" y="1006.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="260.3" y="979.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="263.3" y="990.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="260.8" y="995.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="263.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="260.8" y="979.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="263.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="260.8" y="963.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="263.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="260.8" y="947.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="263.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="260.8" y="931.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="263.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="260.8" y="915.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="263.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="260.8" y="899.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="263.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="261.2" y="1011.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="264.2" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.19%)</title><rect x="261.2" y="995.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="264.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="261.2" y="979.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="264.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="261.2" y="963.0" width="2.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="264.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="261.7" y="947.0" width="1.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="264.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="261.7" y="931.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="264.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="262.1" y="915.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="265.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="262.1" y="899.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="265.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="262.1" y="883.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="265.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="263.0" y="867.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="266.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="263.0" y="851.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="266.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.12%)</title><rect x="263.5" y="1059.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="266.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.12%)</title><rect x="263.5" y="1043.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="266.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.12%)</title><rect x="263.5" y="1027.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.12%)</title><rect x="263.5" y="1011.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.12%)</title><rect x="263.5" y="995.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.5" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.12%)</title><rect x="263.5" y="979.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="266.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="263.5" y="963.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="266.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="263.5" y="947.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="266.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="263.5" y="931.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="266.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="263.5" y="915.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="266.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="263.5" y="899.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="266.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="263.5" y="883.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="266.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="263.5" y="867.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="266.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="263.5" y="851.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="266.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.isMe (1 samples, 0.04%)</title><rect x="264.8" y="1091.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="267.8" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.isMe (1 samples, 0.04%)</title><rect x="264.8" y="1075.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.04%)</title><rect x="264.8" y="1059.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.8" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (3 samples, 0.12%)</title><rect x="265.3" y="1123.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="268.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="265.7" y="1107.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="268.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="265.7" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="268.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="266.2" y="1107.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="266.2" y="1091.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="269.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="266.2" y="1075.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="269.2" y="1086.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="266.2" y="1059.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="269.2" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (38 samples, 1.46%)</title><rect x="266.6" y="1155.0" width="17.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="269.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (38 samples, 1.46%)</title><rect x="266.6" y="1139.0" width="17.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="269.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="266.6" y="1123.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="269.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="266.6" y="1107.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="266.6" y="1091.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (36 samples, 1.38%)</title><rect x="267.1" y="1123.0" width="16.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="270.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="267.1" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="270.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="267.1" y="1091.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="270.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (35 samples, 1.34%)</title><rect x="267.5" y="1107.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="270.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (35 samples, 1.34%)</title><rect x="267.5" y="1091.0" width="15.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="270.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (35 samples, 1.34%)</title><rect x="267.5" y="1075.0" width="15.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (35 samples, 1.34%)</title><rect x="267.5" y="1059.0" width="15.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="267.5" y="1043.0" width="1.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="270.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="267.5" y="1027.0" width="1.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="270.5" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.15%)</title><rect x="267.5" y="1011.0" width="1.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="270.5" y="1022.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.15%)</title><rect x="267.5" y="995.0" width="1.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="270.5" y="1006.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (4 samples, 0.15%)</title><rect x="267.5" y="979.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="270.5" y="990.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.08%)</title><rect x="268.5" y="963.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="271.5" y="974.0"></text>
</g>
<g>
<title>__send (31 samples, 1.19%)</title><rect x="269.4" y="1043.0" width="14.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="272.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="269.4" y="1027.0" width="14.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="272.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="269.4" y="1011.0" width="14.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="272.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="269.8" y="995.0" width="13.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="272.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="269.8" y="979.0" width="13.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="272.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="269.8" y="963.0" width="13.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="272.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="269.8" y="947.0" width="13.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="272.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="269.8" y="931.0" width="13.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="272.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="269.8" y="915.0" width="13.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="272.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.11%)</title><rect x="270.3" y="899.0" width="13.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="273.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.11%)</title><rect x="270.3" y="883.0" width="13.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="273.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="271.2" y="867.0" width="12.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="274.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="271.6" y="851.0" width="11.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="274.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="272.1" y="835.0" width="11.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="275.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="272.1" y="819.0" width="11.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="275.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.92%)</title><rect x="272.5" y="803.0" width="10.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="275.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.88%)</title><rect x="273.0" y="787.0" width="10.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="276.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.88%)</title><rect x="273.0" y="771.0" width="10.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="276.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.88%)</title><rect x="273.0" y="755.0" width="10.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="276.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.88%)</title><rect x="273.0" y="739.0" width="10.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="276.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.84%)</title><rect x="273.4" y="723.0" width="10.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="276.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.84%)</title><rect x="273.4" y="707.0" width="10.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="276.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="273.9" y="691.0" width="9.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="276.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="274.3" y="675.0" width="9.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="277.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="274.8" y="659.0" width="8.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="277.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="274.8" y="643.0" width="8.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="277.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="275.7" y="627.0" width="7.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="278.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="275.7" y="611.0" width="7.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="278.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="276.1" y="595.0" width="7.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="279.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="276.1" y="579.0" width="7.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="279.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="276.6" y="563.0" width="6.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="279.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="276.6" y="547.0" width="6.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="279.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="276.6" y="531.0" width="6.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="279.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="277.1" y="515.0" width="6.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="280.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="278.0" y="499.0" width="5.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="281.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="278.4" y="483.0" width="5.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="281.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="279.3" y="467.0" width="4.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="282.3" y="478.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="279.3" y="451.0" width="4.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="282.3" y="462.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="280.2" y="435.0" width="3.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="283.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="280.2" y="419.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="283.2" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="283.4" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="283.4" y="1107.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="283.4" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="286.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="283.4" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="286.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="283.4" y="1059.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="283.4" y="1043.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.04%)</title><rect x="283.4" y="1027.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="286.4" y="1038.0"></text>
</g>
<g>
<title>[AsyncWorker-2 tid=31433] (73 samples, 2.80%)</title><rect x="283.8" y="1251.0" width="33.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="286.8" y="1262.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="283.8" y="1235.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="286.8" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="283.8" y="1219.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="286.8" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="283.8" y="1203.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="286.8" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="283.8" y="1187.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="286.8" y="1198.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.04%)</title><rect x="283.8" y="1171.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="286.8" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.15%)</title><rect x="284.3" y="1235.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="287.3" y="1246.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.15%)</title><rect x="284.3" y="1219.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="287.3" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.08%)</title><rect x="284.3" y="1203.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="287.3" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (2 samples, 0.08%)</title><rect x="284.3" y="1187.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="287.3" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (2 samples, 0.08%)</title><rect x="285.2" y="1203.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="288.2" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.08%)</title><rect x="285.2" y="1187.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="288.2" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (2 samples, 0.08%)</title><rect x="285.2" y="1171.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="288.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.run (68 samples, 2.61%)</title><rect x="286.1" y="1235.0" width="30.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="289.1" y="1246.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (68 samples, 2.61%)</title><rect x="286.1" y="1219.0" width="30.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.1" y="1230.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (68 samples, 2.61%)</title><rect x="286.1" y="1203.0" width="30.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="289.1" y="1214.0">ja..</text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="287.5" y="1187.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="290.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.08%)</title><rect x="287.9" y="1187.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.08%)</title><rect x="287.9" y="1171.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.9" y="1182.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.08%)</title><rect x="287.9" y="1155.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="290.9" y="1166.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="287.9" y="1139.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="290.9" y="1150.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (1 samples, 0.04%)</title><rect x="288.4" y="1139.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="291.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 0.61%)</title><rect x="288.8" y="1187.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (16 samples, 0.61%)</title><rect x="288.8" y="1171.0" width="7.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="291.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.42%)</title><rect x="288.8" y="1155.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="291.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="288.8" y="1139.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="291.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="288.8" y="1123.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="288.8" y="1107.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="291.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="288.8" y="1091.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="288.8" y="1075.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="288.8" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="291.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.38%)</title><rect x="289.3" y="1139.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="292.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.38%)</title><rect x="289.3" y="1123.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="292.3" y="1134.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="289.7" y="1107.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="292.7" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.08%)</title><rect x="290.2" y="1107.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="293.2" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="290.6" y="1091.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="293.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="291.1" y="1107.0" width="2.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="294.1" y="1118.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.04%)</title><rect x="291.1" y="1091.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="294.1" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.19%)</title><rect x="291.5" y="1091.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="294.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="291.5" y="1075.0" width="2.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="294.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="291.5" y="1059.0" width="2.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="294.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="291.5" y="1043.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="294.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="291.5" y="1027.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="294.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="291.5" y="1011.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="294.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="291.5" y="995.0" width="2.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="294.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="292.0" y="979.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="295.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="292.4" y="963.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="295.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="292.4" y="947.0" width="1.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="295.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.15%)</title><rect x="293.8" y="1155.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.15%)</title><rect x="293.8" y="1139.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="296.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (4 samples, 0.15%)</title><rect x="293.8" y="1123.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="296.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.predecessor (1 samples, 0.04%)</title><rect x="294.3" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.04%)</title><rect x="294.3" y="1091.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.04%)</title><rect x="294.7" y="1107.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="295.2" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="298.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="295.2" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="298.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="295.6" y="1155.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="298.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.04%)</title><rect x="296.1" y="1187.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="299.1" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (45 samples, 1.73%)</title><rect x="296.5" y="1187.0" width="20.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="299.5" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (44 samples, 1.69%)</title><rect x="297.0" y="1171.0" width="19.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.0" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (9 samples, 0.35%)</title><rect x="297.0" y="1155.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="300.0" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$1 (9 samples, 0.35%)</title><rect x="297.0" y="1139.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.0" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.upsert (8 samples, 0.31%)</title><rect x="297.0" y="1123.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="300.0" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (8 samples, 0.31%)</title><rect x="297.0" y="1107.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.0" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (8 samples, 0.31%)</title><rect x="297.0" y="1091.0" width="3.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (1 samples, 0.04%)</title><rect x="297.0" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="297.4" y="1075.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="297.4" y="1059.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="300.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="297.4" y="1043.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="297.4" y="1027.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="300.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="297.4" y="1011.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="300.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="297.4" y="995.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="300.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (6 samples, 0.23%)</title><rect x="297.9" y="1075.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.23%)</title><rect x="297.9" y="1059.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.23%)</title><rect x="297.9" y="1043.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="297.9" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="300.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="297.9" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="300.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="297.9" y="995.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="300.9" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="297.9" y="979.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="300.9" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="297.9" y="963.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="300.9" y="974.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="297.9" y="947.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.19%)</title><rect x="298.3" y="1027.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="301.3" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.19%)</title><rect x="298.3" y="1011.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="301.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.19%)</title><rect x="298.3" y="995.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.19%)</title><rect x="298.3" y="979.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="301.3" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.19%)</title><rect x="298.3" y="963.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="301.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (1 samples, 0.04%)</title><rect x="300.6" y="1123.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="300.6" y="1107.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="300.6" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="303.6" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.04%)</title><rect x="300.6" y="1075.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="303.6" y="1086.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.04%)</title><rect x="300.6" y="1059.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="303.6" y="1070.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.04%)</title><rect x="300.6" y="1043.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="303.6" y="1054.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.04%)</title><rect x="300.6" y="1027.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="303.6" y="1038.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.04%)</title><rect x="300.6" y="1011.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="303.6" y="1022.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.04%)</title><rect x="300.6" y="995.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="303.6" y="1006.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.04%)</title><rect x="300.6" y="979.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="303.6" y="990.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.04%)</title><rect x="300.6" y="963.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="303.6" y="974.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="300.6" y="947.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="303.6" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.04%)</title><rect x="300.6" y="931.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="303.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (35 samples, 1.34%)</title><rect x="301.0" y="1155.0" width="15.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (35 samples, 1.34%)</title><rect x="301.0" y="1139.0" width="15.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.0" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (35 samples, 1.34%)</title><rect x="301.0" y="1123.0" width="15.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.12%)</title><rect x="301.0" y="1107.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="304.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.08%)</title><rect x="301.5" y="1091.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="304.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.08%)</title><rect x="301.5" y="1075.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.08%)</title><rect x="301.5" y="1059.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="304.5" y="1070.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="301.5" y="1043.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="304.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 1.23%)</title><rect x="302.4" y="1107.0" width="14.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 1.23%)</title><rect x="302.4" y="1091.0" width="14.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (32 samples, 1.23%)</title><rect x="302.4" y="1075.0" width="14.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (32 samples, 1.23%)</title><rect x="302.4" y="1059.0" width="14.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="305.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="303.3" y="1043.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="306.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="303.3" y="1027.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="306.3" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="303.3" y="1011.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="306.3" y="1022.0"></text>
</g>
<g>
<title>__send (29 samples, 1.11%)</title><rect x="303.8" y="1043.0" width="13.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="306.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.11%)</title><rect x="303.8" y="1027.0" width="13.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="306.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.11%)</title><rect x="303.8" y="1011.0" width="13.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="306.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.11%)</title><rect x="303.8" y="995.0" width="13.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="306.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.11%)</title><rect x="303.8" y="979.0" width="13.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="306.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 1.07%)</title><rect x="304.2" y="963.0" width="12.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="307.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 1.07%)</title><rect x="304.2" y="947.0" width="12.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="307.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 1.07%)</title><rect x="304.2" y="931.0" width="12.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="307.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="304.7" y="915.0" width="12.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="307.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="304.7" y="899.0" width="12.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="307.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="305.1" y="883.0" width="11.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="308.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="305.6" y="867.0" width="11.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="308.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.92%)</title><rect x="306.0" y="851.0" width="10.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="309.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.92%)</title><rect x="306.0" y="835.0" width="10.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="309.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.92%)</title><rect x="306.0" y="819.0" width="10.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="309.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.84%)</title><rect x="306.9" y="803.0" width="10.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="309.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.84%)</title><rect x="306.9" y="787.0" width="10.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="309.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="307.4" y="771.0" width="9.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="310.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="307.8" y="755.0" width="9.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="310.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="308.3" y="739.0" width="8.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="311.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="308.3" y="723.0" width="8.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="311.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="310.1" y="707.0" width="6.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="313.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="311.0" y="691.0" width="5.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="314.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="311.0" y="675.0" width="5.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="314.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="311.0" y="659.0" width="5.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="314.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="311.4" y="643.0" width="5.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="314.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="311.4" y="627.0" width="5.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="314.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="311.4" y="611.0" width="5.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="314.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="311.4" y="595.0" width="5.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="314.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="311.9" y="579.0" width="5.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="314.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="311.9" y="563.0" width="5.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="314.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="311.9" y="547.0" width="5.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="314.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="312.4" y="531.0" width="4.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="315.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="312.8" y="515.0" width="4.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="315.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="313.3" y="499.0" width="3.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="316.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="314.2" y="483.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="317.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="315.1" y="467.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="318.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="315.1" y="451.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="318.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="315.1" y="435.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="318.1" y="446.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="315.5" y="419.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="318.5" y="430.0"></text>
</g>
<g>
<title>[AsyncWorker-2 tid=31436] (70 samples, 2.69%)</title><rect x="316.9" y="1251.0" width="31.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="319.9" y="1262.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="316.9" y="1235.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="319.9" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="316.9" y="1219.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="319.9" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="316.9" y="1203.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="319.9" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="316.9" y="1187.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="319.9" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="316.9" y="1171.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="319.9" y="1182.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.04%)</title><rect x="316.9" y="1155.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="319.9" y="1166.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.04%)</title><rect x="316.9" y="1139.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="319.9" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="317.3" y="1235.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="320.3" y="1246.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.04%)</title><rect x="317.3" y="1219.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="320.3" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (1 samples, 0.04%)</title><rect x="317.3" y="1203.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="320.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/Thread.run (68 samples, 2.61%)</title><rect x="317.8" y="1235.0" width="30.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="320.8" y="1246.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (68 samples, 2.61%)</title><rect x="317.8" y="1219.0" width="30.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="320.8" y="1230.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (68 samples, 2.61%)</title><rect x="317.8" y="1203.0" width="30.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="320.8" y="1214.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.12%)</title><rect x="319.6" y="1187.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="322.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="320.5" y="1171.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.5" y="1182.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="320.5" y="1155.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="323.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.04%)</title><rect x="321.0" y="1187.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="321.0" y="1171.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="324.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.04%)</title><rect x="321.4" y="1187.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="324.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="321.4" y="1171.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.4" y="1182.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="321.4" y="1155.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="324.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.46%)</title><rect x="321.9" y="1187.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="324.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (12 samples, 0.46%)</title><rect x="321.9" y="1171.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="324.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.38%)</title><rect x="322.3" y="1155.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.38%)</title><rect x="322.3" y="1139.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="325.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.38%)</title><rect x="322.3" y="1123.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="325.3" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.15%)</title><rect x="322.3" y="1107.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="325.3" y="1118.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="322.3" y="1091.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="325.3" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.04%)</title><rect x="322.8" y="1091.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="325.8" y="1102.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="323.2" y="1091.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="326.2" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="323.7" y="1091.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="326.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="324.1" y="1107.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="327.1" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.23%)</title><rect x="324.1" y="1091.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="327.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="325.5" y="1075.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="328.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="325.5" y="1059.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="328.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="325.9" y="1043.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="328.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="325.9" y="1027.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="328.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="325.9" y="1011.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="328.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="325.9" y="995.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="328.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="325.9" y="979.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="328.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="325.9" y="963.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="328.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="325.9" y="947.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="328.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.04%)</title><rect x="326.8" y="1155.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="326.8" y="1139.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.04%)</title><rect x="326.8" y="1123.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="329.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.04%)</title><rect x="326.8" y="1107.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="329.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.04%)</title><rect x="326.8" y="1091.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="329.8" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="326.8" y="1075.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="329.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="326.8" y="1059.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="329.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="326.8" y="1043.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="329.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="326.8" y="1027.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="329.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="326.8" y="1011.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="329.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="326.8" y="995.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="329.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="326.8" y="979.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="329.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="326.8" y="963.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="329.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="326.8" y="947.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="329.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="327.3" y="1187.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="330.3" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (46 samples, 1.76%)</title><rect x="327.7" y="1187.0" width="20.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="330.7" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (45 samples, 1.73%)</title><rect x="328.2" y="1171.0" width="20.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="331.2" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (1 samples, 0.04%)</title><rect x="328.2" y="1155.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="331.2" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (1 samples, 0.04%)</title><rect x="328.2" y="1139.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (1 samples, 0.04%)</title><rect x="328.2" y="1123.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.2" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (1 samples, 0.04%)</title><rect x="328.2" y="1107.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="331.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (10 samples, 0.38%)</title><rect x="328.6" y="1155.0" width="4.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="331.6" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$1 (10 samples, 0.38%)</title><rect x="328.6" y="1139.0" width="4.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="331.6" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.upsert (9 samples, 0.35%)</title><rect x="328.6" y="1123.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.6" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (9 samples, 0.35%)</title><rect x="328.6" y="1107.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="331.6" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (9 samples, 0.35%)</title><rect x="328.6" y="1091.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="331.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.04%)</title><rect x="329.1" y="1075.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.04%)</title><rect x="329.1" y="1059.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.04%)</title><rect x="329.1" y="1043.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.1" y="1054.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="329.1" y="1027.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="332.1" y="1038.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="329.1" y="1011.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="332.1" y="1022.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="329.1" y="995.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="332.1" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (7 samples, 0.27%)</title><rect x="329.6" y="1075.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.23%)</title><rect x="329.6" y="1059.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="332.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (5 samples, 0.19%)</title><rect x="330.0" y="1043.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="333.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="330.0" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="333.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.15%)</title><rect x="330.5" y="1027.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.5" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.15%)</title><rect x="330.5" y="1011.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="333.5" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.15%)</title><rect x="330.5" y="995.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="333.5" y="1006.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.12%)</title><rect x="330.5" y="979.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="333.5" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.12%)</title><rect x="330.5" y="963.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.5" y="974.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.04%)</title><rect x="331.4" y="947.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.4" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="331.8" y="979.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="334.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.of (1 samples, 0.04%)</title><rect x="332.3" y="1059.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="335.3" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (1 samples, 0.04%)</title><rect x="332.7" y="1123.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="335.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="332.7" y="1107.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="335.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="332.7" y="1091.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="335.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (34 samples, 1.30%)</title><rect x="333.2" y="1155.0" width="15.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (34 samples, 1.30%)</title><rect x="333.2" y="1139.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="336.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="333.2" y="1123.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="336.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="333.2" y="1107.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="333.2" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="333.2" y="1075.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="336.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (33 samples, 1.27%)</title><rect x="333.6" y="1123.0" width="15.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="336.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="333.6" y="1107.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="336.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="333.6" y="1091.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="336.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 1.23%)</title><rect x="334.1" y="1107.0" width="14.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="337.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (32 samples, 1.23%)</title><rect x="334.1" y="1091.0" width="14.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (32 samples, 1.23%)</title><rect x="334.1" y="1075.0" width="14.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="337.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (31 samples, 1.19%)</title><rect x="334.5" y="1059.0" width="14.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="337.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="334.5" y="1043.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="337.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="334.5" y="1027.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="337.5" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.08%)</title><rect x="334.5" y="1011.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="337.5" y="1022.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.08%)</title><rect x="334.5" y="995.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="337.5" y="1006.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="334.5" y="979.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="337.5" y="990.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="335.0" y="979.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="338.0" y="990.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="335.0" y="963.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="338.0" y="974.0"></text>
</g>
<g>
<title>__send (29 samples, 1.11%)</title><rect x="335.4" y="1043.0" width="13.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="338.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="336.3" y="1027.0" width="12.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="339.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="336.3" y="1011.0" width="12.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="339.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="336.3" y="995.0" width="12.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="339.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="336.3" y="979.0" width="12.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="339.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="336.3" y="963.0" width="12.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="339.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="336.3" y="947.0" width="12.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="339.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="336.3" y="931.0" width="12.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="339.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="336.3" y="915.0" width="12.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="339.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="336.3" y="899.0" width="12.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="339.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="337.2" y="883.0" width="11.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="340.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.84%)</title><rect x="338.6" y="867.0" width="10.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="341.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="340.0" y="851.0" width="8.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="343.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="340.9" y="835.0" width="7.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="343.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="340.9" y="819.0" width="7.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="343.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="340.9" y="803.0" width="7.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="343.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="341.3" y="787.0" width="7.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="344.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="341.3" y="771.0" width="7.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="344.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="342.2" y="755.0" width="6.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="345.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="342.2" y="739.0" width="6.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="345.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="342.2" y="723.0" width="6.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="345.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="342.7" y="707.0" width="5.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="345.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="343.1" y="691.0" width="5.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="346.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="343.6" y="675.0" width="5.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="346.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="343.6" y="659.0" width="5.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="346.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="343.6" y="643.0" width="5.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="346.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="343.6" y="627.0" width="5.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="346.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="343.6" y="611.0" width="5.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="346.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="343.6" y="595.0" width="5.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="346.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="344.0" y="579.0" width="4.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="347.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="344.0" y="563.0" width="4.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="347.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="344.0" y="547.0" width="4.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="347.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="344.0" y="531.0" width="4.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="347.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="344.9" y="515.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="347.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="345.4" y="499.0" width="3.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="348.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="345.4" y="483.0" width="3.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="348.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="346.3" y="467.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="349.3" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="346.8" y="451.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="349.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="346.8" y="435.0" width="1.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="349.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="346.8" y="419.0" width="1.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="349.8" y="430.0"></text>
</g>
<g>
<title>[AsyncWorker-3 tid=31424] (110 samples, 4.22%)</title><rect x="348.6" y="1251.0" width="49.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="351.6" y="1262.0">[Asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (110 samples, 4.22%)</title><rect x="348.6" y="1235.0" width="49.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="351.6" y="1246.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (110 samples, 4.22%)</title><rect x="348.6" y="1219.0" width="49.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="351.6" y="1230.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (110 samples, 4.22%)</title><rect x="348.6" y="1203.0" width="49.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="351.6" y="1214.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (2 samples, 0.08%)</title><rect x="349.5" y="1187.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="352.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.08%)</title><rect x="349.5" y="1171.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (14 samples, 0.54%)</title><rect x="350.4" y="1187.0" width="6.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="353.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (14 samples, 0.54%)</title><rect x="350.4" y="1171.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 0.46%)</title><rect x="350.4" y="1155.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="353.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.04%)</title><rect x="350.4" y="1139.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="353.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.04%)</title><rect x="350.8" y="1139.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="353.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="350.8" y="1123.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="353.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.04%)</title><rect x="351.3" y="1139.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="354.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.04%)</title><rect x="351.3" y="1123.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="354.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.35%)</title><rect x="351.7" y="1139.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="354.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.35%)</title><rect x="351.7" y="1123.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="354.7" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.15%)</title><rect x="351.7" y="1107.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="354.7" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="352.2" y="1091.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="355.2" y="1102.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="352.2" y="1075.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="355.2" y="1086.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="352.6" y="1091.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="355.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="352.6" y="1075.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="355.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="352.6" y="1059.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="355.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="352.6" y="1043.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="355.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="352.6" y="1027.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="355.6" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="353.1" y="1091.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="356.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="353.5" y="1107.0" width="2.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="356.5" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.19%)</title><rect x="353.5" y="1091.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="356.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="353.5" y="1075.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="356.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="353.5" y="1059.0" width="2.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="356.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="353.5" y="1043.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="356.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="353.5" y="1027.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="356.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="353.5" y="1011.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="356.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="353.5" y="995.0" width="2.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="356.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="354.0" y="979.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="357.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="354.0" y="963.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="357.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="354.0" y="947.0" width="1.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="357.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.08%)</title><rect x="355.8" y="1155.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="358.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.08%)</title><rect x="355.8" y="1139.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.08%)</title><rect x="355.8" y="1123.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="358.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.04%)</title><rect x="355.8" y="1107.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="358.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="356.3" y="1107.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="359.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="356.3" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.04%)</title><rect x="356.7" y="1187.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="359.7" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (91 samples, 3.49%)</title><rect x="357.2" y="1187.0" width="41.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="360.2" y="1198.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (91 samples, 3.49%)</title><rect x="357.2" y="1171.0" width="41.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="360.2" y="1182.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (50 samples, 1.92%)</title><rect x="357.2" y="1155.0" width="22.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="360.2" y="1166.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$1 (50 samples, 1.92%)</title><rect x="357.2" y="1139.0" width="22.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.2" y="1150.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.upsert (48 samples, 1.84%)</title><rect x="357.2" y="1123.0" width="21.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.2" y="1134.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="357.2" y="1107.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.04%)</title><rect x="357.2" y="1091.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="360.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.04%)</title><rect x="357.2" y="1075.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="360.2" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="357.6" y="1107.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.6" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="357.6" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="360.6" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="357.6" y="1075.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="360.6" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="357.6" y="1059.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.6" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="357.6" y="1043.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.6" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (1 samples, 0.04%)</title><rect x="357.6" y="1027.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (10 samples, 0.38%)</title><rect x="358.1" y="1107.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="361.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (10 samples, 0.38%)</title><rect x="358.1" y="1091.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="361.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (1 samples, 0.04%)</title><rect x="358.5" y="1075.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="361.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock.readLock (1 samples, 0.04%)</title><rect x="359.0" y="1075.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="362.0" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (7 samples, 0.27%)</title><rect x="359.4" y="1075.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="362.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (6 samples, 0.23%)</title><rect x="359.9" y="1059.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (6 samples, 0.23%)</title><rect x="359.9" y="1043.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="362.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (1 samples, 0.04%)</title><rect x="359.9" y="1027.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="362.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.04%)</title><rect x="359.9" y="1011.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="362.9" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="359.9" y="995.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="362.9" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.04%)</title><rect x="359.9" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="362.9" y="990.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.04%)</title><rect x="359.9" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (4 samples, 0.15%)</title><rect x="360.3" y="1027.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="363.3" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.15%)</title><rect x="360.3" y="1011.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="363.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.15%)</title><rect x="360.3" y="995.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.08%)</title><rect x="360.3" y="979.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.3" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.08%)</title><rect x="360.3" y="963.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="363.3" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.08%)</title><rect x="361.2" y="979.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="364.2" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.04%)</title><rect x="361.7" y="963.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="364.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/LongAdder.add (1 samples, 0.04%)</title><rect x="362.1" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="365.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (4 samples, 0.15%)</title><rect x="362.6" y="1107.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="365.6" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (4 samples, 0.15%)</title><rect x="362.6" y="1091.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="365.6" y="1102.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (4 samples, 0.15%)</title><rect x="362.6" y="1075.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="365.6" y="1086.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (1 samples, 0.04%)</title><rect x="362.6" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="365.6" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (1 samples, 0.04%)</title><rect x="362.6" y="1043.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="365.6" y="1054.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (1 samples, 0.04%)</title><rect x="362.6" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="365.6" y="1038.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1 samples, 0.04%)</title><rect x="362.6" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.6" y="1022.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1 samples, 0.04%)</title><rect x="362.6" y="995.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.6" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.order (1 samples, 0.04%)</title><rect x="362.6" y="979.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="365.6" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (2 samples, 0.08%)</title><rect x="363.0" y="1059.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.0" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (2 samples, 0.08%)</title><rect x="363.0" y="1043.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="366.0" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="363.0" y="1027.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="366.0" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="363.0" y="1011.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="366.0" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="363.0" y="995.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="363.0" y="979.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="366.0" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.04%)</title><rect x="363.5" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.5" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (1 samples, 0.04%)</title><rect x="364.0" y="1059.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.0" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (1 samples, 0.04%)</title><rect x="364.0" y="1043.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.0" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.04%)</title><rect x="364.0" y="1027.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="367.0" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="364.0" y="1011.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="367.0" y="1022.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="364.0" y="995.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="367.0" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="364.0" y="979.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="367.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.getResponsesFromRelicas (32 samples, 1.23%)</title><rect x="364.4" y="1107.0" width="14.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="367.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.08%)</title><rect x="364.9" y="1091.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="367.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.08%)</title><rect x="364.9" y="1075.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="367.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.get$Lambda (2 samples, 0.08%)</title><rect x="364.9" y="1059.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="367.9" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.&lt;init&gt; (2 samples, 0.08%)</title><rect x="364.9" y="1043.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="367.9" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.contains (1 samples, 0.04%)</title><rect x="365.8" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="368.8" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.size (1 samples, 0.04%)</title><rect x="366.2" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="369.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (12 samples, 0.46%)</title><rect x="366.7" y="1091.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="369.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.46%)</title><rect x="366.7" y="1075.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="369.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.42%)</title><rect x="367.1" y="1059.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.38%)</title><rect x="367.1" y="1043.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.38%)</title><rect x="367.1" y="1027.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="370.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.38%)</title><rect x="367.1" y="1011.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="370.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.38%)</title><rect x="367.1" y="995.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="370.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.38%)</title><rect x="367.1" y="979.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="370.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.38%)</title><rect x="367.1" y="963.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="370.1" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="367.1" y="947.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="370.1" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="367.1" y="931.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="370.1" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.35%)</title><rect x="367.6" y="947.0" width="4.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="370.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="368.0" y="931.0" width="3.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="371.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="368.0" y="915.0" width="3.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="371.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="368.0" y="899.0" width="3.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="371.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="368.0" y="883.0" width="3.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="371.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="368.5" y="867.0" width="3.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="371.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="368.9" y="851.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="371.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="369.4" y="835.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="372.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="369.4" y="819.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="372.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="371.6" y="1043.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="371.6" y="1027.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="374.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="371.6" y="1011.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="374.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="371.6" y="995.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="374.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.04%)</title><rect x="371.6" y="979.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="374.6" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="371.6" y="963.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="374.6" y="974.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="371.6" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="374.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (15 samples, 0.58%)</title><rect x="372.1" y="1091.0" width="6.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (15 samples, 0.58%)</title><rect x="372.1" y="1075.0" width="6.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 0.46%)</title><rect x="372.1" y="1059.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="375.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.12%)</title><rect x="372.1" y="1043.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="375.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.04%)</title><rect x="372.6" y="1027.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="375.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="373.0" y="1027.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="376.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="373.0" y="1011.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="376.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="373.0" y="995.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="373.0" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="376.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="373.0" y="963.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="376.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.35%)</title><rect x="373.5" y="1043.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="376.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.35%)</title><rect x="373.5" y="1027.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="376.5" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.08%)</title><rect x="373.5" y="1011.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="376.5" y="1022.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.08%)</title><rect x="373.5" y="995.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="376.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="373.5" y="979.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="376.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="373.5" y="963.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="376.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="373.9" y="947.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="376.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="373.9" y="931.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="376.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="373.9" y="915.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="376.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="373.9" y="899.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="376.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="374.4" y="1011.0" width="3.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="377.4" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.27%)</title><rect x="374.4" y="995.0" width="3.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="377.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="374.4" y="979.0" width="3.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="377.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="374.4" y="963.0" width="3.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="377.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="374.4" y="947.0" width="3.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="377.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="374.4" y="931.0" width="3.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="377.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="374.4" y="915.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="377.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="374.4" y="899.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="377.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="375.3" y="883.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="378.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="375.7" y="867.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="378.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="376.2" y="851.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="379.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.12%)</title><rect x="377.5" y="1059.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.12%)</title><rect x="377.5" y="1043.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.12%)</title><rect x="377.5" y="1027.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.12%)</title><rect x="377.5" y="1011.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="380.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.12%)</title><rect x="377.5" y="995.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.5" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.12%)</title><rect x="377.5" y="979.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="380.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="377.5" y="963.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="380.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="377.5" y="947.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="380.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="377.5" y="931.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="380.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="377.5" y="915.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="380.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="377.5" y="899.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="380.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="377.5" y="883.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="380.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="377.5" y="867.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="380.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="377.5" y="851.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="380.5" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (2 samples, 0.08%)</title><rect x="378.9" y="1123.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="381.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="379.3" y="1107.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.04%)</title><rect x="379.3" y="1091.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="379.3" y="1075.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.3" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (41 samples, 1.57%)</title><rect x="379.8" y="1155.0" width="18.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="382.8" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (41 samples, 1.57%)</title><rect x="379.8" y="1139.0" width="18.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="382.8" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (38 samples, 1.46%)</title><rect x="379.8" y="1123.0" width="17.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="382.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.12%)</title><rect x="379.8" y="1107.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="382.8" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="379.8" y="1091.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="382.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.08%)</title><rect x="380.2" y="1091.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="383.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="380.2" y="1075.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="383.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.04%)</title><rect x="380.2" y="1059.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="383.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.04%)</title><rect x="380.7" y="1075.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.7" y="1086.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="380.7" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="383.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (35 samples, 1.34%)</title><rect x="381.2" y="1107.0" width="15.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.2" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (35 samples, 1.34%)</title><rect x="381.2" y="1091.0" width="15.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="381.2" y="1075.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="384.2" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="381.2" y="1059.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="384.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (34 samples, 1.30%)</title><rect x="381.6" y="1075.0" width="15.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (34 samples, 1.30%)</title><rect x="381.6" y="1059.0" width="15.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.6" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="382.1" y="1043.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="385.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="382.5" y="1043.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="385.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="382.5" y="1027.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="385.5" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="382.5" y="1011.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="385.5" y="1022.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="382.5" y="995.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="385.5" y="1006.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="382.5" y="979.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="385.5" y="990.0"></text>
</g>
<g>
<title>__send (31 samples, 1.19%)</title><rect x="383.0" y="1043.0" width="14.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="386.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="383.0" y="1027.0" width="14.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="386.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="383.0" y="1011.0" width="14.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="386.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="383.0" y="995.0" width="14.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="386.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="383.0" y="979.0" width="14.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="386.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="383.4" y="963.0" width="13.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="386.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="383.4" y="947.0" width="13.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="386.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="383.4" y="931.0" width="13.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="386.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="383.4" y="915.0" width="13.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="386.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.11%)</title><rect x="383.9" y="899.0" width="13.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="386.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="385.2" y="883.0" width="11.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="388.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.92%)</title><rect x="386.1" y="867.0" width="10.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="389.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.84%)</title><rect x="387.0" y="851.0" width="10.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="390.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="387.5" y="835.0" width="9.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="390.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="387.5" y="819.0" width="9.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="390.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="387.5" y="803.0" width="9.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="390.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="387.5" y="787.0" width="9.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="390.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="387.5" y="771.0" width="9.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="390.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="387.9" y="755.0" width="9.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="390.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="388.4" y="739.0" width="8.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="391.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="388.4" y="723.0" width="8.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="391.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="388.8" y="707.0" width="8.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="391.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="389.3" y="691.0" width="7.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="392.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="390.2" y="675.0" width="6.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="393.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="390.7" y="659.0" width="6.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="393.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="390.7" y="643.0" width="6.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="393.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="391.1" y="627.0" width="5.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="394.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="391.1" y="611.0" width="5.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="394.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="392.0" y="595.0" width="5.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="395.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="392.0" y="579.0" width="5.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="395.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="392.5" y="563.0" width="4.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="395.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="392.9" y="547.0" width="4.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="395.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="392.9" y="531.0" width="4.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="395.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="393.4" y="515.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="396.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="394.3" y="499.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="397.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="394.3" y="483.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="397.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="394.3" y="467.0" width="2.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="397.3" y="478.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="394.7" y="451.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="397.7" y="462.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="394.7" y="435.0" width="2.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="397.7" y="446.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="394.7" y="419.0" width="2.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="397.7" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.12%)</title><rect x="397.0" y="1123.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="400.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.12%)</title><rect x="397.0" y="1107.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="400.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.12%)</title><rect x="397.0" y="1091.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="397.9" y="1075.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="400.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="397.9" y="1059.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="400.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="397.9" y="1043.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="400.9" y="1054.0"></text>
</g>
<g>
<title>[AsyncWorker-3 tid=31435] (72 samples, 2.76%)</title><rect x="398.4" y="1251.0" width="32.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="401.4" y="1262.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="398.4" y="1235.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="401.4" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="398.4" y="1219.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="401.4" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="398.4" y="1203.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="401.4" y="1214.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.04%)</title><rect x="398.8" y="1235.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="401.8" y="1246.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="398.8" y="1219.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="401.8" y="1230.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.04%)</title><rect x="398.8" y="1203.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="401.8" y="1214.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.04%)</title><rect x="398.8" y="1187.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="401.8" y="1198.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.04%)</title><rect x="398.8" y="1171.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="401.8" y="1182.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.04%)</title><rect x="398.8" y="1155.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="401.8" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.04%)</title><rect x="399.3" y="1235.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="402.3" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="399.3" y="1219.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="402.3" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="399.3" y="1203.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="402.3" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="399.3" y="1187.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="402.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="399.3" y="1171.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="402.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="399.3" y="1155.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="402.3" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="399.3" y="1139.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="402.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="399.3" y="1123.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="402.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="399.3" y="1107.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="402.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="399.3" y="1091.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="402.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/Thread.run (69 samples, 2.65%)</title><rect x="399.7" y="1235.0" width="31.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.7" y="1246.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (69 samples, 2.65%)</title><rect x="399.7" y="1219.0" width="31.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="402.7" y="1230.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (69 samples, 2.65%)</title><rect x="399.7" y="1203.0" width="31.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="402.7" y="1214.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13 samples, 0.50%)</title><rect x="401.5" y="1187.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="404.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (12 samples, 0.46%)</title><rect x="402.0" y="1171.0" width="5.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="405.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.27%)</title><rect x="402.4" y="1155.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.27%)</title><rect x="402.4" y="1139.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="405.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.27%)</title><rect x="402.4" y="1123.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="405.4" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.12%)</title><rect x="402.9" y="1107.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="405.9" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="403.3" y="1091.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="406.3" y="1102.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="403.8" y="1091.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="406.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="404.2" y="1107.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="407.2" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.08%)</title><rect x="404.2" y="1091.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="407.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="404.2" y="1075.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="407.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="404.2" y="1059.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="407.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="404.2" y="1043.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="407.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="404.2" y="1027.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="407.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="404.2" y="1011.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="407.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="404.2" y="995.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="407.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="404.2" y="979.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="407.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="404.2" y="963.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="407.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="404.2" y="947.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="407.2" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="405.1" y="1091.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="408.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.15%)</title><rect x="405.6" y="1155.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="408.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.15%)</title><rect x="405.6" y="1139.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.12%)</title><rect x="405.6" y="1123.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.08%)</title><rect x="406.0" y="1107.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="409.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="406.0" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="409.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="406.5" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="409.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="407.0" y="1123.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="410.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="407.0" y="1107.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="410.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="407.0" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="407.0" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="410.0" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (52 samples, 1.99%)</title><rect x="407.4" y="1187.0" width="23.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="410.4" y="1198.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (52 samples, 1.99%)</title><rect x="407.4" y="1171.0" width="23.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.4" y="1182.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (13 samples, 0.50%)</title><rect x="407.4" y="1155.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="410.4" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$1 (13 samples, 0.50%)</title><rect x="407.4" y="1139.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="410.4" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.upsert (9 samples, 0.35%)</title><rect x="407.4" y="1123.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="410.4" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (9 samples, 0.35%)</title><rect x="407.4" y="1107.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="410.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (9 samples, 0.35%)</title><rect x="407.4" y="1091.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="410.4" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (9 samples, 0.35%)</title><rect x="407.4" y="1075.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="410.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (8 samples, 0.31%)</title><rect x="407.9" y="1059.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="410.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (8 samples, 0.31%)</title><rect x="407.9" y="1043.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="410.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.08%)</title><rect x="408.3" y="1027.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="411.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.04%)</title><rect x="408.3" y="1011.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="408.8" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (5 samples, 0.19%)</title><rect x="409.2" y="1027.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.2" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.19%)</title><rect x="409.2" y="1011.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.2" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.19%)</title><rect x="409.2" y="995.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.2" y="1006.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.19%)</title><rect x="409.2" y="979.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="412.2" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.19%)</title><rect x="409.2" y="963.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="412.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (4 samples, 0.15%)</title><rect x="411.5" y="1123.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="414.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.08%)</title><rect x="412.4" y="1107.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="412.4" y="1091.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="415.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="412.4" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="412.8" y="1091.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="412.8" y="1075.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.8" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (39 samples, 1.50%)</title><rect x="413.3" y="1155.0" width="17.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (39 samples, 1.50%)</title><rect x="413.3" y="1139.0" width="17.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (39 samples, 1.50%)</title><rect x="413.3" y="1123.0" width="17.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="416.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="413.3" y="1107.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.3" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="413.3" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="416.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="413.3" y="1075.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="416.3" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.04%)</title><rect x="413.3" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="416.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (38 samples, 1.46%)</title><rect x="413.7" y="1107.0" width="17.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (37 samples, 1.42%)</title><rect x="414.2" y="1091.0" width="16.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (37 samples, 1.42%)</title><rect x="414.2" y="1075.0" width="16.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="417.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (37 samples, 1.42%)</title><rect x="414.2" y="1059.0" width="16.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="414.6" y="1043.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="417.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="414.6" y="1027.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="417.6" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="414.6" y="1011.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="417.6" y="1022.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="414.6" y="995.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="417.6" y="1006.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="414.6" y="979.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="417.6" y="990.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="414.6" y="963.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="417.6" y="974.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="415.1" y="1011.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="418.1" y="1022.0"></text>
</g>
<g>
<title>__send (34 samples, 1.30%)</title><rect x="415.6" y="1043.0" width="15.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="418.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.30%)</title><rect x="415.6" y="1027.0" width="15.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="418.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.30%)</title><rect x="415.6" y="1011.0" width="15.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="418.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="416.0" y="995.0" width="14.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="419.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="416.0" y="979.0" width="14.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="419.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="416.0" y="963.0" width="14.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="419.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="416.0" y="947.0" width="14.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="419.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="416.0" y="931.0" width="14.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="419.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="416.0" y="915.0" width="14.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="419.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="416.9" y="899.0" width="14.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="419.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="416.9" y="883.0" width="14.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="419.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="416.9" y="867.0" width="14.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="419.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="417.4" y="851.0" width="13.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="420.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.11%)</title><rect x="417.8" y="835.0" width="13.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="420.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 1.07%)</title><rect x="418.3" y="819.0" width="12.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="421.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="419.2" y="803.0" width="11.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="422.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="419.2" y="787.0" width="11.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="422.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="419.2" y="771.0" width="11.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="422.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="419.6" y="755.0" width="11.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="422.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.88%)</title><rect x="420.5" y="739.0" width="10.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="423.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.88%)</title><rect x="420.5" y="723.0" width="10.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="423.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="421.4" y="707.0" width="9.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="424.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="423.2" y="691.0" width="7.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="426.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="423.2" y="675.0" width="7.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="426.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="423.7" y="659.0" width="7.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="426.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="423.7" y="643.0" width="7.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="426.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="424.2" y="627.0" width="6.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="427.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="424.2" y="611.0" width="6.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="427.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="424.2" y="595.0" width="6.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="427.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="424.2" y="579.0" width="6.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="427.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="424.2" y="563.0" width="6.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="427.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="425.1" y="547.0" width="5.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="428.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="425.1" y="531.0" width="5.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="428.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="426.0" y="515.0" width="4.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="429.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="426.0" y="499.0" width="4.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="429.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="426.4" y="483.0" width="4.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="429.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="427.8" y="467.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="430.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="428.2" y="451.0" width="2.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="431.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="428.2" y="435.0" width="2.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="431.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="428.2" y="419.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="431.2" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="430.5" y="403.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="433.5" y="414.0"></text>
</g>
<g>
<title>[AsyncWorker-3 tid=31437] (69 samples, 2.65%)</title><rect x="430.9" y="1251.0" width="31.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="433.9" y="1262.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.08%)</title><rect x="430.9" y="1235.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="433.9" y="1246.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.08%)</title><rect x="430.9" y="1219.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="433.9" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.08%)</title><rect x="430.9" y="1203.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="433.9" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.08%)</title><rect x="430.9" y="1187.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="433.9" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.04%)</title><rect x="430.9" y="1171.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="433.9" y="1182.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.04%)</title><rect x="430.9" y="1155.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="433.9" y="1166.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.04%)</title><rect x="430.9" y="1139.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="433.9" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_region(unsigned long, bool, bool) (1 samples, 0.04%)</title><rect x="430.9" y="1123.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="433.9" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="431.4" y="1171.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="434.4" y="1182.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.04%)</title><rect x="431.4" y="1155.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="434.4" y="1166.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (1 samples, 0.04%)</title><rect x="431.8" y="1235.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="434.8" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="431.8" y="1219.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="434.8" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="431.8" y="1203.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="434.8" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="431.8" y="1187.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="434.8" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="431.8" y="1171.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="434.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.run (66 samples, 2.53%)</title><rect x="432.3" y="1235.0" width="29.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="435.3" y="1246.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (66 samples, 2.53%)</title><rect x="432.3" y="1219.0" width="29.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.3" y="1230.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (66 samples, 2.53%)</title><rect x="432.3" y="1203.0" width="29.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.3" y="1214.0">ja..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.08%)</title><rect x="432.8" y="1187.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.08%)</title><rect x="432.8" y="1171.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.8" y="1182.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.08%)</title><rect x="432.8" y="1155.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="435.8" y="1166.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="432.8" y="1139.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="435.8" y="1150.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="433.2" y="1139.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="436.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.04%)</title><rect x="433.7" y="1187.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="433.7" y="1171.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.04%)</title><rect x="433.7" y="1155.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="436.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.04%)</title><rect x="434.1" y="1187.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="437.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (7 samples, 0.27%)</title><rect x="434.6" y="1187.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="437.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6 samples, 0.23%)</title><rect x="435.0" y="1171.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="438.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.23%)</title><rect x="435.0" y="1155.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="438.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.23%)</title><rect x="435.0" y="1139.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="438.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.23%)</title><rect x="435.0" y="1123.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.0" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.08%)</title><rect x="435.5" y="1107.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="438.5" y="1118.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="435.5" y="1091.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="438.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="435.5" y="1075.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="438.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="435.5" y="1059.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="438.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="435.5" y="1043.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="438.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="435.5" y="1027.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="438.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="435.5" y="1011.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="438.5" y="1022.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.04%)</title><rect x="435.9" y="1091.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="438.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="436.4" y="1107.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="439.4" y="1118.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.04%)</title><rect x="436.4" y="1091.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="439.4" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.08%)</title><rect x="436.8" y="1091.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="439.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="436.8" y="1075.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="439.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="436.8" y="1059.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="439.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="436.8" y="1043.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="439.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="436.8" y="1027.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="439.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="437.3" y="1011.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="440.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="437.3" y="995.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="440.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (54 samples, 2.07%)</title><rect x="437.7" y="1187.0" width="24.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="440.7" y="1198.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (54 samples, 2.07%)</title><rect x="437.7" y="1171.0" width="24.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="440.7" y="1182.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (1 samples, 0.04%)</title><rect x="437.7" y="1155.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="440.7" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (1 samples, 0.04%)</title><rect x="437.7" y="1139.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="440.7" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (1 samples, 0.04%)</title><rect x="437.7" y="1123.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.7" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (1 samples, 0.04%)</title><rect x="437.7" y="1107.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="440.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="437.7" y="1091.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="440.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="437.7" y="1075.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="440.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="437.7" y="1059.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="440.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="437.7" y="1043.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="440.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.act (11 samples, 0.42%)</title><rect x="438.2" y="1155.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="441.2" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$1 (11 samples, 0.42%)</title><rect x="438.2" y="1139.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="441.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.upsert (10 samples, 0.38%)</title><rect x="438.2" y="1123.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="441.2" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (10 samples, 0.38%)</title><rect x="438.2" y="1107.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (10 samples, 0.38%)</title><rect x="438.2" y="1091.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (10 samples, 0.38%)</title><rect x="438.2" y="1075.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (10 samples, 0.38%)</title><rect x="438.2" y="1059.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (10 samples, 0.38%)</title><rect x="438.2" y="1043.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="441.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.27%)</title><rect x="439.1" y="1027.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.1" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.27%)</title><rect x="439.1" y="1011.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="442.1" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.23%)</title><rect x="439.5" y="995.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="442.5" y="1006.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (6 samples, 0.23%)</title><rect x="439.5" y="979.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="442.5" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.23%)</title><rect x="439.5" y="963.0" width="2.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="442.5" y="974.0"></text>
</g>
<g>
<title>PtrQueue::enqueue_known_active(void*) (1 samples, 0.04%)</title><rect x="441.8" y="947.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="444.8" y="958.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="441.8" y="931.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="444.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (1 samples, 0.04%)</title><rect x="442.3" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="445.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (1 samples, 0.04%)</title><rect x="442.7" y="1123.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="445.7" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="442.7" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="445.7" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="442.7" y="1091.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="445.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (42 samples, 1.61%)</title><rect x="443.2" y="1155.0" width="19.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="446.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (42 samples, 1.61%)</title><rect x="443.2" y="1139.0" width="19.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="446.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (42 samples, 1.61%)</title><rect x="443.2" y="1123.0" width="19.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="446.2" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="443.2" y="1107.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.2" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="443.2" y="1091.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="446.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="443.2" y="1075.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="446.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="443.2" y="1059.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="446.2" y="1070.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="443.2" y="1043.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="446.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (41 samples, 1.57%)</title><rect x="443.6" y="1107.0" width="18.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (41 samples, 1.57%)</title><rect x="443.6" y="1091.0" width="18.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="446.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (41 samples, 1.57%)</title><rect x="443.6" y="1075.0" width="18.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="446.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (41 samples, 1.57%)</title><rect x="443.6" y="1059.0" width="18.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="446.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="444.1" y="1043.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="447.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="444.1" y="1027.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="447.1" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.08%)</title><rect x="444.1" y="1011.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="447.1" y="1022.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="444.5" y="995.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="447.5" y="1006.0"></text>
</g>
<g>
<title>__send (1 samples, 0.04%)</title><rect x="445.0" y="1011.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="448.0" y="1022.0"></text>
</g>
<g>
<title>__send (37 samples, 1.42%)</title><rect x="445.4" y="1043.0" width="16.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="448.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.42%)</title><rect x="445.4" y="1027.0" width="16.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="448.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.42%)</title><rect x="445.4" y="1011.0" width="16.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="448.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.38%)</title><rect x="445.9" y="995.0" width="16.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="448.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.38%)</title><rect x="445.9" y="979.0" width="16.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="448.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.38%)</title><rect x="445.9" y="963.0" width="16.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="448.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.38%)</title><rect x="445.9" y="947.0" width="16.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="448.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.38%)</title><rect x="445.9" y="931.0" width="16.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="448.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.38%)</title><rect x="445.9" y="915.0" width="16.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="448.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.38%)</title><rect x="445.9" y="899.0" width="16.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="448.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.34%)</title><rect x="446.3" y="883.0" width="15.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="449.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.23%)</title><rect x="447.7" y="867.0" width="14.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="450.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="448.6" y="851.0" width="13.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="451.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.11%)</title><rect x="449.0" y="835.0" width="13.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="452.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 1.07%)</title><rect x="449.5" y="819.0" width="12.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="452.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 1.07%)</title><rect x="449.5" y="803.0" width="12.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="452.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 1.07%)</title><rect x="449.5" y="787.0" width="12.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="452.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="450.4" y="771.0" width="11.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="453.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="450.4" y="755.0" width="11.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="453.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="450.9" y="739.0" width="11.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="453.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="450.9" y="723.0" width="11.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="453.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="452.7" y="707.0" width="9.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="455.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="453.1" y="691.0" width="9.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="456.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="453.6" y="675.0" width="8.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="456.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="454.0" y="659.0" width="8.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="457.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="454.0" y="643.0" width="8.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="457.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="454.0" y="627.0" width="8.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="457.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="454.0" y="611.0" width="8.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="457.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="454.5" y="595.0" width="7.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="457.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="455.8" y="579.0" width="6.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="458.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="455.8" y="563.0" width="6.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="458.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="455.8" y="547.0" width="6.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="458.8" y="558.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="455.8" y="531.0" width="6.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="458.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="456.3" y="515.0" width="5.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="459.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="457.6" y="499.0" width="4.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="460.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="458.6" y="483.0" width="3.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="461.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="459.5" y="467.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="462.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="460.4" y="451.0" width="1.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="463.4" y="462.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="460.4" y="435.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="463.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="460.4" y="419.0" width="1.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="463.4" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=31363] (56 samples, 2.15%)</title><rect x="462.2" y="1251.0" width="25.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="465.2" y="1262.0">[..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.04%)</title><rect x="462.2" y="1235.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="465.2" y="1246.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.08%)</title><rect x="462.6" y="1235.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="465.6" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.08%)</title><rect x="462.6" y="1219.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="465.6" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.08%)</title><rect x="462.6" y="1203.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="465.6" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="462.6" y="1187.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="465.6" y="1198.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="463.1" y="1187.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="466.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (53 samples, 2.03%)</title><rect x="463.5" y="1235.0" width="24.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="466.5" y="1246.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 0.54%)</title><rect x="463.5" y="1219.0" width="6.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="466.5" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (14 samples, 0.54%)</title><rect x="463.5" y="1203.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="466.5" y="1214.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="464.4" y="1187.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="467.4" y="1198.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="464.9" y="1187.0" width="4.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="467.9" y="1198.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 0.38%)</title><rect x="464.9" y="1171.0" width="4.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="467.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="465.8" y="1155.0" width="3.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="468.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="465.8" y="1139.0" width="3.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="468.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="465.8" y="1123.0" width="3.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="468.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="465.8" y="1107.0" width="3.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="468.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="465.8" y="1091.0" width="3.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="468.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="466.2" y="1075.0" width="3.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="469.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="466.7" y="1059.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="469.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="467.6" y="1043.0" width="1.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="470.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="467.6" y="1027.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="470.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="467.6" y="1011.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="470.6" y="1022.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.04%)</title><rect x="469.4" y="1187.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="472.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (39 samples, 1.50%)</title><rect x="469.9" y="1219.0" width="17.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="472.9" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (39 samples, 1.50%)</title><rect x="469.9" y="1203.0" width="17.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.9" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (28 samples, 1.07%)</title><rect x="469.9" y="1187.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="472.9" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (25 samples, 0.96%)</title><rect x="469.9" y="1171.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (25 samples, 0.96%)</title><rect x="469.9" y="1155.0" width="11.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.9" y="1166.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (25 samples, 0.96%)</title><rect x="469.9" y="1139.0" width="11.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.9" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.08%)</title><rect x="469.9" y="1123.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.08%)</title><rect x="469.9" y="1107.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="472.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.08%)</title><rect x="469.9" y="1091.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="472.9" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (23 samples, 0.88%)</title><rect x="470.8" y="1123.0" width="10.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="473.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="470.8" y="1107.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="473.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="470.8" y="1091.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="473.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="470.8" y="1075.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="473.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="470.8" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="470.8" y="1043.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="473.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.04%)</title><rect x="470.8" y="1027.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.8" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (5 samples, 0.19%)</title><rect x="471.2" y="1107.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.2" y="1118.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (5 samples, 0.19%)</title><rect x="471.2" y="1091.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.2" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.15%)</title><rect x="471.2" y="1075.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="474.2" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (4 samples, 0.15%)</title><rect x="471.2" y="1059.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="474.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.08%)</title><rect x="471.2" y="1043.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="474.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.08%)</title><rect x="471.2" y="1027.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="474.2" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="471.2" y="1011.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.2" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.04%)</title><rect x="471.7" y="1011.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="474.7" y="1022.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="471.7" y="995.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="474.7" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.04%)</title><rect x="472.1" y="1043.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="475.1" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.04%)</title><rect x="472.1" y="1027.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="472.1" y="1011.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.1" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.04%)</title><rect x="472.6" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.6" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.04%)</title><rect x="472.6" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.6" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.04%)</title><rect x="472.6" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.6" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.04%)</title><rect x="472.6" y="995.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="475.6" y="1006.0"></text>
</g>
<g>
<title>java/util/Set.of (1 samples, 0.04%)</title><rect x="473.0" y="1075.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.0" y="1086.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1 samples, 0.04%)</title><rect x="473.0" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="476.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (4 samples, 0.15%)</title><rect x="473.5" y="1107.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="476.5" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (4 samples, 0.15%)</title><rect x="473.5" y="1091.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="476.5" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (2 samples, 0.08%)</title><rect x="473.9" y="1075.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.9" y="1086.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="474.4" y="1059.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.4" y="1070.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.04%)</title><rect x="474.4" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="477.4" y="1054.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.04%)</title><rect x="474.4" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="477.4" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.separatorStart (1 samples, 0.04%)</title><rect x="474.4" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.4" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="474.8" y="1075.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="477.8" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="474.8" y="1059.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.8" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="474.8" y="1043.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.8" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="474.8" y="1027.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="477.8" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.04%)</title><rect x="474.8" y="1011.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="477.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (13 samples, 0.50%)</title><rect x="475.3" y="1107.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.50%)</title><rect x="475.3" y="1091.0" width="5.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.50%)</title><rect x="475.3" y="1075.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="478.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.50%)</title><rect x="475.3" y="1059.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.50%)</title><rect x="475.3" y="1043.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.50%)</title><rect x="475.3" y="1027.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="478.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.50%)</title><rect x="475.3" y="1011.0" width="5.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="478.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.50%)</title><rect x="475.3" y="995.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="478.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.50%)</title><rect x="475.3" y="979.0" width="5.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="478.3" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.12%)</title><rect x="475.8" y="963.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="478.8" y="974.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.04%)</title><rect x="475.8" y="947.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="478.8" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.08%)</title><rect x="476.2" y="947.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="479.2" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="477.1" y="963.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="480.1" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.31%)</title><rect x="477.6" y="963.0" width="3.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="480.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="477.6" y="947.0" width="3.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="480.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="477.6" y="931.0" width="3.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="480.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="478.0" y="915.0" width="3.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="481.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="478.0" y="899.0" width="3.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="481.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="478.0" y="883.0" width="3.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="481.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="478.9" y="867.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="481.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="478.9" y="851.0" width="2.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="481.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="478.9" y="835.0" width="2.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="481.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.04%)</title><rect x="481.2" y="1171.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="481.2" y="1155.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="484.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="481.2" y="1139.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="484.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.04%)</title><rect x="481.6" y="1171.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="484.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="481.6" y="1155.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="481.6" y="1139.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="484.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="481.6" y="1123.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="484.6" y="1134.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="481.6" y="1107.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="484.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="482.1" y="1171.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.1" y="1182.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="482.1" y="1155.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="485.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.42%)</title><rect x="482.5" y="1187.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="485.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 0.42%)</title><rect x="482.5" y="1171.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="485.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="482.5" y="1155.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="485.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="482.5" y="1139.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="485.5" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="482.5" y="1123.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="485.5" y="1134.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="482.5" y="1107.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="485.5" y="1118.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="482.5" y="1091.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="485.5" y="1102.0"></text>
</g>
<g>
<title>__GI___recv (10 samples, 0.38%)</title><rect x="483.0" y="1155.0" width="4.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="486.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="483.0" y="1139.0" width="4.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="486.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="483.0" y="1123.0" width="4.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="486.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="483.0" y="1107.0" width="4.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="486.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="483.0" y="1091.0" width="4.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="486.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="483.4" y="1075.0" width="4.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="486.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="483.4" y="1059.0" width="4.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="486.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="483.4" y="1043.0" width="4.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="486.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="485.3" y="1027.0" width="2.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="488.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="486.2" y="1011.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="489.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="487.1" y="995.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="490.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="487.1" y="979.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="490.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="487.1" y="963.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="490.1" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=31369] (25 samples, 0.96%)</title><rect x="487.5" y="1251.0" width="11.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="490.5" y="1262.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.08%)</title><rect x="487.5" y="1235.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="490.5" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.08%)</title><rect x="487.5" y="1219.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="490.5" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.08%)</title><rect x="487.5" y="1203.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="490.5" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="487.5" y="1187.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="490.5" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="487.5" y="1171.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="490.5" y="1182.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.04%)</title><rect x="487.5" y="1155.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="490.5" y="1166.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="488.0" y="1187.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="491.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (23 samples, 0.88%)</title><rect x="488.4" y="1235.0" width="10.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.4" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.15%)</title><rect x="489.8" y="1219.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="492.8" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.15%)</title><rect x="489.8" y="1203.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="492.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="489.8" y="1187.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="492.8" y="1198.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.15%)</title><rect x="489.8" y="1171.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="492.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="490.2" y="1155.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="493.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="490.2" y="1139.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="493.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="490.2" y="1123.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="493.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="490.2" y="1107.0" width="1.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="493.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="490.2" y="1091.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="493.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="490.2" y="1075.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="493.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="490.2" y="1059.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="493.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="490.7" y="1043.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="493.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="490.7" y="1027.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="493.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="490.7" y="1011.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="493.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="491.1" y="995.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="494.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="491.1" y="979.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="494.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="491.1" y="963.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="494.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="491.1" y="947.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="494.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="491.1" y="931.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="494.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="491.1" y="915.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="494.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="491.1" y="899.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="494.1" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (16 samples, 0.61%)</title><rect x="491.6" y="1219.0" width="7.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="494.6" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (14 samples, 0.54%)</title><rect x="491.6" y="1203.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.6" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (11 samples, 0.42%)</title><rect x="491.6" y="1187.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (9 samples, 0.35%)</title><rect x="492.0" y="1171.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (9 samples, 0.35%)</title><rect x="492.0" y="1155.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="495.0" y="1166.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (8 samples, 0.31%)</title><rect x="492.0" y="1139.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="495.0" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.08%)</title><rect x="492.0" y="1123.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="495.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="492.0" y="1107.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="495.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="492.0" y="1091.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="492.5" y="1107.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="495.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="492.5" y="1091.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.5" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (6 samples, 0.23%)</title><rect x="493.0" y="1123.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="496.0" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (2 samples, 0.08%)</title><rect x="493.0" y="1107.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.0" y="1118.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (2 samples, 0.08%)</title><rect x="493.0" y="1091.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.0" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.08%)</title><rect x="493.0" y="1075.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="496.0" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (2 samples, 0.08%)</title><rect x="493.0" y="1059.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.08%)</title><rect x="493.0" y="1043.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.0" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.08%)</title><rect x="493.0" y="1027.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="496.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.08%)</title><rect x="493.0" y="1011.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.04%)</title><rect x="493.4" y="995.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="496.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (4 samples, 0.15%)</title><rect x="493.9" y="1107.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="496.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.15%)</title><rect x="493.9" y="1091.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="496.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.15%)</title><rect x="493.9" y="1075.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.15%)</title><rect x="493.9" y="1059.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="496.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.15%)</title><rect x="493.9" y="1043.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="496.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.15%)</title><rect x="493.9" y="1027.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="496.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.15%)</title><rect x="493.9" y="1011.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="496.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.15%)</title><rect x="493.9" y="995.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="496.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.15%)</title><rect x="493.9" y="979.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.9" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.15%)</title><rect x="493.9" y="963.0" width="1.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="496.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="493.9" y="947.0" width="1.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="496.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="493.9" y="931.0" width="1.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="496.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="493.9" y="915.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="496.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="493.9" y="899.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="496.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="493.9" y="883.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="496.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="493.9" y="867.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="496.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="493.9" y="851.0" width="1.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="496.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="493.9" y="835.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="496.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="495.2" y="819.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="498.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="495.2" y="803.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="498.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="495.2" y="787.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="498.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="495.2" y="771.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="498.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="495.7" y="1139.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="495.7" y="1123.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="498.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="495.7" y="1107.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="498.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="495.7" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="498.7" y="1102.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="495.7" y="1075.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="498.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="496.1" y="1171.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="499.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="496.1" y="1155.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="499.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="496.1" y="1139.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="499.1" y="1150.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="496.1" y="1123.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="499.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.12%)</title><rect x="496.6" y="1187.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.12%)</title><rect x="496.6" y="1171.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="499.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="496.6" y="1155.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="499.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="496.6" y="1139.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="499.6" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.08%)</title><rect x="496.6" y="1123.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="499.6" y="1134.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="496.6" y="1107.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="499.6" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.04%)</title><rect x="497.0" y="1091.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="500.0" y="1102.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.04%)</title><rect x="497.5" y="1155.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="500.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="497.5" y="1139.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="500.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="497.5" y="1123.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="500.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="497.5" y="1107.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="500.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="497.5" y="1091.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="500.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="497.5" y="1075.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="500.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="497.5" y="1059.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="500.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="497.5" y="1043.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="500.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="497.5" y="1027.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="500.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="497.5" y="1011.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="500.5" y="1022.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.08%)</title><rect x="497.9" y="1203.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="500.9" y="1214.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="498.4" y="1187.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="501.4" y="1198.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=31364] (60 samples, 2.30%)</title><rect x="498.8" y="1251.0" width="27.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="501.8" y="1262.0">[..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="498.8" y="1235.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="501.8" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="498.8" y="1219.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="501.8" y="1230.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="498.8" y="1203.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="501.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (59 samples, 2.26%)</title><rect x="499.3" y="1235.0" width="26.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="502.3" y="1246.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.04%)</title><rect x="499.7" y="1219.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="502.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="499.7" y="1203.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="502.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="499.7" y="1187.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="502.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="499.7" y="1171.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="502.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="499.7" y="1155.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="502.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="499.7" y="1139.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="502.7" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="499.7" y="1123.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="502.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="499.7" y="1107.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="502.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (16 samples, 0.61%)</title><rect x="500.2" y="1219.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="503.2" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.04%)</title><rect x="500.6" y="1203.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="503.6" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (14 samples, 0.54%)</title><rect x="501.1" y="1203.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="504.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="501.6" y="1187.0" width="4.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="504.6" y="1198.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.35%)</title><rect x="501.6" y="1171.0" width="4.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="504.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="501.6" y="1155.0" width="4.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="504.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="501.6" y="1139.0" width="4.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="504.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="501.6" y="1123.0" width="4.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="504.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="501.6" y="1107.0" width="4.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="504.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="502.0" y="1091.0" width="3.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="505.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="502.5" y="1075.0" width="3.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="505.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="503.4" y="1059.0" width="2.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="506.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="503.4" y="1043.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="506.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="504.3" y="1027.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="507.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="504.3" y="1011.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="507.3" y="1022.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="505.6" y="1187.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="508.6" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="506.5" y="1187.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="509.5" y="1198.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.04%)</title><rect x="507.0" y="1187.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="510.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (41 samples, 1.57%)</title><rect x="507.4" y="1219.0" width="18.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.4" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (40 samples, 1.53%)</title><rect x="507.4" y="1203.0" width="18.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="510.4" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (28 samples, 1.07%)</title><rect x="508.3" y="1187.0" width="12.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="511.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24 samples, 0.92%)</title><rect x="508.3" y="1171.0" width="10.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (23 samples, 0.88%)</title><rect x="508.8" y="1155.0" width="10.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="511.8" y="1166.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (23 samples, 0.88%)</title><rect x="508.8" y="1139.0" width="10.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="511.8" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (23 samples, 0.88%)</title><rect x="508.8" y="1123.0" width="10.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="511.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (5 samples, 0.19%)</title><rect x="509.2" y="1107.0" width="2.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="512.2" y="1118.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (5 samples, 0.19%)</title><rect x="509.2" y="1091.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.2" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.04%)</title><rect x="509.2" y="1075.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="512.2" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.04%)</title><rect x="509.7" y="1075.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.7" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.04%)</title><rect x="509.7" y="1059.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.7" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.04%)</title><rect x="509.7" y="1043.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.7" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.04%)</title><rect x="510.2" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.2" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.04%)</title><rect x="510.2" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="513.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.04%)</title><rect x="510.2" y="1043.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.04%)</title><rect x="510.2" y="1027.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="513.2" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.04%)</title><rect x="510.2" y="1011.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.2" y="1022.0"></text>
</g>
<g>
<title>java/util/Set.of (2 samples, 0.08%)</title><rect x="510.6" y="1075.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="513.6" y="1086.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (2 samples, 0.08%)</title><rect x="510.6" y="1059.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="513.6" y="1070.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (1 samples, 0.04%)</title><rect x="511.1" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (1 samples, 0.04%)</title><rect x="511.1" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.04%)</title><rect x="511.1" y="1011.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.1" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (1 samples, 0.04%)</title><rect x="511.5" y="1107.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.5" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.04%)</title><rect x="511.5" y="1091.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.5" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.04%)</title><rect x="511.5" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="514.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (16 samples, 0.61%)</title><rect x="512.0" y="1107.0" width="7.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.58%)</title><rect x="512.4" y="1091.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="515.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (15 samples, 0.58%)</title><rect x="512.4" y="1075.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.50%)</title><rect x="512.4" y="1059.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.50%)</title><rect x="512.4" y="1043.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="515.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.50%)</title><rect x="512.4" y="1027.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="515.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.50%)</title><rect x="512.4" y="1011.0" width="5.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.50%)</title><rect x="512.4" y="995.0" width="5.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="515.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.50%)</title><rect x="512.4" y="979.0" width="5.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="515.4" y="990.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="512.4" y="963.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="515.4" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.23%)</title><rect x="512.9" y="963.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="515.9" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (5 samples, 0.19%)</title><rect x="512.9" y="947.0" width="2.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="515.9" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="515.1" y="947.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="518.1" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="515.6" y="963.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="518.6" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.19%)</title><rect x="516.0" y="963.0" width="2.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="519.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="516.5" y="947.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="519.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="516.5" y="931.0" width="1.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="519.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="516.5" y="915.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="519.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="516.5" y="899.0" width="1.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="519.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="516.5" y="883.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="519.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="516.9" y="867.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="519.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="516.9" y="851.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="519.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="516.9" y="835.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="519.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="518.3" y="1059.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="518.3" y="1043.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.04%)</title><rect x="518.3" y="1027.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="521.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.04%)</title><rect x="518.3" y="1011.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.04%)</title><rect x="518.3" y="995.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="518.3" y="979.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="521.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="518.3" y="963.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.3" y="974.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="518.3" y="947.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="518.8" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="518.8" y="1043.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="518.8" y="1027.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="518.8" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="521.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.04%)</title><rect x="518.8" y="995.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="521.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="518.8" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="521.8" y="990.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="518.8" y="963.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="521.8" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.04%)</title><rect x="519.2" y="1171.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="519.2" y="1155.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.04%)</title><rect x="519.7" y="1171.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="519.7" y="1155.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="519.7" y="1139.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="519.7" y="1123.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="519.7" y="1107.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="522.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="519.7" y="1091.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="522.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="519.7" y="1075.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="522.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="519.7" y="1059.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="522.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="519.7" y="1043.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="522.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="519.7" y="1027.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="522.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="519.7" y="1011.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="522.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="520.1" y="1171.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="523.1" y="1182.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.04%)</title><rect x="520.1" y="1155.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="523.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="520.6" y="1171.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="523.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="520.6" y="1155.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="523.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="520.6" y="1139.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (10 samples, 0.38%)</title><rect x="521.0" y="1187.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (10 samples, 0.38%)</title><rect x="521.0" y="1171.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="524.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="521.5" y="1155.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="524.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="521.5" y="1139.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="524.5" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="521.5" y="1123.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="524.5" y="1134.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="521.5" y="1107.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="524.5" y="1118.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.04%)</title><rect x="521.9" y="1123.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="524.9" y="1134.0"></text>
</g>
<g>
<title>__GI___recv (7 samples, 0.27%)</title><rect x="522.4" y="1155.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="525.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="522.4" y="1139.0" width="3.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="525.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="522.4" y="1123.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="525.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="522.4" y="1107.0" width="3.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="525.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="522.4" y="1091.0" width="3.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="525.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="522.8" y="1075.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="525.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="522.8" y="1059.0" width="2.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="525.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="522.8" y="1043.0" width="2.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="525.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="523.3" y="1027.0" width="2.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="526.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="523.7" y="1011.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="526.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="524.2" y="995.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="527.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="524.2" y="979.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="527.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="524.2" y="963.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="527.2" y="974.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="525.5" y="1203.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="528.5" y="1214.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=31370] (85 samples, 3.26%)</title><rect x="526.0" y="1251.0" width="38.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="529.0" y="1262.0">[NI..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.08%)</title><rect x="526.0" y="1235.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="529.0" y="1246.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.08%)</title><rect x="526.0" y="1219.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="529.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="526.4" y="1203.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="529.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="526.4" y="1187.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="529.4" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="526.4" y="1171.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="529.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="526.4" y="1155.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="529.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="526.4" y="1139.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="529.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="526.4" y="1123.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="529.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="526.4" y="1107.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="529.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="526.4" y="1091.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="529.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (83 samples, 3.18%)</title><rect x="526.9" y="1235.0" width="37.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="529.9" y="1246.0">one..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="527.4" y="1219.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="530.4" y="1230.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.04%)</title><rect x="527.4" y="1203.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="530.4" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (1 samples, 0.04%)</title><rect x="527.4" y="1187.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="530.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.04%)</title><rect x="527.8" y="1219.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.8" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.04%)</title><rect x="527.8" y="1203.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (25 samples, 0.96%)</title><rect x="528.3" y="1219.0" width="11.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="531.3" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (24 samples, 0.92%)</title><rect x="528.7" y="1203.0" width="10.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="531.7" y="1214.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="529.6" y="1187.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="532.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="530.1" y="1187.0" width="9.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="533.1" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="530.1" y="1171.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="533.1" y="1182.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="530.1" y="1155.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="533.1" y="1166.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.08%)</title><rect x="530.5" y="1171.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="533.5" y="1182.0"></text>
</g>
<g>
<title>epoll_wait (17 samples, 0.65%)</title><rect x="531.4" y="1171.0" width="7.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="534.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="532.8" y="1155.0" width="6.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="535.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="532.8" y="1139.0" width="6.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="535.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="532.8" y="1123.0" width="6.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="535.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="532.8" y="1107.0" width="6.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="535.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="532.8" y="1091.0" width="6.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="535.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="534.1" y="1075.0" width="5.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="537.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="534.6" y="1059.0" width="4.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="537.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="535.0" y="1043.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="538.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="535.5" y="1027.0" width="3.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="538.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="535.5" y="1011.0" width="3.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="538.5" y="1022.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="539.1" y="1187.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="542.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (55 samples, 2.11%)</title><rect x="539.6" y="1219.0" width="24.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="542.6" y="1230.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (55 samples, 2.11%)</title><rect x="539.6" y="1203.0" width="24.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="542.6" y="1214.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (39 samples, 1.50%)</title><rect x="539.6" y="1187.0" width="17.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="542.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (29 samples, 1.11%)</title><rect x="540.0" y="1171.0" width="13.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (29 samples, 1.11%)</title><rect x="540.0" y="1155.0" width="13.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.0" y="1166.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (28 samples, 1.07%)</title><rect x="540.0" y="1139.0" width="12.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.0" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (28 samples, 1.07%)</title><rect x="540.0" y="1123.0" width="12.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="543.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/413115525.linkToTargetMethod (1 samples, 0.04%)</title><rect x="540.0" y="1107.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1881466287.invokeStatic (1 samples, 0.04%)</title><rect x="540.0" y="1091.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.0" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.get$Lambda (1 samples, 0.04%)</title><rect x="540.0" y="1075.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.0" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.&lt;init&gt; (1 samples, 0.04%)</title><rect x="540.0" y="1059.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="540.5" y="1107.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="540.5" y="1091.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="543.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="540.5" y="1075.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="543.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="540.5" y="1059.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="540.5" y="1043.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="543.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="540.5" y="1027.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="543.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="540.5" y="1011.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="543.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="540.9" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.9" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (11 samples, 0.42%)</title><rect x="541.4" y="1107.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.4" y="1118.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (11 samples, 0.42%)</title><rect x="541.4" y="1091.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.4" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.08%)</title><rect x="541.4" y="1075.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="544.4" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.08%)</title><rect x="541.4" y="1059.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.04%)</title><rect x="541.4" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.4" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="541.4" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="544.4" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="541.4" y="1011.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="544.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.04%)</title><rect x="541.8" y="1043.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="544.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (7 samples, 0.27%)</title><rect x="542.3" y="1075.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.3" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (6 samples, 0.23%)</title><rect x="542.3" y="1059.0" width="2.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="545.3" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.add (6 samples, 0.23%)</title><rect x="542.3" y="1043.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.3" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (6 samples, 0.23%)</title><rect x="542.3" y="1027.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="545.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="542.3" y="1011.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="545.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.19%)</title><rect x="542.7" y="1011.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="545.7" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.08%)</title><rect x="543.6" y="995.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="546.6" y="1006.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="544.6" y="995.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="547.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="545.0" y="1059.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="548.0" y="1070.0"></text>
</g>
<g>
<title>java/util/Set.of (2 samples, 0.08%)</title><rect x="545.5" y="1075.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="548.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (3 samples, 0.12%)</title><rect x="546.4" y="1107.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="549.4" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (2 samples, 0.08%)</title><rect x="546.4" y="1091.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="549.4" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="546.4" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="549.4" y="1086.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="546.4" y="1059.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="549.4" y="1070.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.04%)</title><rect x="546.4" y="1043.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="549.4" y="1054.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.04%)</title><rect x="546.4" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="549.4" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1 samples, 0.04%)</title><rect x="546.8" y="1075.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="549.8" y="1086.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.04%)</title><rect x="546.8" y="1059.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="549.8" y="1070.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.04%)</title><rect x="546.8" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="547.3" y="1091.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="547.3" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="547.3" y="1059.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.3" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (11 samples, 0.42%)</title><rect x="547.7" y="1107.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="550.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.42%)</title><rect x="547.7" y="1091.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.42%)</title><rect x="547.7" y="1075.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="550.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.35%)</title><rect x="547.7" y="1059.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="550.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.35%)</title><rect x="547.7" y="1043.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.35%)</title><rect x="547.7" y="1027.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.35%)</title><rect x="547.7" y="1011.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="550.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.35%)</title><rect x="547.7" y="995.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.35%)</title><rect x="547.7" y="979.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="550.7" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.04%)</title><rect x="548.2" y="963.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="551.2" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.12%)</title><rect x="548.6" y="963.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="551.6" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="548.6" y="947.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="551.6" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="549.1" y="947.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="552.1" y="958.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.04%)</title><rect x="549.5" y="947.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="552.5" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.15%)</title><rect x="550.0" y="963.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="553.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="550.0" y="947.0" width="1.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="553.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="550.0" y="931.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="553.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="550.9" y="915.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="553.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="550.9" y="899.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="553.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="550.9" y="883.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="553.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="550.9" y="867.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="553.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="551.8" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="554.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="551.8" y="1043.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="554.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="552.2" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="552.2" y="1043.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="555.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="552.2" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="555.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.04%)</title><rect x="552.2" y="1011.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="555.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.04%)</title><rect x="552.2" y="995.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="555.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="552.2" y="979.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="552.7" y="1139.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.7" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="552.7" y="1123.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.7" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="552.7" y="1107.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="552.7" y="1091.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.23%)</title><rect x="553.2" y="1171.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="556.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.08%)</title><rect x="553.2" y="1155.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="556.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="553.2" y="1139.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="553.2" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="553.2" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="556.2" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="553.6" y="1139.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="556.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="554.1" y="1155.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="557.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="554.1" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.1" y="1150.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.04%)</title><rect x="554.1" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.12%)</title><rect x="554.5" y="1155.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.08%)</title><rect x="555.9" y="1171.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="556.3" y="1155.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="559.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="556.8" y="1171.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="559.8" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="556.8" y="1155.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.8" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (16 samples, 0.61%)</title><rect x="557.2" y="1187.0" width="7.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="560.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (16 samples, 0.61%)</title><rect x="557.2" y="1171.0" width="7.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="557.7" y="1155.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="560.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="557.7" y="1139.0" width="2.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="560.7" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.19%)</title><rect x="557.7" y="1123.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="560.7" y="1134.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.04%)</title><rect x="557.7" y="1107.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="560.7" y="1118.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.08%)</title><rect x="558.1" y="1107.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="561.1" y="1118.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="559.0" y="1107.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="562.0" y="1118.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="559.0" y="1091.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="562.0" y="1102.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.08%)</title><rect x="559.0" y="1075.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="562.0" y="1086.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="559.9" y="1123.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="562.9" y="1134.0"></text>
</g>
<g>
<title>__GI___recv (9 samples, 0.35%)</title><rect x="560.4" y="1155.0" width="4.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="563.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="560.4" y="1139.0" width="4.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="563.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="560.4" y="1123.0" width="4.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="563.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="560.4" y="1107.0" width="4.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="563.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="560.4" y="1091.0" width="4.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="563.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="560.4" y="1075.0" width="4.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="563.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="560.8" y="1059.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="563.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="561.8" y="1043.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="564.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="561.8" y="1027.0" width="2.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="564.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="562.7" y="1011.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="565.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="562.7" y="995.0" width="1.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="565.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="563.6" y="979.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="566.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="564.0" y="963.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="567.0" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=31380] (80 samples, 3.07%)</title><rect x="564.5" y="1251.0" width="36.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="567.5" y="1262.0">[NI..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="564.5" y="1235.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="567.5" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.04%)</title><rect x="564.5" y="1219.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="567.5" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="564.5" y="1203.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="567.5" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="564.5" y="1187.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="567.5" y="1198.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.04%)</title><rect x="564.5" y="1171.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="567.5" y="1182.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.08%)</title><rect x="564.9" y="1235.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="567.9" y="1246.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (77 samples, 2.95%)</title><rect x="565.8" y="1235.0" width="34.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.8" y="1246.0">on..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="566.3" y="1219.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="569.3" y="1230.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.04%)</title><rect x="566.3" y="1203.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="569.3" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (1 samples, 0.04%)</title><rect x="566.3" y="1187.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="569.3" y="1198.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="566.3" y="1171.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="569.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (19 samples, 0.73%)</title><rect x="566.7" y="1219.0" width="8.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.7" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.04%)</title><rect x="567.2" y="1203.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="570.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.04%)</title><rect x="567.2" y="1187.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="570.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (17 samples, 0.65%)</title><rect x="567.6" y="1203.0" width="7.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="570.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="568.5" y="1187.0" width="6.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="571.5" y="1198.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="568.5" y="1171.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="571.5" y="1182.0"></text>
</g>
<g>
<title>epoll_wait (13 samples, 0.50%)</title><rect x="569.0" y="1171.0" width="5.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="572.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="569.9" y="1155.0" width="5.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="572.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="569.9" y="1139.0" width="5.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="572.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="569.9" y="1123.0" width="5.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="572.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="569.9" y="1107.0" width="5.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="572.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="569.9" y="1091.0" width="5.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="572.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="570.4" y="1075.0" width="4.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="573.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="571.3" y="1059.0" width="3.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="574.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="571.3" y="1043.0" width="3.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="574.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="572.2" y="1027.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="575.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="572.6" y="1011.0" width="2.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="575.6" y="1022.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="574.9" y="1187.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="577.9" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (56 samples, 2.15%)</title><rect x="575.3" y="1219.0" width="25.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="578.3" y="1230.0">o..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="576.2" y="1203.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="579.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (53 samples, 2.03%)</title><rect x="576.7" y="1203.0" width="24.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="579.7" y="1214.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (35 samples, 1.34%)</title><rect x="576.7" y="1187.0" width="15.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="579.7" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28 samples, 1.07%)</title><rect x="576.7" y="1171.0" width="12.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="579.7" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (28 samples, 1.07%)</title><rect x="576.7" y="1155.0" width="12.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="579.7" y="1166.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (28 samples, 1.07%)</title><rect x="576.7" y="1139.0" width="12.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="579.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="576.7" y="1123.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="579.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.04%)</title><rect x="576.7" y="1107.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="579.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="576.7" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="576.7" y="1075.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="579.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (27 samples, 1.04%)</title><rect x="577.1" y="1123.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="580.1" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (11 samples, 0.42%)</title><rect x="577.6" y="1107.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="580.6" y="1118.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (11 samples, 0.42%)</title><rect x="577.6" y="1091.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.6" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (3 samples, 0.12%)</title><rect x="577.6" y="1075.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="580.6" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.04%)</title><rect x="578.5" y="1059.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="581.5" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.04%)</title><rect x="578.5" y="1043.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.5" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (6 samples, 0.23%)</title><rect x="579.0" y="1075.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="582.0" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (4 samples, 0.15%)</title><rect x="579.0" y="1059.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="582.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.12%)</title><rect x="579.0" y="1043.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="582.0" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.12%)</title><rect x="579.0" y="1027.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.0" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.12%)</title><rect x="579.0" y="1011.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="582.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.04%)</title><rect x="579.9" y="995.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.9" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.04%)</title><rect x="580.3" y="1043.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.3" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.04%)</title><rect x="580.3" y="1027.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="583.3" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.&lt;init&gt; (1 samples, 0.04%)</title><rect x="580.3" y="1011.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.04%)</title><rect x="580.3" y="995.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="583.3" y="1006.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (2 samples, 0.08%)</title><rect x="580.8" y="1059.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.8" y="1070.0"></text>
</g>
<g>
<title>java/util/Set.of (2 samples, 0.08%)</title><rect x="581.7" y="1075.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="584.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (4 samples, 0.15%)</title><rect x="582.6" y="1107.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.6" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.04%)</title><rect x="582.6" y="1091.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.6" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (1 samples, 0.04%)</title><rect x="582.6" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="585.6" y="1086.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (3 samples, 0.12%)</title><rect x="583.0" y="1091.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.0" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (2 samples, 0.08%)</title><rect x="583.5" y="1075.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="586.5" y="1086.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="583.5" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="586.5" y="1070.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.04%)</title><rect x="583.5" y="1043.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="586.5" y="1054.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.04%)</title><rect x="583.5" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="586.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (1 samples, 0.04%)</title><rect x="583.5" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="586.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="583.5" y="995.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="586.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="583.5" y="979.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.5" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="583.5" y="963.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="586.5" y="974.0"></text>
</g>
<g>
<title>java/lang/Enum.ordinal (1 samples, 0.04%)</title><rect x="583.9" y="1059.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="586.9" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (11 samples, 0.42%)</title><rect x="584.4" y="1107.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="587.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.42%)</title><rect x="584.4" y="1091.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.42%)</title><rect x="584.4" y="1075.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.38%)</title><rect x="584.4" y="1059.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.38%)</title><rect x="584.4" y="1043.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="587.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.38%)</title><rect x="584.4" y="1027.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="587.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.38%)</title><rect x="584.4" y="1011.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="587.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.38%)</title><rect x="584.4" y="995.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="587.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.38%)</title><rect x="584.4" y="979.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="587.4" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.08%)</title><rect x="584.4" y="963.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="587.4" y="974.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="584.4" y="947.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="587.4" y="958.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="584.8" y="947.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="587.8" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="585.3" y="963.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="588.3" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.27%)</title><rect x="585.7" y="963.0" width="3.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="588.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="585.7" y="947.0" width="3.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="588.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="585.7" y="931.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="588.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="585.7" y="915.0" width="3.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="588.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="585.7" y="899.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="588.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="585.7" y="883.0" width="3.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="588.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="586.2" y="867.0" width="2.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="589.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="586.6" y="851.0" width="2.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="589.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="587.1" y="835.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="590.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="588.9" y="1059.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="591.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="588.9" y="1043.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="591.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="588.9" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="588.9" y="1011.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="591.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.04%)</title><rect x="588.9" y="995.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="588.9" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="591.9" y="990.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="588.9" y="963.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="591.9" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.08%)</title><rect x="589.4" y="1171.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="589.8" y="1155.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="592.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="589.8" y="1139.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="589.8" y="1123.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="592.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.04%)</title><rect x="590.3" y="1171.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="593.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="590.3" y="1155.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="593.3" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="590.3" y="1139.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="593.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="590.3" y="1123.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="593.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="590.3" y="1107.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="593.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="590.3" y="1091.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="593.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="590.3" y="1075.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="593.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="590.3" y="1059.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="593.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.08%)</title><rect x="590.7" y="1171.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="593.7" y="1182.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="590.7" y="1155.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="593.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="591.2" y="1155.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="594.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="591.6" y="1171.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="594.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="592.1" y="1171.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="595.1" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="592.1" y="1155.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="595.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="592.1" y="1139.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="592.1" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.04%)</title><rect x="592.1" y="1107.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="595.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (18 samples, 0.69%)</title><rect x="592.5" y="1187.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="595.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (18 samples, 0.69%)</title><rect x="592.5" y="1171.0" width="8.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="595.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="592.5" y="1155.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="595.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="592.5" y="1139.0" width="1.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="595.5" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.15%)</title><rect x="592.5" y="1123.0" width="1.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="595.5" y="1134.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.12%)</title><rect x="592.5" y="1107.0" width="1.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="595.5" y="1118.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="593.0" y="1091.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="596.0" y="1102.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="593.9" y="1107.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="596.9" y="1118.0"></text>
</g>
<g>
<title>__GI___recv (14 samples, 0.54%)</title><rect x="594.3" y="1155.0" width="6.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="597.3" y="1166.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="595.2" y="1139.0" width="5.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="598.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="595.2" y="1123.0" width="5.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="598.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="595.7" y="1107.0" width="5.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="598.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="595.7" y="1091.0" width="5.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="598.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="596.2" y="1075.0" width="4.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="599.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="596.2" y="1059.0" width="4.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="599.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="596.2" y="1043.0" width="4.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="599.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="596.2" y="1027.0" width="4.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="599.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="596.6" y="1011.0" width="4.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="599.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="596.6" y="995.0" width="4.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="599.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="598.4" y="979.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="601.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="599.3" y="963.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="602.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="947.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="603.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="931.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="603.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="915.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="603.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="899.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="603.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="883.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="603.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="867.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="603.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="851.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="603.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="835.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="603.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="819.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="603.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="803.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="603.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="787.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="603.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="771.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="603.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="755.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="603.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.2" y="739.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="603.2" y="750.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=31365] (62 samples, 2.38%)</title><rect x="600.7" y="1251.0" width="28.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="603.7" y="1262.0">[N..</text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.04%)</title><rect x="600.7" y="1235.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="603.7" y="1246.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="601.1" y="1235.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="604.1" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="601.1" y="1219.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="604.1" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="601.1" y="1203.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="604.1" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="601.1" y="1187.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="604.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (60 samples, 2.30%)</title><rect x="601.6" y="1235.0" width="27.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="604.6" y="1246.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (14 samples, 0.54%)</title><rect x="602.0" y="1219.0" width="6.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.0" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.12%)</title><rect x="602.5" y="1203.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="605.5" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.12%)</title><rect x="602.5" y="1187.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (10 samples, 0.38%)</title><rect x="603.8" y="1203.0" width="4.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="603.8" y="1187.0" width="4.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="606.8" y="1198.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="603.8" y="1171.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="606.8" y="1182.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.35%)</title><rect x="604.3" y="1171.0" width="4.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="607.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="605.7" y="1155.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="608.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="605.7" y="1139.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="608.7" y="1150.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="605.7" y="1123.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="608.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="605.7" y="1107.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="608.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="605.7" y="1091.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="608.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="605.7" y="1075.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="608.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="606.1" y="1059.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="609.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="607.5" y="1043.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="610.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="607.5" y="1027.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="610.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="607.5" y="1011.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="610.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="607.9" y="995.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="610.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="607.9" y="979.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="610.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="607.9" y="963.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="610.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="607.9" y="947.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="610.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (45 samples, 1.73%)</title><rect x="608.4" y="1219.0" width="20.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="611.4" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (45 samples, 1.73%)</title><rect x="608.4" y="1203.0" width="20.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="611.4" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (34 samples, 1.30%)</title><rect x="608.4" y="1187.0" width="15.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 0.84%)</title><rect x="608.4" y="1171.0" width="9.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="611.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (21 samples, 0.81%)</title><rect x="608.8" y="1155.0" width="9.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.8" y="1166.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (21 samples, 0.81%)</title><rect x="608.8" y="1139.0" width="9.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.8" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="608.8" y="1123.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="611.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.04%)</title><rect x="608.8" y="1107.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="611.8" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (20 samples, 0.77%)</title><rect x="609.3" y="1123.0" width="9.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="612.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (5 samples, 0.19%)</title><rect x="609.3" y="1107.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.3" y="1118.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (5 samples, 0.19%)</title><rect x="609.3" y="1091.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.3" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (5 samples, 0.19%)</title><rect x="609.3" y="1075.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.3" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (4 samples, 0.15%)</title><rect x="609.3" y="1059.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="612.3" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.12%)</title><rect x="609.3" y="1043.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="612.3" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.12%)</title><rect x="609.3" y="1027.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.12%)</title><rect x="609.3" y="1011.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.3" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.04%)</title><rect x="610.6" y="1043.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="613.6" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.04%)</title><rect x="610.6" y="1027.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="610.6" y="1011.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="613.6" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (1 samples, 0.04%)</title><rect x="611.1" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="614.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.04%)</title><rect x="611.1" y="1043.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (4 samples, 0.15%)</title><rect x="611.5" y="1107.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.5" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (4 samples, 0.15%)</title><rect x="611.5" y="1091.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.5" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="612.0" y="1075.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.0" y="1086.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="612.0" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="615.0" y="1070.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.04%)</title><rect x="612.0" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="615.0" y="1054.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.04%)</title><rect x="612.0" y="1027.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="615.0" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.separatorStart (1 samples, 0.04%)</title><rect x="612.0" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.0" y="1022.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.indexIn (1 samples, 0.04%)</title><rect x="612.0" y="995.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="615.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="612.0" y="979.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.0" y="990.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1 samples, 0.04%)</title><rect x="612.4" y="1075.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.4" y="1086.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1 samples, 0.04%)</title><rect x="612.9" y="1075.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="615.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (11 samples, 0.42%)</title><rect x="613.4" y="1107.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="616.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (11 samples, 0.42%)</title><rect x="613.4" y="1091.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="616.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.42%)</title><rect x="613.4" y="1075.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="616.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.38%)</title><rect x="613.4" y="1059.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.38%)</title><rect x="613.4" y="1043.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.38%)</title><rect x="613.4" y="1027.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="616.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.38%)</title><rect x="613.4" y="1011.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="616.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.38%)</title><rect x="613.4" y="995.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="616.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.38%)</title><rect x="613.4" y="979.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.4" y="990.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.04%)</title><rect x="613.4" y="963.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="616.4" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="613.8" y="963.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="616.8" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="613.8" y="947.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="616.8" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.31%)</title><rect x="614.3" y="963.0" width="3.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="617.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="614.7" y="947.0" width="3.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="617.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="614.7" y="931.0" width="3.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="617.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="615.2" y="915.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="618.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="615.6" y="899.0" width="2.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="618.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="615.6" y="883.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="618.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="615.6" y="867.0" width="2.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="618.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="616.1" y="851.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="619.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="616.1" y="835.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="619.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="617.9" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="620.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="617.9" y="1043.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="617.9" y="1027.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="620.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="617.9" y="1011.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.04%)</title><rect x="617.9" y="995.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="620.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.15%)</title><rect x="618.3" y="1171.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="618.8" y="1155.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="618.8" y="1139.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="618.8" y="1123.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="618.8" y="1107.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="621.8" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="619.2" y="1155.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="622.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="619.2" y="1139.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="619.7" y="1155.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="622.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.08%)</title><rect x="620.1" y="1171.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="623.1" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.19%)</title><rect x="621.0" y="1171.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.15%)</title><rect x="621.0" y="1155.0" width="1.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="624.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.15%)</title><rect x="621.0" y="1139.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="621.5" y="1123.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="624.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="621.5" y="1107.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="621.5" y="1091.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.5" y="1102.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="622.0" y="1123.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="625.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="622.9" y="1155.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="625.9" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="623.3" y="1171.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="626.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="623.3" y="1155.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.42%)</title><rect x="623.8" y="1187.0" width="4.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.8" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 0.42%)</title><rect x="623.8" y="1171.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="624.2" y="1155.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="627.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="624.2" y="1139.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="627.2" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.08%)</title><rect x="624.2" y="1123.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="627.2" y="1134.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.04%)</title><rect x="624.7" y="1107.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="627.7" y="1118.0"></text>
</g>
<g>
<title>__GI___recv (8 samples, 0.31%)</title><rect x="625.1" y="1155.0" width="3.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="628.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="625.6" y="1139.0" width="3.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="628.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="625.6" y="1123.0" width="3.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="628.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="625.6" y="1107.0" width="3.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="628.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="625.6" y="1091.0" width="3.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="628.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="625.6" y="1075.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="628.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="625.6" y="1059.0" width="3.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="628.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="625.6" y="1043.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="628.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="626.5" y="1027.0" width="2.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="629.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="626.9" y="1011.0" width="1.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="629.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="627.4" y="995.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="630.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="627.4" y="979.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="630.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="628.3" y="963.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="631.3" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=31371] (37 samples, 1.42%)</title><rect x="628.7" y="1251.0" width="16.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="631.7" y="1262.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="628.7" y="1235.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="631.7" y="1246.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="628.7" y="1219.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="631.7" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="628.7" y="1203.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="631.7" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="628.7" y="1187.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="631.7" y="1198.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.04%)</title><rect x="628.7" y="1171.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="631.7" y="1182.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.04%)</title><rect x="628.7" y="1155.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="631.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (36 samples, 1.38%)</title><rect x="629.2" y="1235.0" width="16.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="632.2" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.08%)</title><rect x="629.2" y="1219.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.2" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.08%)</title><rect x="629.2" y="1203.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="632.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.04%)</title><rect x="629.6" y="1187.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="632.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.23%)</title><rect x="630.1" y="1219.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.1" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.04%)</title><rect x="630.1" y="1203.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.1" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.04%)</title><rect x="630.1" y="1187.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="633.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.19%)</title><rect x="630.6" y="1203.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="631.0" y="1187.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="634.0" y="1198.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.04%)</title><rect x="631.0" y="1171.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="634.0" y="1182.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.12%)</title><rect x="631.5" y="1171.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="634.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="631.5" y="1155.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="634.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="631.5" y="1139.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="634.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="631.5" y="1123.0" width="1.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="634.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="631.5" y="1107.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="634.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="631.5" y="1091.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="634.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="631.5" y="1075.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="634.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="631.9" y="1059.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="634.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="632.4" y="1043.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="635.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="632.4" y="1027.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="635.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="632.4" y="1011.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="635.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (28 samples, 1.07%)</title><rect x="632.8" y="1219.0" width="12.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.8" y="1230.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="632.8" y="1203.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="635.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (27 samples, 1.04%)</title><rect x="633.3" y="1203.0" width="12.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.3" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (22 samples, 0.84%)</title><rect x="633.3" y="1187.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (19 samples, 0.73%)</title><rect x="633.3" y="1171.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (19 samples, 0.73%)</title><rect x="633.3" y="1155.0" width="8.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="636.3" y="1166.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (19 samples, 0.73%)</title><rect x="633.3" y="1139.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="633.3" y="1123.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="636.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.04%)</title><rect x="633.3" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="633.3" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.3" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (18 samples, 0.69%)</title><rect x="633.7" y="1123.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="636.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="633.7" y="1107.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="633.7" y="1091.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="636.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="634.2" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="634.2" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.2" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (6 samples, 0.23%)</title><rect x="634.6" y="1107.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.6" y="1118.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (6 samples, 0.23%)</title><rect x="634.6" y="1091.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="637.6" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.04%)</title><rect x="634.6" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="637.6" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.04%)</title><rect x="634.6" y="1059.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="637.6" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.04%)</title><rect x="634.6" y="1043.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.6" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.15%)</title><rect x="635.1" y="1075.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.1" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (3 samples, 0.12%)</title><rect x="635.1" y="1059.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="638.1" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.04%)</title><rect x="635.1" y="1043.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.1" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.04%)</title><rect x="635.1" y="1027.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.1" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.04%)</title><rect x="635.1" y="1011.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.1" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.04%)</title><rect x="635.1" y="995.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="638.1" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (2 samples, 0.08%)</title><rect x="635.5" y="1043.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="638.5" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.04%)</title><rect x="635.5" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="638.5" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (1 samples, 0.04%)</title><rect x="635.5" y="1011.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="638.5" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.04%)</title><rect x="636.0" y="1027.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="639.0" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.&lt;init&gt; (1 samples, 0.04%)</title><rect x="636.0" y="1011.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="639.0" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.04%)</title><rect x="636.4" y="1059.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.04%)</title><rect x="636.4" y="1043.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="639.4" y="1054.0"></text>
</g>
<g>
<title>java/util/Set.of (1 samples, 0.04%)</title><rect x="636.9" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (5 samples, 0.19%)</title><rect x="637.3" y="1107.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="640.3" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.04%)</title><rect x="637.3" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.3" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.is (1 samples, 0.04%)</title><rect x="637.3" y="1075.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="640.3" y="1086.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (2 samples, 0.08%)</title><rect x="637.8" y="1091.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="640.8" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1 samples, 0.04%)</title><rect x="637.8" y="1075.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.8" y="1086.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.04%)</title><rect x="637.8" y="1059.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="640.8" y="1070.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.04%)</title><rect x="637.8" y="1043.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="640.8" y="1054.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (1 samples, 0.04%)</title><rect x="637.8" y="1027.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="640.8" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="637.8" y="1011.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.8" y="1022.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="637.8" y="995.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="640.8" y="1006.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1 samples, 0.04%)</title><rect x="638.2" y="1075.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="641.2" y="1086.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.04%)</title><rect x="638.2" y="1059.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="641.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.08%)</title><rect x="638.7" y="1091.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.08%)</title><rect x="638.7" y="1075.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (5 samples, 0.19%)</title><rect x="639.6" y="1107.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.19%)</title><rect x="639.6" y="1091.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.19%)</title><rect x="639.6" y="1075.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.12%)</title><rect x="639.6" y="1059.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="642.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.12%)</title><rect x="639.6" y="1043.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.12%)</title><rect x="639.6" y="1027.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.12%)</title><rect x="639.6" y="1011.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="642.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.12%)</title><rect x="639.6" y="995.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.12%)</title><rect x="639.6" y="979.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.6" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="639.6" y="963.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="642.6" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="639.6" y="947.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="642.6" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.08%)</title><rect x="640.1" y="963.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="643.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="640.1" y="947.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="643.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="640.1" y="931.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="643.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="640.1" y="915.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="643.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="640.1" y="899.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="643.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="640.1" y="883.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="643.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="640.1" y="867.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="643.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="640.1" y="851.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="643.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="640.1" y="835.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="643.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.08%)</title><rect x="641.0" y="1059.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="644.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.08%)</title><rect x="641.0" y="1043.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.08%)</title><rect x="641.0" y="1027.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.08%)</title><rect x="641.0" y="1011.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="644.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.08%)</title><rect x="641.0" y="995.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="641.4" y="979.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.4" y="990.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="641.4" y="963.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.4" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.04%)</title><rect x="641.9" y="1171.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="642.3" y="1171.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="642.3" y="1155.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="645.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="642.8" y="1171.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.8" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="642.8" y="1155.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="645.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="642.8" y="1139.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.8" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 0.19%)</title><rect x="643.2" y="1187.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="646.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.15%)</title><rect x="643.2" y="1171.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="646.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="643.2" y="1155.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="646.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="643.2" y="1139.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="646.2" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="643.2" y="1123.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="646.2" y="1134.0"></text>
</g>
<g>
<title>__GI___recv (3 samples, 0.12%)</title><rect x="643.7" y="1155.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="646.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="643.7" y="1139.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="646.7" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="643.7" y="1123.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="646.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="643.7" y="1107.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="646.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="643.7" y="1091.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="646.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="644.1" y="1075.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="647.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="644.1" y="1059.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="647.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="644.1" y="1043.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="647.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="644.1" y="1027.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="647.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="644.1" y="1011.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="647.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="644.1" y="995.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="647.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="644.6" y="979.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="647.6" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.04%)</title><rect x="645.0" y="1171.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="648.0" y="1182.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=31381] (64 samples, 2.45%)</title><rect x="645.5" y="1251.0" width="29.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="648.5" y="1262.0">[N..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="645.5" y="1235.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="648.5" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.04%)</title><rect x="645.5" y="1219.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="648.5" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="645.5" y="1203.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="648.5" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="645.5" y="1187.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="648.5" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="645.5" y="1171.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="648.5" y="1182.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="645.5" y="1155.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="648.5" y="1166.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.04%)</title><rect x="645.9" y="1235.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="648.9" y="1246.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (1 samples, 0.04%)</title><rect x="645.9" y="1219.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="648.9" y="1230.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="646.4" y="1235.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="649.4" y="1246.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="646.4" y="1219.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="649.4" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="646.4" y="1203.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="649.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="646.4" y="1187.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="649.4" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="646.4" y="1171.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="649.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="646.4" y="1155.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="649.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="646.4" y="1139.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="649.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="646.4" y="1123.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="649.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="646.4" y="1107.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="649.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="646.4" y="1091.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="649.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (61 samples, 2.34%)</title><rect x="646.8" y="1235.0" width="27.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="649.8" y="1246.0">o..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.04%)</title><rect x="646.8" y="1219.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="649.8" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (21 samples, 0.81%)</title><rect x="647.3" y="1219.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.3" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.08%)</title><rect x="647.8" y="1203.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="650.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.08%)</title><rect x="647.8" y="1187.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="650.8" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (18 samples, 0.69%)</title><rect x="648.7" y="1203.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="651.7" y="1214.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.04%)</title><rect x="648.7" y="1187.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="651.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="649.1" y="1187.0" width="7.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="652.1" y="1198.0"></text>
</g>
<g>
<title>epoll_wait (16 samples, 0.61%)</title><rect x="649.1" y="1171.0" width="7.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="652.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="649.1" y="1155.0" width="7.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="652.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="649.1" y="1139.0" width="7.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="652.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="649.1" y="1123.0" width="7.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="652.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="649.1" y="1107.0" width="7.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="652.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="649.1" y="1091.0" width="7.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="652.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="650.5" y="1075.0" width="5.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="653.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="651.8" y="1059.0" width="4.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="654.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="652.7" y="1043.0" width="3.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="655.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="654.1" y="1027.0" width="2.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="657.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="654.5" y="1011.0" width="1.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="657.5" y="1022.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="656.4" y="1187.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="659.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (39 samples, 1.50%)</title><rect x="656.8" y="1219.0" width="17.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="659.8" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (39 samples, 1.50%)</title><rect x="656.8" y="1203.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (25 samples, 0.96%)</title><rect x="656.8" y="1187.0" width="11.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="659.8" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (17 samples, 0.65%)</title><rect x="657.3" y="1171.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (17 samples, 0.65%)</title><rect x="657.3" y="1155.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.3" y="1166.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (17 samples, 0.65%)</title><rect x="657.3" y="1139.0" width="7.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="660.3" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (17 samples, 0.65%)</title><rect x="657.3" y="1123.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="660.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="657.7" y="1107.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="657.7" y="1091.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="657.7" y="1075.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (5 samples, 0.19%)</title><rect x="658.2" y="1107.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.2" y="1118.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (5 samples, 0.19%)</title><rect x="658.2" y="1091.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.2" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.08%)</title><rect x="658.2" y="1075.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.2" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.08%)</title><rect x="658.2" y="1059.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="661.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.04%)</title><rect x="658.2" y="1043.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="661.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.04%)</title><rect x="658.6" y="1043.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="661.6" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (3 samples, 0.12%)</title><rect x="659.1" y="1075.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.1" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (3 samples, 0.12%)</title><rect x="659.1" y="1059.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.1" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.08%)</title><rect x="659.1" y="1043.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.1" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.08%)</title><rect x="659.1" y="1027.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.1" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.08%)</title><rect x="659.1" y="1011.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="662.1" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.04%)</title><rect x="659.1" y="995.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.1" y="1006.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.04%)</title><rect x="659.5" y="995.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="662.5" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.04%)</title><rect x="660.0" y="1043.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="663.0" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.04%)</title><rect x="660.0" y="1027.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="660.0" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="663.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (2 samples, 0.08%)</title><rect x="660.4" y="1107.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="663.4" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1 samples, 0.04%)</title><rect x="660.9" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="663.9" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="660.9" y="1075.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.9" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="660.9" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.9" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="660.9" y="1043.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="663.9" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.04%)</title><rect x="660.9" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.9" y="1038.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="660.9" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (8 samples, 0.31%)</title><rect x="661.3" y="1107.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="664.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.31%)</title><rect x="661.3" y="1091.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="664.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.31%)</title><rect x="661.3" y="1075.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="664.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.23%)</title><rect x="661.3" y="1059.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="664.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.23%)</title><rect x="661.3" y="1043.0" width="2.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="664.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.23%)</title><rect x="661.3" y="1027.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="664.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.23%)</title><rect x="661.3" y="1011.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="664.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.23%)</title><rect x="661.3" y="995.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="664.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.23%)</title><rect x="661.3" y="979.0" width="2.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="664.3" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="661.3" y="963.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="664.3" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="661.3" y="947.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="664.3" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.19%)</title><rect x="661.8" y="963.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="664.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="661.8" y="947.0" width="2.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="664.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="661.8" y="931.0" width="2.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="664.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="661.8" y="915.0" width="2.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="664.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="661.8" y="899.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="664.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="661.8" y="883.0" width="2.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="664.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="662.2" y="867.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="665.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="662.2" y="851.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="665.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="662.7" y="835.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="665.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.08%)</title><rect x="664.0" y="1059.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="667.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.08%)</title><rect x="664.0" y="1043.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="667.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.08%)</title><rect x="664.0" y="1027.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="667.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.08%)</title><rect x="664.0" y="1011.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="667.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.08%)</title><rect x="664.0" y="995.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="667.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.08%)</title><rect x="664.0" y="979.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="667.0" y="990.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.08%)</title><rect x="664.0" y="963.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.0" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.15%)</title><rect x="665.0" y="1171.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.12%)</title><rect x="665.0" y="1155.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="668.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="665.9" y="1139.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="665.9" y="1123.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="668.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="665.9" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="668.9" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="666.3" y="1155.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="669.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="666.3" y="1139.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="669.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.04%)</title><rect x="666.8" y="1171.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="666.8" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="669.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="666.8" y="1139.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="669.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="666.8" y="1123.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.8" y="1134.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="666.8" y="1107.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="669.8" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.08%)</title><rect x="667.2" y="1171.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="670.2" y="1182.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.04%)</title><rect x="667.7" y="1155.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (14 samples, 0.54%)</title><rect x="668.1" y="1187.0" width="6.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (14 samples, 0.54%)</title><rect x="668.1" y="1171.0" width="6.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="671.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="668.6" y="1155.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="671.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="668.6" y="1139.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="671.6" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.08%)</title><rect x="668.6" y="1123.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="671.6" y="1134.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="668.6" y="1107.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="671.6" y="1118.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="669.0" y="1107.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="672.0" y="1118.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="669.5" y="1123.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="672.5" y="1134.0"></text>
</g>
<g>
<title>__GI___recv (10 samples, 0.38%)</title><rect x="669.9" y="1155.0" width="4.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="672.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="669.9" y="1139.0" width="4.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="672.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="669.9" y="1123.0" width="4.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="672.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="669.9" y="1107.0" width="4.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="672.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="669.9" y="1091.0" width="4.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="672.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="669.9" y="1075.0" width="4.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="672.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="669.9" y="1059.0" width="4.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="672.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="669.9" y="1043.0" width="4.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="672.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="669.9" y="1027.0" width="4.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="672.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="671.7" y="1011.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="674.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="672.6" y="995.0" width="1.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="675.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="672.6" y="979.0" width="1.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="675.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="673.1" y="963.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="676.1" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=31366] (55 samples, 2.11%)</title><rect x="674.5" y="1251.0" width="24.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="677.5" y="1262.0">[..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="674.5" y="1235.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="677.5" y="1246.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="674.5" y="1219.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="677.5" y="1230.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="674.9" y="1235.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="677.9" y="1246.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="674.9" y="1219.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="677.9" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="674.9" y="1203.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="677.9" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="674.9" y="1187.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="677.9" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="674.9" y="1171.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="677.9" y="1182.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.04%)</title><rect x="674.9" y="1155.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="677.9" y="1166.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.04%)</title><rect x="675.4" y="1235.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="678.4" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.04%)</title><rect x="675.4" y="1219.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="678.4" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.04%)</title><rect x="675.4" y="1203.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="678.4" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="675.4" y="1187.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="678.4" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="675.4" y="1171.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="678.4" y="1182.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.04%)</title><rect x="675.4" y="1155.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="678.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (52 samples, 1.99%)</title><rect x="675.8" y="1235.0" width="23.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="678.8" y="1246.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.50%)</title><rect x="675.8" y="1219.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.8" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (13 samples, 0.50%)</title><rect x="675.8" y="1203.0" width="5.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="678.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="676.3" y="1187.0" width="5.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="679.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="676.3" y="1171.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="679.3" y="1182.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="676.3" y="1155.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="679.3" y="1166.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.08%)</title><rect x="676.7" y="1171.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="679.7" y="1182.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="677.6" y="1171.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="680.6" y="1182.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.31%)</title><rect x="678.1" y="1171.0" width="3.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="681.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="678.1" y="1155.0" width="3.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="681.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="678.1" y="1139.0" width="3.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="681.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="678.1" y="1123.0" width="3.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="681.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="678.1" y="1107.0" width="3.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="681.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="678.1" y="1091.0" width="3.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="681.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="678.5" y="1075.0" width="3.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="681.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="679.9" y="1059.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="682.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="680.3" y="1043.0" width="1.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="683.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="680.8" y="1027.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="683.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="680.8" y="1011.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="683.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (39 samples, 1.50%)</title><rect x="681.7" y="1219.0" width="17.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="684.7" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (37 samples, 1.42%)</title><rect x="682.6" y="1203.0" width="16.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="685.6" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (28 samples, 1.07%)</title><rect x="683.1" y="1187.0" width="12.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="686.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24 samples, 0.92%)</title><rect x="683.1" y="1171.0" width="10.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="686.1" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (24 samples, 0.92%)</title><rect x="683.1" y="1155.0" width="10.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="686.1" y="1166.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (24 samples, 0.92%)</title><rect x="683.1" y="1139.0" width="10.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.04%)</title><rect x="683.1" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.04%)</title><rect x="683.1" y="1107.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="683.1" y="1091.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="683.1" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.1" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (23 samples, 0.88%)</title><rect x="683.5" y="1123.0" width="10.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/413115525.linkToTargetMethod (1 samples, 0.04%)</title><rect x="683.5" y="1107.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="686.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1881466287.invokeStatic (1 samples, 0.04%)</title><rect x="683.5" y="1091.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="686.5" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.get$Lambda (1 samples, 0.04%)</title><rect x="683.5" y="1075.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$85/1109459427.&lt;init&gt; (1 samples, 0.04%)</title><rect x="683.5" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="686.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (6 samples, 0.23%)</title><rect x="684.0" y="1107.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.0" y="1118.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (6 samples, 0.23%)</title><rect x="684.0" y="1091.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.0" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.08%)</title><rect x="684.0" y="1075.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.0" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.08%)</title><rect x="684.0" y="1059.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.08%)</title><rect x="684.0" y="1043.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.0" y="1054.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.15%)</title><rect x="684.9" y="1075.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="687.9" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (3 samples, 0.12%)</title><rect x="684.9" y="1059.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="687.9" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.12%)</title><rect x="684.9" y="1043.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="687.9" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.12%)</title><rect x="684.9" y="1027.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="687.9" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.12%)</title><rect x="684.9" y="1011.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.9" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.04%)</title><rect x="685.3" y="995.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="688.3" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.04%)</title><rect x="685.8" y="995.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="688.8" y="1006.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (1 samples, 0.04%)</title><rect x="686.2" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.2" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (1 samples, 0.04%)</title><rect x="686.7" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.7" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (1 samples, 0.04%)</title><rect x="686.7" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="689.7" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="686.7" y="1075.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.7" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.04%)</title><rect x="686.7" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="689.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (15 samples, 0.58%)</title><rect x="687.1" y="1107.0" width="6.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.04%)</title><rect x="687.1" y="1091.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="690.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="687.1" y="1075.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.1" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.get$Lambda (1 samples, 0.04%)</title><rect x="687.1" y="1059.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.54%)</title><rect x="687.6" y="1091.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.54%)</title><rect x="687.6" y="1075.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.46%)</title><rect x="687.6" y="1059.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.46%)</title><rect x="687.6" y="1043.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.46%)</title><rect x="687.6" y="1027.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.46%)</title><rect x="687.6" y="1011.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="690.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.46%)</title><rect x="687.6" y="995.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.46%)</title><rect x="687.6" y="979.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="690.6" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.12%)</title><rect x="687.6" y="963.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="690.6" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="687.6" y="947.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="690.6" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="688.0" y="947.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="691.0" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="688.5" y="947.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="691.5" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="688.9" y="963.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="691.9" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.31%)</title><rect x="689.4" y="963.0" width="3.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="692.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="689.8" y="947.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="692.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="689.8" y="931.0" width="3.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="692.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="689.8" y="915.0" width="3.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="692.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="689.8" y="899.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="692.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="689.8" y="883.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="692.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="689.8" y="867.0" width="3.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="692.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="689.8" y="851.0" width="3.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="692.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="689.8" y="835.0" width="3.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="692.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="693.0" y="1059.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="693.0" y="1043.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.04%)</title><rect x="693.0" y="1027.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.04%)</title><rect x="693.0" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.04%)</title><rect x="693.0" y="995.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="693.0" y="979.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="696.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="693.0" y="963.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.0" y="974.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="693.0" y="947.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="693.5" y="1059.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="693.5" y="1043.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="693.5" y="1027.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="693.5" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="696.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.04%)</title><rect x="693.5" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="693.5" y="979.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.5" y="990.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.04%)</title><rect x="693.5" y="963.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.5" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.04%)</title><rect x="693.9" y="1171.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="696.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="694.4" y="1171.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="697.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="694.8" y="1171.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="697.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.08%)</title><rect x="694.8" y="1155.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="697.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="694.8" y="1139.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="697.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="695.3" y="1123.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="695.3" y="1107.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="698.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="695.3" y="1091.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 0.31%)</title><rect x="695.7" y="1187.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.7" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 0.31%)</title><rect x="695.7" y="1171.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="698.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="695.7" y="1155.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="698.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="695.7" y="1139.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="698.7" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.08%)</title><rect x="695.7" y="1123.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="698.7" y="1134.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="696.2" y="1107.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="699.2" y="1118.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="696.6" y="1123.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="699.6" y="1134.0"></text>
</g>
<g>
<title>__GI___recv (5 samples, 0.19%)</title><rect x="697.1" y="1155.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="700.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="697.1" y="1139.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="700.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="697.1" y="1123.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="700.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="697.5" y="1107.0" width="1.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="700.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="697.5" y="1091.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="700.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="697.5" y="1075.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="700.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="697.5" y="1059.0" width="1.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="700.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="697.5" y="1043.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="700.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="697.5" y="1027.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="700.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="698.4" y="1011.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="701.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="698.4" y="995.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="701.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="698.9" y="979.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="701.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="698.9" y="963.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="701.9" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=31372] (47 samples, 1.80%)</title><rect x="699.4" y="1251.0" width="21.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="702.4" y="1262.0">[..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="699.4" y="1235.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="702.4" y="1246.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.04%)</title><rect x="699.4" y="1219.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="702.4" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="699.4" y="1203.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="702.4" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="699.4" y="1187.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="702.4" y="1198.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.04%)</title><rect x="699.4" y="1171.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="702.4" y="1182.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.04%)</title><rect x="699.4" y="1155.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="702.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (46 samples, 1.76%)</title><rect x="699.8" y="1235.0" width="20.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="702.8" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 0.38%)</title><rect x="700.7" y="1219.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="703.7" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 0.35%)</title><rect x="701.2" y="1203.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="704.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="702.1" y="1187.0" width="3.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="705.1" y="1198.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.04%)</title><rect x="702.1" y="1171.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="705.1" y="1182.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.23%)</title><rect x="702.5" y="1171.0" width="2.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="705.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="703.0" y="1155.0" width="2.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="706.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="703.0" y="1139.0" width="2.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="706.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="703.0" y="1123.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="706.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="703.0" y="1107.0" width="2.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="706.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="703.4" y="1091.0" width="1.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="706.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="703.4" y="1075.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="706.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="704.3" y="1059.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="707.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="704.3" y="1043.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="707.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="704.3" y="1027.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="707.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="704.3" y="1011.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="707.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (34 samples, 1.30%)</title><rect x="705.2" y="1219.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="708.2" y="1230.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="705.2" y="1203.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="708.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (32 samples, 1.23%)</title><rect x="705.7" y="1203.0" width="14.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.7" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (24 samples, 0.92%)</title><rect x="705.7" y="1187.0" width="10.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="708.7" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (20 samples, 0.77%)</title><rect x="705.7" y="1171.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.7" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (20 samples, 0.77%)</title><rect x="705.7" y="1155.0" width="9.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="708.7" y="1166.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (20 samples, 0.77%)</title><rect x="705.7" y="1139.0" width="9.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="708.7" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (20 samples, 0.77%)</title><rect x="705.7" y="1123.0" width="9.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="708.7" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (2 samples, 0.08%)</title><rect x="705.7" y="1107.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.7" y="1118.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1 samples, 0.04%)</title><rect x="706.1" y="1091.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.1" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.04%)</title><rect x="706.1" y="1075.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.1" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.04%)</title><rect x="706.1" y="1059.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="709.1" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.04%)</title><rect x="706.1" y="1043.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.1" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.04%)</title><rect x="706.1" y="1027.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.1" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.&lt;init&gt; (1 samples, 0.04%)</title><rect x="706.1" y="1011.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="709.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="706.1" y="995.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="709.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="706.1" y="979.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="709.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="706.1" y="963.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="709.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (4 samples, 0.15%)</title><rect x="706.6" y="1107.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="709.6" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (4 samples, 0.15%)</title><rect x="706.6" y="1091.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.6" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.04%)</title><rect x="706.6" y="1075.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="709.6" y="1086.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1 samples, 0.04%)</title><rect x="706.6" y="1059.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.6" y="1070.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.04%)</title><rect x="706.6" y="1043.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="709.6" y="1054.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.04%)</title><rect x="706.6" y="1027.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="709.6" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.separatorStart (1 samples, 0.04%)</title><rect x="706.6" y="1011.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="709.6" y="1022.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.indexIn (1 samples, 0.04%)</title><rect x="706.6" y="995.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.6" y="1006.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1 samples, 0.04%)</title><rect x="707.0" y="1075.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="710.0" y="1086.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.04%)</title><rect x="707.0" y="1059.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="710.0" y="1070.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.04%)</title><rect x="707.0" y="1043.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.0" y="1054.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (1 samples, 0.04%)</title><rect x="707.0" y="1027.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.0" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="707.0" y="1011.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="710.0" y="1022.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.&lt;init&gt; (1 samples, 0.04%)</title><rect x="707.0" y="995.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.0" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.08%)</title><rect x="707.5" y="1075.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="710.5" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.08%)</title><rect x="707.5" y="1059.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.5" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.08%)</title><rect x="707.5" y="1043.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.5" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.08%)</title><rect x="707.5" y="1027.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.5" y="1038.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.08%)</title><rect x="707.5" y="1011.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="708.0" y="995.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="711.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="708.0" y="979.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="711.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="708.0" y="963.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="711.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="708.0" y="947.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="711.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="708.0" y="931.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="711.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="708.0" y="915.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="711.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="708.0" y="899.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="711.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (14 samples, 0.54%)</title><rect x="708.4" y="1107.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="711.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.54%)</title><rect x="708.4" y="1091.0" width="6.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.54%)</title><rect x="708.4" y="1075.0" width="6.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="711.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.50%)</title><rect x="708.4" y="1059.0" width="5.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="711.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.50%)</title><rect x="708.4" y="1043.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.50%)</title><rect x="708.4" y="1027.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.50%)</title><rect x="708.4" y="1011.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.50%)</title><rect x="708.4" y="995.0" width="5.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.50%)</title><rect x="708.4" y="979.0" width="5.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="711.4" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.15%)</title><rect x="708.4" y="963.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="711.4" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.04%)</title><rect x="708.4" y="947.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="711.4" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.12%)</title><rect x="708.9" y="947.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="711.9" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.35%)</title><rect x="710.2" y="963.0" width="4.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="713.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="710.2" y="947.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="713.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="710.2" y="931.0" width="4.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="713.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="710.2" y="915.0" width="4.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="713.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="710.2" y="899.0" width="4.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="713.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="711.1" y="883.0" width="3.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="714.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="711.6" y="867.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="714.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="711.6" y="851.0" width="2.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="714.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="712.0" y="835.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="715.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="714.3" y="1059.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="717.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.04%)</title><rect x="714.7" y="1171.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.7" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="714.7" y="1155.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="717.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="714.7" y="1139.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="717.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.04%)</title><rect x="715.2" y="1171.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="715.2" y="1155.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="715.2" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="715.2" y="1123.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="718.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="715.2" y="1107.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.2" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="715.6" y="1171.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="718.6" y="1182.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="715.6" y="1155.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="718.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="716.1" y="1171.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.1" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="716.1" y="1155.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 0.31%)</title><rect x="716.6" y="1187.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="719.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 0.31%)</title><rect x="716.6" y="1171.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="719.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="717.0" y="1155.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="720.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="717.0" y="1139.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="720.0" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.08%)</title><rect x="717.0" y="1123.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="720.0" y="1134.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="717.0" y="1107.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="720.0" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.04%)</title><rect x="717.5" y="1091.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="720.5" y="1102.0"></text>
</g>
<g>
<title>__GI___recv (5 samples, 0.19%)</title><rect x="717.9" y="1155.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="720.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="717.9" y="1139.0" width="2.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="720.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="717.9" y="1123.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="720.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="717.9" y="1107.0" width="2.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="720.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="717.9" y="1091.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="720.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="717.9" y="1075.0" width="2.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="720.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="718.8" y="1059.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="721.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="718.8" y="1043.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="721.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="718.8" y="1027.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="721.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="719.7" y="1011.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="722.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="719.7" y="995.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="722.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="719.7" y="979.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="722.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="719.7" y="963.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="722.7" y="974.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="720.2" y="1203.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="723.2" y="1214.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=31382] (41 samples, 1.57%)</title><rect x="720.6" y="1251.0" width="18.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="723.6" y="1262.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="720.6" y="1235.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="723.6" y="1246.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="720.6" y="1219.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="723.6" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="720.6" y="1203.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="723.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="720.6" y="1187.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="723.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (40 samples, 1.53%)</title><rect x="721.1" y="1235.0" width="18.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="724.1" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.04%)</title><rect x="721.1" y="1219.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.1" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.04%)</title><rect x="721.1" y="1203.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.1" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.19%)</title><rect x="721.5" y="1219.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.5" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.19%)</title><rect x="721.5" y="1203.0" width="2.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="724.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="722.0" y="1187.0" width="1.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="725.0" y="1198.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.15%)</title><rect x="722.0" y="1171.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="725.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="722.4" y="1155.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="725.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="722.4" y="1139.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="725.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="722.4" y="1123.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="725.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="722.4" y="1107.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="725.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="722.4" y="1091.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="725.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="722.9" y="1075.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="725.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="722.9" y="1059.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="725.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="722.9" y="1043.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="725.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="722.9" y="1027.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="725.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (34 samples, 1.30%)</title><rect x="723.8" y="1219.0" width="15.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.8" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34 samples, 1.30%)</title><rect x="723.8" y="1203.0" width="15.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="726.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (24 samples, 0.92%)</title><rect x="724.2" y="1187.0" width="10.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="727.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (20 samples, 0.77%)</title><rect x="724.2" y="1171.0" width="9.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="727.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (20 samples, 0.77%)</title><rect x="724.2" y="1155.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.2" y="1166.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (20 samples, 0.77%)</title><rect x="724.2" y="1139.0" width="9.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.08%)</title><rect x="724.2" y="1123.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="727.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.08%)</title><rect x="724.2" y="1107.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.08%)</title><rect x="724.2" y="1091.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="727.2" y="1102.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="724.7" y="1075.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="727.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (18 samples, 0.69%)</title><rect x="725.2" y="1123.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="728.2" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (1 samples, 0.04%)</title><rect x="725.2" y="1107.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="728.2" y="1118.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (1 samples, 0.04%)</title><rect x="725.2" y="1091.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="728.2" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.04%)</title><rect x="725.2" y="1075.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="728.2" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.04%)</title><rect x="725.2" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="728.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.04%)</title><rect x="725.2" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="728.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (5 samples, 0.19%)</title><rect x="725.6" y="1107.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="728.6" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (5 samples, 0.19%)</title><rect x="725.6" y="1091.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.6" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (5 samples, 0.19%)</title><rect x="725.6" y="1075.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="728.6" y="1086.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (5 samples, 0.19%)</title><rect x="725.6" y="1059.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="728.6" y="1070.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (2 samples, 0.08%)</title><rect x="727.0" y="1043.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="730.0" y="1054.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (2 samples, 0.08%)</title><rect x="727.0" y="1027.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (1 samples, 0.04%)</title><rect x="727.4" y="1011.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="727.4" y="995.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="727.4" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (12 samples, 0.46%)</title><rect x="727.9" y="1107.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.46%)</title><rect x="727.9" y="1091.0" width="5.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.46%)</title><rect x="727.9" y="1075.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="730.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.38%)</title><rect x="727.9" y="1059.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="730.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.38%)</title><rect x="727.9" y="1043.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="730.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.38%)</title><rect x="727.9" y="1027.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="730.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.38%)</title><rect x="727.9" y="1011.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="730.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.38%)</title><rect x="727.9" y="995.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="730.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.38%)</title><rect x="727.9" y="979.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="730.9" y="990.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="728.3" y="963.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="731.3" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.31%)</title><rect x="728.8" y="963.0" width="3.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="731.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="728.8" y="947.0" width="3.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="731.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="728.8" y="931.0" width="3.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="731.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="729.2" y="915.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="732.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="729.2" y="899.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="732.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="729.2" y="883.0" width="3.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="732.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="729.7" y="867.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="732.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="730.1" y="851.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="733.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="730.1" y="835.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="733.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="732.4" y="1059.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="732.4" y="1043.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="732.8" y="1059.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="735.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="732.8" y="1043.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="732.8" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="735.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.04%)</title><rect x="732.8" y="1011.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.04%)</title><rect x="732.8" y="995.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="735.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="732.8" y="979.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="735.8" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.04%)</title><rect x="733.3" y="1171.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="736.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="733.3" y="1155.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="736.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="733.3" y="1139.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="736.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.04%)</title><rect x="733.8" y="1171.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="736.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="733.8" y="1155.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="733.8" y="1139.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="736.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="733.8" y="1123.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="734.2" y="1171.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="737.2" y="1182.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.04%)</title><rect x="734.2" y="1155.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="734.7" y="1171.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="737.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="734.7" y="1155.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="737.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="734.7" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 0.35%)</title><rect x="735.1" y="1187.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="738.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 0.31%)</title><rect x="735.6" y="1171.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="738.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="736.0" y="1155.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="739.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="736.0" y="1139.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="739.0" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="736.0" y="1123.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="739.0" y="1134.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="736.0" y="1107.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="739.0" y="1118.0"></text>
</g>
<g>
<title>__GI___recv (6 samples, 0.23%)</title><rect x="736.5" y="1155.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="739.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="736.5" y="1139.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="739.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="736.5" y="1123.0" width="2.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="739.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="736.5" y="1107.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="739.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="736.5" y="1091.0" width="2.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="739.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="736.5" y="1075.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="739.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="736.9" y="1059.0" width="2.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="739.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="736.9" y="1043.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="739.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="737.4" y="1027.0" width="1.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="740.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="738.3" y="1011.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="741.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="738.7" y="995.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="741.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="738.7" y="979.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="741.7" y="990.0"></text>
</g>
<g>
<title>[ProxyWorker-0 tid=31425] (143 samples, 5.49%)</title><rect x="739.2" y="1251.0" width="64.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="742.2" y="1262.0">[ProxyW..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.15%)</title><rect x="739.2" y="1235.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="742.2" y="1246.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.15%)</title><rect x="739.2" y="1219.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="742.2" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.15%)</title><rect x="739.2" y="1203.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="742.2" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.15%)</title><rect x="739.2" y="1187.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="742.2" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="739.2" y="1171.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="742.2" y="1182.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="739.2" y="1155.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="742.2" y="1166.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.08%)</title><rect x="739.6" y="1171.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="742.6" y="1182.0"></text>
</g>
<g>
<title>__memset_erms (1 samples, 0.04%)</title><rect x="740.5" y="1171.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="743.5" y="1182.0"></text>
</g>
<g>
<title>Runtime1::new_type_array(JavaThread*, Klass*, int) (1 samples, 0.04%)</title><rect x="741.0" y="1235.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="744.0" y="1246.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="741.0" y="1219.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="744.0" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="741.0" y="1203.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="744.0" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="741.0" y="1187.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="744.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.run (137 samples, 5.26%)</title><rect x="741.4" y="1235.0" width="62.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="744.4" y="1246.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (137 samples, 5.26%)</title><rect x="741.4" y="1219.0" width="62.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.4" y="1230.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (137 samples, 5.26%)</title><rect x="741.4" y="1203.0" width="62.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="744.4" y="1214.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (120 samples, 4.60%)</title><rect x="741.4" y="1187.0" width="54.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="744.4" y="1198.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (112 samples, 4.30%)</title><rect x="741.4" y="1171.0" width="50.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="744.4" y="1182.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (112 samples, 4.30%)</title><rect x="741.4" y="1155.0" width="50.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="744.4" y="1166.0">java/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (112 samples, 4.30%)</title><rect x="741.4" y="1139.0" width="50.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.4" y="1150.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (112 samples, 4.30%)</title><rect x="741.4" y="1123.0" width="50.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="744.4" y="1134.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (112 samples, 4.30%)</title><rect x="741.4" y="1107.0" width="50.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="744.4" y="1118.0">ru/ma..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="741.9" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="744.9" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="741.9" y="1075.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="744.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (109 samples, 4.18%)</title><rect x="742.4" y="1091.0" width="49.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="745.4" y="1102.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (109 samples, 4.18%)</title><rect x="742.4" y="1075.0" width="49.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="745.4" y="1086.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (12 samples, 0.46%)</title><rect x="742.8" y="1059.0" width="5.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="745.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 0.46%)</title><rect x="742.8" y="1043.0" width="5.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="745.8" y="1054.0"></text>
</g>
<g>
<title>__GI___recv (12 samples, 0.46%)</title><rect x="742.8" y="1027.0" width="5.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="745.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="742.8" y="1011.0" width="5.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="745.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="742.8" y="995.0" width="5.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="745.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="742.8" y="979.0" width="5.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="745.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="742.8" y="963.0" width="5.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="745.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="742.8" y="947.0" width="5.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="745.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="743.3" y="931.0" width="4.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="746.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="743.7" y="915.0" width="4.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="746.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="744.2" y="899.0" width="4.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="747.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="744.6" y="883.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="747.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="744.6" y="867.0" width="3.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="747.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="745.5" y="851.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="748.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="746.9" y="835.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="749.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="747.3" y="819.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="750.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="747.8" y="803.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="750.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (7 samples, 0.27%)</title><rect x="748.2" y="1059.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="748.2" y="1043.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="748.7" y="1027.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="751.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.15%)</title><rect x="749.1" y="1043.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="752.1" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.15%)</title><rect x="749.1" y="1027.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="752.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.15%)</title><rect x="749.1" y="1011.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.08%)</title><rect x="749.6" y="995.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="752.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.08%)</title><rect x="749.6" y="979.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="752.6" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.08%)</title><rect x="749.6" y="963.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="752.6" y="974.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.04%)</title><rect x="750.5" y="995.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="753.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.04%)</title><rect x="751.0" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="751.0" y="1027.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="754.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.04%)</title><rect x="751.0" y="1011.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="754.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (4 samples, 0.15%)</title><rect x="751.4" y="1059.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.4" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.08%)</title><rect x="751.4" y="1043.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="754.4" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.04%)</title><rect x="751.4" y="1027.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="754.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="751.9" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="754.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="751.9" y="1011.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="754.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="751.9" y="995.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.08%)</title><rect x="752.3" y="1043.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="755.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.08%)</title><rect x="752.3" y="1027.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="752.3" y="1011.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.04%)</title><rect x="752.8" y="1011.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (14 samples, 0.54%)</title><rect x="753.2" y="1059.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="756.2" y="1070.0"></text>
</g>
<g>
<title>__GI___setsockopt (13 samples, 0.50%)</title><rect x="753.7" y="1043.0" width="5.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="756.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="753.7" y="1027.0" width="5.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="756.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="753.7" y="1011.0" width="5.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="756.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="753.7" y="995.0" width="5.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="756.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="753.7" y="979.0" width="5.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="756.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="754.1" y="963.0" width="5.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="757.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="755.9" y="947.0" width="3.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="758.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="755.9" y="931.0" width="3.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="758.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="757.7" y="915.0" width="1.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="760.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="758.2" y="899.0" width="1.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="761.2" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (70 samples, 2.69%)</title><rect x="759.6" y="1059.0" width="31.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.6" y="1070.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (1 samples, 0.04%)</title><rect x="759.6" y="1043.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="762.6" y="1054.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="759.6" y="1027.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="762.6" y="1038.0"></text>
</g>
<g>
<title>__send (69 samples, 2.65%)</title><rect x="760.0" y="1043.0" width="31.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="763.0" y="1054.0">__..</text>
</g>
<g>
<title>[unknown] (68 samples, 2.61%)</title><rect x="760.5" y="1027.0" width="30.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="763.5" y="1038.0">[u..</text>
</g>
<g>
<title>[unknown] (68 samples, 2.61%)</title><rect x="760.5" y="1011.0" width="30.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="763.5" y="1022.0">[u..</text>
</g>
<g>
<title>[unknown] (68 samples, 2.61%)</title><rect x="760.5" y="995.0" width="30.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="763.5" y="1006.0">[u..</text>
</g>
<g>
<title>[unknown] (68 samples, 2.61%)</title><rect x="760.5" y="979.0" width="30.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="763.5" y="990.0">[u..</text>
</g>
<g>
<title>[unknown] (68 samples, 2.61%)</title><rect x="760.5" y="963.0" width="30.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="763.5" y="974.0">[u..</text>
</g>
<g>
<title>[unknown] (68 samples, 2.61%)</title><rect x="760.5" y="947.0" width="30.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="763.5" y="958.0">[u..</text>
</g>
<g>
<title>[unknown] (68 samples, 2.61%)</title><rect x="760.5" y="931.0" width="30.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="763.5" y="942.0">[u..</text>
</g>
<g>
<title>[unknown] (68 samples, 2.61%)</title><rect x="760.5" y="915.0" width="30.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="763.5" y="926.0">[u..</text>
</g>
<g>
<title>[unknown] (67 samples, 2.57%)</title><rect x="760.9" y="899.0" width="30.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="763.9" y="910.0">[u..</text>
</g>
<g>
<title>[unknown] (66 samples, 2.53%)</title><rect x="761.4" y="883.0" width="29.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="764.4" y="894.0">[u..</text>
</g>
<g>
<title>[unknown] (61 samples, 2.34%)</title><rect x="763.6" y="867.0" width="27.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="766.6" y="878.0">[..</text>
</g>
<g>
<title>[unknown] (59 samples, 2.26%)</title><rect x="764.5" y="851.0" width="26.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="767.5" y="862.0">[..</text>
</g>
<g>
<title>[unknown] (57 samples, 2.19%)</title><rect x="765.4" y="835.0" width="25.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="768.4" y="846.0">[..</text>
</g>
<g>
<title>[unknown] (55 samples, 2.11%)</title><rect x="766.3" y="819.0" width="24.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="769.3" y="830.0">[..</text>
</g>
<g>
<title>[unknown] (54 samples, 2.07%)</title><rect x="766.8" y="803.0" width="24.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="769.8" y="814.0">[..</text>
</g>
<g>
<title>[unknown] (54 samples, 2.07%)</title><rect x="766.8" y="787.0" width="24.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="769.8" y="798.0">[..</text>
</g>
<g>
<title>[unknown] (54 samples, 2.07%)</title><rect x="766.8" y="771.0" width="24.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="769.8" y="782.0">[..</text>
</g>
<g>
<title>[unknown] (54 samples, 2.07%)</title><rect x="766.8" y="755.0" width="24.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="769.8" y="766.0">[..</text>
</g>
<g>
<title>[unknown] (51 samples, 1.96%)</title><rect x="768.2" y="739.0" width="23.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="771.2" y="750.0">[..</text>
</g>
<g>
<title>[unknown] (48 samples, 1.84%)</title><rect x="769.5" y="723.0" width="21.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="772.5" y="734.0">[..</text>
</g>
<g>
<title>[unknown] (40 samples, 1.53%)</title><rect x="773.1" y="707.0" width="18.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="776.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.30%)</title><rect x="775.8" y="691.0" width="15.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="778.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="777.7" y="675.0" width="13.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="780.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="779.5" y="659.0" width="11.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="782.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="779.5" y="643.0" width="11.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="782.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="779.9" y="627.0" width="11.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="782.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="779.9" y="611.0" width="11.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="782.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.84%)</title><rect x="781.3" y="595.0" width="9.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="784.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="782.2" y="579.0" width="9.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="785.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="783.1" y="563.0" width="8.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="786.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="783.1" y="547.0" width="8.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="786.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="783.5" y="531.0" width="7.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="786.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="784.0" y="515.0" width="7.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="787.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="784.4" y="499.0" width="6.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="787.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="784.4" y="483.0" width="6.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="787.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="785.4" y="467.0" width="5.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="788.4" y="478.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="786.7" y="451.0" width="4.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="789.7" y="462.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="787.6" y="435.0" width="3.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="790.6" y="446.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="788.1" y="419.0" width="3.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="791.1" y="430.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.04%)</title><rect x="791.2" y="1059.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.2" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (1 samples, 0.04%)</title><rect x="791.2" y="1043.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.2" y="1054.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (1 samples, 0.04%)</title><rect x="791.2" y="1027.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.2" y="1038.0"></text>
</g>
<g>
<title>java/util/LinkedList$Node.&lt;init&gt; (1 samples, 0.04%)</title><rect x="791.2" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="794.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="791.7" y="1091.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.7" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.04%)</title><rect x="791.7" y="1075.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="794.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (8 samples, 0.31%)</title><rect x="792.1" y="1171.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (8 samples, 0.31%)</title><rect x="792.1" y="1155.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="795.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (8 samples, 0.31%)</title><rect x="792.1" y="1139.0" width="3.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="795.1" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (8 samples, 0.31%)</title><rect x="792.1" y="1123.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.31%)</title><rect x="792.1" y="1107.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="795.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.27%)</title><rect x="792.1" y="1091.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="795.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.27%)</title><rect x="792.1" y="1075.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="795.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.27%)</title><rect x="792.1" y="1059.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="795.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.27%)</title><rect x="792.1" y="1043.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="795.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.27%)</title><rect x="792.1" y="1027.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.27%)</title><rect x="792.1" y="1011.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="795.1" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="792.1" y="995.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="795.1" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="792.1" y="979.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="795.1" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.23%)</title><rect x="792.6" y="995.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="795.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="792.6" y="979.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="795.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="792.6" y="963.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="795.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="793.0" y="947.0" width="2.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="796.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="793.0" y="931.0" width="2.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="796.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="793.0" y="915.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="796.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="793.0" y="899.0" width="2.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="796.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="793.0" y="883.0" width="2.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="796.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="793.5" y="867.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="796.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.04%)</title><rect x="795.3" y="1091.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="798.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.04%)</title><rect x="795.3" y="1075.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.04%)</title><rect x="795.3" y="1059.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="798.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.04%)</title><rect x="795.3" y="1043.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="798.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.04%)</title><rect x="795.3" y="1027.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="798.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="795.3" y="1011.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.04%)</title><rect x="795.8" y="1187.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 0.61%)</title><rect x="796.2" y="1187.0" width="7.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="799.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (16 samples, 0.61%)</title><rect x="796.2" y="1171.0" width="7.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="799.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.27%)</title><rect x="796.2" y="1155.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.27%)</title><rect x="796.2" y="1139.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.27%)</title><rect x="796.2" y="1123.0" width="3.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="796.2" y="1107.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="799.2" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.27%)</title><rect x="796.2" y="1091.0" width="3.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="799.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="797.1" y="1075.0" width="2.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="800.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="797.1" y="1059.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="800.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="797.1" y="1043.0" width="2.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="800.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="797.1" y="1027.0" width="2.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="800.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="797.1" y="1011.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="800.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="797.1" y="995.0" width="2.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="800.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="797.6" y="979.0" width="1.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="800.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="797.6" y="963.0" width="1.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="800.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="797.6" y="947.0" width="1.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="800.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="799.4" y="1155.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="802.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="799.4" y="1139.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="802.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="799.4" y="1123.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="802.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="799.4" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="802.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="799.4" y="1091.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.27%)</title><rect x="799.8" y="1155.0" width="3.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="802.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.27%)</title><rect x="799.8" y="1139.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.27%)</title><rect x="799.8" y="1123.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="802.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.27%)</title><rect x="799.8" y="1107.0" width="3.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="802.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.27%)</title><rect x="799.8" y="1091.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="802.8" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="799.8" y="1075.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="802.8" y="1086.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="799.8" y="1059.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="802.8" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.04%)</title><rect x="800.3" y="1075.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="803.3" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.19%)</title><rect x="800.7" y="1075.0" width="2.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="803.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="800.7" y="1059.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="803.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="800.7" y="1043.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="803.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="801.2" y="1027.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="804.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="801.2" y="1011.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="804.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="801.2" y="995.0" width="1.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="804.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="801.2" y="979.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="804.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="801.2" y="963.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="804.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="801.2" y="947.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="804.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.04%)</title><rect x="803.0" y="1155.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="806.0" y="1166.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.04%)</title><rect x="803.5" y="1235.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="806.5" y="1246.0"></text>
</g>
<g>
<title>[ProxyWorker-1 tid=31426] (146 samples, 5.60%)</title><rect x="803.9" y="1251.0" width="66.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="806.9" y="1262.0">[ProxyW..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.12%)</title><rect x="803.9" y="1235.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="806.9" y="1246.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="803.9" y="1219.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="806.9" y="1230.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.08%)</title><rect x="804.4" y="1219.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="807.4" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="804.4" y="1203.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="807.4" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="804.4" y="1187.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="807.4" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="804.8" y="1203.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="807.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="804.8" y="1187.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="807.8" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="804.8" y="1171.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="807.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.run (143 samples, 5.49%)</title><rect x="805.3" y="1235.0" width="64.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="808.3" y="1246.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (143 samples, 5.49%)</title><rect x="805.3" y="1219.0" width="64.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="808.3" y="1230.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (143 samples, 5.49%)</title><rect x="805.3" y="1203.0" width="64.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="808.3" y="1214.0">java/ut..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.04%)</title><rect x="805.7" y="1187.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="808.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.04%)</title><rect x="805.7" y="1171.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="808.7" y="1182.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.04%)</title><rect x="805.7" y="1155.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="808.7" y="1166.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="805.7" y="1139.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="808.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (115 samples, 4.41%)</title><rect x="806.2" y="1187.0" width="52.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="809.2" y="1198.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (101 samples, 3.87%)</title><rect x="806.2" y="1171.0" width="45.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.2" y="1182.0">java..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (101 samples, 3.87%)</title><rect x="806.2" y="1155.0" width="45.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.2" y="1166.0">java..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (1 samples, 0.04%)</title><rect x="806.2" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="809.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (100 samples, 3.84%)</title><rect x="806.6" y="1139.0" width="45.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="809.6" y="1150.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (100 samples, 3.84%)</title><rect x="806.6" y="1123.0" width="45.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="809.6" y="1134.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (100 samples, 3.84%)</title><rect x="806.6" y="1107.0" width="45.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="809.6" y="1118.0">ru/m..</text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.15%)</title><rect x="806.6" y="1091.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.6" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.12%)</title><rect x="806.6" y="1075.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1 samples, 0.04%)</title><rect x="807.5" y="1059.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="810.5" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="808.0" y="1075.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="811.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="808.0" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="808.0" y="1043.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="811.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (95 samples, 3.64%)</title><rect x="808.4" y="1091.0" width="43.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="811.4" y="1102.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (95 samples, 3.64%)</title><rect x="808.4" y="1075.0" width="43.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="811.4" y="1086.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="808.9" y="1059.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="811.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="808.9" y="1043.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="808.9" y="1027.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="811.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (19 samples, 0.73%)</title><rect x="809.3" y="1059.0" width="8.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (18 samples, 0.69%)</title><rect x="809.8" y="1043.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="810.7" y="1027.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="813.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="810.7" y="1011.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="813.7" y="1022.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.08%)</title><rect x="810.7" y="995.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="813.7" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="810.7" y="979.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="813.7" y="990.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="811.2" y="963.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="814.2" y="974.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="811.2" y="947.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="814.2" y="958.0"></text>
</g>
<g>
<title>__GI___recv (14 samples, 0.54%)</title><rect x="811.6" y="1027.0" width="6.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="814.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="811.6" y="1011.0" width="6.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="814.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="811.6" y="995.0" width="6.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="814.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="811.6" y="979.0" width="6.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="814.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="812.1" y="963.0" width="5.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="815.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="812.1" y="947.0" width="5.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="815.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="812.1" y="931.0" width="5.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="815.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="812.5" y="915.0" width="5.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="815.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="813.4" y="899.0" width="4.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="816.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="813.9" y="883.0" width="4.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="816.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="814.3" y="867.0" width="3.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="817.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="815.2" y="851.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="818.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="815.2" y="835.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="818.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="816.1" y="819.0" width="1.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="819.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="803.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="820.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="787.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="820.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="771.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="820.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="755.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="820.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="739.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="820.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="723.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="820.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="707.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="820.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="691.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="820.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="675.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="820.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="659.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="820.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="643.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="820.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="627.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="820.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="611.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="820.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="595.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="820.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="579.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="820.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="563.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="820.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="547.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="820.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="531.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="820.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="515.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="820.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="817.5" y="499.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="820.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (9 samples, 0.35%)</title><rect x="817.9" y="1059.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="820.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="817.9" y="1043.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="817.9" y="1027.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.04%)</title><rect x="817.9" y="1011.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="820.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.04%)</title><rect x="817.9" y="995.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.04%)</title><rect x="817.9" y="979.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.9" y="990.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.04%)</title><rect x="818.4" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="821.4" y="1054.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="818.8" y="1043.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="821.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (3 samples, 0.12%)</title><rect x="819.3" y="1043.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="820.2" y="1027.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="820.2" y="1011.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.08%)</title><rect x="820.7" y="1043.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="820.7" y="1027.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="823.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.08%)</title><rect x="820.7" y="1011.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="823.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.04%)</title><rect x="821.6" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="824.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="821.6" y="1027.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.04%)</title><rect x="821.6" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="824.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2 samples, 0.08%)</title><rect x="822.0" y="1059.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="825.0" y="1070.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="822.0" y="1043.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="825.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="822.5" y="1043.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="825.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (7 samples, 0.27%)</title><rect x="822.9" y="1059.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="825.9" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.04%)</title><rect x="823.4" y="1043.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="826.4" y="1054.0"></text>
</g>
<g>
<title>__GI___setsockopt (4 samples, 0.15%)</title><rect x="823.8" y="1043.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="826.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="823.8" y="1027.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="826.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="823.8" y="1011.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="826.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="823.8" y="995.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="826.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="823.8" y="979.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="826.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="823.8" y="963.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="826.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="824.3" y="947.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="827.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="825.2" y="931.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="828.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="825.2" y="915.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="828.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="825.2" y="899.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="828.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="825.2" y="883.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="828.2" y="894.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="825.6" y="1043.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="828.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (56 samples, 2.15%)</title><rect x="826.1" y="1059.0" width="25.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="829.1" y="1070.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (2 samples, 0.08%)</title><rect x="826.1" y="1043.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="829.1" y="1054.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="826.5" y="1027.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="829.5" y="1038.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="826.5" y="1011.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="829.5" y="1022.0"></text>
</g>
<g>
<title>__send (54 samples, 2.07%)</title><rect x="827.0" y="1043.0" width="24.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="830.0" y="1054.0">_..</text>
</g>
<g>
<title>[unknown] (53 samples, 2.03%)</title><rect x="827.4" y="1027.0" width="24.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="830.4" y="1038.0">[..</text>
</g>
<g>
<title>[unknown] (53 samples, 2.03%)</title><rect x="827.4" y="1011.0" width="24.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="830.4" y="1022.0">[..</text>
</g>
<g>
<title>[unknown] (53 samples, 2.03%)</title><rect x="827.4" y="995.0" width="24.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="830.4" y="1006.0">[..</text>
</g>
<g>
<title>[unknown] (53 samples, 2.03%)</title><rect x="827.4" y="979.0" width="24.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="830.4" y="990.0">[..</text>
</g>
<g>
<title>[unknown] (53 samples, 2.03%)</title><rect x="827.4" y="963.0" width="24.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="830.4" y="974.0">[..</text>
</g>
<g>
<title>[unknown] (53 samples, 2.03%)</title><rect x="827.4" y="947.0" width="24.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="830.4" y="958.0">[..</text>
</g>
<g>
<title>[unknown] (52 samples, 1.99%)</title><rect x="827.9" y="931.0" width="23.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="830.9" y="942.0">[..</text>
</g>
<g>
<title>[unknown] (52 samples, 1.99%)</title><rect x="827.9" y="915.0" width="23.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="830.9" y="926.0">[..</text>
</g>
<g>
<title>[unknown] (48 samples, 1.84%)</title><rect x="829.7" y="899.0" width="21.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="832.7" y="910.0">[..</text>
</g>
<g>
<title>[unknown] (45 samples, 1.73%)</title><rect x="831.1" y="883.0" width="20.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="834.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 1.69%)</title><rect x="831.5" y="867.0" width="19.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="834.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.61%)</title><rect x="832.4" y="851.0" width="19.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="835.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 1.57%)</title><rect x="832.9" y="835.0" width="18.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="835.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.53%)</title><rect x="833.3" y="819.0" width="18.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="836.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.53%)</title><rect x="833.3" y="803.0" width="18.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="836.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.50%)</title><rect x="833.8" y="787.0" width="17.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="836.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 1.46%)</title><rect x="834.2" y="771.0" width="17.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="837.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.42%)</title><rect x="834.7" y="755.0" width="16.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="837.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.42%)</title><rect x="834.7" y="739.0" width="16.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="837.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.34%)</title><rect x="835.6" y="723.0" width="15.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="838.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="839.2" y="707.0" width="12.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="842.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="839.7" y="691.0" width="11.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="842.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="840.1" y="675.0" width="11.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="843.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.92%)</title><rect x="840.6" y="659.0" width="10.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="843.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.88%)</title><rect x="841.0" y="643.0" width="10.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="844.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.88%)</title><rect x="841.0" y="627.0" width="10.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="844.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.84%)</title><rect x="841.5" y="611.0" width="9.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="844.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="842.4" y="595.0" width="9.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="845.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="842.4" y="579.0" width="9.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="845.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="842.8" y="563.0" width="8.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="845.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="843.3" y="547.0" width="8.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="846.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="843.3" y="531.0" width="8.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="846.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="844.6" y="515.0" width="6.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="847.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="845.1" y="499.0" width="6.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="848.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="846.0" y="483.0" width="5.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="849.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="846.5" y="467.0" width="4.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="849.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="846.9" y="451.0" width="4.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="849.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="847.4" y="435.0" width="4.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="850.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="847.4" y="419.0" width="4.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="850.4" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="851.0" y="403.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="854.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="851.0" y="387.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="854.0" y="398.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="851.4" y="1091.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="854.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 0.04%)</title><rect x="851.4" y="1075.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (14 samples, 0.54%)</title><rect x="851.9" y="1171.0" width="6.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (14 samples, 0.54%)</title><rect x="851.9" y="1155.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="854.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (14 samples, 0.54%)</title><rect x="851.9" y="1139.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="854.9" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (14 samples, 0.54%)</title><rect x="851.9" y="1123.0" width="6.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="854.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.54%)</title><rect x="851.9" y="1107.0" width="6.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.42%)</title><rect x="851.9" y="1091.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="854.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.42%)</title><rect x="851.9" y="1075.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.42%)</title><rect x="851.9" y="1059.0" width="5.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.42%)</title><rect x="851.9" y="1043.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.42%)</title><rect x="851.9" y="1027.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.42%)</title><rect x="851.9" y="1011.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="854.9" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.15%)</title><rect x="851.9" y="995.0" width="1.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="854.9" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="851.9" y="979.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="854.9" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.12%)</title><rect x="852.3" y="979.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="855.3" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.27%)</title><rect x="853.7" y="995.0" width="3.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="856.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="854.2" y="979.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="857.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="854.2" y="963.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="857.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="854.2" y="947.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="857.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="854.2" y="931.0" width="2.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="857.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="854.2" y="915.0" width="2.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="857.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="854.2" y="899.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="857.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="854.2" y="883.0" width="2.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="857.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="854.2" y="867.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="857.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.04%)</title><rect x="856.9" y="1091.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="859.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.04%)</title><rect x="856.9" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.08%)</title><rect x="857.3" y="1091.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="860.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.08%)</title><rect x="857.3" y="1075.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="860.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.08%)</title><rect x="857.3" y="1059.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="860.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.04%)</title><rect x="857.8" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="860.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.04%)</title><rect x="857.8" y="1027.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.04%)</title><rect x="857.8" y="1011.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (2 samples, 0.08%)</title><rect x="858.2" y="1187.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="861.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.08%)</title><rect x="858.2" y="1171.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="861.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.04%)</title><rect x="858.7" y="1155.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="861.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="858.7" y="1139.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="858.7" y="1123.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="861.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="858.7" y="1107.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="861.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (24 samples, 0.92%)</title><rect x="859.1" y="1187.0" width="10.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="862.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (24 samples, 0.92%)</title><rect x="859.1" y="1171.0" width="10.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="859.1" y="1155.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="862.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="859.1" y="1139.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="862.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="859.1" y="1123.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="862.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="859.1" y="1107.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="862.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="859.1" y="1091.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="862.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="859.1" y="1075.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="862.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.38%)</title><rect x="859.6" y="1155.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="862.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.38%)</title><rect x="859.6" y="1139.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="862.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.38%)</title><rect x="859.6" y="1123.0" width="4.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="862.6" y="1134.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.04%)</title><rect x="859.6" y="1107.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="862.6" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.15%)</title><rect x="860.0" y="1107.0" width="1.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="863.0" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="860.9" y="1091.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="863.9" y="1102.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="861.4" y="1091.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="864.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="861.8" y="1107.0" width="2.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="864.8" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.19%)</title><rect x="861.8" y="1091.0" width="2.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="864.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="862.8" y="1075.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="865.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="862.8" y="1059.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="865.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="862.8" y="1043.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="865.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="863.2" y="1027.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="866.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="863.2" y="1011.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="866.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="863.7" y="995.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="866.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.08%)</title><rect x="864.1" y="1155.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="867.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.08%)</title><rect x="864.1" y="1139.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="867.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="864.1" y="1123.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="864.1" y="1107.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="867.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="864.1" y="1091.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="867.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.04%)</title><rect x="864.1" y="1075.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.04%)</title><rect x="864.1" y="1059.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="867.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="864.6" y="1123.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="867.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="864.6" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.04%)</title><rect x="864.6" y="1091.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.42%)</title><rect x="865.0" y="1155.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="868.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.42%)</title><rect x="865.0" y="1139.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="868.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.42%)</title><rect x="865.0" y="1123.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="868.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.42%)</title><rect x="865.0" y="1107.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.42%)</title><rect x="865.0" y="1091.0" width="5.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="868.0" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.08%)</title><rect x="865.0" y="1075.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="868.0" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.04%)</title><rect x="865.0" y="1059.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="868.0" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="865.5" y="1059.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="868.5" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.35%)</title><rect x="865.9" y="1075.0" width="4.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="868.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="865.9" y="1059.0" width="4.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="868.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="865.9" y="1043.0" width="4.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="868.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="865.9" y="1027.0" width="4.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="868.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="865.9" y="1011.0" width="4.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="868.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="865.9" y="995.0" width="4.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="868.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="866.8" y="979.0" width="3.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="869.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="867.3" y="963.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="870.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="867.3" y="947.0" width="2.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="870.3" y="958.0"></text>
</g>
<g>
<title>[ProxyWorker-2 tid=31429] (145 samples, 5.56%)</title><rect x="870.0" y="1251.0" width="65.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="873.0" y="1262.0">[ProxyW..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="870.0" y="1235.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="873.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.run (144 samples, 5.52%)</title><rect x="870.4" y="1235.0" width="65.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.4" y="1246.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (144 samples, 5.52%)</title><rect x="870.4" y="1219.0" width="65.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="873.4" y="1230.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (144 samples, 5.52%)</title><rect x="870.4" y="1203.0" width="65.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="873.4" y="1214.0">java/ut..</text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="870.9" y="1187.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="873.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (114 samples, 4.37%)</title><rect x="871.4" y="1187.0" width="51.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.4" y="1198.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (97 samples, 3.72%)</title><rect x="871.4" y="1171.0" width="43.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="874.4" y="1182.0">java..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (97 samples, 3.72%)</title><rect x="871.4" y="1155.0" width="43.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="874.4" y="1166.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="871.4" y="1139.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="874.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="871.4" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="874.4" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (96 samples, 3.68%)</title><rect x="871.8" y="1139.0" width="43.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="874.8" y="1150.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (96 samples, 3.68%)</title><rect x="871.8" y="1123.0" width="43.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.8" y="1134.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (95 samples, 3.64%)</title><rect x="871.8" y="1107.0" width="43.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="874.8" y="1118.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (95 samples, 3.64%)</title><rect x="871.8" y="1091.0" width="43.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="874.8" y="1102.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (95 samples, 3.64%)</title><rect x="871.8" y="1075.0" width="43.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="874.8" y="1086.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="872.3" y="1059.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="872.3" y="1043.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="875.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="872.3" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (8 samples, 0.31%)</title><rect x="872.7" y="1059.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="875.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 0.31%)</title><rect x="872.7" y="1043.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="873.2" y="1027.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="876.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="873.2" y="1011.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="876.2" y="1022.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="873.2" y="995.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="876.2" y="1006.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="873.6" y="995.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="876.6" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="874.1" y="995.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="877.1" y="1006.0"></text>
</g>
<g>
<title>__GI___recv (4 samples, 0.15%)</title><rect x="874.5" y="1027.0" width="1.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="877.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="874.5" y="1011.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="877.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="874.5" y="995.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="877.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="874.5" y="979.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="877.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="874.5" y="963.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="877.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="874.5" y="947.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="877.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="875.0" y="931.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="878.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="875.0" y="915.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="878.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="875.0" y="899.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="878.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="875.4" y="883.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="878.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="875.4" y="867.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="878.4" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (10 samples, 0.38%)</title><rect x="876.3" y="1059.0" width="4.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="879.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="876.3" y="1043.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="879.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="876.3" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="879.3" y="1038.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="876.3" y="1011.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="879.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="876.3" y="995.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="879.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (5 samples, 0.19%)</title><rect x="876.8" y="1043.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="879.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.15%)</title><rect x="877.2" y="1027.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="880.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="878.1" y="1011.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="881.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.08%)</title><rect x="879.0" y="1043.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="882.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.08%)</title><rect x="880.0" y="1043.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="883.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="880.0" y="1027.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="883.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="880.0" y="1011.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="883.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="880.4" y="1027.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="883.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="880.4" y="1011.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="883.4" y="1022.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="880.4" y="995.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="883.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (2 samples, 0.08%)</title><rect x="880.9" y="1059.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="883.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.08%)</title><rect x="881.8" y="1059.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="884.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.08%)</title><rect x="881.8" y="1043.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="884.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="881.8" y="1027.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="884.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="881.8" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="884.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="881.8" y="995.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="884.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="881.8" y="979.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="884.8" y="990.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="882.2" y="1011.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="885.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (8 samples, 0.31%)</title><rect x="882.7" y="1059.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.7" y="1070.0"></text>
</g>
<g>
<title>__GI___setsockopt (7 samples, 0.27%)</title><rect x="883.1" y="1043.0" width="3.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="886.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="883.1" y="1027.0" width="3.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="886.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="883.1" y="1011.0" width="3.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="886.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="883.1" y="995.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="886.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="883.1" y="979.0" width="3.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="886.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="883.6" y="963.0" width="2.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="886.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="884.0" y="947.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="887.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="884.5" y="931.0" width="1.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="887.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="884.9" y="915.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="887.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="884.9" y="899.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="887.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="885.4" y="883.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="888.4" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (60 samples, 2.30%)</title><rect x="886.3" y="1059.0" width="27.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.3" y="1070.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (3 samples, 0.12%)</title><rect x="886.7" y="1043.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="889.7" y="1054.0"></text>
</g>
<g>
<title>__send (56 samples, 2.15%)</title><rect x="888.1" y="1043.0" width="25.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="891.1" y="1054.0">_..</text>
</g>
<g>
<title>[unknown] (54 samples, 2.07%)</title><rect x="889.0" y="1027.0" width="24.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="892.0" y="1038.0">[..</text>
</g>
<g>
<title>[unknown] (54 samples, 2.07%)</title><rect x="889.0" y="1011.0" width="24.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="892.0" y="1022.0">[..</text>
</g>
<g>
<title>[unknown] (54 samples, 2.07%)</title><rect x="889.0" y="995.0" width="24.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="892.0" y="1006.0">[..</text>
</g>
<g>
<title>[unknown] (54 samples, 2.07%)</title><rect x="889.0" y="979.0" width="24.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="892.0" y="990.0">[..</text>
</g>
<g>
<title>[unknown] (54 samples, 2.07%)</title><rect x="889.0" y="963.0" width="24.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="892.0" y="974.0">[..</text>
</g>
<g>
<title>[unknown] (54 samples, 2.07%)</title><rect x="889.0" y="947.0" width="24.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="892.0" y="958.0">[..</text>
</g>
<g>
<title>[unknown] (53 samples, 2.03%)</title><rect x="889.5" y="931.0" width="23.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="892.5" y="942.0">[..</text>
</g>
<g>
<title>[unknown] (53 samples, 2.03%)</title><rect x="889.5" y="915.0" width="23.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="892.5" y="926.0">[..</text>
</g>
<g>
<title>[unknown] (50 samples, 1.92%)</title><rect x="890.8" y="899.0" width="22.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="893.8" y="910.0">[..</text>
</g>
<g>
<title>[unknown] (48 samples, 1.84%)</title><rect x="891.7" y="883.0" width="21.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="894.7" y="894.0">[..</text>
</g>
<g>
<title>[unknown] (45 samples, 1.73%)</title><rect x="893.1" y="867.0" width="20.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="896.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.61%)</title><rect x="894.4" y="851.0" width="19.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="897.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.38%)</title><rect x="897.1" y="835.0" width="16.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="900.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.34%)</title><rect x="897.6" y="819.0" width="15.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="900.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.34%)</title><rect x="897.6" y="803.0" width="15.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="900.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.30%)</title><rect x="898.1" y="787.0" width="15.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="901.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.30%)</title><rect x="898.1" y="771.0" width="15.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="901.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="898.5" y="755.0" width="14.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="901.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.11%)</title><rect x="900.3" y="739.0" width="13.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="903.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="901.2" y="723.0" width="12.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="904.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.92%)</title><rect x="902.6" y="707.0" width="10.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="905.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.92%)</title><rect x="902.6" y="691.0" width="10.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="905.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.84%)</title><rect x="903.5" y="675.0" width="9.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="906.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.84%)</title><rect x="903.5" y="659.0" width="9.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="906.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="904.4" y="643.0" width="9.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="907.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="904.4" y="627.0" width="9.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="907.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="904.4" y="611.0" width="9.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="907.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.73%)</title><rect x="904.8" y="595.0" width="8.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="907.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="905.3" y="579.0" width="8.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="908.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="905.3" y="563.0" width="8.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="908.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="905.7" y="547.0" width="7.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="908.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.65%)</title><rect x="905.7" y="531.0" width="7.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="908.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="906.2" y="515.0" width="7.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="909.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="906.7" y="499.0" width="6.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="909.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="906.7" y="483.0" width="6.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="909.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="908.0" y="467.0" width="5.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="911.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="908.5" y="451.0" width="4.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="911.5" y="462.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="909.8" y="435.0" width="3.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="912.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="910.7" y="419.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="913.7" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="913.0" y="403.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="916.0" y="414.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (2 samples, 0.08%)</title><rect x="913.4" y="1059.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="916.4" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.04%)</title><rect x="913.9" y="1043.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.9" y="1054.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (1 samples, 0.04%)</title><rect x="913.9" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="916.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.04%)</title><rect x="914.3" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="917.3" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.getRequest (1 samples, 0.04%)</title><rect x="914.8" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="917.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="914.8" y="1091.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="917.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="914.8" y="1075.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="917.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="914.8" y="1059.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="917.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="914.8" y="1043.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="917.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="914.8" y="1027.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="917.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="914.8" y="1011.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="917.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="914.8" y="995.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="917.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (14 samples, 0.54%)</title><rect x="915.3" y="1171.0" width="6.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (14 samples, 0.54%)</title><rect x="915.3" y="1155.0" width="6.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="918.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (14 samples, 0.54%)</title><rect x="915.3" y="1139.0" width="6.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="918.3" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (14 samples, 0.54%)</title><rect x="915.3" y="1123.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.54%)</title><rect x="915.3" y="1107.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="918.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.42%)</title><rect x="915.3" y="1091.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.42%)</title><rect x="915.3" y="1075.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.42%)</title><rect x="915.3" y="1059.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="918.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.42%)</title><rect x="915.3" y="1043.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="918.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.42%)</title><rect x="915.3" y="1027.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="918.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.42%)</title><rect x="915.3" y="1011.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.3" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.42%)</title><rect x="915.3" y="995.0" width="4.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="918.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="915.7" y="979.0" width="4.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="918.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="915.7" y="963.0" width="4.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="918.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="915.7" y="947.0" width="4.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="918.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="915.7" y="931.0" width="4.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="918.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="915.7" y="915.0" width="4.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="918.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="917.1" y="899.0" width="3.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="920.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="917.1" y="883.0" width="3.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="920.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="917.5" y="867.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="920.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.12%)</title><rect x="920.2" y="1091.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="923.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.12%)</title><rect x="920.2" y="1075.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="923.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.12%)</title><rect x="920.2" y="1059.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="923.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (3 samples, 0.12%)</title><rect x="920.2" y="1043.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="923.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (3 samples, 0.12%)</title><rect x="920.2" y="1027.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="923.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (3 samples, 0.12%)</title><rect x="920.2" y="1011.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="923.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (3 samples, 0.12%)</title><rect x="921.6" y="1171.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="924.6" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (3 samples, 0.12%)</title><rect x="921.6" y="1155.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="924.6" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (3 samples, 0.12%)</title><rect x="921.6" y="1139.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="924.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3 samples, 0.12%)</title><rect x="921.6" y="1123.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="924.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (3 samples, 0.12%)</title><rect x="921.6" y="1107.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="924.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (28 samples, 1.07%)</title><rect x="922.9" y="1187.0" width="12.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="925.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (27 samples, 1.04%)</title><rect x="923.4" y="1171.0" width="12.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="926.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (18 samples, 0.69%)</title><rect x="923.4" y="1155.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="926.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.04%)</title><rect x="923.4" y="1139.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="926.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.04%)</title><rect x="923.9" y="1139.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="926.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.04%)</title><rect x="923.9" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="926.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.04%)</title><rect x="923.9" y="1107.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="926.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 0.61%)</title><rect x="924.3" y="1139.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="927.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.61%)</title><rect x="924.3" y="1123.0" width="7.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="927.3" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.27%)</title><rect x="924.8" y="1107.0" width="3.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="927.8" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.08%)</title><rect x="925.2" y="1091.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="928.2" y="1102.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.08%)</title><rect x="925.2" y="1075.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="928.2" y="1086.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="926.1" y="1091.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="929.1" y="1102.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.12%)</title><rect x="926.6" y="1091.0" width="1.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="929.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="926.6" y="1075.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="929.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="926.6" y="1059.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="929.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="926.6" y="1043.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="929.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="926.6" y="1027.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="929.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="926.6" y="1011.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="929.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="927.9" y="1107.0" width="3.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="930.9" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.31%)</title><rect x="927.9" y="1091.0" width="3.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="930.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="927.9" y="1075.0" width="3.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="930.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="927.9" y="1059.0" width="3.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="930.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="927.9" y="1043.0" width="3.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="930.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="927.9" y="1027.0" width="3.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="930.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="927.9" y="1011.0" width="3.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="930.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="927.9" y="995.0" width="3.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="930.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="927.9" y="979.0" width="3.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="930.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="928.4" y="963.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="931.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="928.4" y="947.0" width="3.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="931.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="931.5" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="934.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="931.5" y="1139.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="934.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="931.5" y="1123.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="934.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.31%)</title><rect x="932.0" y="1155.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="935.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.31%)</title><rect x="932.0" y="1139.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="935.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.31%)</title><rect x="932.0" y="1123.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="935.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.31%)</title><rect x="932.0" y="1107.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="935.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.31%)</title><rect x="932.0" y="1091.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="935.0" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.12%)</title><rect x="932.0" y="1075.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="935.0" y="1086.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.04%)</title><rect x="932.0" y="1059.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="935.0" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="932.5" y="1059.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="935.5" y="1070.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="932.9" y="1059.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="935.9" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.19%)</title><rect x="933.4" y="1075.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="936.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="933.4" y="1059.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="936.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="933.4" y="1043.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="936.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="933.8" y="1027.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="936.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="933.8" y="1011.0" width="1.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="936.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="933.8" y="995.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="936.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="934.3" y="979.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="937.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="934.7" y="963.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="937.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="934.7" y="947.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="937.7" y="958.0"></text>
</g>
<g>
<title>[ProxyWorker-3 tid=31428] (147 samples, 5.64%)</title><rect x="935.6" y="1251.0" width="66.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="938.6" y="1262.0">[ProxyW..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.08%)</title><rect x="935.6" y="1235.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="938.6" y="1246.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.08%)</title><rect x="935.6" y="1219.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="938.6" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.08%)</title><rect x="935.6" y="1203.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="938.6" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.08%)</title><rect x="935.6" y="1187.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="938.6" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.08%)</title><rect x="935.6" y="1171.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="938.6" y="1182.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.04%)</title><rect x="936.1" y="1155.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="939.1" y="1166.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.04%)</title><rect x="936.1" y="1139.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="939.1" y="1150.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="936.1" y="1123.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="939.1" y="1134.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="936.5" y="1235.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="939.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.run (144 samples, 5.52%)</title><rect x="937.0" y="1235.0" width="65.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.0" y="1246.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (144 samples, 5.52%)</title><rect x="937.0" y="1219.0" width="65.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="940.0" y="1230.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (144 samples, 5.52%)</title><rect x="937.0" y="1203.0" width="65.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="940.0" y="1214.0">java/ut..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.12%)</title><rect x="937.9" y="1187.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="940.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.12%)</title><rect x="937.9" y="1171.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.9" y="1182.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.08%)</title><rect x="937.9" y="1155.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="940.9" y="1166.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="937.9" y="1139.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="940.9" y="1150.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="938.3" y="1139.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="941.3" y="1150.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="938.8" y="1155.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="941.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (119 samples, 4.56%)</title><rect x="939.2" y="1187.0" width="53.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="942.2" y="1198.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (104 samples, 3.99%)</title><rect x="941.1" y="1171.0" width="47.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.1" y="1182.0">java..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (104 samples, 3.99%)</title><rect x="941.1" y="1155.0" width="47.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.1" y="1166.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.04%)</title><rect x="941.5" y="1139.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="944.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.04%)</title><rect x="941.5" y="1123.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.5" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (102 samples, 3.91%)</title><rect x="942.0" y="1139.0" width="46.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.0" y="1150.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (102 samples, 3.91%)</title><rect x="942.0" y="1123.0" width="46.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="945.0" y="1134.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (102 samples, 3.91%)</title><rect x="942.0" y="1107.0" width="46.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="945.0" y="1118.0">ru/m..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.08%)</title><rect x="942.0" y="1091.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="945.0" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="942.0" y="1075.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="945.0" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="942.4" y="1075.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="945.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="942.4" y="1059.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="945.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="942.4" y="1043.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="945.4" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (100 samples, 3.84%)</title><rect x="942.9" y="1091.0" width="45.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="945.9" y="1102.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (100 samples, 3.84%)</title><rect x="942.9" y="1075.0" width="45.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="945.9" y="1086.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.08%)</title><rect x="942.9" y="1059.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="945.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.08%)</title><rect x="942.9" y="1043.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="945.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="942.9" y="1027.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (15 samples, 0.58%)</title><rect x="943.8" y="1059.0" width="6.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="946.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (15 samples, 0.58%)</title><rect x="943.8" y="1043.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="946.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="943.8" y="1027.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="946.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="943.8" y="1011.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="946.8" y="1022.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="943.8" y="995.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="946.8" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="943.8" y="979.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="946.8" y="990.0"></text>
</g>
<g>
<title>__GI___recv (12 samples, 0.46%)</title><rect x="944.2" y="1027.0" width="5.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="947.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="944.2" y="1011.0" width="5.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="947.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="944.2" y="995.0" width="5.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="947.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="944.2" y="979.0" width="5.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="947.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="944.7" y="963.0" width="5.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="947.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="944.7" y="947.0" width="5.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="947.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="944.7" y="931.0" width="5.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="947.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="944.7" y="915.0" width="5.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="947.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="945.1" y="899.0" width="4.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="948.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="945.1" y="883.0" width="4.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="948.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="945.6" y="867.0" width="4.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="948.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="946.5" y="851.0" width="3.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="949.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="946.9" y="835.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="949.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="947.8" y="819.0" width="1.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="950.8" y="830.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.08%)</title><rect x="949.7" y="1027.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="952.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (11 samples, 0.42%)</title><rect x="950.6" y="1059.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="950.6" y="1043.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="953.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="950.6" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.6" y="1038.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="950.6" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="953.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (5 samples, 0.19%)</title><rect x="951.0" y="1043.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="954.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.15%)</title><rect x="951.5" y="1027.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="954.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.15%)</title><rect x="951.5" y="1011.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="954.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.08%)</title><rect x="952.4" y="995.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="955.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="952.4" y="979.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="955.4" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.04%)</title><rect x="952.4" y="963.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="955.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.04%)</title><rect x="952.8" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (1 samples, 0.04%)</title><rect x="952.8" y="963.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="955.8" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="953.3" y="1043.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="956.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.08%)</title><rect x="953.7" y="1043.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="956.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.08%)</title><rect x="953.7" y="1027.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="956.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="953.7" y="1011.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="956.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (2 samples, 0.08%)</title><rect x="954.6" y="1043.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.08%)</title><rect x="954.6" y="1027.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="957.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="954.6" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="957.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.04%)</title><rect x="955.1" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="958.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (5 samples, 0.19%)</title><rect x="955.5" y="1059.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="958.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.08%)</title><rect x="955.5" y="1043.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="958.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.08%)</title><rect x="955.5" y="1027.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="958.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="956.4" y="1043.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="959.4" y="1054.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="956.4" y="1027.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="959.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.08%)</title><rect x="956.9" y="1043.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="959.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="957.3" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="960.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="957.3" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="960.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (11 samples, 0.42%)</title><rect x="957.8" y="1059.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="960.8" y="1070.0"></text>
</g>
<g>
<title>__GI___setsockopt (11 samples, 0.42%)</title><rect x="957.8" y="1043.0" width="5.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="960.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="958.3" y="1027.0" width="4.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="961.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="958.3" y="1011.0" width="4.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="961.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="958.3" y="995.0" width="4.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="961.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="958.3" y="979.0" width="4.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="961.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="958.7" y="963.0" width="4.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="961.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="960.1" y="947.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="963.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="960.5" y="931.0" width="2.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="963.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="961.9" y="915.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="964.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (56 samples, 2.15%)</title><rect x="962.8" y="1059.0" width="25.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.8" y="1070.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (2 samples, 0.08%)</title><rect x="962.8" y="1043.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="965.8" y="1054.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.08%)</title><rect x="962.8" y="1027.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="965.8" y="1038.0"></text>
</g>
<g>
<title>__send (53 samples, 2.03%)</title><rect x="963.7" y="1043.0" width="24.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="966.7" y="1054.0">_..</text>
</g>
<g>
<title>[unknown] (53 samples, 2.03%)</title><rect x="963.7" y="1027.0" width="24.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="966.7" y="1038.0">[..</text>
</g>
<g>
<title>[unknown] (53 samples, 2.03%)</title><rect x="963.7" y="1011.0" width="24.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="966.7" y="1022.0">[..</text>
</g>
<g>
<title>[unknown] (52 samples, 1.99%)</title><rect x="964.1" y="995.0" width="23.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="967.1" y="1006.0">[..</text>
</g>
<g>
<title>[unknown] (52 samples, 1.99%)</title><rect x="964.1" y="979.0" width="23.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="967.1" y="990.0">[..</text>
</g>
<g>
<title>[unknown] (52 samples, 1.99%)</title><rect x="964.1" y="963.0" width="23.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="967.1" y="974.0">[..</text>
</g>
<g>
<title>[unknown] (52 samples, 1.99%)</title><rect x="964.1" y="947.0" width="23.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="967.1" y="958.0">[..</text>
</g>
<g>
<title>[unknown] (52 samples, 1.99%)</title><rect x="964.1" y="931.0" width="23.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="967.1" y="942.0">[..</text>
</g>
<g>
<title>[unknown] (52 samples, 1.99%)</title><rect x="964.1" y="915.0" width="23.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="967.1" y="926.0">[..</text>
</g>
<g>
<title>[unknown] (50 samples, 1.92%)</title><rect x="965.0" y="899.0" width="22.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="968.0" y="910.0">[..</text>
</g>
<g>
<title>[unknown] (49 samples, 1.88%)</title><rect x="965.5" y="883.0" width="22.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="968.5" y="894.0">[..</text>
</g>
<g>
<title>[unknown] (49 samples, 1.88%)</title><rect x="965.5" y="867.0" width="22.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="968.5" y="878.0">[..</text>
</g>
<g>
<title>[unknown] (46 samples, 1.76%)</title><rect x="966.9" y="851.0" width="20.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="969.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 1.73%)</title><rect x="967.3" y="835.0" width="20.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="970.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 1.69%)</title><rect x="967.8" y="819.0" width="19.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="970.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.65%)</title><rect x="968.2" y="803.0" width="19.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="971.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.65%)</title><rect x="968.2" y="787.0" width="19.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="971.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.65%)</title><rect x="968.2" y="771.0" width="19.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="971.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 1.65%)</title><rect x="968.2" y="755.0" width="19.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="971.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.61%)</title><rect x="968.7" y="739.0" width="19.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="971.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.38%)</title><rect x="971.4" y="723.0" width="16.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="974.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.30%)</title><rect x="972.3" y="707.0" width="15.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="975.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="972.7" y="691.0" width="15.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="975.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 1.07%)</title><rect x="975.0" y="675.0" width="12.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="978.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 1.00%)</title><rect x="975.9" y="659.0" width="11.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="978.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="976.4" y="643.0" width="11.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="979.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.96%)</title><rect x="976.4" y="627.0" width="11.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="979.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.92%)</title><rect x="976.8" y="611.0" width="10.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="979.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.84%)</title><rect x="977.7" y="595.0" width="10.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="980.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="978.2" y="579.0" width="9.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="981.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="978.2" y="563.0" width="9.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="981.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="978.2" y="547.0" width="9.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="981.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="978.6" y="531.0" width="9.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="981.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="980.4" y="515.0" width="7.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="983.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.61%)</title><rect x="980.4" y="499.0" width="7.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="983.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="980.9" y="483.0" width="6.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="983.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="983.1" y="467.0" width="4.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="986.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="984.5" y="451.0" width="3.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="987.5" y="462.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="984.5" y="435.0" width="3.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="987.5" y="446.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="984.5" y="419.0" width="3.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="987.5" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="987.2" y="403.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="990.2" y="414.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="987.2" y="387.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="990.2" y="398.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="987.7" y="1043.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="990.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (11 samples, 0.42%)</title><rect x="988.1" y="1171.0" width="5.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="991.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (11 samples, 0.42%)</title><rect x="988.1" y="1155.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="991.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (11 samples, 0.42%)</title><rect x="988.1" y="1139.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="991.1" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (11 samples, 0.42%)</title><rect x="988.1" y="1123.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="991.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.42%)</title><rect x="988.1" y="1107.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="991.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.42%)</title><rect x="988.1" y="1091.0" width="5.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="991.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.42%)</title><rect x="988.1" y="1075.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="991.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.42%)</title><rect x="988.1" y="1059.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="991.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.42%)</title><rect x="988.1" y="1043.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="991.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.42%)</title><rect x="988.1" y="1027.0" width="5.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="991.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.42%)</title><rect x="988.1" y="1011.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="991.1" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.04%)</title><rect x="988.1" y="995.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="991.1" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="988.1" y="979.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="991.1" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="988.6" y="995.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="991.6" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.35%)</title><rect x="989.0" y="995.0" width="4.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="992.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="989.0" y="979.0" width="4.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="992.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="989.0" y="963.0" width="4.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="992.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="989.5" y="947.0" width="3.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="992.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="989.5" y="931.0" width="3.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="992.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="989.9" y="915.0" width="3.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="992.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="989.9" y="899.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="992.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="989.9" y="883.0" width="3.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="992.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="989.9" y="867.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="992.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (20 samples, 0.77%)</title><rect x="993.1" y="1187.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="996.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (19 samples, 0.73%)</title><rect x="993.6" y="1171.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="996.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (13 samples, 0.50%)</title><rect x="993.6" y="1155.0" width="5.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="996.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.46%)</title><rect x="994.0" y="1139.0" width="5.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="997.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.46%)</title><rect x="994.0" y="1123.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="997.0" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.08%)</title><rect x="994.0" y="1107.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="997.0" y="1118.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="994.5" y="1091.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="997.5" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="994.5" y="1075.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="997.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="994.9" y="1107.0" width="4.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="997.9" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_wait (10 samples, 0.38%)</title><rect x="994.9" y="1091.0" width="4.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="997.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="995.4" y="1075.0" width="4.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="998.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="995.4" y="1059.0" width="4.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="998.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="995.4" y="1043.0" width="4.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="998.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="995.4" y="1027.0" width="4.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="998.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="995.4" y="1011.0" width="4.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="998.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="995.4" y="995.0" width="4.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="998.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="996.3" y="979.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="999.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="996.3" y="963.0" width="3.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="999.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="997.2" y="947.0" width="2.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1000.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="999.0" y="931.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1002.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="999.0" y="915.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1002.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="999.0" y="899.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1002.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="999.0" y="883.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1002.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="999.0" y="867.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1002.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="999.0" y="851.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1002.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="999.0" y="835.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1002.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="999.4" y="1155.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1002.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.04%)</title><rect x="999.4" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1002.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.04%)</title><rect x="999.4" y="1123.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1002.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.19%)</title><rect x="999.9" y="1155.0" width="2.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1002.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.19%)</title><rect x="999.9" y="1139.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1002.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.19%)</title><rect x="999.9" y="1123.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1002.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.19%)</title><rect x="999.9" y="1107.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1002.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.19%)</title><rect x="999.9" y="1091.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1002.9" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.19%)</title><rect x="999.9" y="1075.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1002.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="999.9" y="1059.0" width="2.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1002.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="999.9" y="1043.0" width="2.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1002.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="999.9" y="1027.0" width="2.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1002.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="999.9" y="1011.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1002.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="999.9" y="995.0" width="2.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1002.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="1000.3" y="979.0" width="1.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1003.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="1001.3" y="963.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1004.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="1001.3" y="947.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1004.3" y="958.0"></text>
</g>
<g>
<title>[ProxyWorker-4 tid=31427] (149 samples, 5.72%)</title><rect x="1002.2" y="1251.0" width="67.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1005.2" y="1262.0">[ProxyW..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.08%)</title><rect x="1002.2" y="1235.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1005.2" y="1246.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.08%)</title><rect x="1002.2" y="1219.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1005.2" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.08%)</title><rect x="1002.2" y="1203.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1005.2" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.08%)</title><rect x="1002.2" y="1187.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1005.2" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.04%)</title><rect x="1002.2" y="1171.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1005.2" y="1182.0"></text>
</g>
<g>
<title>__memset_erms (1 samples, 0.04%)</title><rect x="1002.6" y="1171.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1005.6" y="1182.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.12%)</title><rect x="1003.1" y="1235.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1006.1" y="1246.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="1003.1" y="1219.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1006.1" y="1230.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.04%)</title><rect x="1003.1" y="1203.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1006.1" y="1214.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="1003.1" y="1187.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1006.1" y="1198.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (2 samples, 0.08%)</title><rect x="1003.5" y="1219.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1006.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (144 samples, 5.52%)</title><rect x="1004.4" y="1235.0" width="65.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1007.4" y="1246.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (144 samples, 5.52%)</title><rect x="1004.4" y="1219.0" width="65.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1007.4" y="1230.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (144 samples, 5.52%)</title><rect x="1004.4" y="1203.0" width="65.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1007.4" y="1214.0">java/ut..</text>
</g>
<g>
<title>itable stub (1 samples, 0.04%)</title><rect x="1005.8" y="1187.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1008.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (104 samples, 3.99%)</title><rect x="1006.2" y="1187.0" width="47.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1009.2" y="1198.0">java..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (93 samples, 3.57%)</title><rect x="1006.2" y="1171.0" width="42.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1009.2" y="1182.0">java..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (93 samples, 3.57%)</title><rect x="1006.2" y="1155.0" width="42.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1009.2" y="1166.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.08%)</title><rect x="1006.7" y="1139.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1009.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.08%)</title><rect x="1006.7" y="1123.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.04%)</title><rect x="1007.1" y="1107.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1010.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (90 samples, 3.45%)</title><rect x="1007.6" y="1139.0" width="40.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1010.6" y="1150.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (90 samples, 3.45%)</title><rect x="1007.6" y="1123.0" width="40.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1010.6" y="1134.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (90 samples, 3.45%)</title><rect x="1007.6" y="1107.0" width="40.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1010.6" y="1118.0">ru/..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="1007.6" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1010.6" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="1007.6" y="1075.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1010.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.04%)</title><rect x="1007.6" y="1059.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1010.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (89 samples, 3.41%)</title><rect x="1008.0" y="1091.0" width="40.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1011.0" y="1102.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (89 samples, 3.41%)</title><rect x="1008.0" y="1075.0" width="40.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1011.0" y="1086.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="1008.5" y="1059.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1011.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1008.5" y="1043.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1011.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1008.5" y="1027.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1011.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (15 samples, 0.58%)</title><rect x="1008.9" y="1059.0" width="6.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1011.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (15 samples, 0.58%)</title><rect x="1008.9" y="1043.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1011.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="1008.9" y="1027.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1011.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="1008.9" y="1011.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1011.9" y="1022.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="1008.9" y="995.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1011.9" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="1008.9" y="979.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1011.9" y="990.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="1008.9" y="963.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1011.9" y="974.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="1009.4" y="995.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1012.4" y="1006.0"></text>
</g>
<g>
<title>__GI___recv (13 samples, 0.50%)</title><rect x="1009.9" y="1027.0" width="5.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1012.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="1010.3" y="1011.0" width="5.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1013.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="1010.3" y="995.0" width="5.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1013.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="1010.3" y="979.0" width="5.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1013.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="1010.3" y="963.0" width="5.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1013.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="1010.3" y="947.0" width="5.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1013.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="1010.3" y="931.0" width="5.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1013.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="1010.3" y="915.0" width="5.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1013.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="1011.2" y="899.0" width="4.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1014.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="1011.7" y="883.0" width="4.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1014.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.31%)</title><rect x="1012.1" y="867.0" width="3.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1015.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="1013.5" y="851.0" width="2.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1016.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.15%)</title><rect x="1013.9" y="835.0" width="1.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1016.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="1014.8" y="819.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1017.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (6 samples, 0.23%)</title><rect x="1015.7" y="1059.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1018.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1016.2" y="1043.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1019.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1016.2" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1019.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1016.2" y="1011.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1019.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (3 samples, 0.12%)</title><rect x="1016.6" y="1043.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1019.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="1017.1" y="1027.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1020.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.08%)</title><rect x="1017.1" y="1011.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1020.1" y="1022.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.04%)</title><rect x="1017.5" y="995.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1020.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.04%)</title><rect x="1018.0" y="1043.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1021.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1018.0" y="1027.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1021.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1018.0" y="1011.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1021.0" y="1022.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="1018.0" y="995.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1021.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (7 samples, 0.27%)</title><rect x="1018.5" y="1059.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1021.5" y="1070.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1018.9" y="1043.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1021.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.12%)</title><rect x="1019.4" y="1043.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1022.4" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.04%)</title><rect x="1019.4" y="1027.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1022.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="1019.8" y="1027.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1022.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="1020.3" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1023.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="1020.3" y="1011.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1023.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="1020.3" y="995.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1023.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.08%)</title><rect x="1020.7" y="1043.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1023.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.08%)</title><rect x="1020.7" y="1027.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1023.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.04%)</title><rect x="1021.2" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1024.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.04%)</title><rect x="1021.6" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1024.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1021.6" y="1043.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1024.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1021.6" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="1021.6" y="1011.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1024.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="1021.6" y="995.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1024.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="1021.6" y="979.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1024.6" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (8 samples, 0.31%)</title><rect x="1022.1" y="1059.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1025.1" y="1070.0"></text>
</g>
<g>
<title>__GI___setsockopt (6 samples, 0.23%)</title><rect x="1022.5" y="1043.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1025.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="1022.5" y="1027.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1025.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="1022.5" y="1011.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1025.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="1023.0" y="995.0" width="2.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1026.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="1023.0" y="979.0" width="2.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1026.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="1023.0" y="963.0" width="2.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1026.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="1023.9" y="947.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1026.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="1023.9" y="931.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1026.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="1023.9" y="915.0" width="1.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1026.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1024.8" y="899.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1027.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1024.8" y="883.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1027.8" y="894.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1025.2" y="1043.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1028.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (49 samples, 1.88%)</title><rect x="1025.7" y="1059.0" width="22.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1028.7" y="1070.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (1 samples, 0.04%)</title><rect x="1025.7" y="1043.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1028.7" y="1054.0"></text>
</g>
<g>
<title>__send (48 samples, 1.84%)</title><rect x="1026.1" y="1043.0" width="21.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1029.1" y="1054.0">_..</text>
</g>
<g>
<title>[unknown] (48 samples, 1.84%)</title><rect x="1026.1" y="1027.0" width="21.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1029.1" y="1038.0">[..</text>
</g>
<g>
<title>[unknown] (48 samples, 1.84%)</title><rect x="1026.1" y="1011.0" width="21.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1029.1" y="1022.0">[..</text>
</g>
<g>
<title>[unknown] (48 samples, 1.84%)</title><rect x="1026.1" y="995.0" width="21.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1029.1" y="1006.0">[..</text>
</g>
<g>
<title>[unknown] (48 samples, 1.84%)</title><rect x="1026.1" y="979.0" width="21.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1029.1" y="990.0">[..</text>
</g>
<g>
<title>[unknown] (48 samples, 1.84%)</title><rect x="1026.1" y="963.0" width="21.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1029.1" y="974.0">[..</text>
</g>
<g>
<title>[unknown] (48 samples, 1.84%)</title><rect x="1026.1" y="947.0" width="21.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1029.1" y="958.0">[..</text>
</g>
<g>
<title>[unknown] (48 samples, 1.84%)</title><rect x="1026.1" y="931.0" width="21.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1029.1" y="942.0">[..</text>
</g>
<g>
<title>[unknown] (48 samples, 1.84%)</title><rect x="1026.1" y="915.0" width="21.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1029.1" y="926.0">[..</text>
</g>
<g>
<title>[unknown] (46 samples, 1.76%)</title><rect x="1027.1" y="899.0" width="20.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1030.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 1.73%)</title><rect x="1027.5" y="883.0" width="20.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1030.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 1.61%)</title><rect x="1028.9" y="867.0" width="19.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1031.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.50%)</title><rect x="1030.2" y="851.0" width="17.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1033.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.30%)</title><rect x="1032.5" y="835.0" width="15.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1035.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="1032.9" y="819.0" width="15.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1035.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="1032.9" y="803.0" width="15.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1035.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.27%)</title><rect x="1032.9" y="787.0" width="15.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1035.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="1033.8" y="771.0" width="14.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1036.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.19%)</title><rect x="1033.8" y="755.0" width="14.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1036.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="1034.3" y="739.0" width="13.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1037.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.15%)</title><rect x="1034.3" y="723.0" width="13.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1037.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 1.04%)</title><rect x="1035.7" y="707.0" width="12.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1038.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.92%)</title><rect x="1037.0" y="691.0" width="10.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1040.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.88%)</title><rect x="1037.5" y="675.0" width="10.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1040.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.81%)</title><rect x="1038.4" y="659.0" width="9.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1041.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="1038.8" y="643.0" width="9.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1041.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="1038.8" y="627.0" width="9.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1041.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.77%)</title><rect x="1038.8" y="611.0" width="9.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1041.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.69%)</title><rect x="1039.7" y="595.0" width="8.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1042.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="1041.1" y="579.0" width="6.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1044.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="1041.1" y="563.0" width="6.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1044.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.58%)</title><rect x="1041.1" y="547.0" width="6.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1044.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.54%)</title><rect x="1041.5" y="531.0" width="6.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1044.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="1042.0" y="515.0" width="5.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1045.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.50%)</title><rect x="1042.0" y="499.0" width="5.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1045.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="1042.4" y="483.0" width="5.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1045.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="1043.8" y="467.0" width="4.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1046.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="1043.8" y="451.0" width="4.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1046.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="1043.8" y="435.0" width="4.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1046.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="1043.8" y="419.0" width="4.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1046.8" y="430.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1047.4" y="403.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1050.4" y="414.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.borrowObject (1 samples, 0.04%)</title><rect x="1047.9" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1050.9" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList.pollFirst (1 samples, 0.04%)</title><rect x="1047.9" y="1043.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (11 samples, 0.42%)</title><rect x="1048.3" y="1171.0" width="5.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1051.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (11 samples, 0.42%)</title><rect x="1048.3" y="1155.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1051.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (11 samples, 0.42%)</title><rect x="1048.3" y="1139.0" width="5.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1051.3" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (11 samples, 0.42%)</title><rect x="1048.3" y="1123.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1051.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (11 samples, 0.42%)</title><rect x="1048.3" y="1107.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1051.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.42%)</title><rect x="1048.3" y="1091.0" width="5.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1051.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.42%)</title><rect x="1048.3" y="1075.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1051.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.42%)</title><rect x="1048.3" y="1059.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1051.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.42%)</title><rect x="1048.3" y="1043.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1051.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.42%)</title><rect x="1048.3" y="1027.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1051.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.42%)</title><rect x="1048.3" y="1011.0" width="5.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1051.3" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.08%)</title><rect x="1048.3" y="995.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1051.3" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.04%)</title><rect x="1048.8" y="979.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1051.8" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="1049.2" y="995.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1052.2" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.27%)</title><rect x="1050.1" y="995.0" width="3.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1053.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="1050.1" y="979.0" width="3.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1053.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="1050.1" y="963.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1053.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="1050.1" y="947.0" width="3.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1053.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="1050.1" y="931.0" width="3.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1053.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.27%)</title><rect x="1050.1" y="915.0" width="3.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1053.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="1050.6" y="899.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1053.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="1050.6" y="883.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1053.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.23%)</title><rect x="1050.6" y="867.0" width="2.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1053.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (35 samples, 1.34%)</title><rect x="1053.3" y="1187.0" width="15.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1056.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (33 samples, 1.27%)</title><rect x="1053.8" y="1171.0" width="14.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1056.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (16 samples, 0.61%)</title><rect x="1054.2" y="1155.0" width="7.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1057.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 0.61%)</title><rect x="1054.2" y="1139.0" width="7.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1057.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.61%)</title><rect x="1054.2" y="1123.0" width="7.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1057.2" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.27%)</title><rect x="1054.2" y="1107.0" width="3.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1057.2" y="1118.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.04%)</title><rect x="1054.2" y="1091.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1057.2" y="1102.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.04%)</title><rect x="1054.7" y="1091.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1057.7" y="1102.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.04%)</title><rect x="1055.1" y="1091.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1058.1" y="1102.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.12%)</title><rect x="1055.6" y="1091.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1058.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="1055.6" y="1075.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1058.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="1055.6" y="1059.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1058.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="1056.0" y="1043.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1059.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="1056.0" y="1027.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1059.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="1056.0" y="1011.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1059.0" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1056.9" y="1091.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1059.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="1057.4" y="1107.0" width="4.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1060.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1057.4" y="1091.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1060.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1057.4" y="1075.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1060.4" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.31%)</title><rect x="1057.8" y="1091.0" width="3.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1060.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="1059.2" y="1075.0" width="2.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1062.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="1059.2" y="1059.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1062.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="1059.2" y="1043.0" width="2.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1062.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="1059.2" y="1027.0" width="2.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1062.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="1059.2" y="1011.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1062.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="1059.2" y="995.0" width="2.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1062.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.19%)</title><rect x="1059.2" y="979.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1062.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="1060.1" y="963.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1063.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="1060.1" y="947.0" width="1.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1063.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1061.0" y="931.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1064.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1061.0" y="915.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1064.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1061.0" y="899.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1064.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1061.0" y="883.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1064.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1061.0" y="867.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1064.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1061.0" y="851.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1064.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1061.0" y="835.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1064.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.04%)</title><rect x="1061.5" y="1155.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1064.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.04%)</title><rect x="1061.5" y="1139.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1064.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.58%)</title><rect x="1061.9" y="1155.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1064.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.58%)</title><rect x="1061.9" y="1139.0" width="6.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1064.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.58%)</title><rect x="1061.9" y="1123.0" width="6.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1064.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.58%)</title><rect x="1061.9" y="1107.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1064.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.58%)</title><rect x="1061.9" y="1091.0" width="6.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1064.9" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.08%)</title><rect x="1061.9" y="1075.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1064.9" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.04%)</title><rect x="1061.9" y="1059.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1064.9" y="1070.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.04%)</title><rect x="1062.4" y="1059.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1065.4" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (13 samples, 0.50%)</title><rect x="1062.8" y="1075.0" width="5.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1065.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="1063.3" y="1059.0" width="5.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1066.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="1063.3" y="1043.0" width="5.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1066.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="1063.3" y="1027.0" width="5.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1066.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="1063.3" y="1011.0" width="5.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1066.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.46%)</title><rect x="1063.3" y="995.0" width="5.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1066.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.42%)</title><rect x="1063.7" y="979.0" width="5.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1066.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.38%)</title><rect x="1064.2" y="963.0" width="4.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1067.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.35%)</title><rect x="1064.6" y="947.0" width="4.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1067.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.04%)</title><rect x="1068.7" y="1171.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1071.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.04%)</title><rect x="1069.1" y="1187.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1072.1" y="1198.0"></text>
</g>
<g>
<title>[tid=31347] (9 samples, 0.35%)</title><rect x="1069.6" y="1251.0" width="4.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1072.6" y="1262.0"></text>
</g>
<g>
<title>start_thread (9 samples, 0.35%)</title><rect x="1069.6" y="1235.0" width="4.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1072.6" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (9 samples, 0.35%)</title><rect x="1069.6" y="1219.0" width="4.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1072.6" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (9 samples, 0.35%)</title><rect x="1069.6" y="1203.0" width="4.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1072.6" y="1214.0"></text>
</g>
<g>
<title>GangWorker::loop() (9 samples, 0.35%)</title><rect x="1069.6" y="1187.0" width="4.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1072.6" y="1198.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (9 samples, 0.35%)</title><rect x="1069.6" y="1171.0" width="4.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1072.6" y="1182.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (6 samples, 0.23%)</title><rect x="1069.6" y="1155.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1072.6" y="1166.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (3 samples, 0.12%)</title><rect x="1069.6" y="1139.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1072.6" y="1150.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.12%)</title><rect x="1069.6" y="1123.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1072.6" y="1134.0"></text>
</g>
<g>
<title>ParallelTaskTerminator::offer_termination(TerminatorTerminator*) (1 samples, 0.04%)</title><rect x="1071.0" y="1139.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1074.0" y="1150.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.08%)</title><rect x="1071.4" y="1139.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1074.4" y="1150.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.08%)</title><rect x="1072.3" y="1155.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1075.3" y="1166.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.08%)</title><rect x="1072.3" y="1139.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1075.3" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.08%)</title><rect x="1072.3" y="1123.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1075.3" y="1134.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.08%)</title><rect x="1072.3" y="1107.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1075.3" y="1118.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.08%)</title><rect x="1072.3" y="1091.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1075.3" y="1102.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (2 samples, 0.08%)</title><rect x="1072.3" y="1075.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1075.3" y="1086.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.08%)</title><rect x="1072.3" y="1059.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1075.3" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.08%)</title><rect x="1072.3" y="1043.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1075.3" y="1054.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="1073.2" y="1155.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1076.2" y="1166.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.04%)</title><rect x="1073.2" y="1139.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1076.2" y="1150.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.04%)</title><rect x="1073.2" y="1123.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1076.2" y="1134.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (1 samples, 0.04%)</title><rect x="1073.2" y="1107.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1076.2" y="1118.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)1, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.04%)</title><rect x="1073.2" y="1091.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1076.2" y="1102.0"></text>
</g>
<g>
<title>[tid=31352] (1 samples, 0.04%)</title><rect x="1073.7" y="1251.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1076.7" y="1262.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1073.7" y="1235.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1076.7" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1073.7" y="1219.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1076.7" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1073.7" y="1203.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1076.7" y="1214.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.04%)</title><rect x="1073.7" y="1187.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1076.7" y="1198.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.04%)</title><rect x="1073.7" y="1171.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1076.7" y="1182.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.04%)</title><rect x="1073.7" y="1155.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1076.7" y="1166.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.04%)</title><rect x="1073.7" y="1139.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1076.7" y="1150.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.04%)</title><rect x="1073.7" y="1123.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1076.7" y="1134.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.04%)</title><rect x="1073.7" y="1107.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1076.7" y="1118.0"></text>
</g>
<g>
<title>G1CollectedHeap::post_evacuate_collection_set(EvacuationInfo&amp;, G1ParScanThreadStateSet*) (1 samples, 0.04%)</title><rect x="1073.7" y="1091.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1076.7" y="1102.0"></text>
</g>
<g>
<title>G1CollectedHeap::process_discovered_references(G1ParScanThreadStateSet*) (1 samples, 0.04%)</title><rect x="1073.7" y="1075.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1076.7" y="1086.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_discovered_references(BoolObjectClosure*, OopClosure*, VoidClosure*, AbstractRefProcTaskExecutor*, ReferenceProcessorPhaseTimes*) (1 samples, 0.04%)</title><rect x="1073.7" y="1059.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1076.7" y="1070.0"></text>
</g>
<g>
<title>[tid=31356] (213 samples, 8.17%)</title><rect x="1074.1" y="1251.0" width="96.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1077.1" y="1262.0">[tid=31356]</text>
</g>
<g>
<title>start_thread (213 samples, 8.17%)</title><rect x="1074.1" y="1235.0" width="96.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1077.1" y="1246.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (213 samples, 8.17%)</title><rect x="1074.1" y="1219.0" width="96.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1077.1" y="1230.0">thread_nati..</text>
</g>
<g>
<title>Thread::call_run() (213 samples, 8.17%)</title><rect x="1074.1" y="1203.0" width="96.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1077.1" y="1214.0">Thread::cal..</text>
</g>
<g>
<title>JavaThread::run() (213 samples, 8.17%)</title><rect x="1074.1" y="1187.0" width="96.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1077.1" y="1198.0">JavaThread:..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (213 samples, 8.17%)</title><rect x="1074.1" y="1171.0" width="96.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1077.1" y="1182.0">JavaThread:..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (213 samples, 8.17%)</title><rect x="1074.1" y="1155.0" width="96.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1077.1" y="1166.0">CompileBrok..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (213 samples, 8.17%)</title><rect x="1074.1" y="1139.0" width="96.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1077.1" y="1150.0">CompileBrok..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (213 samples, 8.17%)</title><rect x="1074.1" y="1123.0" width="96.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1077.1" y="1134.0">C2Compiler:..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (213 samples, 8.17%)</title><rect x="1074.1" y="1107.0" width="96.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1077.1" y="1118.0">Compile::Co..</text>
</g>
<g>
<title>Compile::Code_Gen() (132 samples, 5.06%)</title><rect x="1074.1" y="1091.0" width="59.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1077.1" y="1102.0">Compil..</text>
</g>
<g>
<title>Compile::Output() (7 samples, 0.27%)</title><rect x="1074.1" y="1075.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1077.1" y="1086.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.04%)</title><rect x="1074.1" y="1059.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1077.1" y="1070.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (5 samples, 0.19%)</title><rect x="1074.6" y="1059.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1077.6" y="1070.0"></text>
</g>
<g>
<title>Block::code_alignment() const (1 samples, 0.04%)</title><rect x="1074.6" y="1043.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1077.6" y="1054.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (4 samples, 0.15%)</title><rect x="1075.0" y="1043.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1078.0" y="1054.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (2 samples, 0.08%)</title><rect x="1075.5" y="1027.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1078.5" y="1038.0"></text>
</g>
<g>
<title>CodeBuffer::verify_section_allocation() (1 samples, 0.04%)</title><rect x="1075.5" y="1011.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1078.5" y="1022.0"></text>
</g>
<g>
<title>CodeBuffer::~CodeBuffer() (1 samples, 0.04%)</title><rect x="1075.9" y="1011.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1078.9" y="1022.0"></text>
</g>
<g>
<title>CodeBuffer::verify_section_allocation() (1 samples, 0.04%)</title><rect x="1075.9" y="995.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1078.9" y="1006.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.04%)</title><rect x="1076.4" y="1027.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1079.4" y="1038.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="1076.8" y="1059.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1079.8" y="1070.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (6 samples, 0.23%)</title><rect x="1077.3" y="1075.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1080.3" y="1086.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.04%)</title><rect x="1077.7" y="1059.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1080.7" y="1070.0"></text>
</g>
<g>
<title>Compile::FillLocArray(int, MachSafePointNode*, Node*, GrowableArray&lt;ScopeValue*&gt;*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.04%)</title><rect x="1077.7" y="1043.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1080.7" y="1054.0"></text>
</g>
<g>
<title>Label::patch_instructions(MacroAssembler*) (1 samples, 0.04%)</title><rect x="1078.2" y="1059.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1081.2" y="1070.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (2 samples, 0.08%)</title><rect x="1078.7" y="1059.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1081.7" y="1070.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.08%)</title><rect x="1078.7" y="1043.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1081.7" y="1054.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.08%)</title><rect x="1078.7" y="1027.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1081.7" y="1038.0"></text>
</g>
<g>
<title>loadConNKlassNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.04%)</title><rect x="1079.6" y="1059.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1082.6" y="1070.0"></text>
</g>
<g>
<title>Matcher::match() (12 samples, 0.46%)</title><rect x="1080.0" y="1075.0" width="5.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1083.0" y="1086.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (1 samples, 0.04%)</title><rect x="1080.0" y="1059.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1083.0" y="1070.0"></text>
</g>
<g>
<title>Matcher::init_first_stack_mask() (1 samples, 0.04%)</title><rect x="1080.0" y="1043.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1083.0" y="1054.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (3 samples, 0.12%)</title><rect x="1080.5" y="1059.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1083.5" y="1070.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (8 samples, 0.31%)</title><rect x="1081.8" y="1059.0" width="3.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1084.8" y="1070.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (1 samples, 0.04%)</title><rect x="1082.7" y="1043.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1085.7" y="1054.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (5 samples, 0.19%)</title><rect x="1083.2" y="1043.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1086.2" y="1054.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.08%)</title><rect x="1083.2" y="1027.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1086.2" y="1038.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.04%)</title><rect x="1083.2" y="1011.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1086.2" y="1022.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.04%)</title><rect x="1083.2" y="995.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1086.2" y="1006.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.04%)</title><rect x="1083.2" y="979.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1086.2" y="990.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.04%)</title><rect x="1083.2" y="963.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1086.2" y="974.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (1 samples, 0.04%)</title><rect x="1083.6" y="1011.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1086.6" y="1022.0"></text>
</g>
<g>
<title>TypeAryPtr::make(TypePtr::PTR, ciObject*, TypeAry const*, ciKlass*, bool, int, int, TypePtr const*, int, bool) (1 samples, 0.04%)</title><rect x="1083.6" y="995.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1086.6" y="1006.0"></text>
</g>
<g>
<title>ciObjArrayKlass::is_obj_array_klass() const (1 samples, 0.04%)</title><rect x="1083.6" y="979.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1086.6" y="990.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (3 samples, 0.12%)</title><rect x="1084.1" y="1027.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1087.1" y="1038.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.08%)</title><rect x="1084.1" y="1011.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1087.1" y="1022.0"></text>
</g>
<g>
<title>MachNode::Expand(State*, Node_List&amp;, Node*) (1 samples, 0.04%)</title><rect x="1084.1" y="995.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1087.1" y="1006.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.04%)</title><rect x="1084.5" y="995.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1087.5" y="1006.0"></text>
</g>
<g>
<title>State::MachOperGenerator(int) (1 samples, 0.04%)</title><rect x="1085.0" y="1011.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1088.0" y="1022.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (14 samples, 0.54%)</title><rect x="1085.4" y="1075.0" width="6.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1088.4" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (14 samples, 0.54%)</title><rect x="1085.4" y="1059.0" width="6.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1088.4" y="1070.0"></text>
</g>
<g>
<title>PhaseCFG::implicit_null_check(Block*, Node*, Node*, int) (1 samples, 0.04%)</title><rect x="1085.4" y="1043.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1088.4" y="1054.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="1085.9" y="1043.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1088.9" y="1054.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (2 samples, 0.08%)</title><rect x="1086.3" y="1043.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1089.3" y="1054.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.04%)</title><rect x="1086.3" y="1027.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1089.3" y="1038.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.04%)</title><rect x="1086.8" y="1027.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1089.8" y="1038.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.04%)</title><rect x="1086.8" y="1011.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1089.8" y="1022.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.04%)</title><rect x="1086.8" y="995.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1089.8" y="1006.0"></text>
</g>
<g>
<title>ciInstanceKlass::is_instance_klass() const (1 samples, 0.04%)</title><rect x="1086.8" y="979.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1089.8" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.04%)</title><rect x="1087.3" y="1043.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1090.3" y="1054.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (1 samples, 0.04%)</title><rect x="1087.3" y="1027.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1090.3" y="1038.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.04%)</title><rect x="1087.3" y="1011.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1090.3" y="1022.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (1 samples, 0.04%)</title><rect x="1087.7" y="1043.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1090.7" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.08%)</title><rect x="1088.2" y="1043.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1091.2" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (1 samples, 0.04%)</title><rect x="1089.1" y="1043.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1092.1" y="1054.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (3 samples, 0.12%)</title><rect x="1089.5" y="1043.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1092.5" y="1054.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.08%)</title><rect x="1090.0" y="1027.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1093.0" y="1038.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.04%)</title><rect x="1090.9" y="1043.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1093.9" y="1054.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1091.3" y="1043.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1094.3" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (92 samples, 3.53%)</title><rect x="1091.8" y="1075.0" width="41.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1094.8" y="1086.0">Pha..</text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (4 samples, 0.15%)</title><rect x="1091.8" y="1059.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1094.8" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (6 samples, 0.23%)</title><rect x="1093.6" y="1059.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1096.6" y="1070.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (3 samples, 0.12%)</title><rect x="1094.9" y="1043.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1097.9" y="1054.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1095.9" y="1027.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1098.9" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.12%)</title><rect x="1096.3" y="1059.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1099.3" y="1070.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (3 samples, 0.12%)</title><rect x="1096.3" y="1043.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1099.3" y="1054.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1097.2" y="1027.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1100.2" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (11 samples, 0.42%)</title><rect x="1097.7" y="1059.0" width="4.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1100.7" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (18 samples, 0.69%)</title><rect x="1102.6" y="1059.0" width="8.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1105.6" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (3 samples, 0.12%)</title><rect x="1104.0" y="1043.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1107.0" y="1054.0"></text>
</g>
<g>
<title>shrL_rReg_immNode::rule() const (1 samples, 0.04%)</title><rect x="1104.9" y="1027.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1107.9" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (8 samples, 0.31%)</title><rect x="1105.4" y="1043.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1108.4" y="1054.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.04%)</title><rect x="1108.1" y="1027.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1111.1" y="1038.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1108.5" y="1027.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1111.5" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (3 samples, 0.12%)</title><rect x="1109.0" y="1043.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1112.0" y="1054.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (3 samples, 0.12%)</title><rect x="1109.0" y="1027.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1112.0" y="1038.0"></text>
</g>
<g>
<title>castIINode::two_adr() const (1 samples, 0.04%)</title><rect x="1110.3" y="1043.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1113.3" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (1 samples, 0.04%)</title><rect x="1110.8" y="1059.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1113.8" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.04%)</title><rect x="1110.8" y="1043.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1113.8" y="1054.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1110.8" y="1027.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1113.8" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (1 samples, 0.04%)</title><rect x="1111.2" y="1059.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1114.2" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (1 samples, 0.04%)</title><rect x="1111.7" y="1059.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1114.7" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (13 samples, 0.50%)</title><rect x="1112.1" y="1059.0" width="5.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1115.1" y="1070.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.04%)</title><rect x="1115.8" y="1043.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1118.8" y="1054.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.04%)</title><rect x="1116.2" y="1043.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1119.2" y="1054.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.04%)</title><rect x="1116.7" y="1043.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1119.7" y="1054.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.04%)</title><rect x="1117.1" y="1043.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1120.1" y="1054.0"></text>
</g>
<g>
<title>rRegIOper::type() const (1 samples, 0.04%)</title><rect x="1117.6" y="1043.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1120.6" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (2 samples, 0.08%)</title><rect x="1118.0" y="1059.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1121.0" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.04%)</title><rect x="1118.9" y="1059.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1121.9" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (11 samples, 0.42%)</title><rect x="1119.4" y="1059.0" width="5.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1122.4" y="1070.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.04%)</title><rect x="1122.1" y="1043.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1125.1" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (3 samples, 0.12%)</title><rect x="1122.6" y="1043.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1125.6" y="1054.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.04%)</title><rect x="1123.9" y="1043.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1126.9" y="1054.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (3 samples, 0.12%)</title><rect x="1124.4" y="1059.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1127.4" y="1070.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.04%)</title><rect x="1124.4" y="1043.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1127.4" y="1054.0"></text>
</g>
<g>
<title>PhaseIFG::Union(unsigned int, unsigned int) (1 samples, 0.04%)</title><rect x="1124.4" y="1027.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1127.4" y="1038.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1124.4" y="1011.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1127.4" y="1022.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (2 samples, 0.08%)</title><rect x="1124.8" y="1043.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1127.8" y="1054.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (5 samples, 0.19%)</title><rect x="1125.7" y="1059.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1128.7" y="1070.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.08%)</title><rect x="1127.1" y="1043.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1130.1" y="1054.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (3 samples, 0.12%)</title><rect x="1128.0" y="1059.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1131.0" y="1070.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.08%)</title><rect x="1128.4" y="1043.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1131.4" y="1054.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.04%)</title><rect x="1129.3" y="1059.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1132.3" y="1070.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.04%)</title><rect x="1129.3" y="1043.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1132.3" y="1054.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (6 samples, 0.23%)</title><rect x="1129.8" y="1059.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1132.8" y="1070.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.12%)</title><rect x="1130.7" y="1043.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1133.7" y="1054.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1131.6" y="1027.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1134.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1132.1" y="1043.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1135.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1132.1" y="1027.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1135.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1132.1" y="1011.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1135.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1132.1" y="995.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1135.1" y="1006.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.04%)</title><rect x="1132.5" y="1059.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1135.5" y="1070.0"></text>
</g>
<g>
<title>addP_rRegNode::two_adr() const (1 samples, 0.04%)</title><rect x="1133.0" y="1059.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1136.0" y="1070.0"></text>
</g>
<g>
<title>PhasePeephole::do_transform() (1 samples, 0.04%)</title><rect x="1133.4" y="1075.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1136.4" y="1086.0"></text>
</g>
<g>
<title>Compile::Optimize() (54 samples, 2.07%)</title><rect x="1133.9" y="1091.0" width="24.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1136.9" y="1102.0">C..</text>
</g>
<g>
<title>PhaseCCP::analyze() (3 samples, 0.12%)</title><rect x="1133.9" y="1075.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1136.9" y="1086.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.04%)</title><rect x="1133.9" y="1059.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1136.9" y="1070.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.04%)</title><rect x="1133.9" y="1043.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1136.9" y="1054.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.239] (1 samples, 0.04%)</title><rect x="1133.9" y="1027.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1136.9" y="1038.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.04%)</title><rect x="1133.9" y="1011.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1136.9" y="1022.0"></text>
</g>
<g>
<title>SubNode::Value(PhaseGVN*) const (1 samples, 0.04%)</title><rect x="1134.3" y="1059.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1137.3" y="1070.0"></text>
</g>
<g>
<title>TypeAryPtr::add_offset(long) const (1 samples, 0.04%)</title><rect x="1134.8" y="1059.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1137.8" y="1070.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.04%)</title><rect x="1134.8" y="1043.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1137.8" y="1054.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.04%)</title><rect x="1134.8" y="1027.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1137.8" y="1038.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.04%)</title><rect x="1135.2" y="1075.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1138.2" y="1086.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.04%)</title><rect x="1135.2" y="1059.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1138.2" y="1070.0"></text>
</g>
<g>
<title>TypeInt::singleton() const (1 samples, 0.04%)</title><rect x="1135.2" y="1043.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1138.2" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (40 samples, 1.53%)</title><rect x="1135.7" y="1075.0" width="18.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.7" y="1086.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1135.7" y="1059.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1138.7" y="1070.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1135.7" y="1043.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1138.7" y="1054.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1135.7" y="1027.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1138.7" y="1038.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1135.7" y="1011.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1138.7" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_pre_post_loops(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.04%)</title><rect x="1135.7" y="995.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1138.7" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::duplicate_predicates_helper(Node*, Node*, IdealLoopTree*, LoopNode*, unsigned int) [clone .part.138] (1 samples, 0.04%)</title><rect x="1135.7" y="979.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1138.7" y="990.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.04%)</title><rect x="1135.7" y="963.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1138.7" y="974.0"></text>
</g>
<g>
<title>IfTrueNode::Opcode() const (1 samples, 0.04%)</title><rect x="1136.1" y="1059.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1139.1" y="1070.0"></text>
</g>
<g>
<title>Node::is_CFG() const (1 samples, 0.04%)</title><rect x="1136.6" y="1059.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1139.6" y="1070.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.04%)</title><rect x="1137.0" y="1059.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1140.0" y="1070.0"></text>
</g>
<g>
<title>ParmNode::Opcode() const (1 samples, 0.04%)</title><rect x="1137.5" y="1059.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1140.5" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (5 samples, 0.19%)</title><rect x="1137.9" y="1059.0" width="2.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1140.9" y="1070.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (2 samples, 0.08%)</title><rect x="1139.3" y="1043.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1142.3" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.08%)</title><rect x="1140.2" y="1059.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1143.2" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (12 samples, 0.46%)</title><rect x="1141.1" y="1059.0" width="5.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.1" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (10 samples, 0.38%)</title><rect x="1142.0" y="1043.0" width="4.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1145.0" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.04%)</title><rect x="1142.0" y="1027.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1145.0" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (8 samples, 0.31%)</title><rect x="1142.5" y="1027.0" width="3.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1145.5" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (8 samples, 0.31%)</title><rect x="1142.5" y="1011.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1145.5" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.04%)</title><rect x="1146.1" y="1027.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1149.1" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (3 samples, 0.12%)</title><rect x="1146.5" y="1059.0" width="1.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1149.5" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (5 samples, 0.19%)</title><rect x="1147.9" y="1059.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1150.9" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (4 samples, 0.15%)</title><rect x="1148.4" y="1043.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1151.4" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::has_local_phi_input(Node*) (1 samples, 0.04%)</title><rect x="1148.8" y="1027.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1151.8" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.04%)</title><rect x="1148.8" y="1011.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1151.8" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.04%)</title><rect x="1149.3" y="1027.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.3" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.04%)</title><rect x="1149.3" y="1011.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.3" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.04%)</title><rect x="1149.7" y="1027.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.7" y="1038.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.04%)</title><rect x="1149.7" y="1011.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.7" y="1022.0"></text>
</g>
<g>
<title>LoadNode::size_of() const (1 samples, 0.04%)</title><rect x="1149.7" y="995.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1152.7" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (6 samples, 0.23%)</title><rect x="1150.2" y="1059.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1153.2" y="1070.0"></text>
</g>
<g>
<title>MultiNode::hash() const (1 samples, 0.04%)</title><rect x="1150.2" y="1043.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1153.2" y="1054.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.19%)</title><rect x="1150.6" y="1043.0" width="2.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1153.6" y="1054.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (2 samples, 0.08%)</title><rect x="1150.6" y="1027.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.6" y="1038.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1151.1" y="1011.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.1" y="1022.0"></text>
</g>
<g>
<title>Type::higher_equal(Type const*) const (1 samples, 0.04%)</title><rect x="1151.1" y="995.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.1" y="1006.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.04%)</title><rect x="1151.1" y="979.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.1" y="990.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (2 samples, 0.08%)</title><rect x="1151.5" y="1027.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.5" y="1038.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (2 samples, 0.08%)</title><rect x="1151.5" y="1011.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.5" y="1022.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1152.4" y="1027.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.4" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (1 samples, 0.04%)</title><rect x="1152.4" y="1011.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1155.4" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="1152.4" y="995.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.4" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="1152.4" y="979.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.4" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="1152.4" y="963.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.4" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="1152.4" y="947.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1155.4" y="958.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.04%)</title><rect x="1152.4" y="931.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.4" y="942.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1152.4" y="915.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.4" y="926.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (1 samples, 0.04%)</title><rect x="1152.9" y="1059.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1155.9" y="1070.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.04%)</title><rect x="1153.3" y="1059.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.3" y="1070.0"></text>
</g>
<g>
<title>os::free(void*) (1 samples, 0.04%)</title><rect x="1153.3" y="1043.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.3" y="1054.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (7 samples, 0.27%)</title><rect x="1153.8" y="1075.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1156.8" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (7 samples, 0.27%)</title><rect x="1153.8" y="1059.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.8" y="1070.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (2 samples, 0.08%)</title><rect x="1153.8" y="1043.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.8" y="1054.0"></text>
</g>
<g>
<title>IfNode::fold_compares(PhaseIterGVN*) (1 samples, 0.04%)</title><rect x="1153.8" y="1027.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.8" y="1038.0"></text>
</g>
<g>
<title>IfNode::fold_compares_helper(ProjNode*, ProjNode*, ProjNode*, PhaseIterGVN*) (1 samples, 0.04%)</title><rect x="1153.8" y="1011.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1156.8" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.04%)</title><rect x="1153.8" y="995.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.8" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.04%)</title><rect x="1153.8" y="979.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.8" y="990.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.04%)</title><rect x="1154.2" y="1027.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1157.2" y="1038.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1154.7" y="1043.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.7" y="1054.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1154.7" y="1027.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1157.7" y="1038.0"></text>
</g>
<g>
<title>MemBarNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1155.1" y="1043.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1158.1" y="1054.0"></text>
</g>
<g>
<title>AllocateNode::Ideal_allocation(Node*, PhaseTransform*) (1 samples, 0.04%)</title><rect x="1155.1" y="1027.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.1" y="1038.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (2 samples, 0.08%)</title><rect x="1155.6" y="1043.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.6" y="1054.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.04%)</title><rect x="1156.1" y="1027.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1159.1" y="1038.0"></text>
</g>
<g>
<title>VectorSet::operator&lt;&lt;=(unsigned int) (1 samples, 0.04%)</title><rect x="1156.1" y="1011.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.1" y="1022.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1156.1" y="995.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.1" y="1006.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1156.5" y="1043.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1159.5" y="1054.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.04%)</title><rect x="1156.5" y="1027.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.5" y="1038.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.04%)</title><rect x="1157.0" y="1075.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1160.0" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.04%)</title><rect x="1157.0" y="1059.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.0" y="1070.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.04%)</title><rect x="1157.0" y="1043.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1160.0" y="1054.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1157.0" y="1027.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.0" y="1038.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1157.0" y="1011.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1160.0" y="1022.0"></text>
</g>
<g>
<title>MemNode::adr_type() const (1 samples, 0.04%)</title><rect x="1157.0" y="995.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.0" y="1006.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.04%)</title><rect x="1157.0" y="979.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.0" y="990.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.04%)</title><rect x="1157.0" y="963.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1160.0" y="974.0"></text>
</g>
<g>
<title>TypeOopPtr::TypeOopPtr(Type::TYPES, TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.04%)</title><rect x="1157.0" y="947.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.0" y="958.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.08%)</title><rect x="1157.4" y="1075.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1160.4" y="1086.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.04%)</title><rect x="1157.9" y="1059.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.9" y="1070.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.04%)</title><rect x="1157.9" y="1043.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1160.9" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (23 samples, 0.88%)</title><rect x="1158.3" y="1091.0" width="10.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.3" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (23 samples, 0.88%)</title><rect x="1158.3" y="1075.0" width="10.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.3" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (23 samples, 0.88%)</title><rect x="1158.3" y="1059.0" width="10.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.3" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (23 samples, 0.88%)</title><rect x="1158.3" y="1043.0" width="10.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.3" y="1054.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.04%)</title><rect x="1158.3" y="1027.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.3" y="1038.0"></text>
</g>
<g>
<title>Parse::catch_inline_exceptions(SafePointNode*) (1 samples, 0.04%)</title><rect x="1158.3" y="1011.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.3" y="1022.0"></text>
</g>
<g>
<title>Phase::gen_subtype_check(Node*, Node*, Node**, MergeMemNode*, PhaseGVN*) (1 samples, 0.04%)</title><rect x="1158.3" y="995.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.3" y="1006.0"></text>
</g>
<g>
<title>gen_subtype_check_compare(Node*, Node*, Node*, BoolTest::mask, float, PhaseGVN*, BasicType) (1 samples, 0.04%)</title><rect x="1158.3" y="979.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.3" y="990.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.04%)</title><rect x="1158.3" y="963.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1161.3" y="974.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.04%)</title><rect x="1158.3" y="947.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (22 samples, 0.84%)</title><rect x="1158.8" y="1027.0" width="9.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.8" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (19 samples, 0.73%)</title><rect x="1158.8" y="1011.0" width="8.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.8" y="1022.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1158.8" y="995.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.8" y="1006.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.04%)</title><rect x="1158.8" y="979.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.8" y="990.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.04%)</title><rect x="1158.8" y="963.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.8" y="974.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.04%)</title><rect x="1158.8" y="947.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.8" y="958.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.04%)</title><rect x="1158.8" y="931.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.8" y="942.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.04%)</title><rect x="1158.8" y="915.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.8" y="926.0"></text>
</g>
<g>
<title>BitMap::set_difference(BitMap const&amp;) (1 samples, 0.04%)</title><rect x="1158.8" y="899.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.8" y="910.0"></text>
</g>
<g>
<title>GraphKit::record_profile_for_speculation(Node*, ciKlass*, ProfilePtrKind) (1 samples, 0.04%)</title><rect x="1159.2" y="995.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1162.2" y="1006.0"></text>
</g>
<g>
<title>TypeKlassPtr::as_instance_type() const (1 samples, 0.04%)</title><rect x="1159.2" y="979.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.2" y="990.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.04%)</title><rect x="1159.2" y="963.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.2" y="974.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.04%)</title><rect x="1159.2" y="947.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1162.2" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1159.2" y="931.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1162.2" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (13 samples, 0.50%)</title><rect x="1159.7" y="995.0" width="5.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.7" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (13 samples, 0.50%)</title><rect x="1159.7" y="979.0" width="5.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.42%)</title><rect x="1159.7" y="963.0" width="5.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.7" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.42%)</title><rect x="1159.7" y="947.0" width="5.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.42%)</title><rect x="1159.7" y="931.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.7" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.38%)</title><rect x="1159.7" y="915.0" width="4.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1162.7" y="926.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.12%)</title><rect x="1159.7" y="899.0" width="1.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.7" y="910.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.08%)</title><rect x="1159.7" y="883.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.7" y="894.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.08%)</title><rect x="1159.7" y="867.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.7" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.08%)</title><rect x="1159.7" y="851.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.7" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.08%)</title><rect x="1159.7" y="835.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.7" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.08%)</title><rect x="1159.7" y="819.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.7" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.08%)</title><rect x="1159.7" y="803.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.7" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.08%)</title><rect x="1159.7" y="787.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1162.7" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.04%)</title><rect x="1160.1" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.1" y="782.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.04%)</title><rect x="1160.1" y="755.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.1" y="766.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1160.1" y="739.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.1" y="750.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1160.1" y="723.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.1" y="734.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.04%)</title><rect x="1160.1" y="707.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.1" y="718.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.04%)</title><rect x="1160.1" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.1" y="702.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.04%)</title><rect x="1160.1" y="675.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.1" y="686.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.04%)</title><rect x="1160.1" y="659.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1163.1" y="670.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.04%)</title><rect x="1160.1" y="643.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.1" y="654.0"></text>
</g>
<g>
<title>ciMethod::call_profile_at_bci(int) (1 samples, 0.04%)</title><rect x="1160.6" y="883.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.6" y="894.0"></text>
</g>
<g>
<title>ciMethodData::bci_to_data(int, ciMethod*) (1 samples, 0.04%)</title><rect x="1160.6" y="867.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.6" y="878.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.04%)</title><rect x="1161.0" y="899.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1164.0" y="910.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.04%)</title><rect x="1161.0" y="883.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.0" y="894.0"></text>
</g>
<g>
<title>TypeTuple::fields(unsigned int) (1 samples, 0.04%)</title><rect x="1161.0" y="867.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1164.0" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.23%)</title><rect x="1161.5" y="899.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.5" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.23%)</title><rect x="1161.5" y="883.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1164.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.23%)</title><rect x="1161.5" y="867.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.23%)</title><rect x="1161.5" y="851.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.5" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.23%)</title><rect x="1161.5" y="835.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.19%)</title><rect x="1161.5" y="819.0" width="2.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1164.5" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.19%)</title><rect x="1161.5" y="803.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.5" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.19%)</title><rect x="1161.5" y="787.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.19%)</title><rect x="1161.5" y="771.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.19%)</title><rect x="1161.5" y="755.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.19%)</title><rect x="1161.5" y="739.0" width="2.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.15%)</title><rect x="1161.5" y="723.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.5" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.15%)</title><rect x="1161.5" y="707.0" width="1.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.5" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.15%)</title><rect x="1161.5" y="691.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.15%)</title><rect x="1161.5" y="675.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.15%)</title><rect x="1161.5" y="659.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1164.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.15%)</title><rect x="1161.5" y="643.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.15%)</title><rect x="1161.5" y="627.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.5" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.12%)</title><rect x="1161.5" y="611.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1164.5" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.12%)</title><rect x="1161.5" y="595.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.12%)</title><rect x="1161.5" y="579.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1164.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.08%)</title><rect x="1161.5" y="563.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.08%)</title><rect x="1161.5" y="547.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.08%)</title><rect x="1161.5" y="531.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1164.5" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.08%)</title><rect x="1161.5" y="515.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1164.5" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.08%)</title><rect x="1161.5" y="499.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1164.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.08%)</title><rect x="1161.5" y="483.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.08%)</title><rect x="1161.5" y="467.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1164.5" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.08%)</title><rect x="1161.5" y="451.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1164.5" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.08%)</title><rect x="1161.5" y="435.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.5" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.08%)</title><rect x="1161.5" y="419.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1164.5" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.08%)</title><rect x="1161.5" y="403.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1164.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.08%)</title><rect x="1161.5" y="387.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1161.5" y="371.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1164.5" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1161.5" y="355.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.5" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1161.5" y="339.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1164.5" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1161.5" y="323.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.5" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1161.5" y="307.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.5" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1161.5" y="291.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.5" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1161.5" y="275.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.5" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1161.5" y="259.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1164.5" y="270.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.04%)</title><rect x="1161.5" y="243.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.5" y="254.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.04%)</title><rect x="1161.5" y="227.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1164.5" y="238.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.04%)</title><rect x="1161.5" y="211.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1164.5" y="222.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.04%)</title><rect x="1161.5" y="195.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.5" y="206.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.04%)</title><rect x="1161.5" y="179.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.5" y="190.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.04%)</title><rect x="1161.5" y="163.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1164.5" y="174.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.04%)</title><rect x="1161.5" y="147.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.5" y="158.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1161.5" y="131.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1164.5" y="142.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (1 samples, 0.04%)</title><rect x="1161.5" y="115.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1164.5" y="126.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="1161.5" y="99.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1164.5" y="110.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="1161.5" y="83.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.5" y="94.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.04%)</title><rect x="1161.5" y="67.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.5" y="78.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.04%)</title><rect x="1161.5" y="51.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1164.5" y="62.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1161.5" y="35.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1164.5" y="46.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.04%)</title><rect x="1161.9" y="371.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.9" y="382.0"></text>
</g>
<g>
<title>PhiNode::make(Node*, Node*, Type const*, TypePtr const*) (1 samples, 0.04%)</title><rect x="1161.9" y="355.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1164.9" y="366.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.04%)</title><rect x="1162.4" y="563.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.4" y="574.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.04%)</title><rect x="1162.4" y="547.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.4" y="558.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1162.4" y="531.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.4" y="542.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.04%)</title><rect x="1162.4" y="515.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1165.4" y="526.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.04%)</title><rect x="1162.8" y="611.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.8" y="622.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1162.8" y="595.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.8" y="606.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1162.8" y="579.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.8" y="590.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.04%)</title><rect x="1162.8" y="563.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.8" y="574.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 0.04%)</title><rect x="1162.8" y="547.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.8" y="558.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.04%)</title><rect x="1162.8" y="531.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.8" y="542.0"></text>
</g>
<g>
<title>Parse::do_newarray(BasicType) (1 samples, 0.04%)</title><rect x="1163.3" y="723.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1166.3" y="734.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.04%)</title><rect x="1163.3" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.3" y="718.0"></text>
</g>
<g>
<title>TypeKlassPtr::hash() const (1 samples, 0.04%)</title><rect x="1163.3" y="691.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1166.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.04%)</title><rect x="1163.7" y="819.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1166.7" y="830.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.04%)</title><rect x="1163.7" y="803.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.7" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.04%)</title><rect x="1163.7" y="787.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.7" y="798.0"></text>
</g>
<g>
<title>ConstantPool::impl_name_ref_at(int, bool) (1 samples, 0.04%)</title><rect x="1163.7" y="771.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.7" y="782.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.04%)</title><rect x="1164.2" y="915.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1167.2" y="926.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.04%)</title><rect x="1164.2" y="899.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.2" y="910.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.04%)</title><rect x="1164.2" y="883.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.2" y="894.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.04%)</title><rect x="1164.2" y="867.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1167.2" y="878.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.04%)</title><rect x="1164.2" y="851.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1167.2" y="862.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.04%)</title><rect x="1164.2" y="835.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.2" y="846.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.04%)</title><rect x="1164.2" y="819.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.2" y="830.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool) (1 samples, 0.04%)</title><rect x="1164.2" y="803.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1167.2" y="814.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.04%)</title><rect x="1164.2" y="787.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.2" y="798.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.04%)</title><rect x="1164.2" y="771.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1167.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.04%)</title><rect x="1164.7" y="963.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.7" y="974.0"></text>
</g>
<g>
<title>AllocateNode::compute_MemBar_redundancy(ciMethod*) (1 samples, 0.04%)</title><rect x="1164.7" y="947.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.7" y="958.0"></text>
</g>
<g>
<title>ciMethod::get_bcea() (1 samples, 0.04%)</title><rect x="1164.7" y="931.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.7" y="942.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::BCEscapeAnalyzer(ciMethod*, BCEscapeAnalyzer*) (1 samples, 0.04%)</title><rect x="1164.7" y="915.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1167.7" y="926.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::compute_escape_info() (1 samples, 0.04%)</title><rect x="1164.7" y="899.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.7" y="910.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_blocks(Arena*) (1 samples, 0.04%)</title><rect x="1164.7" y="883.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.7" y="894.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::iterate_one_block(ciBlock*, BCEscapeAnalyzer::StateInfo&amp;, GrowableArray&lt;ciBlock*&gt;&amp;) [clone .constprop.67] (1 samples, 0.04%)</title><rect x="1164.7" y="867.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1167.7" y="878.0"></text>
</g>
<g>
<title>BCEscapeAnalyzer::set_global_escape(BCEscapeAnalyzer::ArgumentMap, bool) (1 samples, 0.04%)</title><rect x="1164.7" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1167.7" y="862.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (1 samples, 0.04%)</title><rect x="1165.1" y="963.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.1" y="974.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.04%)</title><rect x="1165.1" y="947.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.1" y="958.0"></text>
</g>
<g>
<title>CounterData::cell_count() const (1 samples, 0.04%)</title><rect x="1165.1" y="931.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1168.1" y="942.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.15%)</title><rect x="1165.6" y="995.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.6" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.12%)</title><rect x="1165.6" y="979.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1168.6" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.12%)</title><rect x="1165.6" y="963.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.6" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.12%)</title><rect x="1165.6" y="947.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.12%)</title><rect x="1165.6" y="931.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1168.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.12%)</title><rect x="1165.6" y="915.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.12%)</title><rect x="1165.6" y="899.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.6" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.12%)</title><rect x="1165.6" y="883.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.6" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.12%)</title><rect x="1165.6" y="867.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.12%)</title><rect x="1165.6" y="851.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.12%)</title><rect x="1165.6" y="835.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1168.6" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.12%)</title><rect x="1165.6" y="819.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.6" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.12%)</title><rect x="1165.6" y="803.0" width="1.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1168.6" y="814.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.04%)</title><rect x="1165.6" y="787.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.6" y="798.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.04%)</title><rect x="1165.6" y="771.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1168.6" y="782.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.04%)</title><rect x="1165.6" y="755.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1168.6" y="766.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.04%)</title><rect x="1165.6" y="739.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.6" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.04%)</title><rect x="1165.6" y="723.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.6" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.04%)</title><rect x="1165.6" y="707.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.6" y="718.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.04%)</title><rect x="1165.6" y="691.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1168.6" y="702.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.04%)</title><rect x="1165.6" y="675.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.6" y="686.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.04%)</title><rect x="1165.6" y="659.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.6" y="670.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.04%)</title><rect x="1165.6" y="643.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1168.6" y="654.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.04%)</title><rect x="1165.6" y="627.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.6" y="638.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.04%)</title><rect x="1165.6" y="611.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.6" y="622.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1165.6" y="595.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.6" y="606.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.04%)</title><rect x="1165.6" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1168.6" y="590.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.04%)</title><rect x="1165.6" y="563.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1168.6" y="574.0"></text>
</g>
<g>
<title>Dictionary::find(unsigned int, Symbol*, Handle) (1 samples, 0.04%)</title><rect x="1165.6" y="547.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.6" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.08%)</title><rect x="1166.0" y="787.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.0" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.08%)</title><rect x="1166.0" y="771.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.08%)</title><rect x="1166.0" y="755.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.08%)</title><rect x="1166.0" y="739.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.0" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.08%)</title><rect x="1166.0" y="723.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1169.0" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.08%)</title><rect x="1166.0" y="707.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.0" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.08%)</title><rect x="1166.0" y="691.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.0" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.08%)</title><rect x="1166.0" y="675.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.08%)</title><rect x="1166.0" y="659.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.08%)</title><rect x="1166.0" y="643.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.0" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.08%)</title><rect x="1166.0" y="627.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.08%)</title><rect x="1166.0" y="611.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.0" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.08%)</title><rect x="1166.0" y="595.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.0" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.08%)</title><rect x="1166.0" y="579.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.08%)</title><rect x="1166.0" y="563.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.0" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.08%)</title><rect x="1166.0" y="547.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.0" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.08%)</title><rect x="1166.0" y="531.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.0" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1166.0" y="515.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.0" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1166.0" y="499.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.0" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1166.0" y="483.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1166.0" y="467.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.0" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1166.0" y="451.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.0" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1166.0" y="435.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.0" y="446.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.04%)</title><rect x="1166.0" y="419.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.0" y="430.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.04%)</title><rect x="1166.0" y="403.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.0" y="414.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.04%)</title><rect x="1166.0" y="387.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.0" y="398.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.04%)</title><rect x="1166.0" y="371.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.0" y="382.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.04%)</title><rect x="1166.0" y="355.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.0" y="366.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.04%)</title><rect x="1166.0" y="339.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.0" y="350.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.04%)</title><rect x="1166.0" y="323.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.0" y="334.0"></text>
</g>
<g>
<title>AddLNode::bottom_type() const (1 samples, 0.04%)</title><rect x="1166.0" y="307.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.0" y="318.0"></text>
</g>
<g>
<title>Parse::do_new() (1 samples, 0.04%)</title><rect x="1166.5" y="515.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1169.5" y="526.0"></text>
</g>
<g>
<title>GraphKit::new_instance(Node*, Node*, Node**, bool) (1 samples, 0.04%)</title><rect x="1166.5" y="499.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.5" y="510.0"></text>
</g>
<g>
<title>AllocateNode::AllocateNode(Compile*, TypeFunc const*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.04%)</title><rect x="1166.5" y="483.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.5" y="494.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (1 samples, 0.04%)</title><rect x="1166.5" y="467.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.5" y="478.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1166.9" y="979.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.9" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1166.9" y="963.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.9" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1166.9" y="947.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.9" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1166.9" y="931.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.9" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1166.9" y="915.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.9" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1166.9" y="899.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.9" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1166.9" y="883.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.9" y="894.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1166.9" y="867.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.9" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1166.9" y="851.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.9" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1166.9" y="835.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.9" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1166.9" y="819.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.9" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1166.9" y="803.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1166.9" y="787.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.9" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1166.9" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.9" y="782.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1166.9" y="755.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.9" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1166.9" y="739.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.9" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1166.9" y="723.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1166.9" y="707.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1166.9" y="691.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1169.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1166.9" y="675.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1166.9" y="659.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.9" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1166.9" y="643.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.9" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1166.9" y="627.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1166.9" y="611.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.9" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1166.9" y="595.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1166.9" y="579.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1166.9" y="563.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.9" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1166.9" y="547.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.9" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1166.9" y="531.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1169.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1166.9" y="515.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.9" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1166.9" y="499.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.9" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1166.9" y="483.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.9" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1166.9" y="467.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.9" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1166.9" y="451.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.9" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1166.9" y="435.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.9" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1166.9" y="419.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.9" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1166.9" y="403.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1169.9" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1166.9" y="387.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1169.9" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1166.9" y="371.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.9" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1166.9" y="355.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.9" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1166.9" y="339.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.9" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1166.9" y="323.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.9" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1166.9" y="307.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.9" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1166.9" y="291.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.9" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1166.9" y="275.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.9" y="286.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1166.9" y="259.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.9" y="270.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool) (1 samples, 0.04%)</title><rect x="1166.9" y="243.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.9" y="254.0"></text>
</g>
<g>
<title>GraphKit::make_slow_call_ex(Node*, ciInstanceKlass*, bool, bool) [clone .part.177] (1 samples, 0.04%)</title><rect x="1166.9" y="227.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.9" y="238.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.04%)</title><rect x="1166.9" y="211.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.9" y="222.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1166.9" y="195.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1169.9" y="206.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.04%)</title><rect x="1167.4" y="1011.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.4" y="1022.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.04%)</title><rect x="1167.4" y="995.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1170.4" y="1006.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.04%)</title><rect x="1167.4" y="979.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.4" y="990.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.04%)</title><rect x="1167.8" y="1011.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.8" y="1022.0"></text>
</g>
<g>
<title>IfNode::Value(PhaseGVN*) const (1 samples, 0.04%)</title><rect x="1167.8" y="995.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.8" y="1006.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_dest() const (1 samples, 0.04%)</title><rect x="1168.3" y="1011.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.3" y="1022.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (4 samples, 0.15%)</title><rect x="1168.7" y="1091.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.7" y="1102.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (2 samples, 0.08%)</title><rect x="1169.2" y="1075.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.2" y="1086.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.04%)</title><rect x="1170.1" y="1075.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1173.1" y="1086.0"></text>
</g>
<g>
<title>[tid=31357] (12 samples, 0.46%)</title><rect x="1170.5" y="1251.0" width="5.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1173.5" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1170.5" y="1235.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1173.5" y="1246.0"></text>
</g>
<g>
<title>__GI___open64 (1 samples, 0.04%)</title><rect x="1170.5" y="1219.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1173.5" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1170.5" y="1203.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1173.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1170.5" y="1187.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1173.5" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1170.5" y="1171.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1173.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1170.5" y="1155.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1173.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1170.5" y="1139.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1173.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1170.5" y="1123.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1173.5" y="1134.0"></text>
</g>
<g>
<title>start_thread (11 samples, 0.42%)</title><rect x="1171.0" y="1235.0" width="5.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1174.0" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 0.42%)</title><rect x="1171.0" y="1219.0" width="5.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1174.0" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (11 samples, 0.42%)</title><rect x="1171.0" y="1203.0" width="5.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.0" y="1214.0"></text>
</g>
<g>
<title>JavaThread::run() (11 samples, 0.42%)</title><rect x="1171.0" y="1187.0" width="5.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.0" y="1198.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (11 samples, 0.42%)</title><rect x="1171.0" y="1171.0" width="5.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.0" y="1182.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (11 samples, 0.42%)</title><rect x="1171.0" y="1155.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.0" y="1166.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (11 samples, 0.42%)</title><rect x="1171.0" y="1139.0" width="5.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.0" y="1150.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (11 samples, 0.42%)</title><rect x="1171.0" y="1123.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.0" y="1134.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (11 samples, 0.42%)</title><rect x="1171.0" y="1107.0" width="5.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.0" y="1118.0"></text>
</g>
<g>
<title>Compilation::compile_method() (11 samples, 0.42%)</title><rect x="1171.0" y="1091.0" width="5.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.0" y="1102.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (11 samples, 0.42%)</title><rect x="1171.0" y="1075.0" width="5.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.0" y="1086.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (6 samples, 0.23%)</title><rect x="1171.0" y="1059.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.0" y="1070.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (6 samples, 0.23%)</title><rect x="1171.0" y="1043.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.0" y="1054.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (6 samples, 0.23%)</title><rect x="1171.0" y="1027.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.0" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (6 samples, 0.23%)</title><rect x="1171.0" y="1011.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.0" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (6 samples, 0.23%)</title><rect x="1171.0" y="995.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.0" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (6 samples, 0.23%)</title><rect x="1171.0" y="979.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.0" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.19%)</title><rect x="1171.0" y="963.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.0" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.19%)</title><rect x="1171.0" y="947.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.0" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.19%)</title><rect x="1171.0" y="931.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.0" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.19%)</title><rect x="1171.0" y="915.0" width="2.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.0" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (5 samples, 0.19%)</title><rect x="1171.0" y="899.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.0" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (5 samples, 0.19%)</title><rect x="1171.0" y="883.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.0" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.15%)</title><rect x="1171.0" y="867.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.0" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::block_at(int) (1 samples, 0.04%)</title><rect x="1171.0" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.0" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1171.4" y="851.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.4" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.04%)</title><rect x="1171.4" y="835.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.4" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.04%)</title><rect x="1171.4" y="819.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.4" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.04%)</title><rect x="1171.4" y="803.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.4" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1171.4" y="787.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.4" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1171.4" y="771.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.4" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.04%)</title><rect x="1171.4" y="755.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.4" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.04%)</title><rect x="1171.4" y="739.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.4" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::if_node(Instruction*, Instruction::Condition, Instruction*, ValueStack*) (1 samples, 0.04%)</title><rect x="1171.4" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.4" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::try_method_handle_inline(ciMethod*, bool) (2 samples, 0.08%)</title><rect x="1171.9" y="851.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.9" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.08%)</title><rect x="1171.9" y="835.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.9" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.08%)</title><rect x="1171.9" y="819.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.9" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.08%)</title><rect x="1171.9" y="803.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.9" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.08%)</title><rect x="1171.9" y="787.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1174.9" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.04%)</title><rect x="1171.9" y="771.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.9" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1171.9" y="755.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.9" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1171.9" y="739.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.9" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.04%)</title><rect x="1171.9" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.9" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.04%)</title><rect x="1171.9" y="707.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.9" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.04%)</title><rect x="1171.9" y="691.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1174.9" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.04%)</title><rect x="1171.9" y="675.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.9" y="686.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_intrinsics(ciMethod*, bool) (1 samples, 0.04%)</title><rect x="1171.9" y="659.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.9" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::build_graph_for_intrinsic(ciMethod*, bool) (1 samples, 0.04%)</title><rect x="1171.9" y="643.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1174.9" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::args_list_for_profiling(ciMethod*, int&amp;, bool) (1 samples, 0.04%)</title><rect x="1171.9" y="627.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.9" y="638.0"></text>
</g>
<g>
<title>NewInstance::exact_type() const (1 samples, 0.04%)</title><rect x="1172.3" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.3" y="782.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.04%)</title><rect x="1172.8" y="867.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.8" y="878.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1172.8" y="851.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.8" y="862.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1172.8" y="835.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.8" y="846.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.04%)</title><rect x="1172.8" y="819.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.8" y="830.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.04%)</title><rect x="1172.8" y="803.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.8" y="814.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.04%)</title><rect x="1172.8" y="787.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.8" y="798.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.04%)</title><rect x="1172.8" y="771.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.8" y="782.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.04%)</title><rect x="1172.8" y="755.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.8" y="766.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.04%)</title><rect x="1172.8" y="739.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.8" y="750.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.04%)</title><rect x="1172.8" y="723.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1175.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.8" y="707.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1175.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1172.8" y="691.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1175.8" y="702.0"></text>
</g>
<g>
<title>GraphBuilder::method_return(Instruction*, bool) (1 samples, 0.04%)</title><rect x="1173.3" y="963.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.3" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::append_with_bci(Instruction*, int) (1 samples, 0.04%)</title><rect x="1173.3" y="947.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.3" y="958.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (1 samples, 0.04%)</title><rect x="1173.3" y="931.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.3" y="942.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (4 samples, 0.15%)</title><rect x="1173.7" y="1059.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.7" y="1070.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (3 samples, 0.12%)</title><rect x="1173.7" y="1043.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.7" y="1054.0"></text>
</g>
<g>
<title>LIR_Assembler::comp_op(LIR_Condition, LIR_OprDesc*, LIR_OprDesc*, LIR_Op2*) (1 samples, 0.04%)</title><rect x="1173.7" y="1027.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.7" y="1038.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (1 samples, 0.04%)</title><rect x="1174.2" y="1027.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.2" y="1038.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (1 samples, 0.04%)</title><rect x="1174.2" y="1011.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.2" y="1022.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.04%)</title><rect x="1174.2" y="995.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.2" y="1006.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (1 samples, 0.04%)</title><rect x="1174.2" y="979.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.2" y="990.0"></text>
</g>
<g>
<title>LIR_OpTypeCheck::emit_code(LIR_Assembler*) (1 samples, 0.04%)</title><rect x="1174.6" y="1027.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1177.6" y="1038.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_opTypeCheck(LIR_OpTypeCheck*) (1 samples, 0.04%)</title><rect x="1174.6" y="1011.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1177.6" y="1022.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_typecheck_helper(LIR_OpTypeCheck*, Label*, Label*, Label*) (1 samples, 0.04%)</title><rect x="1174.6" y="995.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.6" y="1006.0"></text>
</g>
<g>
<title>LIR_Assembler::type_profile_helper(RegisterImpl*, ciMethodData*, ProfileData*, RegisterImpl*, Label*) (1 samples, 0.04%)</title><rect x="1174.6" y="979.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.6" y="990.0"></text>
</g>
<g>
<title>Assembler::jmp(Label&amp;, bool) (1 samples, 0.04%)</title><rect x="1174.6" y="963.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.6" y="974.0"></text>
</g>
<g>
<title>Label::add_patch_at(CodeBuffer*, int) (1 samples, 0.04%)</title><rect x="1174.6" y="947.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1177.6" y="958.0"></text>
</g>
<g>
<title>CodeBuffer::create_patch_overflow() (1 samples, 0.04%)</title><rect x="1174.6" y="931.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.6" y="942.0"></text>
</g>
<g>
<title>Arena::Arena(MemoryType) (1 samples, 0.04%)</title><rect x="1174.6" y="915.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.6" y="926.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1174.6" y="899.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.6" y="910.0"></text>
</g>
<g>
<title>pthread_self (1 samples, 0.04%)</title><rect x="1174.6" y="883.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1177.6" y="894.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (1 samples, 0.04%)</title><rect x="1175.1" y="1043.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.1" y="1054.0"></text>
</g>
<g>
<title>CounterOverflowStub::emit_code(LIR_Assembler*) (1 samples, 0.04%)</title><rect x="1175.1" y="1027.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.1" y="1038.0"></text>
</g>
<g>
<title>LIR_Assembler::store_parameter(Metadata*, int) (1 samples, 0.04%)</title><rect x="1175.1" y="1011.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.1" y="1022.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.04%)</title><rect x="1175.5" y="1059.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.5" y="1070.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.04%)</title><rect x="1175.5" y="1043.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.5" y="1054.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.04%)</title><rect x="1175.5" y="1027.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.5" y="1038.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.04%)</title><rect x="1175.5" y="1011.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.5" y="1022.0"></text>
</g>
<g>
<title>LinearScan::color_lir_opr(LIR_OprDesc*, int, LIR_OpVisitState::OprMode) (1 samples, 0.04%)</title><rect x="1175.5" y="995.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.5" y="1006.0"></text>
</g>
<g>
<title>[tid=31359] (1 samples, 0.04%)</title><rect x="1176.0" y="1251.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1179.0" y="1262.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1176.0" y="1235.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1179.0" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1176.0" y="1219.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1179.0" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1176.0" y="1203.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.0" y="1214.0"></text>
</g>
<g>
<title>JavaThread::run() (1 samples, 0.04%)</title><rect x="1176.0" y="1187.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.0" y="1198.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1 samples, 0.04%)</title><rect x="1176.0" y="1171.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.0" y="1182.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.04%)</title><rect x="1176.0" y="1155.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.0" y="1166.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.04%)</title><rect x="1176.0" y="1139.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.0" y="1150.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.04%)</title><rect x="1176.0" y="1123.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.0" y="1134.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.04%)</title><rect x="1176.0" y="1107.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.0" y="1118.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.04%)</title><rect x="1176.0" y="1091.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.0" y="1102.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.04%)</title><rect x="1176.0" y="1075.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.0" y="1086.0"></text>
</g>
<g>
<title>[tid=31360] (1 samples, 0.04%)</title><rect x="1176.4" y="1251.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1179.4" y="1262.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.04%)</title><rect x="1176.4" y="1235.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1179.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.4" y="1219.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1179.4" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.4" y="1203.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1179.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.4" y="1187.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1179.4" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.4" y="1171.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1179.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.4" y="1155.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1179.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.4" y="1139.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1179.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.4" y="1123.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1179.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.4" y="1107.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1179.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1176.4" y="1091.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1179.4" y="1102.0"></text>
</g>
<g>
<title>[tid=31373] (10 samples, 0.38%)</title><rect x="1176.9" y="1251.0" width="4.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1179.9" y="1262.0"></text>
</g>
<g>
<title>start_thread (10 samples, 0.38%)</title><rect x="1176.9" y="1235.0" width="4.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1179.9" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (10 samples, 0.38%)</title><rect x="1176.9" y="1219.0" width="4.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1179.9" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (10 samples, 0.38%)</title><rect x="1176.9" y="1203.0" width="4.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.9" y="1214.0"></text>
</g>
<g>
<title>GangWorker::loop() (10 samples, 0.38%)</title><rect x="1176.9" y="1187.0" width="4.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1179.9" y="1198.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (9 samples, 0.35%)</title><rect x="1176.9" y="1171.0" width="4.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1179.9" y="1182.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.19%)</title><rect x="1176.9" y="1155.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.9" y="1166.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.04%)</title><rect x="1176.9" y="1139.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.9" y="1150.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.15%)</title><rect x="1177.3" y="1139.0" width="1.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1180.3" y="1150.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.15%)</title><rect x="1179.1" y="1155.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1182.1" y="1166.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.15%)</title><rect x="1179.1" y="1139.0" width="1.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.1" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.15%)</title><rect x="1179.1" y="1123.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.1" y="1134.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.15%)</title><rect x="1179.1" y="1107.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.1" y="1118.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.15%)</title><rect x="1179.1" y="1091.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.1" y="1102.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.15%)</title><rect x="1179.1" y="1075.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.1" y="1086.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.12%)</title><rect x="1179.6" y="1059.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1180.5" y="1043.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1183.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1180.5" y="1027.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1183.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1180.5" y="1011.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1183.5" y="1022.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1180.9" y="1171.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.9" y="1182.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.04%)</title><rect x="1180.9" y="1155.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.9" y="1166.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.67] (1 samples, 0.04%)</title><rect x="1180.9" y="1139.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.9" y="1150.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="1180.9" y="1123.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.9" y="1134.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::find_map_at_offset(int) const (1 samples, 0.04%)</title><rect x="1180.9" y="1107.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.9" y="1118.0"></text>
</g>
<g>
<title>[tid=31374] (10 samples, 0.38%)</title><rect x="1181.4" y="1251.0" width="4.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1184.4" y="1262.0"></text>
</g>
<g>
<title>start_thread (10 samples, 0.38%)</title><rect x="1181.4" y="1235.0" width="4.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1184.4" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (10 samples, 0.38%)</title><rect x="1181.4" y="1219.0" width="4.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1184.4" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (10 samples, 0.38%)</title><rect x="1181.4" y="1203.0" width="4.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.4" y="1214.0"></text>
</g>
<g>
<title>GangWorker::loop() (10 samples, 0.38%)</title><rect x="1181.4" y="1187.0" width="4.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.4" y="1198.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (10 samples, 0.38%)</title><rect x="1181.4" y="1171.0" width="4.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.4" y="1182.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.19%)</title><rect x="1181.4" y="1155.0" width="2.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.4" y="1166.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (4 samples, 0.15%)</title><rect x="1181.4" y="1139.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.4" y="1150.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.12%)</title><rect x="1181.9" y="1123.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.9" y="1134.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="1182.8" y="1107.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.8" y="1118.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1183.2" y="1139.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1186.2" y="1150.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (5 samples, 0.19%)</title><rect x="1183.7" y="1155.0" width="2.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.7" y="1166.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.19%)</title><rect x="1183.7" y="1139.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.7" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.19%)</title><rect x="1183.7" y="1123.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.7" y="1134.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.19%)</title><rect x="1183.7" y="1107.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.7" y="1118.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (5 samples, 0.19%)</title><rect x="1183.7" y="1091.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.7" y="1102.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (5 samples, 0.19%)</title><rect x="1183.7" y="1075.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.7" y="1086.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.12%)</title><rect x="1184.1" y="1059.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.1" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="1185.5" y="1059.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.5" y="1070.0"></text>
</g>
<g>
<title>[tid=31375] (9 samples, 0.35%)</title><rect x="1185.9" y="1251.0" width="4.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1188.9" y="1262.0"></text>
</g>
<g>
<title>start_thread (9 samples, 0.35%)</title><rect x="1185.9" y="1235.0" width="4.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1188.9" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (9 samples, 0.35%)</title><rect x="1185.9" y="1219.0" width="4.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1188.9" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (9 samples, 0.35%)</title><rect x="1185.9" y="1203.0" width="4.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.9" y="1214.0"></text>
</g>
<g>
<title>GangWorker::loop() (9 samples, 0.35%)</title><rect x="1185.9" y="1187.0" width="4.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.9" y="1198.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (9 samples, 0.35%)</title><rect x="1185.9" y="1171.0" width="4.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.9" y="1182.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.08%)</title><rect x="1185.9" y="1155.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.9" y="1166.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.04%)</title><rect x="1185.9" y="1139.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.9" y="1150.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1186.4" y="1139.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1189.4" y="1150.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (5 samples, 0.19%)</title><rect x="1186.8" y="1155.0" width="2.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.8" y="1166.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (5 samples, 0.19%)</title><rect x="1186.8" y="1139.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.8" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (5 samples, 0.19%)</title><rect x="1186.8" y="1123.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.8" y="1134.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (5 samples, 0.19%)</title><rect x="1186.8" y="1107.0" width="2.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.8" y="1118.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (5 samples, 0.19%)</title><rect x="1186.8" y="1091.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.8" y="1102.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.15%)</title><rect x="1186.8" y="1075.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.8" y="1086.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.08%)</title><rect x="1187.3" y="1059.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.3" y="1070.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="1187.7" y="1043.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.7" y="1054.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="1188.2" y="1059.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.2" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (1 samples, 0.04%)</title><rect x="1188.6" y="1075.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.6" y="1086.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.04%)</title><rect x="1188.6" y="1059.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.6" y="1070.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.08%)</title><rect x="1189.1" y="1155.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.1" y="1166.0"></text>
</g>
<g>
<title>G1EvacPhaseTimesTracker::~G1EvacPhaseTimesTracker() (1 samples, 0.04%)</title><rect x="1189.1" y="1139.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.1" y="1150.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.04%)</title><rect x="1189.5" y="1139.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.5" y="1150.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.04%)</title><rect x="1189.5" y="1123.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.5" y="1134.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.04%)</title><rect x="1189.5" y="1107.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.5" y="1118.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (1 samples, 0.04%)</title><rect x="1189.5" y="1091.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.5" y="1102.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (1 samples, 0.04%)</title><rect x="1189.5" y="1075.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="1086.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.04%)</title><rect x="1189.5" y="1059.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.5" y="1070.0"></text>
</g>
</g>
</svg>
