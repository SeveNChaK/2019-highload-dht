<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1366" onload="init(evt)" viewBox="0 0 1200 1366" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1349"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1349"> </text>
<g id="frames">
<g>
<title>all (2,872 samples, 100.00%)</title><rect x="10.0" y="1315.0" width="1180.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="13.0" y="1326.0">all</text>
</g>
<g>
<title>[AsyncWorker-0 tid=31421] (127 samples, 4.42%)</title><rect x="10.0" y="1299.0" width="52.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="13.0" y="1310.0">[Asyn..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="10.0" y="1283.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="1294.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.03%)</title><rect x="10.4" y="1283.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.4" y="1294.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.03%)</title><rect x="10.4" y="1267.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="13.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/Thread.run (125 samples, 4.35%)</title><rect x="10.8" y="1283.0" width="51.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.8" y="1294.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (125 samples, 4.35%)</title><rect x="10.8" y="1267.0" width="51.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="13.8" y="1278.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (125 samples, 4.35%)</title><rect x="10.8" y="1251.0" width="51.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.8" y="1262.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.31%)</title><rect x="10.8" y="1235.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (8 samples, 0.28%)</title><rect x="11.2" y="1219.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="14.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.24%)</title><rect x="11.2" y="1203.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="11.2" y="1187.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="14.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.03%)</title><rect x="11.2" y="1171.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.21%)</title><rect x="11.6" y="1187.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="14.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.21%)</title><rect x="11.6" y="1171.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="14.6" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.03%)</title><rect x="11.6" y="1155.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="14.6" y="1166.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="11.6" y="1139.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="12.1" y="1155.0" width="2.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="15.1" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.17%)</title><rect x="12.1" y="1139.0" width="2.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="15.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="12.9" y="1123.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="15.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="12.9" y="1107.0" width="1.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="15.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="12.9" y="1091.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="15.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="12.9" y="1075.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="15.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="12.9" y="1059.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="15.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="12.9" y="1043.0" width="1.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="15.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="12.9" y="1027.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="15.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="13.3" y="1011.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="16.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="13.3" y="995.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="16.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="14.1" y="1203.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.1" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (116 samples, 4.04%)</title><rect x="14.5" y="1235.0" width="47.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.5" y="1246.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (116 samples, 4.04%)</title><rect x="14.5" y="1219.0" width="47.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="17.5" y="1230.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (68 samples, 2.37%)</title><rect x="14.5" y="1203.0" width="28.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="17.5" y="1214.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (68 samples, 2.37%)</title><rect x="14.5" y="1187.0" width="28.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="17.5" y="1198.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (65 samples, 2.26%)</title><rect x="14.5" y="1171.0" width="26.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="17.5" y="1182.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (19 samples, 0.66%)</title><rect x="14.9" y="1155.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="17.9" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="14.9" y="1139.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="17.9" y="1150.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="14.9" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="17.9" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="14.9" y="1107.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="17.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="14.9" y="1091.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="17.9" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="14.9" y="1075.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="17.9" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="14.9" y="1059.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="17.9" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (17 samples, 0.59%)</title><rect x="15.3" y="1139.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="18.3" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (17 samples, 0.59%)</title><rect x="15.3" y="1123.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="18.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (17 samples, 0.59%)</title><rect x="15.3" y="1107.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="18.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (13 samples, 0.45%)</title><rect x="15.8" y="1091.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="18.8" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (12 samples, 0.42%)</title><rect x="16.2" y="1075.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.35%)</title><rect x="16.6" y="1059.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="19.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (10 samples, 0.35%)</title><rect x="16.6" y="1043.0" width="4.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="19.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 0.35%)</title><rect x="16.6" y="1027.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="19.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (9 samples, 0.31%)</title><rect x="17.0" y="1011.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="20.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (9 samples, 0.31%)</title><rect x="17.0" y="995.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="20.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (9 samples, 0.31%)</title><rect x="17.0" y="979.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="20.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.21%)</title><rect x="18.2" y="963.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="21.2" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.21%)</title><rect x="18.2" y="947.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="21.2" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (6 samples, 0.21%)</title><rect x="18.2" y="931.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="21.2" y="942.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (5 samples, 0.17%)</title><rect x="18.2" y="915.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="21.2" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="20.3" y="915.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="23.3" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="20.3" y="899.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="20.7" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="23.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="20.7" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="23.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="20.7" y="1027.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="23.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (1 samples, 0.03%)</title><rect x="20.7" y="1011.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="23.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (3 samples, 0.10%)</title><rect x="21.1" y="1091.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="24.1" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.03%)</title><rect x="21.1" y="1075.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="24.1" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="21.1" y="1059.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="24.1" y="1070.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.03%)</title><rect x="21.1" y="1043.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.1" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (1 samples, 0.03%)</title><rect x="21.1" y="1027.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="24.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.07%)</title><rect x="21.5" y="1075.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="21.5" y="1059.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.5" y="1070.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="21.5" y="1043.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.5" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="21.5" y="1027.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="24.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (1 samples, 0.03%)</title><rect x="21.5" y="1011.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="24.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="21.5" y="995.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.5" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.03%)</title><rect x="21.9" y="1027.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="24.9" y="1038.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (1 samples, 0.03%)</title><rect x="21.9" y="1011.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="21.9" y="995.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="24.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Row.getKey (1 samples, 0.03%)</title><rect x="22.3" y="1139.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="25.3" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="22.3" y="1123.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.3" y="1134.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="22.3" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.3" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="22.3" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="25.3" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="22.3" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="25.3" y="1086.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="22.3" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.3" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (4 samples, 0.14%)</title><rect x="22.7" y="1155.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="25.7" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1 samples, 0.03%)</title><rect x="22.7" y="1139.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="25.7" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (1 samples, 0.03%)</title><rect x="22.7" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="25.7" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.&lt;init&gt; (1 samples, 0.03%)</title><rect x="22.7" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="25.7" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (1 samples, 0.03%)</title><rect x="22.7" y="1091.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="25.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (3 samples, 0.10%)</title><rect x="23.1" y="1139.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="26.1" y="1150.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (2 samples, 0.07%)</title><rect x="23.1" y="1123.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="26.1" y="1134.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (2 samples, 0.07%)</title><rect x="23.1" y="1107.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="26.1" y="1118.0"></text>
</g>
<g>
<title>InlineCacheBuffer (1 samples, 0.03%)</title><rect x="23.1" y="1091.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="26.1" y="1102.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (1 samples, 0.03%)</title><rect x="23.6" y="1091.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="26.6" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="23.6" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="26.6" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="23.6" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="26.6" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="23.6" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="26.6" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="23.6" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.6" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="23.6" y="1011.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="26.6" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="23.6" y="995.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.6" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="23.6" y="979.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="26.6" y="990.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="23.6" y="963.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.6" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (1 samples, 0.03%)</title><rect x="24.0" y="1123.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.0" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (1 samples, 0.03%)</title><rect x="24.0" y="1107.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="27.0" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.03%)</title><rect x="24.0" y="1091.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="27.0" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.getResponsesFromRelicas (31 samples, 1.08%)</title><rect x="24.4" y="1155.0" width="12.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="24.4" y="1139.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="27.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="24.4" y="1123.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.4" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.get$Lambda (2 samples, 0.07%)</title><rect x="24.4" y="1107.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="27.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.&lt;init&gt; (2 samples, 0.07%)</title><rect x="24.4" y="1091.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="27.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (11 samples, 0.38%)</title><rect x="25.2" y="1139.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="28.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (1 samples, 0.03%)</title><rect x="25.2" y="1123.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="28.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (1 samples, 0.03%)</title><rect x="25.2" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="28.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.newTaskFor (1 samples, 0.03%)</title><rect x="25.6" y="1123.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="28.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/AbstractExecutorService.newTaskFor (1 samples, 0.03%)</title><rect x="25.6" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (1 samples, 0.03%)</title><rect x="25.6" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="28.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="25.6" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="28.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.31%)</title><rect x="26.0" y="1123.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="29.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.31%)</title><rect x="26.0" y="1107.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="29.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.28%)</title><rect x="26.0" y="1091.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="29.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.28%)</title><rect x="26.0" y="1075.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.28%)</title><rect x="26.0" y="1059.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="29.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.28%)</title><rect x="26.0" y="1043.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="29.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.28%)</title><rect x="26.0" y="1027.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="29.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.28%)</title><rect x="26.0" y="1011.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="29.0" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.07%)</title><rect x="26.0" y="995.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="29.0" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="26.4" y="979.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="29.4" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.21%)</title><rect x="26.8" y="995.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="29.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="26.8" y="979.0" width="2.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="29.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="26.8" y="963.0" width="2.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="29.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="26.8" y="947.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="29.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="26.8" y="931.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="29.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="26.8" y="915.0" width="2.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="29.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="26.8" y="899.0" width="2.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="29.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="26.8" y="883.0" width="2.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="29.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="27.3" y="867.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="30.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="29.3" y="1091.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="29.3" y="1075.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="32.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="29.3" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="32.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="29.3" y="1043.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="32.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="29.3" y="1027.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="32.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="29.3" y="1011.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="32.3" y="1022.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="29.3" y="995.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="32.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (18 samples, 0.63%)</title><rect x="29.7" y="1139.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="32.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (18 samples, 0.63%)</title><rect x="29.7" y="1123.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="32.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 0.42%)</title><rect x="29.7" y="1107.0" width="5.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="32.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.31%)</title><rect x="31.0" y="1091.0" width="3.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="34.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.31%)</title><rect x="31.0" y="1075.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.0" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.07%)</title><rect x="31.4" y="1059.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="34.4" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.07%)</title><rect x="31.4" y="1043.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="34.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="31.4" y="1027.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="34.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="31.4" y="1011.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="34.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="31.4" y="995.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="34.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="31.4" y="979.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="34.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="31.4" y="963.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="34.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="31.8" y="947.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="34.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="32.2" y="1059.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="35.2" y="1070.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="32.2" y="1043.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="35.2" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.17%)</title><rect x="32.6" y="1043.0" width="2.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="35.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="32.6" y="1027.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="35.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="32.6" y="1011.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="35.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="32.6" y="995.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="35.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="32.6" y="979.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="35.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="32.6" y="963.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="35.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="33.0" y="947.0" width="1.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="36.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="33.4" y="931.0" width="1.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="36.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="33.4" y="915.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="36.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="33.4" y="899.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="36.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.2" y="883.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="37.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.2" y="867.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="37.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.2" y="851.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="37.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.2" y="835.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="37.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.2" y="819.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="37.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.2" y="803.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="37.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="34.2" y="787.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="37.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="34.7" y="1107.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="37.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="34.7" y="1091.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="34.7" y="1075.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="34.7" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="37.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="34.7" y="1043.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.03%)</title><rect x="34.7" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="37.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.17%)</title><rect x="35.1" y="1107.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="38.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.17%)</title><rect x="35.1" y="1091.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="38.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.17%)</title><rect x="35.1" y="1075.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="38.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.17%)</title><rect x="35.1" y="1059.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="38.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.17%)</title><rect x="35.1" y="1043.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="38.1" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.10%)</title><rect x="35.1" y="1027.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="38.1" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.03%)</title><rect x="35.5" y="1011.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="38.5" y="1022.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="35.9" y="1011.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="38.9" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.07%)</title><rect x="36.3" y="1027.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="39.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="36.7" y="1011.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="39.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="36.7" y="995.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="39.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="36.7" y="979.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="39.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="36.7" y="963.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="39.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="36.7" y="947.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="39.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="36.7" y="931.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="39.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="36.7" y="915.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="39.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="36.7" y="899.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="39.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (7 samples, 0.24%)</title><rect x="37.1" y="1155.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.21%)</title><rect x="37.1" y="1139.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.10%)</title><rect x="37.1" y="1123.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="40.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="37.9" y="1107.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="40.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="37.9" y="1091.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="40.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="37.9" y="1075.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="40.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.10%)</title><rect x="38.3" y="1123.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="41.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.07%)</title><rect x="38.3" y="1107.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="41.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="38.8" y="1091.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="41.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="39.2" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.present (1 samples, 0.03%)</title><rect x="39.6" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.6" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.&lt;init&gt; (1 samples, 0.03%)</title><rect x="39.6" y="1123.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="42.6" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="39.6" y="1107.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="42.6" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.merge (3 samples, 0.10%)</title><rect x="40.0" y="1155.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.0" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (3 samples, 0.10%)</title><rect x="40.0" y="1139.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.0" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (3 samples, 0.10%)</title><rect x="40.0" y="1123.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.0" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.10%)</title><rect x="40.0" y="1107.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.0" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (3 samples, 0.10%)</title><rect x="40.0" y="1091.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="43.0" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.10%)</title><rect x="40.0" y="1075.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="43.0" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.07%)</title><rect x="40.4" y="1059.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="43.4" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (2 samples, 0.07%)</title><rect x="40.4" y="1043.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.4" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.&lt;init&gt; (2 samples, 0.07%)</title><rect x="40.4" y="1027.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="43.4" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (2 samples, 0.07%)</title><rect x="40.4" y="1011.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="43.4" y="1022.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$79/1679395522.apply (1 samples, 0.03%)</title><rect x="40.8" y="995.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="43.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (3 samples, 0.10%)</title><rect x="41.2" y="1171.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="44.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="41.2" y="1155.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="41.2" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="44.2" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="41.6" y="1155.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.6" y="1166.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="41.6" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="44.6" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="41.6" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.6" y="1134.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="41.6" y="1107.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.6" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="41.6" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.6" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="41.6" y="1075.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="44.6" y="1086.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="42.0" y="1155.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="45.0" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (48 samples, 1.67%)</title><rect x="42.5" y="1203.0" width="19.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="45.5" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (48 samples, 1.67%)</title><rect x="42.5" y="1187.0" width="19.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (46 samples, 1.60%)</title><rect x="42.5" y="1171.0" width="18.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="45.5" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (46 samples, 1.60%)</title><rect x="42.5" y="1155.0" width="18.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (46 samples, 1.60%)</title><rect x="42.5" y="1139.0" width="18.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.5" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (46 samples, 1.60%)</title><rect x="42.5" y="1123.0" width="18.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.5" y="1134.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="43.3" y="1107.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="46.3" y="1118.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="43.3" y="1091.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="46.3" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (1 samples, 0.03%)</title><rect x="43.3" y="1075.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="46.3" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (43 samples, 1.50%)</title><rect x="43.7" y="1107.0" width="17.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="43.7" y="1091.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="46.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="43.7" y="1075.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="46.7" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="43.7" y="1059.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="46.7" y="1070.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="43.7" y="1043.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="46.7" y="1054.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="44.1" y="1059.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="47.1" y="1070.0"></text>
</g>
<g>
<title>__send (41 samples, 1.43%)</title><rect x="44.5" y="1091.0" width="16.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="47.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 1.43%)</title><rect x="44.5" y="1075.0" width="16.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="47.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 1.43%)</title><rect x="44.5" y="1059.0" width="16.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="47.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.39%)</title><rect x="44.9" y="1043.0" width="16.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="47.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.39%)</title><rect x="44.9" y="1027.0" width="16.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="47.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.39%)</title><rect x="44.9" y="1011.0" width="16.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="47.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.39%)</title><rect x="44.9" y="995.0" width="16.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="47.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.39%)</title><rect x="44.9" y="979.0" width="16.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="47.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.39%)</title><rect x="44.9" y="963.0" width="16.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="47.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.25%)</title><rect x="46.6" y="947.0" width="14.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="49.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.25%)</title><rect x="46.6" y="931.0" width="14.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="49.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.11%)</title><rect x="48.2" y="915.0" width="13.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="51.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.04%)</title><rect x="49.0" y="899.0" width="12.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="52.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="51.9" y="883.0" width="9.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="54.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="51.9" y="867.0" width="9.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="54.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="51.9" y="851.0" width="9.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="54.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="51.9" y="835.0" width="9.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="54.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="51.9" y="819.0" width="9.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="54.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.70%)</title><rect x="53.1" y="803.0" width="8.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="56.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="53.6" y="787.0" width="7.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="56.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="54.4" y="771.0" width="7.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="57.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="55.6" y="755.0" width="5.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="58.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="55.6" y="739.0" width="5.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="58.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="55.6" y="723.0" width="5.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="58.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="55.6" y="707.0" width="5.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="58.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="55.6" y="691.0" width="5.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="58.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="56.0" y="675.0" width="5.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="59.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="56.0" y="659.0" width="5.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="59.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="56.0" y="643.0" width="5.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="59.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="56.0" y="627.0" width="5.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="59.0" y="638.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="56.0" y="611.0" width="5.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="59.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="56.0" y="595.0" width="5.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="59.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="56.4" y="579.0" width="5.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="59.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="56.8" y="563.0" width="4.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="59.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="57.2" y="547.0" width="4.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="60.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="57.2" y="531.0" width="4.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="60.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="58.1" y="515.0" width="3.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="61.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="58.5" y="499.0" width="2.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="61.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="58.5" y="483.0" width="2.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="61.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="58.5" y="467.0" width="2.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="61.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="60.9" y="451.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="63.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="60.9" y="435.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="63.9" y="446.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.07%)</title><rect x="61.4" y="1171.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="61.4" y="1155.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="64.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.07%)</title><rect x="61.4" y="1139.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="64.4" y="1150.0"></text>
</g>
<g>
<title>[AsyncWorker-0 tid=31430] (79 samples, 2.75%)</title><rect x="62.2" y="1299.0" width="32.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="65.2" y="1310.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (3 samples, 0.10%)</title><rect x="62.2" y="1283.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="65.2" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="62.6" y="1267.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="65.6" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="62.6" y="1251.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="65.6" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="62.6" y="1235.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="65.6" y="1246.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="62.6" y="1219.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="65.6" y="1230.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="63.0" y="1267.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="66.0" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="63.0" y="1251.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="66.0" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="63.0" y="1235.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="66.0" y="1246.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="63.0" y="1219.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="66.0" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="63.4" y="1283.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="66.4" y="1294.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="63.4" y="1267.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="66.4" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="63.4" y="1251.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="66.4" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.03%)</title><rect x="63.4" y="1235.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="66.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.run (75 samples, 2.61%)</title><rect x="63.8" y="1283.0" width="30.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="66.8" y="1294.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (75 samples, 2.61%)</title><rect x="63.8" y="1267.0" width="30.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.8" y="1278.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (75 samples, 2.61%)</title><rect x="63.8" y="1251.0" width="30.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.8" y="1262.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (18 samples, 0.63%)</title><rect x="63.8" y="1235.0" width="7.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (18 samples, 0.63%)</title><rect x="63.8" y="1219.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="66.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.38%)</title><rect x="64.6" y="1203.0" width="4.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="64.6" y="1187.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.03%)</title><rect x="64.6" y="1171.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.35%)</title><rect x="65.1" y="1187.0" width="4.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="68.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.35%)</title><rect x="65.1" y="1171.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.1" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.17%)</title><rect x="65.1" y="1155.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="68.1" y="1166.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.10%)</title><rect x="65.5" y="1139.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="68.5" y="1150.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="65.9" y="1123.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="68.9" y="1134.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="66.3" y="1123.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="69.3" y="1134.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="66.7" y="1139.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="69.7" y="1150.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="67.1" y="1155.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="70.1" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.17%)</title><rect x="67.1" y="1139.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="70.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="67.9" y="1123.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="70.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="67.9" y="1107.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="70.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="67.9" y="1091.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="70.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="67.9" y="1075.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="70.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="67.9" y="1059.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="70.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="67.9" y="1043.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="70.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="68.3" y="1027.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="71.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="68.3" y="1011.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="71.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="68.8" y="995.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="71.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.10%)</title><rect x="69.2" y="1203.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.10%)</title><rect x="69.2" y="1187.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.10%)</title><rect x="69.2" y="1171.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.07%)</title><rect x="69.6" y="1155.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="72.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.07%)</title><rect x="69.6" y="1139.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.07%)</title><rect x="70.4" y="1203.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="73.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.07%)</title><rect x="70.4" y="1187.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.07%)</title><rect x="70.4" y="1171.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="73.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.07%)</title><rect x="70.4" y="1155.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.07%)</title><rect x="70.4" y="1139.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.4" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.07%)</title><rect x="70.4" y="1123.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="73.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="70.4" y="1107.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="73.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="70.4" y="1091.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="73.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.8" y="1075.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="73.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.8" y="1059.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="73.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.8" y="1043.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="73.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.8" y="1027.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="73.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.8" y="1011.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="73.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="70.8" y="995.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="73.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (57 samples, 1.98%)</title><rect x="71.2" y="1235.0" width="23.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.2" y="1246.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (57 samples, 1.98%)</title><rect x="71.2" y="1219.0" width="23.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="74.2" y="1230.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (21 samples, 0.73%)</title><rect x="71.2" y="1203.0" width="8.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.2" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (21 samples, 0.73%)</title><rect x="71.2" y="1187.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.2" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (17 samples, 0.59%)</title><rect x="71.2" y="1171.0" width="7.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.2" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (11 samples, 0.38%)</title><rect x="71.6" y="1155.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.6" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.10%)</title><rect x="71.6" y="1139.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.6" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (8 samples, 0.28%)</title><rect x="72.9" y="1139.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="75.9" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (8 samples, 0.28%)</title><rect x="72.9" y="1123.0" width="3.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (1 samples, 0.03%)</title><rect x="72.9" y="1107.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="75.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="72.9" y="1091.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (1 samples, 0.03%)</title><rect x="72.9" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandle.acquireFence (1 samples, 0.03%)</title><rect x="72.9" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="75.9" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (1 samples, 0.03%)</title><rect x="73.3" y="1107.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="73.3" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="73.3" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="76.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="73.3" y="1059.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="76.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (1 samples, 0.03%)</title><rect x="73.3" y="1043.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.3" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (6 samples, 0.21%)</title><rect x="73.7" y="1107.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="73.7" y="1091.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="73.7" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="73.7" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (4 samples, 0.14%)</title><rect x="74.1" y="1091.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="77.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (4 samples, 0.14%)</title><rect x="74.1" y="1075.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.14%)</title><rect x="74.1" y="1059.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="77.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.14%)</title><rect x="74.1" y="1043.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.14%)</title><rect x="74.1" y="1027.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.14%)</title><rect x="74.1" y="1011.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.14%)</title><rect x="74.1" y="995.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="74.1" y="979.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.1" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="74.1" y="963.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.1" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="74.1" y="947.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.10%)</title><rect x="74.5" y="979.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (1 samples, 0.03%)</title><rect x="75.7" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="78.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (2 samples, 0.07%)</title><rect x="76.1" y="1155.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.1" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="76.1" y="1139.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="79.1" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="76.1" y="1123.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="76.1" y="1107.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="79.1" y="1118.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="76.1" y="1091.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (1 samples, 0.03%)</title><rect x="76.1" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="79.1" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.getTimestamp (1 samples, 0.03%)</title><rect x="76.6" y="1139.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.6" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (3 samples, 0.10%)</title><rect x="77.0" y="1155.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/226225859.linkToTargetMethod (2 samples, 0.07%)</title><rect x="77.0" y="1139.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1279714552.invoke (2 samples, 0.07%)</title><rect x="77.0" y="1123.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="80.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/910680026.invokeStatic (1 samples, 0.03%)</title><rect x="77.0" y="1107.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="80.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.03%)</title><rect x="77.0" y="1091.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (1 samples, 0.03%)</title><rect x="77.0" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandle.invokeBasic (1 samples, 0.03%)</title><rect x="77.4" y="1107.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="80.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="77.8" y="1139.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="80.8" y="1150.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="77.8" y="1123.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="80.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (4 samples, 0.14%)</title><rect x="78.2" y="1171.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.14%)</title><rect x="78.2" y="1155.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="81.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="78.2" y="1139.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="81.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="78.6" y="1139.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="78.6" y="1123.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="81.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="78.6" y="1107.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="79.0" y="1139.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="79.0" y="1123.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="79.4" y="1139.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="79.4" y="1123.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="79.4" y="1107.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="82.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (36 samples, 1.25%)</title><rect x="79.8" y="1203.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="82.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (36 samples, 1.25%)</title><rect x="79.8" y="1187.0" width="14.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="79.8" y="1171.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.8" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (35 samples, 1.22%)</title><rect x="80.3" y="1171.0" width="14.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="83.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 1.18%)</title><rect x="80.7" y="1155.0" width="13.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (34 samples, 1.18%)</title><rect x="80.7" y="1139.0" width="13.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="83.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (34 samples, 1.18%)</title><rect x="80.7" y="1123.0" width="13.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (34 samples, 1.18%)</title><rect x="80.7" y="1107.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="80.7" y="1091.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="83.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="80.7" y="1075.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="83.7" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.10%)</title><rect x="80.7" y="1059.0" width="1.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="83.7" y="1070.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="80.7" y="1043.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="83.7" y="1054.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="81.1" y="1043.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="84.1" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.03%)</title><rect x="81.1" y="1027.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="84.1" y="1038.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="81.5" y="1027.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="84.5" y="1038.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="81.5" y="1011.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="84.5" y="1022.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="81.9" y="1059.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="84.9" y="1070.0"></text>
</g>
<g>
<title>__send (30 samples, 1.04%)</title><rect x="82.3" y="1091.0" width="12.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="85.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.04%)</title><rect x="82.3" y="1075.0" width="12.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="85.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.04%)</title><rect x="82.3" y="1059.0" width="12.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="85.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="82.7" y="1043.0" width="11.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="85.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="82.7" y="1027.0" width="11.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="85.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="82.7" y="1011.0" width="11.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="85.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="82.7" y="995.0" width="11.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="85.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="83.1" y="979.0" width="11.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="86.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="83.1" y="963.0" width="11.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="86.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.94%)</title><rect x="83.5" y="947.0" width="11.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="86.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.94%)</title><rect x="83.5" y="931.0" width="11.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="86.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="84.4" y="915.0" width="10.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="87.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="84.8" y="899.0" width="9.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="87.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="85.6" y="883.0" width="9.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="88.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="86.0" y="867.0" width="8.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="89.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="86.0" y="851.0" width="8.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="89.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="86.0" y="835.0" width="8.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="89.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="86.0" y="819.0" width="8.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="89.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="86.0" y="803.0" width="8.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="89.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="86.0" y="787.0" width="8.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="89.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.70%)</title><rect x="86.4" y="771.0" width="8.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="89.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="87.7" y="755.0" width="6.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="90.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="88.5" y="739.0" width="6.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="91.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="88.9" y="723.0" width="5.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="91.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="88.9" y="707.0" width="5.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="91.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="88.9" y="691.0" width="5.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="91.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="88.9" y="675.0" width="5.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="91.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="88.9" y="659.0" width="5.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="91.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="89.3" y="643.0" width="5.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="92.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="89.7" y="627.0" width="4.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="92.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="89.7" y="611.0" width="4.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="92.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="89.7" y="595.0" width="4.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="92.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="89.7" y="579.0" width="4.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="92.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="89.7" y="563.0" width="4.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="92.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="89.7" y="547.0" width="4.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="92.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="89.7" y="531.0" width="4.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="92.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="90.5" y="515.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="93.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="91.8" y="499.0" width="2.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="94.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="93.0" y="483.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="96.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="93.4" y="467.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="96.4" y="478.0"></text>
</g>
<g>
<title>[AsyncWorker-0 tid=31431] (82 samples, 2.86%)</title><rect x="94.6" y="1299.0" width="33.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="97.6" y="1310.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.07%)</title><rect x="94.6" y="1283.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="97.6" y="1294.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.03%)</title><rect x="95.0" y="1267.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="98.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/Thread.run (80 samples, 2.79%)</title><rect x="95.5" y="1283.0" width="32.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="98.5" y="1294.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (80 samples, 2.79%)</title><rect x="95.5" y="1267.0" width="32.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.5" y="1278.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (80 samples, 2.79%)</title><rect x="95.5" y="1251.0" width="32.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.5" y="1262.0">ja..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.03%)</title><rect x="95.5" y="1235.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="98.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.42%)</title><rect x="95.9" y="1235.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="98.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (12 samples, 0.42%)</title><rect x="95.9" y="1219.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.28%)</title><rect x="95.9" y="1203.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="98.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.28%)</title><rect x="95.9" y="1187.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="98.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.28%)</title><rect x="95.9" y="1171.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.9" y="1182.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="95.9" y="1155.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="98.9" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.17%)</title><rect x="96.3" y="1155.0" width="2.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="99.3" y="1166.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.07%)</title><rect x="97.1" y="1139.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="100.1" y="1150.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="97.1" y="1123.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="100.1" y="1134.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="97.5" y="1123.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="100.5" y="1134.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="97.9" y="1139.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="100.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="98.3" y="1155.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="101.3" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.07%)</title><rect x="98.3" y="1139.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="101.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="98.3" y="1123.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="101.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="98.3" y="1107.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="101.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="98.3" y="1091.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="101.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="98.3" y="1075.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="101.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="98.3" y="1059.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="101.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="98.3" y="1043.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="101.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="98.7" y="1027.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="101.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="98.7" y="1011.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="101.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="98.7" y="995.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="101.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.07%)</title><rect x="99.2" y="1203.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.07%)</title><rect x="99.2" y="1187.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.07%)</title><rect x="99.2" y="1171.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="102.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.03%)</title><rect x="99.2" y="1155.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="99.6" y="1155.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="102.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="99.6" y="1139.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.07%)</title><rect x="100.0" y="1203.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.07%)</title><rect x="100.0" y="1187.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="103.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.07%)</title><rect x="100.0" y="1171.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="103.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.07%)</title><rect x="100.0" y="1155.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="103.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.07%)</title><rect x="100.0" y="1139.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.0" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.07%)</title><rect x="100.0" y="1123.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="103.0" y="1134.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="100.0" y="1107.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="103.0" y="1118.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="100.4" y="1107.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="103.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (67 samples, 2.33%)</title><rect x="100.8" y="1235.0" width="27.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.8" y="1246.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (65 samples, 2.26%)</title><rect x="101.6" y="1219.0" width="26.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.6" y="1230.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (20 samples, 0.70%)</title><rect x="101.6" y="1203.0" width="8.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.6" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (20 samples, 0.70%)</title><rect x="101.6" y="1187.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="104.6" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (18 samples, 0.63%)</title><rect x="101.6" y="1171.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.6" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (16 samples, 0.56%)</title><rect x="101.6" y="1155.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="104.6" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.07%)</title><rect x="101.6" y="1139.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="104.6" y="1150.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (1 samples, 0.03%)</title><rect x="101.6" y="1123.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.6" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="102.0" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.0" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="102.0" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.0" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="102.0" y="1091.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="105.0" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="102.0" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="105.0" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="102.0" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="105.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (1 samples, 0.03%)</title><rect x="102.0" y="1043.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="102.0" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="105.0" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (14 samples, 0.49%)</title><rect x="102.4" y="1139.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="105.4" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (13 samples, 0.45%)</title><rect x="102.4" y="1123.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.4" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (13 samples, 0.45%)</title><rect x="102.4" y="1107.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (9 samples, 0.31%)</title><rect x="102.4" y="1091.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="105.4" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="102.4" y="1075.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="105.4" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="102.4" y="1059.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="105.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (1 samples, 0.03%)</title><rect x="102.9" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="105.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (7 samples, 0.24%)</title><rect x="103.3" y="1075.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.21%)</title><rect x="103.3" y="1059.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="106.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.21%)</title><rect x="103.3" y="1043.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.17%)</title><rect x="103.7" y="1027.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.17%)</title><rect x="103.7" y="1011.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.17%)</title><rect x="103.7" y="995.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="106.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="103.7" y="979.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.7" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="103.7" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.7" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="103.7" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.7" y="958.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="103.7" y="931.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.14%)</title><rect x="104.1" y="979.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="107.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="105.3" y="963.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.3" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="105.3" y="947.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="108.3" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="105.3" y="931.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="108.3" y="942.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="105.3" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="105.7" y="1059.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="108.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="105.7" y="1043.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="105.7" y="1027.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (1 samples, 0.03%)</title><rect x="105.7" y="1011.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="108.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (4 samples, 0.14%)</title><rect x="106.1" y="1091.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.1" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.07%)</title><rect x="106.1" y="1075.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.1" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="106.1" y="1059.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.1" y="1070.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.03%)</title><rect x="106.1" y="1043.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.1" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (1 samples, 0.03%)</title><rect x="106.1" y="1027.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.1" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.03%)</title><rect x="106.6" y="1043.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.6" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (1 samples, 0.03%)</title><rect x="106.6" y="1027.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="109.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.07%)</title><rect x="107.0" y="1075.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="110.0" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="107.0" y="1059.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.0" y="1070.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (1 samples, 0.03%)</title><rect x="107.4" y="1043.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="110.4" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (1 samples, 0.03%)</title><rect x="107.4" y="1027.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.4" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (1 samples, 0.03%)</title><rect x="107.8" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.8" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.03%)</title><rect x="107.8" y="1107.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="110.8" y="1118.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="107.8" y="1091.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="110.8" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (2 samples, 0.07%)</title><rect x="108.2" y="1155.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.2" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.getData (1 samples, 0.03%)</title><rect x="108.2" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.2" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="108.2" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="111.2" y="1134.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="108.2" y="1107.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.2" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="108.2" y="1091.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.2" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="108.2" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="111.2" y="1086.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="108.2" y="1059.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.2" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="108.2" y="1043.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="111.2" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="108.2" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.2" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="108.2" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="111.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.present (1 samples, 0.03%)</title><rect x="108.6" y="1139.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.6" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.&lt;init&gt; (1 samples, 0.03%)</title><rect x="108.6" y="1123.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="111.6" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="108.6" y="1107.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="111.6" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (2 samples, 0.07%)</title><rect x="109.0" y="1171.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.0" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (45 samples, 1.57%)</title><rect x="109.8" y="1203.0" width="18.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (45 samples, 1.57%)</title><rect x="109.8" y="1187.0" width="18.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.8" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (45 samples, 1.57%)</title><rect x="109.8" y="1171.0" width="18.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.8" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="109.8" y="1155.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.8" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="109.8" y="1139.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.8" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="109.8" y="1123.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.03%)</title><rect x="109.8" y="1107.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.8" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="109.8" y="1091.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="112.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (44 samples, 1.53%)</title><rect x="110.3" y="1155.0" width="18.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (44 samples, 1.53%)</title><rect x="110.3" y="1139.0" width="18.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="113.3" y="1150.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="110.3" y="1123.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="113.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (42 samples, 1.46%)</title><rect x="110.7" y="1123.0" width="17.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (41 samples, 1.43%)</title><rect x="111.1" y="1107.0" width="16.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="114.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="111.1" y="1091.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="114.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="111.1" y="1075.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="114.1" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.10%)</title><rect x="111.1" y="1059.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="114.1" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.03%)</title><rect x="111.1" y="1043.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="114.1" y="1054.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="111.5" y="1043.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="114.5" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.03%)</title><rect x="111.9" y="1027.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="114.9" y="1038.0"></text>
</g>
<g>
<title>__send (38 samples, 1.32%)</title><rect x="112.3" y="1091.0" width="15.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="115.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 1.32%)</title><rect x="112.3" y="1075.0" width="15.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="115.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 1.32%)</title><rect x="112.3" y="1059.0" width="15.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="115.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.29%)</title><rect x="112.7" y="1043.0" width="15.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="115.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.25%)</title><rect x="113.1" y="1027.0" width="14.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="116.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="113.5" y="1011.0" width="14.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="116.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="113.5" y="995.0" width="14.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="116.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.18%)</title><rect x="113.9" y="979.0" width="14.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="116.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.15%)</title><rect x="114.4" y="963.0" width="13.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="117.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="115.2" y="947.0" width="12.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="118.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="116.0" y="931.0" width="11.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="119.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="116.4" y="915.0" width="11.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="119.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="117.2" y="899.0" width="10.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="120.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="118.1" y="883.0" width="9.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="121.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="118.9" y="867.0" width="9.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="121.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="118.9" y="851.0" width="9.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="121.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="118.9" y="835.0" width="9.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="121.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="118.9" y="819.0" width="9.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="121.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="118.9" y="803.0" width="9.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="121.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="118.9" y="787.0" width="9.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="121.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="119.3" y="771.0" width="8.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="122.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="119.3" y="755.0" width="8.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="122.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="120.1" y="739.0" width="7.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="123.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="120.5" y="723.0" width="7.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="123.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="120.5" y="707.0" width="7.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="123.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="120.5" y="691.0" width="7.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="123.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="120.5" y="675.0" width="7.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="123.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="120.5" y="659.0" width="7.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="123.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="120.5" y="643.0" width="7.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="123.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="120.5" y="627.0" width="7.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="123.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="120.5" y="611.0" width="7.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="123.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="121.3" y="595.0" width="6.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="124.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="121.3" y="579.0" width="6.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="124.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="122.2" y="563.0" width="5.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="125.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="122.2" y="547.0" width="5.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="125.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="123.0" y="531.0" width="4.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="126.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="123.8" y="515.0" width="4.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="126.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="124.2" y="499.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="127.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="124.6" y="483.0" width="3.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="127.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="125.0" y="467.0" width="2.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="128.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="127.5" y="451.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="130.5" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="127.5" y="435.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="130.5" y="446.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="127.9" y="1123.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="130.9" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="127.9" y="1107.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="130.9" y="1118.0"></text>
</g>
<g>
<title>[AsyncWorker-1 tid=31422] (128 samples, 4.46%)</title><rect x="128.3" y="1299.0" width="52.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="131.3" y="1310.0">[Asyn..</text>
</g>
<g>
<title>java/lang/Thread.run (128 samples, 4.46%)</title><rect x="128.3" y="1283.0" width="52.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.3" y="1294.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (128 samples, 4.46%)</title><rect x="128.3" y="1267.0" width="52.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="131.3" y="1278.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (128 samples, 4.46%)</title><rect x="128.3" y="1251.0" width="52.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.3" y="1262.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 0.56%)</title><rect x="128.3" y="1235.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="131.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (16 samples, 0.56%)</title><rect x="128.3" y="1219.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="131.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.49%)</title><rect x="128.3" y="1203.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="131.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="128.3" y="1187.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="128.3" y="1171.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="128.3" y="1155.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="131.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="128.3" y="1139.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="131.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="128.3" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="128.3" y="1107.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.03%)</title><rect x="128.7" y="1187.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="128.7" y="1171.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="131.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="128.7" y="1155.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.03%)</title><rect x="128.7" y="1139.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="128.7" y="1123.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="131.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="128.7" y="1107.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.42%)</title><rect x="129.2" y="1187.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.42%)</title><rect x="129.2" y="1171.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.2" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.24%)</title><rect x="129.2" y="1155.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="132.2" y="1166.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="129.6" y="1139.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="132.6" y="1150.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.07%)</title><rect x="130.0" y="1139.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="133.0" y="1150.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.10%)</title><rect x="130.8" y="1139.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="133.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="130.8" y="1123.0" width="1.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="133.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="130.8" y="1107.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="133.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="131.2" y="1091.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="134.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="131.2" y="1075.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="134.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="131.2" y="1059.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="134.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="131.6" y="1043.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="134.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="132.0" y="1155.0" width="2.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="135.0" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.17%)</title><rect x="132.0" y="1139.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="135.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="132.4" y="1123.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="135.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="132.4" y="1107.0" width="1.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="135.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="132.4" y="1091.0" width="1.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="135.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="132.4" y="1075.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="135.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="132.4" y="1059.0" width="1.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="135.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="132.4" y="1043.0" width="1.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="135.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="132.8" y="1027.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="135.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="133.3" y="1011.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="136.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="133.7" y="995.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="136.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="134.1" y="1203.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="137.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="134.1" y="1187.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="137.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="134.1" y="1171.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="137.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="134.1" y="1155.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="134.1" y="1139.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="137.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="134.5" y="1203.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="137.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="134.5" y="1187.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="137.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="134.5" y="1171.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="137.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="134.5" y="1155.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="137.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="134.5" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.5" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="134.5" y="1123.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="137.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="134.5" y="1107.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="137.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="134.5" y="1091.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="137.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="134.5" y="1075.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="137.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="134.5" y="1059.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="137.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="134.5" y="1043.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="137.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="134.5" y="1027.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="137.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="134.5" y="1011.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="137.5" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (112 samples, 3.90%)</title><rect x="134.9" y="1235.0" width="46.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="137.9" y="1246.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (112 samples, 3.90%)</title><rect x="134.9" y="1219.0" width="46.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.9" y="1230.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (73 samples, 2.54%)</title><rect x="134.9" y="1203.0" width="30.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.9" y="1214.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (73 samples, 2.54%)</title><rect x="134.9" y="1187.0" width="30.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="137.9" y="1198.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (71 samples, 2.47%)</title><rect x="134.9" y="1171.0" width="29.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="137.9" y="1182.0">ru..</text>
</g>
<g>
<title>java/util/ArrayList.contains (2 samples, 0.07%)</title><rect x="135.3" y="1155.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="138.3" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOf (2 samples, 0.07%)</title><rect x="135.3" y="1139.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="138.3" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.indexOfRange (2 samples, 0.07%)</title><rect x="135.3" y="1123.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="135.7" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="138.7" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="136.1" y="1155.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="139.1" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (13 samples, 0.45%)</title><rect x="136.5" y="1155.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.5" y="1166.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="136.5" y="1139.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="139.5" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="137.0" y="1139.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.0" y="1150.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="137.0" y="1123.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.0" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="137.0" y="1107.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="140.0" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="137.0" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="140.0" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.03%)</title><rect x="137.0" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.0" y="1086.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="137.0" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="140.0" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="137.0" y="1043.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="140.0" y="1054.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="137.0" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.0" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (10 samples, 0.35%)</title><rect x="137.4" y="1139.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="140.4" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (9 samples, 0.31%)</title><rect x="137.4" y="1123.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="140.4" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (1 samples, 0.03%)</title><rect x="137.4" y="1107.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="137.4" y="1091.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="140.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="137.4" y="1075.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="137.4" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="140.4" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (8 samples, 0.28%)</title><rect x="137.8" y="1107.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="140.8" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (8 samples, 0.28%)</title><rect x="137.8" y="1091.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="140.8" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.03%)</title><rect x="137.8" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="140.8" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="137.8" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="140.8" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.03%)</title><rect x="137.8" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.8" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="138.2" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="141.2" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="138.2" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="141.2" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="138.2" y="1043.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="141.2" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.03%)</title><rect x="138.2" y="1027.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="141.2" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.03%)</title><rect x="138.2" y="1011.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="141.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (6 samples, 0.21%)</title><rect x="138.6" y="1075.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="141.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.17%)</title><rect x="138.6" y="1059.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="141.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.17%)</title><rect x="138.6" y="1043.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="141.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (5 samples, 0.17%)</title><rect x="138.6" y="1027.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="141.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.17%)</title><rect x="138.6" y="1011.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="141.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.17%)</title><rect x="138.6" y="995.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="141.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.14%)</title><rect x="139.0" y="979.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="142.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.07%)</title><rect x="139.8" y="963.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.8" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="139.8" y="947.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="142.8" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="139.8" y="931.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.8" y="942.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="139.8" y="915.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.8" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="140.2" y="915.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="143.2" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="140.2" y="899.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.2" y="910.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="140.2" y="883.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="143.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="140.7" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="143.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="140.7" y="1043.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="143.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="140.7" y="1027.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="143.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (1 samples, 0.03%)</title><rect x="140.7" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="143.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (1 samples, 0.03%)</title><rect x="141.1" y="1123.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="144.1" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.03%)</title><rect x="141.1" y="1107.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="144.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="141.1" y="1091.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.1" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="141.1" y="1075.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.1" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="141.1" y="1059.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.1" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="141.1" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.1" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.03%)</title><rect x="141.1" y="1027.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.1" y="1038.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="141.1" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.1" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="141.1" y="995.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.1" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="141.1" y="979.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Row.getKey (1 samples, 0.03%)</title><rect x="141.5" y="1139.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.5" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="141.5" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="144.5" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (7 samples, 0.24%)</title><rect x="141.9" y="1155.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="144.9" y="1166.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.03%)</title><rect x="142.3" y="1139.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.3" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="142.3" y="1123.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.3" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1 samples, 0.03%)</title><rect x="142.3" y="1107.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (5 samples, 0.17%)</title><rect x="142.7" y="1139.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.7" y="1150.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (4 samples, 0.14%)</title><rect x="142.7" y="1123.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="145.7" y="1134.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (2 samples, 0.07%)</title><rect x="142.7" y="1107.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.7" y="1118.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (2 samples, 0.07%)</title><rect x="142.7" y="1091.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.7" y="1102.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (2 samples, 0.07%)</title><rect x="142.7" y="1075.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.7" y="1086.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.07%)</title><rect x="142.7" y="1059.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.7" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.07%)</title><rect x="142.7" y="1043.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.7" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="143.1" y="1027.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.1" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="143.1" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.1" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="143.1" y="995.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="146.1" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (1 samples, 0.03%)</title><rect x="143.5" y="1107.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.5" y="1118.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (1 samples, 0.03%)</title><rect x="143.5" y="1091.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.5" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putLong (1 samples, 0.03%)</title><rect x="143.5" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.5" y="1086.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (1 samples, 0.03%)</title><rect x="143.9" y="1107.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="146.9" y="1118.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (1 samples, 0.03%)</title><rect x="143.9" y="1091.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.9" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (1 samples, 0.03%)</title><rect x="143.9" y="1075.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.9" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (1 samples, 0.03%)</title><rect x="144.4" y="1123.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.4" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (1 samples, 0.03%)</title><rect x="144.4" y="1107.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="147.4" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.03%)</title><rect x="144.4" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="147.4" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.getResponsesFromRelicas (35 samples, 1.22%)</title><rect x="144.8" y="1155.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="147.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.17%)</title><rect x="145.2" y="1139.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.17%)</title><rect x="145.2" y="1123.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="148.2" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.get$Lambda (5 samples, 0.17%)</title><rect x="145.2" y="1107.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.&lt;init&gt; (5 samples, 0.17%)</title><rect x="145.2" y="1091.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.2" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.size (1 samples, 0.03%)</title><rect x="147.2" y="1139.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (6 samples, 0.21%)</title><rect x="147.6" y="1139.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.&lt;init&gt; (2 samples, 0.07%)</title><rect x="147.6" y="1123.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="150.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (2 samples, 0.07%)</title><rect x="147.6" y="1107.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="150.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.14%)</title><rect x="148.5" y="1123.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.14%)</title><rect x="148.5" y="1107.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.14%)</title><rect x="148.5" y="1091.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="151.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.14%)</title><rect x="148.5" y="1075.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.14%)</title><rect x="148.5" y="1059.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="151.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.14%)</title><rect x="148.5" y="1043.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.14%)</title><rect x="148.5" y="1027.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="151.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.14%)</title><rect x="148.5" y="1011.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.5" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="148.5" y="995.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="151.5" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="148.5" y="979.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="151.5" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.10%)</title><rect x="148.9" y="995.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="151.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="148.9" y="979.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="151.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="148.9" y="963.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="151.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="148.9" y="947.0" width="1.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="151.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="148.9" y="931.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="151.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="148.9" y="915.0" width="1.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="151.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="148.9" y="899.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="151.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="148.9" y="883.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="151.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="149.3" y="867.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="152.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (22 samples, 0.77%)</title><rect x="150.1" y="1139.0" width="9.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (22 samples, 0.77%)</title><rect x="150.1" y="1123.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (16 samples, 0.56%)</title><rect x="150.1" y="1107.0" width="6.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="153.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 0.52%)</title><rect x="150.5" y="1091.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 0.52%)</title><rect x="150.5" y="1075.0" width="6.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.5" y="1086.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="150.5" y="1059.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="153.5" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.21%)</title><rect x="150.9" y="1059.0" width="2.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="153.9" y="1070.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="151.3" y="1043.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="154.3" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="151.7" y="1043.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="154.7" y="1054.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.07%)</title><rect x="152.2" y="1043.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="155.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="152.2" y="1027.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="155.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="152.2" y="1011.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="155.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="152.6" y="995.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="155.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="152.6" y="979.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="155.6" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="153.0" y="1043.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="156.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="153.4" y="1059.0" width="3.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="156.4" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.28%)</title><rect x="153.4" y="1043.0" width="3.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="156.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="153.8" y="1027.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="156.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="153.8" y="1011.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="156.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="153.8" y="995.0" width="2.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="156.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="153.8" y="979.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="156.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="153.8" y="963.0" width="2.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="156.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="153.8" y="947.0" width="2.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="156.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="154.2" y="931.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="157.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="154.2" y="915.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="157.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="154.2" y="899.0" width="2.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="157.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.21%)</title><rect x="156.7" y="1107.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="159.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.21%)</title><rect x="156.7" y="1091.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="159.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.21%)</title><rect x="156.7" y="1075.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.21%)</title><rect x="156.7" y="1059.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.21%)</title><rect x="156.7" y="1043.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="159.7" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="156.7" y="1027.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="159.7" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="156.7" y="1011.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="159.7" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="157.1" y="1027.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="160.1" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.14%)</title><rect x="157.5" y="1027.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="160.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="157.9" y="1011.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="160.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="157.9" y="995.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="160.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="157.9" y="979.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="160.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="157.9" y="963.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="160.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="157.9" y="947.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="160.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="158.3" y="931.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="161.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="158.3" y="915.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="161.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="158.3" y="899.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="161.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.getRf (1 samples, 0.03%)</title><rect x="159.1" y="1155.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="162.1" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (4 samples, 0.14%)</title><rect x="159.6" y="1155.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="162.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.03%)</title><rect x="159.6" y="1139.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="162.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (1 samples, 0.03%)</title><rect x="159.6" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="162.6" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="160.0" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="163.0" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="160.0" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="163.0" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="160.0" y="1107.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.0" y="1118.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="160.0" y="1091.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="163.0" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (1 samples, 0.03%)</title><rect x="160.0" y="1075.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.07%)</title><rect x="160.4" y="1139.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="160.4" y="1123.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="163.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="160.8" y="1123.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="163.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="160.8" y="1107.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.8" y="1118.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="160.8" y="1091.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="163.8" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.merge (6 samples, 0.21%)</title><rect x="161.2" y="1155.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="164.2" y="1166.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.03%)</title><rect x="161.2" y="1139.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="164.2" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.03%)</title><rect x="161.2" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="164.2" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.03%)</title><rect x="161.2" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="164.2" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="161.2" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="164.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="161.2" y="1075.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="164.2" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (2 samples, 0.07%)</title><rect x="161.6" y="1139.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="164.6" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (3 samples, 0.10%)</title><rect x="162.4" y="1139.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.4" y="1150.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (1 samples, 0.03%)</title><rect x="162.4" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="165.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="162.4" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="165.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="162.4" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="165.4" y="1102.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$79/1679395522.get$Lambda (1 samples, 0.03%)</title><rect x="162.4" y="1075.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="165.4" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (2 samples, 0.07%)</title><rect x="162.8" y="1123.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="165.8" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.07%)</title><rect x="162.8" y="1107.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.8" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (2 samples, 0.07%)</title><rect x="162.8" y="1091.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="165.8" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.07%)</title><rect x="162.8" y="1075.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="165.8" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.07%)</title><rect x="162.8" y="1059.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="165.8" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.03%)</title><rect x="162.8" y="1043.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.8" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.03%)</title><rect x="162.8" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.8" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (1 samples, 0.03%)</title><rect x="162.8" y="1011.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.8" y="1022.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$79/1679395522.apply (1 samples, 0.03%)</title><rect x="162.8" y="995.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.8" y="1006.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (1 samples, 0.03%)</title><rect x="162.8" y="979.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.8" y="990.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.isKnown (1 samples, 0.03%)</title><rect x="163.3" y="1043.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="166.3" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (1 samples, 0.03%)</title><rect x="163.7" y="1155.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="166.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="163.7" y="1139.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="166.7" y="1150.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="163.7" y="1123.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="166.7" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (2 samples, 0.07%)</title><rect x="164.1" y="1171.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.1" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="164.1" y="1155.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.1" y="1166.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="164.1" y="1139.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="167.1" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="164.1" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="164.1" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.1" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="164.1" y="1091.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="167.1" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="164.1" y="1075.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.1" y="1086.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="164.1" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="167.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="164.5" y="1155.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="167.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="164.5" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="167.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="164.5" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="167.5" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (39 samples, 1.36%)</title><rect x="164.9" y="1203.0" width="16.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="167.9" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (39 samples, 1.36%)</title><rect x="164.9" y="1187.0" width="16.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="167.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="166.1" y="1171.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="166.1" y="1155.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="166.1" y="1139.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (35 samples, 1.22%)</title><rect x="166.5" y="1171.0" width="14.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="169.5" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (35 samples, 1.22%)</title><rect x="166.5" y="1155.0" width="14.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="169.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (35 samples, 1.22%)</title><rect x="166.5" y="1139.0" width="14.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="169.5" y="1150.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="166.5" y="1123.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="169.5" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="166.9" y="1123.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="169.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (33 samples, 1.15%)</title><rect x="167.4" y="1123.0" width="13.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="170.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (32 samples, 1.11%)</title><rect x="167.8" y="1107.0" width="13.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="170.8" y="1118.0"></text>
</g>
<g>
<title>__send (32 samples, 1.11%)</title><rect x="167.8" y="1091.0" width="13.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="170.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.11%)</title><rect x="167.8" y="1075.0" width="13.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="170.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.11%)</title><rect x="167.8" y="1059.0" width="13.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="170.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.11%)</title><rect x="167.8" y="1043.0" width="13.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="170.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.11%)</title><rect x="167.8" y="1027.0" width="13.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="170.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="168.2" y="1011.0" width="12.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="171.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="168.2" y="995.0" width="12.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="171.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="168.2" y="979.0" width="12.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="171.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="168.2" y="963.0" width="12.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="171.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="168.2" y="947.0" width="12.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="171.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.04%)</title><rect x="168.6" y="931.0" width="12.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="171.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="169.0" y="915.0" width="11.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="172.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="169.0" y="899.0" width="11.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="172.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="170.6" y="883.0" width="10.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="173.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="171.5" y="867.0" width="9.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="174.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="171.5" y="851.0" width="9.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="174.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="171.9" y="835.0" width="9.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="174.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.70%)</title><rect x="172.7" y="819.0" width="8.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="175.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="173.1" y="803.0" width="7.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="176.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="173.1" y="787.0" width="7.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="176.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="173.1" y="771.0" width="7.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="176.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="175.2" y="755.0" width="5.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="178.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="175.6" y="739.0" width="5.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="178.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="176.4" y="723.0" width="4.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="179.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="176.4" y="707.0" width="4.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="179.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="176.4" y="691.0" width="4.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="179.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="176.4" y="675.0" width="4.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="179.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="176.4" y="659.0" width="4.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="179.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="176.4" y="643.0" width="4.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="179.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="177.6" y="627.0" width="3.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="180.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="177.6" y="611.0" width="3.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="180.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="178.0" y="595.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="181.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="178.0" y="579.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="181.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="178.5" y="563.0" width="2.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="181.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="178.5" y="547.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="181.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="178.5" y="531.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="181.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="179.7" y="515.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="182.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="180.1" y="499.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="183.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="180.1" y="483.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="183.1" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="180.1" y="467.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="183.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="180.5" y="451.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="183.5" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="180.5" y="435.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="183.5" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="180.5" y="419.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="183.5" y="430.0"></text>
</g>
<g>
<title>[AsyncWorker-1 tid=31432] (84 samples, 2.92%)</title><rect x="180.9" y="1299.0" width="34.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="183.9" y="1310.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="180.9" y="1283.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="183.9" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="180.9" y="1267.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="183.9" y="1278.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="181.3" y="1283.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="184.3" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="181.3" y="1267.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="184.3" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="181.3" y="1251.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="184.3" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="181.3" y="1235.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="184.3" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="181.3" y="1219.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="184.3" y="1230.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.03%)</title><rect x="181.3" y="1203.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="184.3" y="1214.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.03%)</title><rect x="181.7" y="1283.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="184.7" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="181.7" y="1267.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="184.7" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="181.7" y="1251.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="184.7" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="181.7" y="1235.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="184.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.run (81 samples, 2.82%)</title><rect x="182.2" y="1283.0" width="33.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="185.2" y="1294.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (81 samples, 2.82%)</title><rect x="182.2" y="1267.0" width="33.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.2" y="1278.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (81 samples, 2.82%)</title><rect x="182.2" y="1251.0" width="33.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="185.2" y="1262.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (19 samples, 0.66%)</title><rect x="183.0" y="1235.0" width="7.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (18 samples, 0.63%)</title><rect x="183.4" y="1219.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.52%)</title><rect x="183.4" y="1203.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 0.52%)</title><rect x="183.4" y="1187.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 0.52%)</title><rect x="183.4" y="1171.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.4" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.17%)</title><rect x="184.2" y="1155.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="187.2" y="1166.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.07%)</title><rect x="184.2" y="1139.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="187.2" y="1150.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.07%)</title><rect x="185.0" y="1139.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="188.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="185.0" y="1123.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="188.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="185.0" y="1107.0" width="0.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="188.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="185.4" y="1091.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="188.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="185.4" y="1075.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="188.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="185.4" y="1059.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="188.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="185.4" y="1043.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="188.4" y="1054.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="185.8" y="1139.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="188.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="186.3" y="1155.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="189.3" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.24%)</title><rect x="186.3" y="1139.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="189.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="186.7" y="1123.0" width="2.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="189.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="186.7" y="1107.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="189.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="186.7" y="1091.0" width="2.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="189.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="186.7" y="1075.0" width="2.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="189.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="187.1" y="1059.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="190.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="187.1" y="1043.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="190.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="187.1" y="1027.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="190.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="187.1" y="1011.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="190.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="187.1" y="995.0" width="2.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="190.1" y="1006.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="189.1" y="1139.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="192.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.07%)</title><rect x="189.5" y="1203.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.07%)</title><rect x="189.5" y="1187.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.07%)</title><rect x="189.5" y="1171.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (2 samples, 0.07%)</title><rect x="189.5" y="1155.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="190.4" y="1203.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="193.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="190.4" y="1187.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="190.4" y="1171.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="190.4" y="1155.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="190.4" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.4" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="190.4" y="1123.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="193.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="190.4" y="1107.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="193.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="190.4" y="1091.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="193.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="190.4" y="1075.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="193.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="190.4" y="1059.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="193.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="190.4" y="1043.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="193.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="190.4" y="1027.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="193.4" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (60 samples, 2.09%)</title><rect x="190.8" y="1235.0" width="24.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.8" y="1246.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (60 samples, 2.09%)</title><rect x="190.8" y="1219.0" width="24.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.8" y="1230.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (24 samples, 0.84%)</title><rect x="190.8" y="1203.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="193.8" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (24 samples, 0.84%)</title><rect x="190.8" y="1187.0" width="9.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.8" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (21 samples, 0.73%)</title><rect x="191.2" y="1171.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="191.2" y="1155.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="194.2" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (16 samples, 0.56%)</title><rect x="191.6" y="1155.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="194.6" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.03%)</title><rect x="191.6" y="1139.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="194.6" y="1150.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="191.6" y="1123.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="194.6" y="1134.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="191.6" y="1107.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="194.6" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.03%)</title><rect x="191.6" y="1091.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="194.6" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="192.0" y="1139.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.0" y="1150.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="192.0" y="1123.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.0" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="192.0" y="1107.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.0" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="192.0" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.0" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.03%)</title><rect x="192.0" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="195.0" y="1086.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="192.0" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="195.0" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="192.0" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="195.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (14 samples, 0.49%)</title><rect x="192.4" y="1139.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.4" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (10 samples, 0.35%)</title><rect x="192.4" y="1123.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="195.4" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (10 samples, 0.35%)</title><rect x="192.4" y="1107.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="195.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (9 samples, 0.31%)</title><rect x="192.4" y="1091.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="195.4" y="1102.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="192.4" y="1075.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="195.4" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="192.8" y="1075.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="195.8" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="192.8" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.8" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (7 samples, 0.24%)</title><rect x="193.2" y="1075.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (1 samples, 0.03%)</title><rect x="193.2" y="1059.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.14%)</title><rect x="193.7" y="1059.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.14%)</title><rect x="193.7" y="1043.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="196.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.14%)</title><rect x="193.7" y="1027.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="196.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.14%)</title><rect x="193.7" y="1011.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.14%)</title><rect x="193.7" y="995.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="196.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.14%)</title><rect x="193.7" y="979.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="194.9" y="963.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.9" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="194.9" y="947.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="197.9" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="194.9" y="931.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="197.9" y="942.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="194.9" y="915.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="197.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.07%)</title><rect x="195.3" y="1059.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.07%)</title><rect x="195.3" y="1043.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.07%)</title><rect x="195.3" y="1027.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="198.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (2 samples, 0.07%)</title><rect x="195.3" y="1011.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.3" y="1022.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.03%)</title><rect x="195.7" y="995.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (1 samples, 0.03%)</title><rect x="196.1" y="1091.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="199.1" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.03%)</title><rect x="196.1" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.1" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="196.1" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.1" y="1070.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.03%)</title><rect x="196.1" y="1043.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="199.1" y="1054.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.03%)</title><rect x="196.1" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="199.1" y="1038.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.03%)</title><rect x="196.1" y="1011.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.1" y="1022.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.03%)</title><rect x="196.1" y="995.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.1" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (4 samples, 0.14%)</title><rect x="196.5" y="1123.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="199.5" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.03%)</title><rect x="196.5" y="1107.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="199.5" y="1118.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="196.5" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.5" y="1102.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.03%)</title><rect x="196.5" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.10%)</title><rect x="196.9" y="1107.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.10%)</title><rect x="196.9" y="1091.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="199.9" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.10%)</title><rect x="196.9" y="1075.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.9" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.10%)</title><rect x="196.9" y="1059.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="199.9" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.10%)</title><rect x="196.9" y="1043.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.9" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="196.9" y="1027.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="199.9" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.03%)</title><rect x="196.9" y="1011.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="199.9" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="196.9" y="995.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="199.9" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="196.9" y="979.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="199.9" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.03%)</title><rect x="196.9" y="963.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="199.9" y="974.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.03%)</title><rect x="196.9" y="947.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="199.9" y="958.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.03%)</title><rect x="196.9" y="931.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="199.9" y="942.0"></text>
</g>
<g>
<title>LinkResolver::resolve_interface_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.03%)</title><rect x="196.9" y="915.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="199.9" y="926.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.03%)</title><rect x="196.9" y="899.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="199.9" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.03%)</title><rect x="197.4" y="1011.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="200.4" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.03%)</title><rect x="197.8" y="1027.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="200.8" y="1038.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="197.8" y="1011.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.8" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="197.8" y="995.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="197.8" y="979.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="200.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (1 samples, 0.03%)</title><rect x="198.2" y="1155.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="201.2" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="198.2" y="1139.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="201.2" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="198.2" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="201.2" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="198.2" y="1107.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="201.2" y="1118.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="198.2" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (1 samples, 0.03%)</title><rect x="198.2" y="1075.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="201.2" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (3 samples, 0.10%)</title><rect x="198.6" y="1155.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="201.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/226225859.linkToTargetMethod (1 samples, 0.03%)</title><rect x="199.0" y="1139.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="202.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1279714552.invoke (1 samples, 0.03%)</title><rect x="199.0" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="199.0" y="1107.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.03%)</title><rect x="199.0" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.03%)</title><rect x="199.0" y="1075.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="202.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="199.4" y="1139.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.4" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (2 samples, 0.07%)</title><rect x="199.8" y="1171.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="202.8" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="200.2" y="1155.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="203.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.03%)</title><rect x="200.2" y="1139.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="203.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (36 samples, 1.25%)</title><rect x="200.6" y="1203.0" width="14.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="203.6" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (36 samples, 1.25%)</title><rect x="200.6" y="1187.0" width="14.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="203.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (35 samples, 1.22%)</title><rect x="200.6" y="1171.0" width="14.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="203.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.07%)</title><rect x="200.6" y="1155.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="203.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="201.1" y="1139.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="204.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.03%)</title><rect x="201.1" y="1123.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="204.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="201.1" y="1107.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.1" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="201.1" y="1091.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="204.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (33 samples, 1.15%)</title><rect x="201.5" y="1155.0" width="13.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="204.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (33 samples, 1.15%)</title><rect x="201.5" y="1139.0" width="13.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.5" y="1150.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="201.5" y="1123.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="204.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (32 samples, 1.11%)</title><rect x="201.9" y="1123.0" width="13.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="204.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (32 samples, 1.11%)</title><rect x="201.9" y="1107.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="204.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="202.3" y="1091.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="205.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="202.3" y="1075.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="205.3" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.07%)</title><rect x="202.3" y="1059.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="205.3" y="1070.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="202.7" y="1043.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="205.7" y="1054.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="202.7" y="1027.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="205.7" y="1038.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="202.7" y="1011.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="205.7" y="1022.0"></text>
</g>
<g>
<title>__send (29 samples, 1.01%)</title><rect x="203.1" y="1091.0" width="11.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="206.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="203.1" y="1075.0" width="11.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="206.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="203.1" y="1059.0" width="11.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="206.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="203.5" y="1043.0" width="11.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="206.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="203.5" y="1027.0" width="11.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="206.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="203.5" y="1011.0" width="11.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="206.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="203.5" y="995.0" width="11.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="206.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="203.5" y="979.0" width="11.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="206.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="203.5" y="963.0" width="11.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="206.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="204.7" y="947.0" width="10.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="207.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="205.6" y="931.0" width="9.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="208.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="206.0" y="915.0" width="9.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="209.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="207.6" y="899.0" width="7.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="210.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="207.6" y="883.0" width="7.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="210.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="207.6" y="867.0" width="7.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="210.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="207.6" y="851.0" width="7.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="210.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="207.6" y="835.0" width="7.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="210.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="207.6" y="819.0" width="7.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="210.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="208.0" y="803.0" width="7.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="211.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="208.9" y="787.0" width="6.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="211.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="209.7" y="771.0" width="5.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="212.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="210.5" y="755.0" width="4.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="213.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="210.5" y="739.0" width="4.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="213.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="211.7" y="723.0" width="3.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="214.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="212.1" y="707.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="215.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="212.6" y="691.0" width="2.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="215.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="212.6" y="675.0" width="2.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="215.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="212.6" y="659.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="215.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="213.0" y="643.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="216.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="213.4" y="627.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="216.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="213.4" y="611.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="216.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="213.4" y="595.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="216.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="213.4" y="579.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="216.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="213.4" y="563.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="216.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="213.4" y="547.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="216.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="213.8" y="531.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="216.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="213.8" y="515.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="216.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="213.8" y="499.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="216.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="214.2" y="483.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="217.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="214.2" y="467.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="217.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="215.0" y="1171.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="218.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="215.0" y="1155.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="218.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="215.0" y="1139.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="218.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="215.0" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="218.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="215.0" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="218.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="215.0" y="1091.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="218.0" y="1102.0"></text>
</g>
<g>
<title>[AsyncWorker-1 tid=31434] (78 samples, 2.72%)</title><rect x="215.4" y="1299.0" width="32.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="218.4" y="1310.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="215.4" y="1283.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="218.4" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="215.4" y="1267.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="218.4" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="215.4" y="1251.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="218.4" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="215.4" y="1235.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="218.4" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="215.4" y="1219.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="218.4" y="1230.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="215.4" y="1203.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="218.4" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="215.8" y="1283.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="218.8" y="1294.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="215.8" y="1267.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="218.8" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (1 samples, 0.03%)</title><rect x="215.8" y="1251.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="218.8" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="215.8" y="1235.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="218.8" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.03%)</title><rect x="215.8" y="1219.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="218.8" y="1230.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="216.3" y="1283.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="219.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/Thread.run (74 samples, 2.58%)</title><rect x="216.7" y="1283.0" width="30.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="219.7" y="1294.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (74 samples, 2.58%)</title><rect x="216.7" y="1267.0" width="30.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.7" y="1278.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (74 samples, 2.58%)</title><rect x="216.7" y="1251.0" width="30.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="219.7" y="1262.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (16 samples, 0.56%)</title><rect x="216.7" y="1235.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="219.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (15 samples, 0.52%)</title><rect x="217.1" y="1219.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="220.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (11 samples, 0.38%)</title><rect x="217.9" y="1203.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="220.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (11 samples, 0.38%)</title><rect x="217.9" y="1187.0" width="4.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="220.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (11 samples, 0.38%)</title><rect x="217.9" y="1171.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="220.9" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.28%)</title><rect x="217.9" y="1155.0" width="3.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="220.9" y="1166.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.03%)</title><rect x="218.7" y="1139.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="221.7" y="1150.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="219.1" y="1139.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="222.1" y="1150.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="219.5" y="1139.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="222.5" y="1150.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.07%)</title><rect x="220.0" y="1139.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="223.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="220.0" y="1123.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="223.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="220.0" y="1107.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="223.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="220.0" y="1091.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="223.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="220.4" y="1075.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="223.4" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="220.8" y="1139.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="223.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="221.2" y="1155.0" width="1.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="224.2" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.10%)</title><rect x="221.2" y="1139.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="224.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="221.2" y="1123.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="224.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="221.2" y="1107.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="224.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="221.2" y="1091.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="224.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="221.2" y="1075.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="224.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="221.2" y="1059.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="224.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="221.2" y="1043.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="224.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="221.6" y="1027.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="224.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="221.6" y="1011.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="224.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="221.6" y="995.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="224.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.07%)</title><rect x="222.4" y="1203.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="225.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.07%)</title><rect x="222.4" y="1187.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="225.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.07%)</title><rect x="222.4" y="1171.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="225.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.07%)</title><rect x="222.4" y="1155.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="225.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.07%)</title><rect x="222.4" y="1139.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="225.4" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.07%)</title><rect x="222.4" y="1123.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="225.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="222.8" y="1107.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="225.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="222.8" y="1091.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="225.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="222.8" y="1075.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="225.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="222.8" y="1059.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="225.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="222.8" y="1043.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="225.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="222.8" y="1027.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="225.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="222.8" y="1011.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="225.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="222.8" y="995.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="225.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (58 samples, 2.02%)</title><rect x="223.2" y="1235.0" width="23.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="226.2" y="1246.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (56 samples, 1.95%)</title><rect x="224.1" y="1219.0" width="23.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="227.1" y="1230.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (27 samples, 0.94%)</title><rect x="224.1" y="1203.0" width="11.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="227.1" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (27 samples, 0.94%)</title><rect x="224.1" y="1187.0" width="11.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.1" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (22 samples, 0.77%)</title><rect x="224.1" y="1171.0" width="9.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.1" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="224.1" y="1155.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.1" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="224.1" y="1139.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.1" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="224.1" y="1123.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="224.1" y="1107.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.1" y="1118.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="224.1" y="1091.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.1" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="224.1" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.1" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="224.1" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="227.1" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="224.1" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.1" y="1054.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="224.1" y="1027.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="227.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (15 samples, 0.52%)</title><rect x="224.5" y="1155.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.5" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.07%)</title><rect x="224.5" y="1139.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.5" y="1150.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="224.5" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.5" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="224.5" y="1107.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="227.5" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="224.5" y="1091.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="227.5" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="224.5" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.5" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="224.5" y="1059.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (1 samples, 0.03%)</title><rect x="224.5" y="1043.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="227.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="224.5" y="1027.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.03%)</title><rect x="224.5" y="1011.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.5" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.03%)</title><rect x="224.9" y="1123.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="227.9" y="1134.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="224.9" y="1107.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (13 samples, 0.45%)</title><rect x="225.3" y="1139.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.3" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (11 samples, 0.38%)</title><rect x="225.3" y="1123.0" width="4.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="228.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (11 samples, 0.38%)</title><rect x="225.3" y="1107.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="225.3" y="1091.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="228.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="225.3" y="1075.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="228.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="225.3" y="1059.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="228.3" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (9 samples, 0.31%)</title><rect x="225.7" y="1091.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="228.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (9 samples, 0.31%)</title><rect x="225.7" y="1075.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="228.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (8 samples, 0.28%)</title><rect x="225.7" y="1059.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="228.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (7 samples, 0.24%)</title><rect x="226.1" y="1043.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (7 samples, 0.24%)</title><rect x="226.1" y="1027.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.21%)</title><rect x="226.5" y="1011.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="229.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.21%)</title><rect x="226.5" y="995.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="229.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.07%)</title><rect x="226.5" y="979.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="229.5" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="226.5" y="963.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.5" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="226.5" y="947.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="229.5" y="958.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="226.5" y="931.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="229.5" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="226.5" y="915.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.5" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="226.9" y="931.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.9" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="226.9" y="915.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="229.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.14%)</title><rect x="227.3" y="979.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="228.6" y="963.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="231.6" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="228.6" y="947.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="231.6" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="228.6" y="931.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="231.6" y="942.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="228.6" y="915.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="231.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="229.0" y="1059.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="232.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="229.0" y="1043.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="232.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="229.0" y="1027.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="232.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (1 samples, 0.03%)</title><rect x="229.0" y="1011.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="232.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (1 samples, 0.03%)</title><rect x="229.4" y="1091.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.4" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.03%)</title><rect x="229.4" y="1075.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="232.4" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="229.4" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.4" y="1070.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="229.4" y="1043.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.4" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="229.4" y="1027.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="232.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (1 samples, 0.03%)</title><rect x="229.4" y="1011.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="229.4" y="995.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="232.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.03%)</title><rect x="229.4" y="979.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="232.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (2 samples, 0.07%)</title><rect x="229.8" y="1123.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.07%)</title><rect x="229.8" y="1107.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="232.8" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="229.8" y="1091.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.8" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="229.8" y="1075.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="232.8" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.07%)</title><rect x="229.8" y="1059.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="232.8" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.07%)</title><rect x="229.8" y="1043.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="232.8" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="229.8" y="1027.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="232.8" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (1 samples, 0.03%)</title><rect x="229.8" y="1011.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="232.8" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.03%)</title><rect x="230.2" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="233.2" y="1038.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="230.2" y="1011.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (1 samples, 0.03%)</title><rect x="230.6" y="1155.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="233.6" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="230.6" y="1139.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="233.6" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="230.6" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="233.6" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="230.6" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.6" y="1118.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="230.6" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="233.6" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (5 samples, 0.17%)</title><rect x="231.0" y="1155.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="234.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/226225859.linkToTargetMethod (3 samples, 0.10%)</title><rect x="231.5" y="1139.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="234.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1279714552.invoke (3 samples, 0.10%)</title><rect x="231.5" y="1123.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="234.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="231.5" y="1107.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.07%)</title><rect x="231.5" y="1091.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="234.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.07%)</title><rect x="231.5" y="1075.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="234.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1186445263.invokeStatic (1 samples, 0.03%)</title><rect x="232.3" y="1107.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="235.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.03%)</title><rect x="232.3" y="1091.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="235.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.03%)</title><rect x="232.3" y="1075.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="235.3" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="232.7" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="235.7" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (5 samples, 0.17%)</title><rect x="233.1" y="1171.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="236.1" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.07%)</title><rect x="233.5" y="1155.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="236.5" y="1166.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="233.5" y="1139.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="236.5" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="233.5" y="1123.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="236.5" y="1134.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="233.5" y="1107.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="236.5" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="233.5" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="236.5" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="233.5" y="1075.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="236.5" y="1086.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="233.5" y="1059.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="236.5" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="233.9" y="1107.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.9" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.07%)</title><rect x="234.3" y="1155.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="234.3" y="1139.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="237.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="234.3" y="1123.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="237.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="234.7" y="1139.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="237.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="234.7" y="1123.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="237.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="234.7" y="1107.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="237.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="234.7" y="1091.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="237.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (29 samples, 1.01%)</title><rect x="235.2" y="1203.0" width="11.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (27 samples, 0.94%)</title><rect x="235.2" y="1187.0" width="11.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (26 samples, 0.91%)</title><rect x="235.2" y="1171.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="238.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.91%)</title><rect x="235.2" y="1155.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="238.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (26 samples, 0.91%)</title><rect x="235.2" y="1139.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="238.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (25 samples, 0.87%)</title><rect x="235.6" y="1123.0" width="10.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="238.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (24 samples, 0.84%)</title><rect x="236.0" y="1107.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="239.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="236.0" y="1091.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="239.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="236.0" y="1075.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="239.0" y="1086.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="236.0" y="1059.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="239.0" y="1070.0"></text>
</g>
<g>
<title>__send (23 samples, 0.80%)</title><rect x="236.4" y="1091.0" width="9.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="239.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="237.2" y="1075.0" width="8.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="240.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="237.2" y="1059.0" width="8.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="240.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="237.2" y="1043.0" width="8.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="240.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="237.2" y="1027.0" width="8.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="240.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="237.2" y="1011.0" width="8.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="240.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="237.2" y="995.0" width="8.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="240.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="237.2" y="979.0" width="8.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="240.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.70%)</title><rect x="237.6" y="963.0" width="8.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="240.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="238.0" y="947.0" width="7.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="241.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="238.9" y="931.0" width="6.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="241.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="239.3" y="915.0" width="6.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="242.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="240.1" y="899.0" width="5.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="243.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="240.1" y="883.0" width="5.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="243.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="240.1" y="867.0" width="5.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="243.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="240.1" y="851.0" width="5.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="243.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="240.5" y="835.0" width="5.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="243.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="240.5" y="819.0" width="5.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="243.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="240.9" y="803.0" width="4.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="243.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="240.9" y="787.0" width="4.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="243.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="240.9" y="771.0" width="4.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="243.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="240.9" y="755.0" width="4.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="243.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="240.9" y="739.0" width="4.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="243.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="241.3" y="723.0" width="4.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="244.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="241.7" y="707.0" width="4.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="244.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="241.7" y="691.0" width="4.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="244.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="242.1" y="675.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="245.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="242.5" y="659.0" width="3.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="245.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="242.5" y="643.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="245.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="242.5" y="627.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="245.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="242.5" y="611.0" width="3.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="245.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="242.5" y="595.0" width="3.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="245.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="242.5" y="579.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="245.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="242.5" y="563.0" width="3.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="245.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="242.5" y="547.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="245.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="242.5" y="531.0" width="3.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="245.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="243.0" y="515.0" width="2.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="246.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="243.8" y="499.0" width="2.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="246.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="244.2" y="483.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="247.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="244.2" y="467.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="247.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="245.8" y="1171.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="248.8" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (2 samples, 0.07%)</title><rect x="246.2" y="1187.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="249.2" y="1198.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray_nozero(BasicType, int, Thread*) (1 samples, 0.03%)</title><rect x="247.1" y="1283.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="250.1" y="1294.0"></text>
</g>
<g>
<title>[AsyncWorker-2 tid=31423] (128 samples, 4.46%)</title><rect x="247.5" y="1299.0" width="52.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="250.5" y="1310.0">[Asyn..</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.03%)</title><rect x="247.5" y="1283.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="250.5" y="1294.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="247.5" y="1267.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="250.5" y="1278.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.03%)</title><rect x="247.5" y="1251.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="250.5" y="1262.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="247.5" y="1235.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="250.5" y="1246.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.03%)</title><rect x="247.5" y="1219.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="250.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (127 samples, 4.42%)</title><rect x="247.9" y="1283.0" width="52.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="250.9" y="1294.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (127 samples, 4.42%)</title><rect x="247.9" y="1267.0" width="52.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="250.9" y="1278.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (127 samples, 4.42%)</title><rect x="247.9" y="1251.0" width="52.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="250.9" y="1262.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.42%)</title><rect x="247.9" y="1235.0" width="4.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="250.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (12 samples, 0.42%)</title><rect x="247.9" y="1219.0" width="4.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.35%)</title><rect x="248.3" y="1203.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="251.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="248.3" y="1187.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="251.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="248.3" y="1171.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="251.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="248.3" y="1155.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="251.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (1 samples, 0.03%)</title><rect x="248.3" y="1139.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="251.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.31%)</title><rect x="248.7" y="1187.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.31%)</title><rect x="248.7" y="1171.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="251.7" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.07%)</title><rect x="248.7" y="1155.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="251.7" y="1166.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="248.7" y="1139.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="251.7" y="1150.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="248.7" y="1123.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="251.7" y="1134.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="249.1" y="1139.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="252.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="249.1" y="1123.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="252.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="249.1" y="1107.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="252.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="249.1" y="1091.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="252.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="249.1" y="1075.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="252.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="249.1" y="1059.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="252.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="249.5" y="1155.0" width="2.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="252.5" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.24%)</title><rect x="249.5" y="1139.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="252.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="249.5" y="1123.0" width="2.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="252.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="249.5" y="1107.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="252.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="249.5" y="1091.0" width="2.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="252.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="249.9" y="1075.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="252.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="250.4" y="1059.0" width="2.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="253.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="250.4" y="1043.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="253.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="250.4" y="1027.0" width="2.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="253.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="250.4" y="1011.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="253.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="250.8" y="995.0" width="1.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="253.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="252.4" y="1203.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="252.4" y="1187.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="255.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="252.4" y="1171.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="252.4" y="1155.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="252.4" y="1139.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="255.4" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (115 samples, 4.00%)</title><rect x="252.8" y="1235.0" width="47.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="255.8" y="1246.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (115 samples, 4.00%)</title><rect x="252.8" y="1219.0" width="47.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.8" y="1230.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (77 samples, 2.68%)</title><rect x="252.8" y="1203.0" width="31.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="255.8" y="1214.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (77 samples, 2.68%)</title><rect x="252.8" y="1187.0" width="31.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.8" y="1198.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (77 samples, 2.68%)</title><rect x="252.8" y="1171.0" width="31.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.8" y="1182.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (20 samples, 0.70%)</title><rect x="254.1" y="1155.0" width="8.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="257.1" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.03%)</title><rect x="254.5" y="1139.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.5" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="254.9" y="1139.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.9" y="1150.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="254.9" y="1123.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="257.9" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="254.9" y="1107.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="254.9" y="1091.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.9" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="254.9" y="1075.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.9" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="254.9" y="1059.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="257.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (1 samples, 0.03%)</title><rect x="254.9" y="1043.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="257.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="254.9" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="257.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.03%)</title><rect x="254.9" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="257.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (17 samples, 0.59%)</title><rect x="255.3" y="1139.0" width="7.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="258.3" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (13 samples, 0.45%)</title><rect x="255.3" y="1123.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="258.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (13 samples, 0.45%)</title><rect x="255.3" y="1107.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="258.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (8 samples, 0.28%)</title><rect x="255.7" y="1091.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.7" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.03%)</title><rect x="255.7" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="258.7" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="255.7" y="1059.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.7" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (1 samples, 0.03%)</title><rect x="255.7" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="258.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (7 samples, 0.24%)</title><rect x="256.1" y="1075.0" width="2.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (6 samples, 0.21%)</title><rect x="256.5" y="1059.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="259.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (6 samples, 0.21%)</title><rect x="256.5" y="1043.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="259.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (6 samples, 0.21%)</title><rect x="256.5" y="1027.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.03%)</title><rect x="256.5" y="1011.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (1 samples, 0.03%)</title><rect x="256.5" y="995.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="259.5" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_virtual_call_C(JavaThread*) (1 samples, 0.03%)</title><rect x="256.5" y="979.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="259.5" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="256.5" y="963.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="259.5" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="256.5" y="947.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="259.5" y="958.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="256.5" y="931.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="259.5" y="942.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.03%)</title><rect x="256.5" y="915.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="259.5" y="926.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="256.5" y="899.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="259.5" y="910.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="256.5" y="883.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="259.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (5 samples, 0.17%)</title><rect x="256.9" y="1011.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (5 samples, 0.17%)</title><rect x="256.9" y="995.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="259.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="256.9" y="979.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.9" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="256.9" y="963.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.9" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="256.9" y="947.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="259.9" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="256.9" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.9" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="256.9" y="915.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="259.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.14%)</title><rect x="257.3" y="979.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="260.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.07%)</title><rect x="258.2" y="963.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.2" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="258.2" y="947.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.2" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="258.2" y="931.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.2" y="942.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="258.2" y="915.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="261.2" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="258.6" y="915.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="261.6" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="258.6" y="899.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="261.6" y="910.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="258.6" y="883.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.6" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (4 samples, 0.14%)</title><rect x="259.0" y="1091.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.0" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.07%)</title><rect x="259.0" y="1075.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.0" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="259.0" y="1059.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="262.0" y="1070.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.07%)</title><rect x="259.0" y="1043.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="262.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.07%)</title><rect x="259.8" y="1075.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="262.8" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="259.8" y="1059.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.8" y="1070.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="259.8" y="1043.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="262.8" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.07%)</title><rect x="259.8" y="1027.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.8" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.07%)</title><rect x="259.8" y="1011.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (4 samples, 0.14%)</title><rect x="260.6" y="1123.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="263.6" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.03%)</title><rect x="260.6" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="263.6" y="1118.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="260.6" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.6" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.10%)</title><rect x="261.0" y="1107.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="264.0" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.10%)</title><rect x="261.0" y="1091.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.0" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="261.0" y="1075.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="264.0" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.07%)</title><rect x="261.0" y="1059.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="264.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.07%)</title><rect x="261.0" y="1043.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="264.0" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="261.0" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="264.0" y="1038.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.hasNext (1 samples, 0.03%)</title><rect x="261.0" y="1011.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="264.0" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.03%)</title><rect x="261.4" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="264.4" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.getData (1 samples, 0.03%)</title><rect x="261.9" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="264.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (8 samples, 0.28%)</title><rect x="262.3" y="1155.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.3" y="1166.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (1 samples, 0.03%)</title><rect x="262.7" y="1139.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.7" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.03%)</title><rect x="263.1" y="1139.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.1" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="263.1" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="266.1" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1 samples, 0.03%)</title><rect x="263.1" y="1107.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="266.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (5 samples, 0.17%)</title><rect x="263.5" y="1139.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="266.5" y="1150.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (4 samples, 0.14%)</title><rect x="263.5" y="1123.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="266.5" y="1134.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (1 samples, 0.03%)</title><rect x="263.5" y="1107.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.5" y="1118.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (1 samples, 0.03%)</title><rect x="263.5" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="266.5" y="1102.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (1 samples, 0.03%)</title><rect x="263.5" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="266.5" y="1086.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1 samples, 0.03%)</title><rect x="263.5" y="1059.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="266.5" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (1 samples, 0.03%)</title><rect x="263.5" y="1043.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="266.5" y="1054.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (3 samples, 0.10%)</title><rect x="263.9" y="1107.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="266.9" y="1118.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (1 samples, 0.03%)</title><rect x="264.3" y="1091.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="267.3" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="264.3" y="1075.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.3" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="264.3" y="1059.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="267.3" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="264.3" y="1043.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="267.3" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="264.3" y="1027.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="267.3" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="264.3" y="1011.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="267.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="264.3" y="995.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.03%)</title><rect x="264.7" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.7" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (1 samples, 0.03%)</title><rect x="265.1" y="1123.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="268.1" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (1 samples, 0.03%)</title><rect x="265.1" y="1107.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.1" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.03%)</title><rect x="265.1" y="1091.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="268.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.getResponsesFromRelicas (34 samples, 1.18%)</title><rect x="265.6" y="1155.0" width="13.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.07%)</title><rect x="266.4" y="1139.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="266.8" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="269.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.get$Lambda (1 samples, 0.03%)</title><rect x="266.8" y="1107.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="269.8" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.&lt;init&gt; (1 samples, 0.03%)</title><rect x="266.8" y="1091.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.8" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.size (2 samples, 0.07%)</title><rect x="267.2" y="1139.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (10 samples, 0.35%)</title><rect x="268.0" y="1139.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="271.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.35%)</title><rect x="268.0" y="1123.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.35%)</title><rect x="268.0" y="1107.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="271.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.28%)</title><rect x="268.0" y="1091.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="271.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.28%)</title><rect x="268.0" y="1075.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.28%)</title><rect x="268.0" y="1059.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="271.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.28%)</title><rect x="268.0" y="1043.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.28%)</title><rect x="268.0" y="1027.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.28%)</title><rect x="268.0" y="1011.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.0" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="268.0" y="995.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="271.0" y="1006.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.03%)</title><rect x="268.0" y="979.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="271.0" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.24%)</title><rect x="268.4" y="995.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="271.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="268.8" y="979.0" width="2.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="271.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="268.8" y="963.0" width="2.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="271.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="268.8" y="947.0" width="2.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="271.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="268.8" y="931.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="271.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="268.8" y="915.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="271.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="269.7" y="899.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="272.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="270.1" y="883.0" width="1.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="273.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="270.1" y="867.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="273.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.07%)</title><rect x="271.3" y="1091.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="274.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.07%)</title><rect x="271.3" y="1075.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="274.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.07%)</title><rect x="271.3" y="1059.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="271.3" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="271.3" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="271.3" y="1011.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.3" y="1022.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="271.3" y="995.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="274.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.03%)</title><rect x="271.7" y="1043.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="271.7" y="1027.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="271.7" y="1011.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="274.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (18 samples, 0.63%)</title><rect x="272.1" y="1139.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="275.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (18 samples, 0.63%)</title><rect x="272.1" y="1123.0" width="7.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (17 samples, 0.59%)</title><rect x="272.1" y="1107.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.07%)</title><rect x="272.1" y="1091.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="275.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.07%)</title><rect x="272.1" y="1075.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="275.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.07%)</title><rect x="272.1" y="1059.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="275.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="272.5" y="1043.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="272.5" y="1027.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="275.5" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="272.5" y="1011.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="275.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="272.5" y="995.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="275.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="272.5" y="979.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="275.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="272.5" y="963.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="275.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="272.5" y="947.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="275.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="272.5" y="931.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="275.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="272.5" y="915.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="275.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="272.5" y="899.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="275.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="272.5" y="883.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="275.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.03%)</title><rect x="273.0" y="1091.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="276.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.49%)</title><rect x="273.4" y="1091.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="276.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.45%)</title><rect x="273.8" y="1075.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="276.8" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.10%)</title><rect x="273.8" y="1059.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="276.8" y="1070.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="273.8" y="1043.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="276.8" y="1054.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.07%)</title><rect x="274.2" y="1043.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="277.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="275.0" y="1059.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="278.0" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_wait (10 samples, 0.35%)</title><rect x="275.0" y="1043.0" width="4.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="278.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="275.0" y="1027.0" width="4.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="278.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="275.0" y="1011.0" width="4.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="278.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="275.4" y="995.0" width="3.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="278.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="275.8" y="979.0" width="3.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="278.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="275.8" y="963.0" width="3.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="278.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="276.2" y="947.0" width="2.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="279.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="276.2" y="931.0" width="2.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="279.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="276.7" y="915.0" width="2.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="279.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="276.7" y="899.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="279.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="278.7" y="883.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="281.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="278.7" y="867.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="281.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="278.7" y="851.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="281.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="278.7" y="835.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="281.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="278.7" y="819.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="281.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="278.7" y="803.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="281.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="278.7" y="787.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="281.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="279.1" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="282.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="279.1" y="1091.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="282.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="279.1" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="279.1" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="282.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="279.1" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="282.1" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="279.1" y="1027.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="282.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="279.1" y="1011.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="282.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="279.1" y="995.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="282.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="279.1" y="979.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="282.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="279.1" y="963.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="282.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="279.1" y="947.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="282.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (5 samples, 0.17%)</title><rect x="279.5" y="1155.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="282.5" y="1166.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (1 samples, 0.03%)</title><rect x="279.9" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.9" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="279.9" y="1123.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.9" y="1134.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="279.9" y="1107.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="282.9" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="279.9" y="1091.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.9" y="1102.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="279.9" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="282.9" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="279.9" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="282.9" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="279.9" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="282.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="279.9" y="1027.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="282.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.07%)</title><rect x="280.3" y="1139.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="280.3" y="1123.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="283.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="280.8" y="1123.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="283.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="280.8" y="1107.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="283.8" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.present (1 samples, 0.03%)</title><rect x="281.2" y="1139.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.&lt;init&gt; (1 samples, 0.03%)</title><rect x="281.2" y="1123.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.2" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.merge (6 samples, 0.21%)</title><rect x="281.6" y="1155.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.6" y="1166.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.03%)</title><rect x="282.0" y="1139.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.0" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.03%)</title><rect x="282.0" y="1123.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.0" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.03%)</title><rect x="282.0" y="1107.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.0" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="282.0" y="1091.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.0" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="282.0" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="285.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="282.0" y="1059.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="285.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="282.0" y="1043.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="285.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="282.0" y="1027.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="285.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="282.0" y="1011.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="285.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="282.0" y="995.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="285.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="282.0" y="979.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="285.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="282.0" y="963.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="285.0" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.03%)</title><rect x="282.4" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.4" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (1 samples, 0.03%)</title><rect x="282.4" y="1123.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="285.4" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (1 samples, 0.03%)</title><rect x="282.4" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.4" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="282.4" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="285.4" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="282.4" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="285.4" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.opIsStateful (1 samples, 0.03%)</title><rect x="282.4" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.4" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (3 samples, 0.10%)</title><rect x="282.8" y="1139.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="285.8" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (3 samples, 0.10%)</title><rect x="282.8" y="1123.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="285.8" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.10%)</title><rect x="282.8" y="1107.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.8" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (3 samples, 0.10%)</title><rect x="282.8" y="1091.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="285.8" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.10%)</title><rect x="282.8" y="1075.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="285.8" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (3 samples, 0.10%)</title><rect x="282.8" y="1059.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="285.8" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (3 samples, 0.10%)</title><rect x="282.8" y="1043.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.8" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.&lt;init&gt; (2 samples, 0.07%)</title><rect x="283.2" y="1027.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.2" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (2 samples, 0.07%)</title><rect x="283.2" y="1011.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.2" y="1022.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$79/1679395522.apply (1 samples, 0.03%)</title><rect x="283.6" y="995.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (1 samples, 0.03%)</title><rect x="284.0" y="1155.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="287.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="284.0" y="1139.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="287.0" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (38 samples, 1.32%)</title><rect x="284.5" y="1203.0" width="15.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="287.5" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (38 samples, 1.32%)</title><rect x="284.5" y="1187.0" width="15.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (36 samples, 1.25%)</title><rect x="284.5" y="1171.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.5" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (36 samples, 1.25%)</title><rect x="284.5" y="1155.0" width="14.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="287.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (36 samples, 1.25%)</title><rect x="284.5" y="1139.0" width="14.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="287.5" y="1150.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="284.5" y="1123.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="287.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (35 samples, 1.22%)</title><rect x="284.9" y="1123.0" width="14.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="287.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (35 samples, 1.22%)</title><rect x="284.9" y="1107.0" width="14.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.9" y="1118.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="284.9" y="1091.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="287.9" y="1102.0"></text>
</g>
<g>
<title>__send (34 samples, 1.18%)</title><rect x="285.3" y="1091.0" width="13.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="288.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.18%)</title><rect x="285.3" y="1075.0" width="13.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="288.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.18%)</title><rect x="285.3" y="1059.0" width="13.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="288.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.18%)</title><rect x="285.3" y="1043.0" width="13.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="288.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.18%)</title><rect x="285.3" y="1027.0" width="13.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="288.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.15%)</title><rect x="285.7" y="1011.0" width="13.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="288.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.15%)</title><rect x="285.7" y="995.0" width="13.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="288.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.15%)</title><rect x="285.7" y="979.0" width="13.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="288.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.15%)</title><rect x="285.7" y="963.0" width="13.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="288.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.11%)</title><rect x="286.1" y="947.0" width="13.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="289.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.04%)</title><rect x="286.9" y="931.0" width="12.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="289.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="287.7" y="915.0" width="11.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="290.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.94%)</title><rect x="288.2" y="899.0" width="11.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="291.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="289.0" y="883.0" width="10.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="292.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="289.4" y="867.0" width="9.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="292.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="289.8" y="851.0" width="9.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="292.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="289.8" y="835.0" width="9.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="292.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="289.8" y="819.0" width="9.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="292.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="289.8" y="803.0" width="9.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="292.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="290.2" y="787.0" width="9.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="293.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="290.6" y="771.0" width="8.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="293.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="292.3" y="755.0" width="6.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="295.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="292.3" y="739.0" width="6.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="295.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="292.7" y="723.0" width="6.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="295.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="293.9" y="707.0" width="5.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="296.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="294.3" y="691.0" width="4.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="297.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="294.3" y="675.0" width="4.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="297.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="294.3" y="659.0" width="4.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="297.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="295.1" y="643.0" width="4.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="298.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="295.1" y="627.0" width="4.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="298.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="295.1" y="611.0" width="4.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="298.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="295.1" y="595.0" width="4.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="298.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="295.1" y="579.0" width="4.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="298.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="295.1" y="563.0" width="4.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="298.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="295.1" y="547.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="298.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="295.6" y="531.0" width="3.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="298.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="296.0" y="515.0" width="3.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="299.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="296.4" y="499.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="299.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="296.4" y="483.0" width="2.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="299.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="296.4" y="467.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="299.4" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="299.2" y="1171.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="302.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.03%)</title><rect x="299.7" y="1171.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.7" y="1182.0"></text>
</g>
<g>
<title>[AsyncWorker-2 tid=31433] (84 samples, 2.92%)</title><rect x="300.1" y="1299.0" width="34.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="303.1" y="1310.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.07%)</title><rect x="300.1" y="1283.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="303.1" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.07%)</title><rect x="300.1" y="1267.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="303.1" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="300.5" y="1251.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="303.5" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="300.5" y="1235.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="303.5" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="300.5" y="1219.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="303.5" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="300.5" y="1203.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="303.5" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="300.9" y="1283.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="303.9" y="1294.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="300.9" y="1267.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="303.9" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="300.9" y="1251.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="303.9" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.03%)</title><rect x="300.9" y="1235.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="303.9" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.run (81 samples, 2.82%)</title><rect x="301.3" y="1283.0" width="33.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="304.3" y="1294.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (81 samples, 2.82%)</title><rect x="301.3" y="1267.0" width="33.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.3" y="1278.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (81 samples, 2.82%)</title><rect x="301.3" y="1251.0" width="33.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="304.3" y="1262.0">ja..</text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="301.3" y="1235.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="304.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.17%)</title><rect x="301.7" y="1235.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="304.7" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.14%)</title><rect x="302.1" y="1219.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="305.1" y="1230.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.07%)</title><rect x="302.1" y="1203.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="305.1" y="1214.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (1 samples, 0.03%)</title><rect x="302.5" y="1187.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="305.5" y="1198.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="302.9" y="1203.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="305.9" y="1214.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="303.4" y="1203.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="306.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.07%)</title><rect x="303.8" y="1235.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="304.2" y="1219.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="307.2" y="1230.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="304.2" y="1203.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="307.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13 samples, 0.45%)</title><rect x="304.6" y="1235.0" width="5.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (13 samples, 0.45%)</title><rect x="304.6" y="1219.0" width="5.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="307.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.35%)</title><rect x="305.0" y="1203.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.03%)</title><rect x="305.0" y="1187.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="305.0" y="1171.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="308.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="305.0" y="1155.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.03%)</title><rect x="305.0" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="305.0" y="1123.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="308.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="305.0" y="1107.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.03%)</title><rect x="305.4" y="1187.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.28%)</title><rect x="305.8" y="1187.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="308.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.28%)</title><rect x="305.8" y="1171.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="308.8" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.10%)</title><rect x="305.8" y="1155.0" width="1.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="308.8" y="1166.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.07%)</title><rect x="306.2" y="1139.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="309.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="306.2" y="1123.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="309.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="306.2" y="1107.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="309.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="307.1" y="1155.0" width="2.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="310.1" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.14%)</title><rect x="307.1" y="1139.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="310.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="307.1" y="1123.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="310.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="307.1" y="1107.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="310.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="307.1" y="1091.0" width="1.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="310.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="307.1" y="1075.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="310.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="307.1" y="1059.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="310.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="307.5" y="1043.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="310.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="307.5" y="1027.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="310.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="307.9" y="1011.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="310.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="307.9" y="995.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="310.9" y="1006.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="308.7" y="1139.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="311.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="309.1" y="1203.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="309.1" y="1187.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="309.1" y="1171.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="312.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="309.1" y="1155.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="312.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="309.1" y="1139.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="312.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="309.5" y="1203.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="312.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="309.5" y="1187.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="312.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="309.5" y="1171.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="312.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="309.5" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="312.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="309.5" y="1139.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="312.5" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="309.5" y="1123.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="312.5" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="309.5" y="1107.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="312.5" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (60 samples, 2.09%)</title><rect x="309.9" y="1235.0" width="24.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.9" y="1246.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (60 samples, 2.09%)</title><rect x="309.9" y="1219.0" width="24.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.9" y="1230.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (30 samples, 1.04%)</title><rect x="309.9" y="1203.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.9" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (30 samples, 1.04%)</title><rect x="309.9" y="1187.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="312.9" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (30 samples, 1.04%)</title><rect x="309.9" y="1171.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="312.9" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="309.9" y="1155.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.9" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="309.9" y="1139.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.9" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="309.9" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.9" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="309.9" y="1107.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="312.9" y="1118.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="309.9" y="1091.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="312.9" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="309.9" y="1075.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="312.9" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="309.9" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="312.9" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="309.9" y="1043.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="312.9" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (25 samples, 0.87%)</title><rect x="310.3" y="1155.0" width="10.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="313.3" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="310.3" y="1139.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="313.3" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (24 samples, 0.84%)</title><rect x="310.8" y="1139.0" width="9.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="313.8" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (19 samples, 0.66%)</title><rect x="310.8" y="1123.0" width="7.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="313.8" y="1134.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="310.8" y="1107.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="313.8" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (18 samples, 0.63%)</title><rect x="311.2" y="1107.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="314.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="311.2" y="1091.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="314.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.03%)</title><rect x="311.2" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="314.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.03%)</title><rect x="311.2" y="1059.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="314.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="311.2" y="1043.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="314.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="311.2" y="1027.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="311.2" y="1011.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="314.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (16 samples, 0.56%)</title><rect x="311.6" y="1091.0" width="6.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="314.6" y="1102.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="311.6" y="1075.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="314.6" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.07%)</title><rect x="312.0" y="1075.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="315.0" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.07%)</title><rect x="312.0" y="1059.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="315.0" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (1 samples, 0.03%)</title><rect x="312.0" y="1043.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="315.0" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap.entrySet (1 samples, 0.03%)</title><rect x="312.4" y="1043.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.4" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (13 samples, 0.45%)</title><rect x="312.8" y="1075.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (11 samples, 0.38%)</title><rect x="312.8" y="1059.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="315.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (11 samples, 0.38%)</title><rect x="312.8" y="1043.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (11 samples, 0.38%)</title><rect x="312.8" y="1027.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="315.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (2 samples, 0.07%)</title><rect x="312.8" y="1011.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="315.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (2 samples, 0.07%)</title><rect x="312.8" y="995.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="315.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.07%)</title><rect x="312.8" y="979.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.8" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="312.8" y="963.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.8" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="312.8" y="947.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="315.8" y="958.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="312.8" y="931.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="315.8" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.07%)</title><rect x="312.8" y="915.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (9 samples, 0.31%)</title><rect x="313.6" y="1011.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="316.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (9 samples, 0.31%)</title><rect x="313.6" y="995.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (7 samples, 0.24%)</title><rect x="314.4" y="979.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="317.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.07%)</title><rect x="316.5" y="963.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.5" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="316.5" y="947.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.5" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.07%)</title><rect x="316.5" y="931.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="319.5" y="942.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.07%)</title><rect x="316.5" y="915.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="319.5" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="316.9" y="899.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.9" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="316.9" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="319.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.07%)</title><rect x="317.3" y="1059.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="320.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.07%)</title><rect x="317.3" y="1043.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="320.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.07%)</title><rect x="317.3" y="1027.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="320.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (2 samples, 0.07%)</title><rect x="317.3" y="1011.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="320.3" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.03%)</title><rect x="317.7" y="995.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="320.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (1 samples, 0.03%)</title><rect x="318.1" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="321.1" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.03%)</title><rect x="318.1" y="1075.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="321.1" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="318.1" y="1059.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="321.1" y="1070.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.03%)</title><rect x="318.1" y="1043.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="321.1" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (1 samples, 0.03%)</title><rect x="318.1" y="1027.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="321.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (5 samples, 0.17%)</title><rect x="318.6" y="1123.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="321.6" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (2 samples, 0.07%)</title><rect x="318.6" y="1107.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="321.6" y="1118.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="318.6" y="1091.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.6" y="1102.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.03%)</title><rect x="319.0" y="1075.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="322.0" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.10%)</title><rect x="319.4" y="1107.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="322.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="319.8" y="1091.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="322.8" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (2 samples, 0.07%)</title><rect x="320.6" y="1155.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="323.6" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.getData (1 samples, 0.03%)</title><rect x="320.6" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="323.6" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.present (1 samples, 0.03%)</title><rect x="321.0" y="1139.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.0" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.&lt;init&gt; (1 samples, 0.03%)</title><rect x="321.0" y="1123.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.0" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="321.0" y="1107.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="324.0" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (2 samples, 0.07%)</title><rect x="321.4" y="1155.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="324.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/226225859.linkToTargetMethod (1 samples, 0.03%)</title><rect x="321.4" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="324.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1279714552.invoke (1 samples, 0.03%)</title><rect x="321.4" y="1123.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="324.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1186445263.invokeStatic (1 samples, 0.03%)</title><rect x="321.4" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="324.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.03%)</title><rect x="321.4" y="1091.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.03%)</title><rect x="321.4" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="324.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.03%)</title><rect x="321.8" y="1139.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="324.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.03%)</title><rect x="321.8" y="1123.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="324.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (30 samples, 1.04%)</title><rect x="322.3" y="1203.0" width="12.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.3" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (30 samples, 1.04%)</title><rect x="322.3" y="1187.0" width="12.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (30 samples, 1.04%)</title><rect x="322.3" y="1171.0" width="12.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="325.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.07%)</title><rect x="322.3" y="1155.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="325.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.07%)</title><rect x="322.3" y="1139.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="325.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 0.97%)</title><rect x="323.1" y="1155.0" width="11.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="326.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (28 samples, 0.97%)</title><rect x="323.1" y="1139.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="326.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (28 samples, 0.97%)</title><rect x="323.1" y="1123.0" width="11.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="326.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (28 samples, 0.97%)</title><rect x="323.1" y="1107.0" width="11.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="326.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="323.1" y="1091.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="326.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="323.1" y="1075.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="326.1" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.10%)</title><rect x="323.1" y="1059.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="326.1" y="1070.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="323.1" y="1043.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="326.1" y="1054.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="323.5" y="1043.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="326.5" y="1054.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="323.5" y="1027.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="326.5" y="1038.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="323.5" y="1011.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="326.5" y="1022.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="323.9" y="1027.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="326.9" y="1038.0"></text>
</g>
<g>
<title>__send (25 samples, 0.87%)</title><rect x="324.3" y="1091.0" width="10.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="327.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="324.3" y="1075.0" width="10.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="327.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="324.3" y="1059.0" width="10.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="327.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="324.3" y="1043.0" width="10.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="327.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="324.7" y="1027.0" width="9.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="327.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="324.7" y="1011.0" width="9.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="327.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="324.7" y="995.0" width="9.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="327.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="324.7" y="979.0" width="9.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="327.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="324.7" y="963.0" width="9.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="327.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="324.7" y="947.0" width="9.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="327.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="325.5" y="931.0" width="9.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="328.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="326.0" y="915.0" width="8.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="329.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="326.0" y="899.0" width="8.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="329.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="326.8" y="883.0" width="7.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="329.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="326.8" y="867.0" width="7.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="329.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="326.8" y="851.0" width="7.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="329.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="326.8" y="835.0" width="7.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="329.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="326.8" y="819.0" width="7.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="329.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="327.6" y="803.0" width="7.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="330.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="327.6" y="787.0" width="7.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="330.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="328.4" y="771.0" width="6.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="331.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="329.7" y="755.0" width="4.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="332.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="329.7" y="739.0" width="4.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="332.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="329.7" y="723.0" width="4.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="332.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="330.1" y="707.0" width="4.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="333.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="330.1" y="691.0" width="4.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="333.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="330.5" y="675.0" width="4.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="333.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="330.5" y="659.0" width="4.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="333.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="330.5" y="643.0" width="4.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="333.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="330.5" y="627.0" width="4.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="333.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="330.5" y="611.0" width="4.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="333.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="330.9" y="595.0" width="3.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="333.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="331.3" y="579.0" width="3.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="334.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="331.7" y="563.0" width="2.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="334.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="332.1" y="547.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="335.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="332.1" y="531.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="335.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="333.3" y="515.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="336.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="333.3" y="499.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="336.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="333.8" y="483.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="336.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="333.8" y="467.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="336.8" y="478.0"></text>
</g>
<g>
<title>[AsyncWorker-2 tid=31436] (77 samples, 2.68%)</title><rect x="334.6" y="1299.0" width="31.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="337.6" y="1310.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="334.6" y="1283.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="337.6" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="334.6" y="1267.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="337.6" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="334.6" y="1251.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="337.6" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="334.6" y="1235.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="337.6" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="334.6" y="1219.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="337.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (76 samples, 2.65%)</title><rect x="335.0" y="1283.0" width="31.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="338.0" y="1294.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (76 samples, 2.65%)</title><rect x="335.0" y="1267.0" width="31.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="338.0" y="1278.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (76 samples, 2.65%)</title><rect x="335.0" y="1251.0" width="31.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="338.0" y="1262.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.42%)</title><rect x="335.0" y="1235.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="338.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (12 samples, 0.42%)</title><rect x="335.0" y="1219.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="338.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.35%)</title><rect x="335.4" y="1203.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="338.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="335.4" y="1187.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="338.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="335.4" y="1171.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="335.4" y="1155.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="338.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.31%)</title><rect x="335.8" y="1187.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="338.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.31%)</title><rect x="335.8" y="1171.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="338.8" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.07%)</title><rect x="335.8" y="1155.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="338.8" y="1166.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="336.2" y="1139.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="339.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="336.2" y="1123.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="339.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="336.2" y="1107.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="339.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="336.6" y="1155.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="339.6" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.17%)</title><rect x="336.6" y="1139.0" width="2.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="339.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="336.6" y="1123.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="339.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="336.6" y="1107.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="339.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="336.6" y="1091.0" width="2.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="339.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="336.6" y="1075.0" width="2.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="339.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="336.6" y="1059.0" width="2.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="339.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="336.6" y="1043.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="339.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="337.5" y="1027.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="340.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="337.5" y="1011.0" width="1.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="340.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="337.5" y="995.0" width="1.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="340.5" y="1006.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="338.7" y="1139.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="341.7" y="1150.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="339.1" y="1155.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="342.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="339.5" y="1203.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="342.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="339.5" y="1187.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="342.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="339.5" y="1171.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="342.5" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (64 samples, 2.23%)</title><rect x="339.9" y="1235.0" width="26.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="342.9" y="1246.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (64 samples, 2.23%)</title><rect x="339.9" y="1219.0" width="26.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="342.9" y="1230.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (23 samples, 0.80%)</title><rect x="339.9" y="1203.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="342.9" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (23 samples, 0.80%)</title><rect x="339.9" y="1187.0" width="9.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="342.9" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (20 samples, 0.70%)</title><rect x="339.9" y="1171.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="342.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="340.3" y="1155.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="343.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="340.3" y="1139.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="343.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="340.3" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="343.3" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="340.3" y="1107.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="343.3" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="340.7" y="1155.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="343.7" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="340.7" y="1139.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="343.7" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="340.7" y="1123.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="343.7" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="340.7" y="1107.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="343.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (13 samples, 0.45%)</title><rect x="341.2" y="1155.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.2" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (13 samples, 0.45%)</title><rect x="341.2" y="1139.0" width="5.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="344.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (10 samples, 0.35%)</title><rect x="341.2" y="1123.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="344.2" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (9 samples, 0.31%)</title><rect x="341.6" y="1107.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.07%)</title><rect x="341.6" y="1091.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="344.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.07%)</title><rect x="341.6" y="1075.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="344.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.07%)</title><rect x="341.6" y="1059.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="342.0" y="1043.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="342.0" y="1027.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="345.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="342.0" y="1011.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="345.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (1 samples, 0.03%)</title><rect x="342.4" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="345.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (1 samples, 0.03%)</title><rect x="342.4" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="345.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (1 samples, 0.03%)</title><rect x="342.4" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.03%)</title><rect x="342.4" y="1043.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.4" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (4 samples, 0.14%)</title><rect x="342.8" y="1091.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="345.8" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (4 samples, 0.14%)</title><rect x="342.8" y="1075.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="345.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.10%)</title><rect x="342.8" y="1059.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="345.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.10%)</title><rect x="342.8" y="1043.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="345.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.10%)</title><rect x="342.8" y="1027.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.10%)</title><rect x="342.8" y="1011.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="345.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.10%)</title><rect x="342.8" y="995.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="345.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.10%)</title><rect x="342.8" y="979.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="345.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="343.6" y="963.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="346.6" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="343.6" y="947.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="346.6" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="343.6" y="931.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="346.6" y="942.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="343.6" y="915.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="346.6" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="343.6" y="899.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="346.6" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.03%)</title><rect x="343.6" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="346.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="344.0" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="344.0" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="347.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="344.0" y="1027.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.&lt;init&gt; (1 samples, 0.03%)</title><rect x="344.0" y="1011.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="347.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (2 samples, 0.07%)</title><rect x="344.4" y="1091.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="347.4" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.03%)</title><rect x="344.4" y="1075.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="347.4" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="344.4" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.4" y="1070.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.03%)</title><rect x="344.4" y="1043.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="347.4" y="1054.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.03%)</title><rect x="344.4" y="1027.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.4" y="1038.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.03%)</title><rect x="344.4" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="347.4" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (1 samples, 0.03%)</title><rect x="344.9" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="347.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (3 samples, 0.10%)</title><rect x="345.3" y="1123.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="348.3" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.03%)</title><rect x="345.3" y="1107.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="348.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.07%)</title><rect x="345.7" y="1107.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="348.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="345.7" y="1091.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="348.7" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.07%)</title><rect x="345.7" y="1075.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="348.7" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.07%)</title><rect x="345.7" y="1059.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="348.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.07%)</title><rect x="345.7" y="1043.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.7" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="346.1" y="1027.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.1" y="1038.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="346.1" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="349.1" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="346.1" y="995.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="349.1" y="1006.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.hasNext (1 samples, 0.03%)</title><rect x="346.1" y="979.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="349.1" y="990.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (1 samples, 0.03%)</title><rect x="346.1" y="963.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (1 samples, 0.03%)</title><rect x="346.5" y="1155.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="349.5" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="346.5" y="1139.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="349.5" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="346.5" y="1123.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="349.5" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="346.5" y="1107.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.5" y="1118.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="346.5" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="349.5" y="1102.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="346.5" y="1075.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="349.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (3 samples, 0.10%)</title><rect x="346.9" y="1155.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="349.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/226225859.linkToTargetMethod (3 samples, 0.10%)</title><rect x="346.9" y="1139.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1279714552.invoke (3 samples, 0.10%)</title><rect x="346.9" y="1123.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="349.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.07%)</title><rect x="346.9" y="1107.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="349.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="346.9" y="1091.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="349.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.03%)</title><rect x="347.3" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="350.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.03%)</title><rect x="347.3" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1186445263.invokeStatic (1 samples, 0.03%)</title><rect x="347.7" y="1107.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="350.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.03%)</title><rect x="347.7" y="1091.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.03%)</title><rect x="347.7" y="1075.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="350.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (3 samples, 0.10%)</title><rect x="348.1" y="1171.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="351.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="348.1" y="1155.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="348.1" y="1139.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="351.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="348.1" y="1123.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="351.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="348.6" y="1139.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="351.6" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="348.6" y="1123.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="351.6" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="349.0" y="1155.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="352.0" y="1166.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="349.0" y="1139.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.0" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="349.0" y="1123.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.0" y="1134.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="349.0" y="1107.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="352.0" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="349.0" y="1091.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.0" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="349.0" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.0" y="1086.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="349.0" y="1059.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="352.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (41 samples, 1.43%)</title><rect x="349.4" y="1203.0" width="16.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.4" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (41 samples, 1.43%)</title><rect x="349.4" y="1187.0" width="16.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="352.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (40 samples, 1.39%)</title><rect x="349.4" y="1171.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="352.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="349.4" y="1155.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="352.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 1.36%)</title><rect x="349.8" y="1155.0" width="16.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="352.8" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 1.36%)</title><rect x="349.8" y="1139.0" width="16.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="352.8" y="1150.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="349.8" y="1123.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="352.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (38 samples, 1.32%)</title><rect x="350.2" y="1123.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="353.2" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (37 samples, 1.29%)</title><rect x="350.6" y="1107.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="353.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="350.6" y="1091.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="353.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="350.6" y="1075.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="353.6" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="350.6" y="1059.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="353.6" y="1070.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="350.6" y="1043.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="353.6" y="1054.0"></text>
</g>
<g>
<title>__send (36 samples, 1.25%)</title><rect x="351.0" y="1091.0" width="14.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="354.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="351.4" y="1075.0" width="14.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="354.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="351.4" y="1059.0" width="14.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="354.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="351.4" y="1043.0" width="14.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="354.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="351.4" y="1027.0" width="14.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="354.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="351.4" y="1011.0" width="14.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="354.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="351.4" y="995.0" width="14.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="354.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="351.4" y="979.0" width="14.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="354.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="351.4" y="963.0" width="14.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="354.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="351.4" y="947.0" width="14.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="354.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.15%)</title><rect x="352.2" y="931.0" width="13.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="355.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.11%)</title><rect x="352.7" y="915.0" width="13.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="355.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="353.9" y="899.0" width="11.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="356.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="354.3" y="883.0" width="11.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="357.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="354.3" y="867.0" width="11.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="357.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="355.1" y="851.0" width="10.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="358.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="355.1" y="835.0" width="10.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="358.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="355.1" y="819.0" width="10.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="358.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="355.1" y="803.0" width="10.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="358.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="355.5" y="787.0" width="10.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="358.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="355.5" y="771.0" width="10.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="358.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="356.4" y="755.0" width="9.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="359.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="357.2" y="739.0" width="8.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="360.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="359.2" y="723.0" width="6.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="362.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="359.2" y="707.0" width="6.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="362.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="359.2" y="691.0" width="6.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="362.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="359.2" y="675.0" width="6.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="362.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="359.2" y="659.0" width="6.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="362.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="359.2" y="643.0" width="6.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="362.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="359.2" y="627.0" width="6.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="362.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="359.2" y="611.0" width="6.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="362.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="359.6" y="595.0" width="6.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="362.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="359.6" y="579.0" width="6.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="362.6" y="590.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="360.1" y="563.0" width="5.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="363.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="360.9" y="547.0" width="4.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="363.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="361.3" y="531.0" width="4.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="364.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="362.5" y="515.0" width="3.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="365.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="363.8" y="499.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="366.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="363.8" y="483.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="366.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="363.8" y="467.0" width="2.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="366.8" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.03%)</title><rect x="365.8" y="1171.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="368.8" y="1182.0"></text>
</g>
<g>
<title>[AsyncWorker-3 tid=31424] (131 samples, 4.56%)</title><rect x="366.2" y="1299.0" width="53.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="369.2" y="1310.0">[Asyn..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="366.2" y="1283.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="369.2" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="366.2" y="1267.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="369.2" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="366.2" y="1251.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="369.2" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="366.2" y="1235.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="369.2" y="1246.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="366.2" y="1219.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="369.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (130 samples, 4.53%)</title><rect x="366.6" y="1283.0" width="53.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="369.6" y="1294.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (130 samples, 4.53%)</title><rect x="366.6" y="1267.0" width="53.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="369.6" y="1278.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (130 samples, 4.53%)</title><rect x="366.6" y="1251.0" width="53.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.6" y="1262.0">java/..</text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="367.5" y="1235.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="370.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.14%)</title><rect x="368.3" y="1235.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="371.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.14%)</title><rect x="368.3" y="1219.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="371.3" y="1230.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (4 samples, 0.14%)</title><rect x="368.3" y="1203.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="371.3" y="1214.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (1 samples, 0.03%)</title><rect x="369.1" y="1187.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="372.1" y="1198.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="369.5" y="1187.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="372.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.03%)</title><rect x="369.9" y="1235.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="372.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (2 samples, 0.07%)</title><rect x="370.3" y="1235.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="373.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.07%)</title><rect x="370.3" y="1219.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="373.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.03%)</title><rect x="370.7" y="1203.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="373.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="370.7" y="1187.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="373.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="370.7" y="1171.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="373.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="370.7" y="1155.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="373.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (15 samples, 0.52%)</title><rect x="371.1" y="1235.0" width="6.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="374.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (15 samples, 0.52%)</title><rect x="371.1" y="1219.0" width="6.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="374.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.35%)</title><rect x="371.1" y="1203.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="374.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.03%)</title><rect x="371.1" y="1187.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="374.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="371.1" y="1171.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="371.1" y="1155.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="374.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.03%)</title><rect x="371.1" y="1139.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="371.1" y="1123.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="374.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="371.1" y="1107.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.31%)</title><rect x="371.6" y="1187.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="374.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.31%)</title><rect x="371.6" y="1171.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="374.6" y="1182.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.03%)</title><rect x="371.6" y="1155.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="374.6" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.07%)</title><rect x="372.0" y="1155.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="375.0" y="1166.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="372.0" y="1139.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="375.0" y="1150.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="372.4" y="1139.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="375.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="372.4" y="1123.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="375.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="372.4" y="1107.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="375.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="372.8" y="1155.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="375.8" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.17%)</title><rect x="372.8" y="1139.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="375.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="373.2" y="1123.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="376.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="373.2" y="1107.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="376.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="373.2" y="1091.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="376.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="373.2" y="1075.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="376.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="373.6" y="1059.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="376.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="373.6" y="1043.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="376.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="373.6" y="1027.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="376.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="373.6" y="1011.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="376.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="373.6" y="995.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="376.6" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="374.8" y="1155.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="377.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.10%)</title><rect x="375.3" y="1203.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="378.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.10%)</title><rect x="375.3" y="1187.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="378.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.10%)</title><rect x="375.3" y="1171.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="378.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (2 samples, 0.07%)</title><rect x="375.3" y="1155.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="378.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="376.1" y="1155.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="379.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="376.1" y="1139.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.07%)</title><rect x="376.5" y="1203.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="379.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.07%)</title><rect x="376.5" y="1187.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="379.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.07%)</title><rect x="376.5" y="1171.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="379.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.07%)</title><rect x="376.5" y="1155.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="379.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.07%)</title><rect x="376.5" y="1139.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="379.5" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.07%)</title><rect x="376.5" y="1123.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="379.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="376.5" y="1107.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="379.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="376.5" y="1091.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="379.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="376.5" y="1075.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="379.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="376.5" y="1059.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="379.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="376.5" y="1043.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="379.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="376.5" y="1027.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="379.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="376.5" y="1011.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="379.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="376.5" y="995.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="379.5" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (104 samples, 3.62%)</title><rect x="377.3" y="1235.0" width="42.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="380.3" y="1246.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (103 samples, 3.59%)</title><rect x="377.7" y="1219.0" width="42.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="380.7" y="1230.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (57 samples, 1.98%)</title><rect x="377.7" y="1203.0" width="23.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="380.7" y="1214.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (57 samples, 1.98%)</title><rect x="377.7" y="1187.0" width="23.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="380.7" y="1198.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (53 samples, 1.85%)</title><rect x="377.7" y="1171.0" width="21.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="380.7" y="1182.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="377.7" y="1155.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="380.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.03%)</title><rect x="377.7" y="1139.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.03%)</title><rect x="377.7" y="1123.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="380.7" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (12 samples, 0.42%)</title><rect x="378.1" y="1155.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="381.1" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.07%)</title><rect x="378.1" y="1139.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="378.1" y="1123.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="381.1" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table$$Lambda$71/1929627194.apply (1 samples, 0.03%)</title><rect x="378.5" y="1123.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="381.5" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Row.getKey (1 samples, 0.03%)</title><rect x="378.5" y="1107.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="381.5" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="378.5" y="1091.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="381.5" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.03%)</title><rect x="378.5" y="1075.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="381.5" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="378.5" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="381.5" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="378.5" y="1043.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="381.5" y="1054.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="378.5" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.5" y="1038.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_opt_virtual_call_C(JavaThread*) (1 samples, 0.03%)</title><rect x="378.5" y="1011.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="381.5" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="378.5" y="995.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="381.5" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::resolve_sub_helper(JavaThread*, bool, bool, Thread*) (1 samples, 0.03%)</title><rect x="378.5" y="979.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="381.5" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.03%)</title><rect x="378.5" y="963.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="381.5" y="974.0"></text>
</g>
<g>
<title>Bytecode_invoke::static_target(Thread*) (1 samples, 0.03%)</title><rect x="378.5" y="947.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="381.5" y="958.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method_statically(Bytecodes::Code, constantPoolHandle const&amp;, int, Thread*) (1 samples, 0.03%)</title><rect x="378.5" y="931.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="381.5" y="942.0"></text>
</g>
<g>
<title>ConstantPool::klass_ref_at(int, Thread*) (1 samples, 0.03%)</title><rect x="378.5" y="915.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="381.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (10 samples, 0.35%)</title><rect x="379.0" y="1139.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.0" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (10 samples, 0.35%)</title><rect x="379.0" y="1123.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="382.0" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (1 samples, 0.03%)</title><rect x="379.0" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="382.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="379.0" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="379.0" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (1 samples, 0.03%)</title><rect x="379.0" y="1059.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (9 samples, 0.31%)</title><rect x="379.4" y="1107.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (1 samples, 0.03%)</title><rect x="379.4" y="1091.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (1 samples, 0.03%)</title><rect x="379.4" y="1075.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="382.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (1 samples, 0.03%)</title><rect x="379.4" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.03%)</title><rect x="379.4" y="1043.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="382.4" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (7 samples, 0.24%)</title><rect x="379.8" y="1091.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.8" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.hasNext (1 samples, 0.03%)</title><rect x="379.8" y="1075.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="382.8" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractMap.values (1 samples, 0.03%)</title><rect x="380.2" y="1075.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.2" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.03%)</title><rect x="380.6" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="383.6" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (4 samples, 0.14%)</title><rect x="381.0" y="1075.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.0" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="381.0" y="1059.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="384.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.10%)</title><rect x="381.4" y="1059.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.10%)</title><rect x="381.4" y="1043.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="384.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.10%)</title><rect x="381.4" y="1027.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="384.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.10%)</title><rect x="381.4" y="1011.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="384.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.10%)</title><rect x="381.4" y="995.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (2 samples, 0.07%)</title><rect x="381.8" y="979.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="382.2" y="963.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="385.2" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="382.2" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="385.2" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="382.2" y="931.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="385.2" y="942.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="382.2" y="915.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="385.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (1 samples, 0.03%)</title><rect x="382.7" y="1091.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="385.7" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.03%)</title><rect x="382.7" y="1075.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="385.7" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="382.7" y="1059.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="385.7" y="1070.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (1 samples, 0.03%)</title><rect x="382.7" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="385.7" y="1054.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (1 samples, 0.03%)</title><rect x="382.7" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="385.7" y="1038.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (1 samples, 0.03%)</title><rect x="382.7" y="1011.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="385.7" y="1022.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (1 samples, 0.03%)</title><rect x="382.7" y="995.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (7 samples, 0.24%)</title><rect x="383.1" y="1155.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="386.1" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (7 samples, 0.24%)</title><rect x="383.1" y="1139.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.1" y="1150.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (7 samples, 0.24%)</title><rect x="383.1" y="1123.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.1" y="1134.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (2 samples, 0.07%)</title><rect x="383.1" y="1107.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="386.1" y="1118.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (2 samples, 0.07%)</title><rect x="383.1" y="1091.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="386.1" y="1102.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (2 samples, 0.07%)</title><rect x="383.1" y="1075.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="386.1" y="1086.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.07%)</title><rect x="383.1" y="1059.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="386.1" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.07%)</title><rect x="383.1" y="1043.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.1" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="383.5" y="1027.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="386.5" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="383.5" y="1011.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="386.5" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="383.5" y="995.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="386.5" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (5 samples, 0.17%)</title><rect x="383.9" y="1107.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="386.9" y="1118.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (3 samples, 0.10%)</title><rect x="383.9" y="1091.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.9" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.10%)</title><rect x="383.9" y="1075.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="383.9" y="1059.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="386.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="383.9" y="1043.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="386.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="383.9" y="1027.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="386.9" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.07%)</title><rect x="384.3" y="1059.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.3" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="384.3" y="1043.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="387.3" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="384.3" y="1027.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.3" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.07%)</title><rect x="384.3" y="1011.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.3" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="384.3" y="995.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="387.3" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="384.3" y="979.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.3" y="990.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="384.3" y="963.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.3" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="384.7" y="995.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="387.7" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="384.7" y="979.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="387.7" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.processRemaining (2 samples, 0.07%)</title><rect x="385.1" y="1091.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="388.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.getResponsesFromRelicas (23 samples, 0.80%)</title><rect x="385.9" y="1155.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="388.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="385.9" y="1139.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="388.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="385.9" y="1123.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="388.9" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.get$Lambda (1 samples, 0.03%)</title><rect x="385.9" y="1107.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="388.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.&lt;init&gt; (1 samples, 0.03%)</title><rect x="385.9" y="1091.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.9" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.contains (1 samples, 0.03%)</title><rect x="386.4" y="1139.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="389.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="386.4" y="1123.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.submit (6 samples, 0.21%)</title><rect x="386.8" y="1139.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="389.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.21%)</title><rect x="386.8" y="1123.0" width="2.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.21%)</title><rect x="386.8" y="1107.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.21%)</title><rect x="386.8" y="1091.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="389.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.21%)</title><rect x="386.8" y="1075.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="389.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.21%)</title><rect x="386.8" y="1059.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="389.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.21%)</title><rect x="386.8" y="1043.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="389.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.21%)</title><rect x="386.8" y="1027.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="389.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.21%)</title><rect x="386.8" y="1011.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="389.8" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="386.8" y="995.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="389.8" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="386.8" y="979.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="389.8" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="387.2" y="995.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="390.2" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.14%)</title><rect x="387.6" y="995.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="390.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="387.6" y="979.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="390.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="387.6" y="963.0" width="1.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="390.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="387.6" y="947.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="390.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="387.6" y="931.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="390.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="387.6" y="915.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="390.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="387.6" y="899.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="390.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="387.6" y="883.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="390.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="387.6" y="867.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="390.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService.take (15 samples, 0.52%)</title><rect x="389.2" y="1139.0" width="6.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="392.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (15 samples, 0.52%)</title><rect x="389.2" y="1123.0" width="6.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="392.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 0.42%)</title><rect x="389.2" y="1107.0" width="5.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="392.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.03%)</title><rect x="389.2" y="1091.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="392.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="389.2" y="1075.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="392.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="389.2" y="1059.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="392.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (1 samples, 0.03%)</title><rect x="389.6" y="1091.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.35%)</title><rect x="390.0" y="1091.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="393.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.35%)</title><rect x="390.0" y="1075.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="393.0" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.07%)</title><rect x="390.5" y="1059.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="393.5" y="1070.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="390.9" y="1043.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="393.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="391.3" y="1059.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="394.3" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.21%)</title><rect x="391.3" y="1043.0" width="2.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="394.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="391.7" y="1027.0" width="2.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="394.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="391.7" y="1011.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="394.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="391.7" y="995.0" width="2.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="394.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="391.7" y="979.0" width="2.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="394.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="391.7" y="963.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="394.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="392.1" y="947.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="395.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="392.1" y="931.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="395.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="392.1" y="915.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="395.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="392.9" y="899.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="395.9" y="910.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="393.7" y="1043.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="396.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.10%)</title><rect x="394.2" y="1107.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="397.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.10%)</title><rect x="394.2" y="1091.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="397.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.10%)</title><rect x="394.2" y="1075.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.10%)</title><rect x="394.2" y="1059.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="397.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.10%)</title><rect x="394.2" y="1043.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="397.2" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="394.2" y="1027.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="397.2" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="394.2" y="1011.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="397.2" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.07%)</title><rect x="394.6" y="1027.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="397.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="394.6" y="1011.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="397.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="394.6" y="995.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="397.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="394.6" y="979.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="397.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="394.6" y="963.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="397.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="394.6" y="947.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="397.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="394.6" y="931.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="397.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="394.6" y="915.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="397.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="395.0" y="899.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="398.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (4 samples, 0.14%)</title><rect x="395.4" y="1155.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.4" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.03%)</title><rect x="395.4" y="1139.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.4" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="395.4" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.4" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="395.4" y="1107.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.4" y="1118.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.03%)</title><rect x="395.4" y="1091.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.03%)</title><rect x="395.8" y="1139.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="398.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="395.8" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="398.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="395.8" y="1107.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="398.8" y="1118.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="395.8" y="1091.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="398.8" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.present (2 samples, 0.07%)</title><rect x="396.2" y="1139.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.&lt;init&gt; (2 samples, 0.07%)</title><rect x="396.2" y="1123.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="399.2" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="396.6" y="1107.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="399.6" y="1118.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="396.6" y="1091.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="399.6" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.merge (5 samples, 0.17%)</title><rect x="397.0" y="1155.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="400.0" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (1 samples, 0.03%)</title><rect x="397.0" y="1139.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.0" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (1 samples, 0.03%)</title><rect x="397.0" y="1123.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="400.0" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (1 samples, 0.03%)</title><rect x="397.0" y="1107.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.0" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.03%)</title><rect x="397.0" y="1091.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.0" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (4 samples, 0.14%)</title><rect x="397.4" y="1139.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="400.4" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (4 samples, 0.14%)</title><rect x="397.4" y="1123.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="400.4" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.14%)</title><rect x="397.4" y="1107.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="400.4" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (4 samples, 0.14%)</title><rect x="397.4" y="1091.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.4" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.07%)</title><rect x="397.9" y="1075.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="400.9" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (1 samples, 0.03%)</title><rect x="397.9" y="1059.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="400.9" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.03%)</title><rect x="397.9" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="400.9" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (1 samples, 0.03%)</title><rect x="397.9" y="1027.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="400.9" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2ReducingSink.accept (1 samples, 0.03%)</title><rect x="397.9" y="1011.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="400.9" y="1022.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$79/1679395522.apply (1 samples, 0.03%)</title><rect x="397.9" y="995.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="400.9" y="1006.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.lambda$maxBy$1 (1 samples, 0.03%)</title><rect x="397.9" y="979.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="400.9" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.03%)</title><rect x="398.3" y="1059.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.3" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (1 samples, 0.03%)</title><rect x="398.3" y="1043.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="401.3" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="398.3" y="1027.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="401.3" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.03%)</title><rect x="398.3" y="1011.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="401.3" y="1022.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator$$Lambda$79/1679395522.apply (1 samples, 0.03%)</title><rect x="398.3" y="995.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="401.3" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (1 samples, 0.03%)</title><rect x="398.7" y="1075.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="401.7" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$2.makeSink (1 samples, 0.03%)</title><rect x="398.7" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (1 samples, 0.03%)</title><rect x="399.1" y="1155.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="402.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="399.1" y="1139.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="402.1" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (4 samples, 0.14%)</title><rect x="399.5" y="1171.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="402.5" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.07%)</title><rect x="400.3" y="1155.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="403.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="400.3" y="1139.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="403.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (2 samples, 0.07%)</title><rect x="400.3" y="1123.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="403.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (46 samples, 1.60%)</title><rect x="401.1" y="1203.0" width="18.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="404.1" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (46 samples, 1.60%)</title><rect x="401.1" y="1187.0" width="18.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="404.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="401.6" y="1171.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="404.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="401.6" y="1155.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="404.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="401.6" y="1139.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="404.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="402.0" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="405.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (42 samples, 1.46%)</title><rect x="402.4" y="1171.0" width="17.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (3 samples, 0.10%)</title><rect x="402.4" y="1155.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.10%)</title><rect x="402.4" y="1139.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="405.4" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.07%)</title><rect x="402.8" y="1123.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="405.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.07%)</title><rect x="402.8" y="1107.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="405.8" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="403.2" y="1091.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="406.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 1.36%)</title><rect x="403.6" y="1155.0" width="16.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="406.6" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 1.36%)</title><rect x="403.6" y="1139.0" width="16.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="406.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (39 samples, 1.36%)</title><rect x="403.6" y="1123.0" width="16.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="406.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (38 samples, 1.32%)</title><rect x="404.0" y="1107.0" width="15.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="404.0" y="1091.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="407.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="404.0" y="1075.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="407.0" y="1086.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="404.0" y="1059.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="407.0" y="1070.0"></text>
</g>
<g>
<title>__send (37 samples, 1.29%)</title><rect x="404.4" y="1091.0" width="15.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="407.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.25%)</title><rect x="404.8" y="1075.0" width="14.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="407.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.25%)</title><rect x="404.8" y="1059.0" width="14.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="407.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="405.3" y="1043.0" width="14.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="408.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="405.3" y="1027.0" width="14.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="408.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="405.3" y="1011.0" width="14.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="408.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="405.3" y="995.0" width="14.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="408.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="405.3" y="979.0" width="14.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="408.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.18%)</title><rect x="405.7" y="963.0" width="13.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="408.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.15%)</title><rect x="406.1" y="947.0" width="13.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="409.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="406.9" y="931.0" width="12.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="409.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.04%)</title><rect x="407.3" y="915.0" width="12.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="410.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="407.7" y="899.0" width="11.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="410.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="408.9" y="883.0" width="10.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="411.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="408.9" y="867.0" width="10.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="411.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="409.8" y="851.0" width="9.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="412.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="409.8" y="835.0" width="9.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="412.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="410.2" y="819.0" width="9.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="413.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="411.0" y="803.0" width="8.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="414.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="411.8" y="787.0" width="7.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="414.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="412.6" y="771.0" width="7.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="415.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="413.5" y="755.0" width="6.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="416.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="413.5" y="739.0" width="6.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="416.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="414.3" y="723.0" width="5.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="417.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="414.3" y="707.0" width="5.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="417.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="414.3" y="691.0" width="5.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="417.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="414.3" y="675.0" width="5.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="417.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="414.3" y="659.0" width="5.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="417.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="414.3" y="643.0" width="5.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="417.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="414.3" y="627.0" width="5.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="417.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="414.3" y="611.0" width="5.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="417.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="414.7" y="595.0" width="4.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="417.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="414.7" y="579.0" width="4.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="417.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="415.1" y="563.0" width="4.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="418.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="415.5" y="547.0" width="4.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="418.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="415.5" y="531.0" width="4.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="418.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="416.8" y="515.0" width="2.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="419.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="417.2" y="499.0" width="2.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="420.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="417.2" y="483.0" width="2.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="420.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="417.2" y="467.0" width="2.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="420.2" y="478.0"></text>
</g>
<g>
<title>one/nio/http/Response.addHeader (1 samples, 0.03%)</title><rect x="419.6" y="1171.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.6" y="1182.0"></text>
</g>
<g>
<title>[AsyncWorker-3 tid=31435] (84 samples, 2.92%)</title><rect x="420.0" y="1299.0" width="34.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="423.0" y="1310.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.07%)</title><rect x="420.0" y="1283.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="423.0" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.07%)</title><rect x="420.0" y="1267.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="423.0" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.07%)</title><rect x="420.0" y="1251.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="423.0" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.07%)</title><rect x="420.0" y="1235.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="423.0" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="420.5" y="1219.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="423.5" y="1230.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="420.5" y="1203.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="423.5" y="1214.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.03%)</title><rect x="420.5" y="1187.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="423.5" y="1198.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="420.5" y="1171.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="423.5" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="420.9" y="1283.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="423.9" y="1294.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="420.9" y="1267.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="423.9" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (1 samples, 0.03%)</title><rect x="420.9" y="1251.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="423.9" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="420.9" y="1235.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="423.9" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.03%)</title><rect x="420.9" y="1219.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="423.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (81 samples, 2.82%)</title><rect x="421.3" y="1283.0" width="33.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="424.3" y="1294.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (81 samples, 2.82%)</title><rect x="421.3" y="1267.0" width="33.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="424.3" y="1278.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (81 samples, 2.82%)</title><rect x="421.3" y="1251.0" width="33.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="424.3" y="1262.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 0.42%)</title><rect x="421.3" y="1235.0" width="4.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="424.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (11 samples, 0.38%)</title><rect x="421.7" y="1219.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="424.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.31%)</title><rect x="421.7" y="1203.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.03%)</title><rect x="421.7" y="1187.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="424.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="421.7" y="1171.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="424.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="421.7" y="1155.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.03%)</title><rect x="421.7" y="1139.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="424.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="421.7" y="1123.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="424.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="421.7" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="424.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.28%)</title><rect x="422.1" y="1187.0" width="3.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="425.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.28%)</title><rect x="422.1" y="1171.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="425.1" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.10%)</title><rect x="422.1" y="1155.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="425.1" y="1166.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="422.5" y="1139.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="425.5" y="1150.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="422.5" y="1123.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="425.5" y="1134.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="422.9" y="1139.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="425.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="423.3" y="1155.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="426.3" y="1166.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (2 samples, 0.07%)</title><rect x="423.3" y="1139.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="426.3" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.10%)</title><rect x="424.2" y="1139.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="427.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="425.0" y="1123.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="428.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="425.0" y="1107.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="428.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="425.0" y="1091.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="428.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="425.0" y="1075.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="428.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="425.0" y="1059.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="428.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="425.0" y="1043.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="428.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="425.0" y="1027.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="428.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="425.0" y="1011.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="428.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="425.0" y="995.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="428.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.07%)</title><rect x="425.4" y="1203.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="428.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.07%)</title><rect x="425.4" y="1187.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.07%)</title><rect x="425.4" y="1171.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="428.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="425.8" y="1155.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="428.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="425.8" y="1139.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="428.8" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (69 samples, 2.40%)</title><rect x="426.2" y="1235.0" width="28.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="429.2" y="1246.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (68 samples, 2.37%)</title><rect x="426.6" y="1219.0" width="28.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="429.6" y="1230.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (25 samples, 0.87%)</title><rect x="426.6" y="1203.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.6" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (25 samples, 0.87%)</title><rect x="426.6" y="1187.0" width="10.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.6" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (22 samples, 0.77%)</title><rect x="426.6" y="1171.0" width="9.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="429.6" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="427.0" y="1155.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.0" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="427.0" y="1139.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.0" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="427.0" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.0" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="427.0" y="1107.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.0" y="1118.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="427.0" y="1091.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="430.0" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="427.0" y="1075.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="430.0" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="427.0" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="427.0" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (13 samples, 0.45%)</title><rect x="427.4" y="1155.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.4" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="427.4" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="430.4" y="1150.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="427.4" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.4" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="427.4" y="1107.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="427.4" y="1091.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.4" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="427.4" y="1075.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.4" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="427.4" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (1 samples, 0.03%)</title><rect x="427.4" y="1043.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="430.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="427.4" y="1027.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.03%)</title><rect x="427.4" y="1011.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.4" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (12 samples, 0.42%)</title><rect x="427.8" y="1139.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="430.8" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (9 samples, 0.31%)</title><rect x="427.8" y="1123.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="430.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (9 samples, 0.31%)</title><rect x="427.8" y="1107.0" width="3.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="430.8" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (8 samples, 0.28%)</title><rect x="427.8" y="1091.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.8" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (1 samples, 0.03%)</title><rect x="427.8" y="1075.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="430.8" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (7 samples, 0.24%)</title><rect x="428.3" y="1075.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="431.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (7 samples, 0.24%)</title><rect x="428.3" y="1059.0" width="2.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="431.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (7 samples, 0.24%)</title><rect x="428.3" y="1043.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="431.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (7 samples, 0.24%)</title><rect x="428.3" y="1027.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="431.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (1 samples, 0.03%)</title><rect x="428.3" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="431.3" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::handle_wrong_method(JavaThread*) (1 samples, 0.03%)</title><rect x="428.3" y="995.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="431.3" y="1006.0"></text>
</g>
<g>
<title>SharedRuntime::reresolve_call_site(JavaThread*, Thread*) (1 samples, 0.03%)</title><rect x="428.3" y="979.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="431.3" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_method(JavaThread*, Thread*) (1 samples, 0.03%)</title><rect x="428.3" y="963.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="431.3" y="974.0"></text>
</g>
<g>
<title>SharedRuntime::find_callee_info_helper(JavaThread*, vframeStream&amp;, Bytecodes::Code&amp;, CallInfo&amp;, Thread*) (1 samples, 0.03%)</title><rect x="428.3" y="947.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="431.3" y="958.0"></text>
</g>
<g>
<title>SharedRuntime::name_for_receiver() (1 samples, 0.03%)</title><rect x="428.3" y="931.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="431.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.21%)</title><rect x="428.7" y="1011.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="431.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.21%)</title><rect x="428.7" y="995.0" width="2.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="431.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (5 samples, 0.17%)</title><rect x="429.1" y="979.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="432.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (1 samples, 0.03%)</title><rect x="431.1" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="434.1" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.03%)</title><rect x="431.1" y="1075.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="434.1" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="431.1" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="434.1" y="1070.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.03%)</title><rect x="431.1" y="1043.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="434.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (3 samples, 0.10%)</title><rect x="431.5" y="1123.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.5" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (3 samples, 0.10%)</title><rect x="431.5" y="1107.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="434.5" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (3 samples, 0.10%)</title><rect x="431.5" y="1091.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.5" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.10%)</title><rect x="431.5" y="1075.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="434.5" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.10%)</title><rect x="431.5" y="1059.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.10%)</title><rect x="431.5" y="1043.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="434.5" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="432.0" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.0" y="1038.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="432.0" y="1011.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="432.0" y="995.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table$$Lambda$71/1929627194.apply (1 samples, 0.03%)</title><rect x="432.0" y="979.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="435.0" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="432.0" y="963.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="435.0" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (1 samples, 0.03%)</title><rect x="432.4" y="1027.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.4" y="1038.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="432.4" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="435.4" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.03%)</title><rect x="432.4" y="995.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.4" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.03%)</title><rect x="432.4" y="979.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="435.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (1 samples, 0.03%)</title><rect x="432.8" y="1155.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="435.8" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.getData (1 samples, 0.03%)</title><rect x="432.8" y="1139.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.8" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.03%)</title><rect x="432.8" y="1123.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="435.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (6 samples, 0.21%)</title><rect x="433.2" y="1155.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="436.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/226225859.linkToTargetMethod (5 samples, 0.17%)</title><rect x="433.2" y="1139.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="436.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1279714552.invoke (5 samples, 0.17%)</title><rect x="433.2" y="1123.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.2" y="1134.0"></text>
</g>
<g>
<title>_invokeBasic (1 samples, 0.03%)</title><rect x="433.2" y="1107.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="436.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.10%)</title><rect x="433.6" y="1107.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="436.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="433.6" y="1091.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="436.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.07%)</title><rect x="434.0" y="1091.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="437.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.07%)</title><rect x="434.0" y="1075.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="437.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray0 (1 samples, 0.03%)</title><rect x="434.4" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="437.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/1186445263.invokeStatic (1 samples, 0.03%)</title><rect x="434.8" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="437.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.03%)</title><rect x="434.8" y="1091.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="437.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (1 samples, 0.03%)</title><rect x="434.8" y="1075.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="437.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="435.2" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (3 samples, 0.10%)</title><rect x="435.7" y="1171.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="438.7" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (1 samples, 0.03%)</title><rect x="435.7" y="1155.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="438.7" y="1166.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="435.7" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="438.7" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="435.7" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="438.7" y="1134.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="435.7" y="1107.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="438.7" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="435.7" y="1091.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="438.7" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="435.7" y="1075.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="438.7" y="1086.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.03%)</title><rect x="435.7" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="438.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.07%)</title><rect x="436.1" y="1155.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="439.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.07%)</title><rect x="436.1" y="1139.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="439.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="436.1" y="1123.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="439.1" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="436.1" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="436.5" y="1123.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="439.5" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (43 samples, 1.50%)</title><rect x="436.9" y="1203.0" width="17.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="439.9" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (42 samples, 1.46%)</title><rect x="436.9" y="1187.0" width="17.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="439.9" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (40 samples, 1.39%)</title><rect x="437.3" y="1171.0" width="16.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.07%)</title><rect x="437.3" y="1155.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="440.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="437.7" y="1139.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.03%)</title><rect x="437.7" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="440.7" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.03%)</title><rect x="437.7" y="1107.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="440.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (38 samples, 1.32%)</title><rect x="438.1" y="1155.0" width="15.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="441.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (38 samples, 1.32%)</title><rect x="438.1" y="1139.0" width="15.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="441.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (38 samples, 1.32%)</title><rect x="438.1" y="1123.0" width="15.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (38 samples, 1.32%)</title><rect x="438.1" y="1107.0" width="15.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="441.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="438.1" y="1091.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="441.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="438.1" y="1075.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="441.1" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="438.1" y="1059.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="441.1" y="1070.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="438.1" y="1043.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="441.1" y="1054.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="438.1" y="1027.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="441.1" y="1038.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="438.1" y="1011.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="441.1" y="1022.0"></text>
</g>
<g>
<title>__send (37 samples, 1.29%)</title><rect x="438.5" y="1091.0" width="15.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="441.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.29%)</title><rect x="438.5" y="1075.0" width="15.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="441.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.29%)</title><rect x="438.5" y="1059.0" width="15.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="441.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.29%)</title><rect x="438.5" y="1043.0" width="15.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="441.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.29%)</title><rect x="438.5" y="1027.0" width="15.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="441.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.18%)</title><rect x="439.8" y="1011.0" width="13.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="442.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.18%)</title><rect x="439.8" y="995.0" width="13.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="442.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.18%)</title><rect x="439.8" y="979.0" width="13.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="442.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.18%)</title><rect x="439.8" y="963.0" width="13.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="442.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.18%)</title><rect x="439.8" y="947.0" width="13.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="442.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.11%)</title><rect x="440.6" y="931.0" width="13.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="443.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="441.8" y="915.0" width="11.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="444.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="442.2" y="899.0" width="11.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="445.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.94%)</title><rect x="442.6" y="883.0" width="11.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="445.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.94%)</title><rect x="442.6" y="867.0" width="11.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="445.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.94%)</title><rect x="442.6" y="851.0" width="11.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="445.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="443.5" y="835.0" width="10.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="446.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="443.9" y="819.0" width="9.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="446.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="444.3" y="803.0" width="9.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="447.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="444.3" y="787.0" width="9.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="447.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="445.1" y="771.0" width="8.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="448.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="446.7" y="755.0" width="7.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="449.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="447.6" y="739.0" width="6.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="450.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="447.6" y="723.0" width="6.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="450.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="447.6" y="707.0" width="6.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="450.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="447.6" y="691.0" width="6.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="450.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="447.6" y="675.0" width="6.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="450.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="447.6" y="659.0" width="6.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="450.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="447.6" y="643.0" width="6.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="450.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="447.6" y="627.0" width="6.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="450.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="447.6" y="611.0" width="6.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="450.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="448.0" y="595.0" width="5.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="451.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="448.0" y="579.0" width="5.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="451.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="448.4" y="563.0" width="5.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="451.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="448.4" y="547.0" width="5.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="451.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="448.4" y="531.0" width="5.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="451.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="448.4" y="515.0" width="5.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="451.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="450.0" y="499.0" width="3.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="453.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="450.0" y="483.0" width="3.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="453.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="450.0" y="467.0" width="3.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="453.0" y="478.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.03%)</title><rect x="453.7" y="1171.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="456.7" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (1 samples, 0.03%)</title><rect x="454.1" y="1187.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.1" y="1198.0"></text>
</g>
<g>
<title>[AsyncWorker-3 tid=31437] (78 samples, 2.72%)</title><rect x="454.6" y="1299.0" width="32.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="457.6" y="1310.0">[A..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.07%)</title><rect x="454.6" y="1283.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="457.6" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.07%)</title><rect x="454.6" y="1267.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="457.6" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.07%)</title><rect x="454.6" y="1251.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="457.6" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.07%)</title><rect x="454.6" y="1235.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="457.6" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.07%)</title><rect x="454.6" y="1219.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="457.6" y="1230.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.03%)</title><rect x="454.6" y="1203.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="457.6" y="1214.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.03%)</title><rect x="455.0" y="1203.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="458.0" y="1214.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.03%)</title><rect x="455.4" y="1283.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="458.4" y="1294.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="455.4" y="1267.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="458.4" y="1278.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (1 samples, 0.03%)</title><rect x="455.4" y="1251.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="458.4" y="1262.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="455.4" y="1235.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="458.4" y="1246.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.03%)</title><rect x="455.4" y="1219.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="458.4" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="455.8" y="1283.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="458.8" y="1294.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.03%)</title><rect x="455.8" y="1267.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="458.8" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (1 samples, 0.03%)</title><rect x="455.8" y="1251.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="458.8" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="455.8" y="1235.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="458.8" y="1246.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.03%)</title><rect x="455.8" y="1219.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="458.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (74 samples, 2.58%)</title><rect x="456.2" y="1283.0" width="30.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.2" y="1294.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (74 samples, 2.58%)</title><rect x="456.2" y="1267.0" width="30.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.2" y="1278.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (74 samples, 2.58%)</title><rect x="456.2" y="1251.0" width="30.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="459.2" y="1262.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13 samples, 0.45%)</title><rect x="456.2" y="1235.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="459.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (12 samples, 0.42%)</title><rect x="456.6" y="1219.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="459.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (10 samples, 0.35%)</title><rect x="456.6" y="1203.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.35%)</title><rect x="456.6" y="1187.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="459.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (10 samples, 0.35%)</title><rect x="456.6" y="1171.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="459.6" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.07%)</title><rect x="456.6" y="1155.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="459.6" y="1166.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="457.0" y="1139.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="460.0" y="1150.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="457.0" y="1123.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="460.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="457.4" y="1155.0" width="3.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="460.4" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.28%)</title><rect x="457.4" y="1139.0" width="3.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="460.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="457.8" y="1123.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="460.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="457.8" y="1107.0" width="2.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="460.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="457.8" y="1091.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="460.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="458.3" y="1075.0" width="2.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="461.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="458.3" y="1059.0" width="2.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="461.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="458.3" y="1043.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="461.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="458.7" y="1027.0" width="2.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="461.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="459.1" y="1011.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="462.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="459.1" y="995.0" width="1.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="462.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="460.3" y="979.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="463.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="460.3" y="963.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="463.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="460.3" y="947.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="463.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="460.7" y="1203.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="463.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="460.7" y="1187.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="463.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="460.7" y="1171.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="460.7" y="1155.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="463.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.03%)</title><rect x="460.7" y="1139.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="461.1" y="1203.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.1" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.run (61 samples, 2.12%)</title><rect x="461.5" y="1235.0" width="25.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.5" y="1246.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$executeAsync$3 (61 samples, 2.12%)</title><rect x="461.5" y="1219.0" width="25.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="464.5" y="1230.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$60/203758604.act (16 samples, 0.56%)</title><rect x="461.5" y="1203.0" width="6.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.5" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (16 samples, 0.56%)</title><rect x="461.5" y="1187.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.5" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (15 samples, 0.52%)</title><rect x="461.5" y="1171.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="464.5" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (12 samples, 0.42%)</title><rect x="461.9" y="1155.0" width="5.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="464.9" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="461.9" y="1139.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.9" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (11 samples, 0.38%)</title><rect x="462.4" y="1139.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.4" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (8 samples, 0.28%)</title><rect x="462.4" y="1123.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.4" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (8 samples, 0.28%)</title><rect x="462.4" y="1107.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="465.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (7 samples, 0.24%)</title><rect x="462.4" y="1091.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="465.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.values (1 samples, 0.03%)</title><rect x="462.4" y="1075.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="465.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.&lt;init&gt; (1 samples, 0.03%)</title><rect x="462.4" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.4" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (6 samples, 0.21%)</title><rect x="462.8" y="1075.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="465.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.17%)</title><rect x="462.8" y="1059.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (5 samples, 0.17%)</title><rect x="462.8" y="1043.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="465.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.14%)</title><rect x="463.2" y="1027.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="466.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.14%)</title><rect x="463.2" y="1011.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="466.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.14%)</title><rect x="463.2" y="995.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (1 samples, 0.03%)</title><rect x="463.2" y="979.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.2" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="463.2" y="963.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.2" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (1 samples, 0.03%)</title><rect x="463.2" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="466.2" y="958.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (1 samples, 0.03%)</title><rect x="463.2" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="466.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.10%)</title><rect x="463.6" y="979.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="464.8" y="1059.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.8" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (1 samples, 0.03%)</title><rect x="465.2" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="468.2" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.03%)</title><rect x="465.2" y="1075.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="468.2" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="465.2" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="468.2" y="1070.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (1 samples, 0.03%)</title><rect x="465.2" y="1043.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="468.2" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (1 samples, 0.03%)</title><rect x="465.2" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="468.2" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (3 samples, 0.10%)</title><rect x="465.6" y="1123.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.6" y="1134.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (1 samples, 0.03%)</title><rect x="465.6" y="1107.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.6" y="1118.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="465.6" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="468.6" y="1102.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (1 samples, 0.03%)</title><rect x="465.6" y="1075.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="468.6" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.07%)</title><rect x="466.1" y="1107.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.07%)</title><rect x="466.1" y="1091.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.1" y="1102.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="466.5" y="1075.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="469.5" y="1086.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="466.5" y="1059.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="469.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (1 samples, 0.03%)</title><rect x="466.5" y="1043.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="469.5" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (1 samples, 0.03%)</title><rect x="466.5" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="469.5" y="1038.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (1 samples, 0.03%)</title><rect x="466.5" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="469.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (1 samples, 0.03%)</title><rect x="466.5" y="995.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (1 samples, 0.03%)</title><rect x="466.5" y="979.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (1 samples, 0.03%)</title><rect x="466.5" y="963.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.5" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (2 samples, 0.07%)</title><rect x="466.9" y="1155.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="469.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/226225859.linkToTargetMethod (1 samples, 0.03%)</title><rect x="466.9" y="1139.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="469.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1279714552.invoke (1 samples, 0.03%)</title><rect x="466.9" y="1123.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1982791261.invoke (1 samples, 0.03%)</title><rect x="466.9" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="469.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="466.9" y="1091.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="469.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.03%)</title><rect x="466.9" y="1075.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="469.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.03%)</title><rect x="466.9" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="469.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.inflate (1 samples, 0.03%)</title><rect x="466.9" y="1043.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="467.3" y="1139.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.3" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (1 samples, 0.03%)</title><rect x="467.7" y="1171.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="470.7" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.sendResponse (45 samples, 1.57%)</title><rect x="468.1" y="1203.0" width="18.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="471.1" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (45 samples, 1.57%)</title><rect x="468.1" y="1187.0" width="18.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (45 samples, 1.57%)</title><rect x="468.1" y="1171.0" width="18.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="471.1" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.07%)</title><rect x="468.1" y="1155.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="471.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.07%)</title><rect x="468.1" y="1139.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="471.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="468.5" y="1123.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="471.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (43 samples, 1.50%)</title><rect x="468.9" y="1155.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="471.9" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (43 samples, 1.50%)</title><rect x="468.9" y="1139.0" width="17.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="471.9" y="1150.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="468.9" y="1123.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="471.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (41 samples, 1.43%)</title><rect x="469.3" y="1123.0" width="16.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="472.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (41 samples, 1.43%)</title><rect x="469.3" y="1107.0" width="16.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="469.3" y="1091.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="472.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="469.3" y="1075.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="472.3" y="1086.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.07%)</title><rect x="469.3" y="1059.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="472.3" y="1070.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="469.3" y="1043.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="472.3" y="1054.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="469.8" y="1043.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="472.8" y="1054.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="469.8" y="1027.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="472.8" y="1038.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="469.8" y="1011.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="472.8" y="1022.0"></text>
</g>
<g>
<title>__send (39 samples, 1.36%)</title><rect x="470.2" y="1091.0" width="16.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="473.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="470.2" y="1075.0" width="16.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="473.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="470.2" y="1059.0" width="16.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="473.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="470.2" y="1043.0" width="16.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="473.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="470.2" y="1027.0" width="16.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="473.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="470.2" y="1011.0" width="16.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="473.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="470.2" y="995.0" width="16.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="473.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="470.2" y="979.0" width="16.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="473.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="470.2" y="963.0" width="16.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="473.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="470.2" y="947.0" width="16.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="473.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.29%)</title><rect x="471.0" y="931.0" width="15.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="474.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.25%)</title><rect x="471.4" y="915.0" width="14.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="474.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="473.5" y="899.0" width="12.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="476.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="475.5" y="883.0" width="10.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="478.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="475.5" y="867.0" width="10.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="478.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="475.5" y="851.0" width="10.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="478.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="475.5" y="835.0" width="10.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="478.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="475.5" y="819.0" width="10.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="478.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="475.5" y="803.0" width="10.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="478.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="475.9" y="787.0" width="10.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="478.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="477.2" y="771.0" width="9.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="480.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.70%)</title><rect x="478.0" y="755.0" width="8.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="481.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="479.2" y="739.0" width="7.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="482.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="480.4" y="723.0" width="5.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="483.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="480.4" y="707.0" width="5.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="483.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="480.4" y="691.0" width="5.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="483.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="480.8" y="675.0" width="5.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="483.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="480.8" y="659.0" width="5.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="483.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="480.8" y="643.0" width="5.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="483.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="482.1" y="627.0" width="4.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="485.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="482.1" y="611.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="485.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="482.5" y="595.0" width="3.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="485.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="482.5" y="579.0" width="3.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="485.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="482.5" y="563.0" width="3.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="485.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="483.7" y="547.0" width="2.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="486.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="483.7" y="531.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="486.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="484.5" y="515.0" width="1.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="487.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="485.4" y="499.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="488.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="485.4" y="483.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="488.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="485.4" y="467.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="488.4" y="478.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="486.2" y="1123.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="489.2" y="1134.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="486.2" y="1107.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="489.2" y="1118.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="486.2" y="1091.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="489.2" y="1102.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=31363] (90 samples, 3.13%)</title><rect x="486.6" y="1299.0" width="37.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="489.6" y="1310.0">[NI..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="486.6" y="1283.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="489.6" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="486.6" y="1267.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="489.6" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="486.6" y="1251.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="489.6" y="1262.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="486.6" y="1235.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="489.6" y="1246.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.03%)</title><rect x="487.0" y="1283.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="490.0" y="1294.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="487.0" y="1267.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="490.0" y="1278.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.03%)</title><rect x="487.0" y="1251.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="490.0" y="1262.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.03%)</title><rect x="487.0" y="1235.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="490.0" y="1246.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.03%)</title><rect x="487.0" y="1219.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="490.0" y="1230.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (88 samples, 3.06%)</title><rect x="487.4" y="1283.0" width="36.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="490.4" y="1294.0">one..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.03%)</title><rect x="487.8" y="1267.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="490.8" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (22 samples, 0.77%)</title><rect x="488.2" y="1267.0" width="9.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.2" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (22 samples, 0.77%)</title><rect x="488.2" y="1251.0" width="9.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="490.3" y="1235.0" width="7.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="493.3" y="1246.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="490.3" y="1219.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="493.3" y="1230.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="490.3" y="1203.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="493.3" y="1214.0"></text>
</g>
<g>
<title>epoll_wait (16 samples, 0.56%)</title><rect x="490.7" y="1219.0" width="6.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="493.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="491.9" y="1203.0" width="5.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="494.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="491.9" y="1187.0" width="5.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="494.9" y="1198.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="492.4" y="1171.0" width="4.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="495.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="492.4" y="1155.0" width="4.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="495.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="492.4" y="1139.0" width="4.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="495.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="494.0" y="1123.0" width="3.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="497.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="494.0" y="1107.0" width="3.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="497.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="495.2" y="1091.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="498.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="495.2" y="1075.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="498.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="495.6" y="1059.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="498.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (64 samples, 2.23%)</title><rect x="497.3" y="1267.0" width="26.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="500.3" y="1278.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (64 samples, 2.23%)</title><rect x="497.3" y="1251.0" width="26.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.3" y="1262.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (44 samples, 1.53%)</title><rect x="497.3" y="1235.0" width="18.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.3" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (31 samples, 1.08%)</title><rect x="497.3" y="1219.0" width="12.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="500.3" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (31 samples, 1.08%)</title><rect x="497.3" y="1203.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="500.3" y="1214.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (31 samples, 1.08%)</title><rect x="497.3" y="1187.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="500.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.14%)</title><rect x="497.3" y="1171.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="500.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.07%)</title><rect x="497.7" y="1155.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.07%)</title><rect x="497.7" y="1139.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="500.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="498.1" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="501.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="498.5" y="1155.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="501.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="498.5" y="1139.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="501.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="498.5" y="1123.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="498.5" y="1107.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.5" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (27 samples, 0.94%)</title><rect x="498.9" y="1171.0" width="11.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="501.9" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (9 samples, 0.31%)</title><rect x="498.9" y="1155.0" width="3.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="501.9" y="1166.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (9 samples, 0.31%)</title><rect x="498.9" y="1139.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.9" y="1150.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (6 samples, 0.21%)</title><rect x="499.3" y="1123.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.3" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (2 samples, 0.07%)</title><rect x="499.3" y="1107.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="499.3" y="1091.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.3" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="499.3" y="1075.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="502.3" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="499.3" y="1059.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="502.3" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (1 samples, 0.03%)</title><rect x="499.7" y="1091.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="502.7" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.03%)</title><rect x="499.7" y="1075.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="502.7" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.&lt;init&gt; (1 samples, 0.03%)</title><rect x="499.7" y="1059.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="502.7" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (2 samples, 0.07%)</title><rect x="500.2" y="1107.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="503.2" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (2 samples, 0.07%)</title><rect x="500.2" y="1091.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.2" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractMap.&lt;init&gt; (1 samples, 0.03%)</title><rect x="500.6" y="1075.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="503.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="500.6" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="503.6" y="1070.0"></text>
</g>
<g>
<title>java/util/Set.of (1 samples, 0.03%)</title><rect x="501.0" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="501.4" y="1107.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.4" y="1118.0"></text>
</g>
<g>
<title>java/util/Set.of (2 samples, 0.07%)</title><rect x="501.8" y="1123.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.8" y="1134.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1 samples, 0.03%)</title><rect x="502.2" y="1107.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="505.2" y="1118.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (1 samples, 0.03%)</title><rect x="502.2" y="1091.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="505.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (1 samples, 0.03%)</title><rect x="502.2" y="1075.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="505.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.03%)</title><rect x="502.2" y="1059.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="505.2" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (3 samples, 0.10%)</title><rect x="502.6" y="1155.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.6" y="1166.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (3 samples, 0.10%)</title><rect x="502.6" y="1139.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="505.6" y="1150.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (2 samples, 0.07%)</title><rect x="502.6" y="1123.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.6" y="1134.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1 samples, 0.03%)</title><rect x="503.0" y="1107.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.0" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.03%)</title><rect x="503.0" y="1091.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="506.0" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.03%)</title><rect x="503.0" y="1075.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.0" y="1086.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1 samples, 0.03%)</title><rect x="503.4" y="1123.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.4" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (15 samples, 0.52%)</title><rect x="503.9" y="1155.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.52%)</title><rect x="503.9" y="1139.0" width="6.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="506.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (15 samples, 0.52%)</title><rect x="503.9" y="1123.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="506.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 0.49%)</title><rect x="503.9" y="1107.0" width="5.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.49%)</title><rect x="503.9" y="1091.0" width="5.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="506.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.49%)</title><rect x="503.9" y="1075.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.49%)</title><rect x="503.9" y="1059.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.49%)</title><rect x="503.9" y="1043.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="506.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.49%)</title><rect x="503.9" y="1027.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="506.9" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.10%)</title><rect x="503.9" y="1011.0" width="1.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="506.9" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="503.9" y="995.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="506.9" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="504.3" y="995.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="507.3" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="504.7" y="995.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="507.7" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.03%)</title><rect x="505.1" y="1011.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="508.1" y="1022.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="505.5" y="1011.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="508.5" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.31%)</title><rect x="505.9" y="1011.0" width="3.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="508.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="505.9" y="995.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="508.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="505.9" y="979.0" width="3.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="508.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="505.9" y="963.0" width="3.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="508.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="505.9" y="947.0" width="3.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="508.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="505.9" y="931.0" width="3.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="508.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="506.3" y="915.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="509.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="506.3" y="899.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="509.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="506.3" y="883.0" width="3.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="509.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="509.6" y="1107.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="509.6" y="1091.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="509.6" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="509.6" y="1059.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="509.6" y="1043.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="512.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="509.6" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.6" y="1038.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="509.6" y="1011.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.28%)</title><rect x="510.0" y="1219.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="513.0" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.14%)</title><rect x="510.0" y="1203.0" width="1.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="513.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.10%)</title><rect x="510.0" y="1187.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.10%)</title><rect x="510.0" y="1171.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="513.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.10%)</title><rect x="510.0" y="1155.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="513.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="511.3" y="1187.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="514.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="511.7" y="1203.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.7" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="511.7" y="1187.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="514.7" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (3 samples, 0.10%)</title><rect x="512.1" y="1203.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="515.1" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.03%)</title><rect x="513.3" y="1219.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="513.3" y="1203.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="513.3" y="1187.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="513.3" y="1171.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="516.3" y="1182.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="513.3" y="1155.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="516.3" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="513.3" y="1139.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="516.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="513.3" y="1123.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="516.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="513.3" y="1107.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="516.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="513.3" y="1091.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="516.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="513.3" y="1075.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="516.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="513.3" y="1059.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="516.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="513.3" y="1043.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="516.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.10%)</title><rect x="513.7" y="1219.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.7" y="1230.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.03%)</title><rect x="514.5" y="1203.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.5" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="515.0" y="1219.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.0" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="515.0" y="1203.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="518.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (20 samples, 0.70%)</title><rect x="515.4" y="1235.0" width="8.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.4" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (20 samples, 0.70%)</title><rect x="515.4" y="1219.0" width="8.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.4" y="1230.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="515.8" y="1203.0" width="2.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="518.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="515.8" y="1187.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="518.8" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (5 samples, 0.17%)</title><rect x="515.8" y="1171.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="518.8" y="1182.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="516.2" y="1155.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="519.2" y="1166.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.10%)</title><rect x="516.6" y="1155.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="519.6" y="1166.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.10%)</title><rect x="516.6" y="1139.0" width="1.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="519.6" y="1150.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.07%)</title><rect x="517.0" y="1123.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="520.0" y="1134.0"></text>
</g>
<g>
<title>__GI___recv (2 samples, 0.07%)</title><rect x="517.8" y="1171.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="520.8" y="1182.0"></text>
</g>
<g>
<title>__GI___recv (12 samples, 0.42%)</title><rect x="518.6" y="1203.0" width="5.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="521.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="518.6" y="1187.0" width="5.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="521.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="518.6" y="1171.0" width="5.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="521.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="518.6" y="1155.0" width="5.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="521.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="518.6" y="1139.0" width="5.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="521.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="518.6" y="1123.0" width="5.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="521.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="518.6" y="1107.0" width="5.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="521.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="519.1" y="1091.0" width="4.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="522.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="520.3" y="1075.0" width="3.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="523.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="521.1" y="1059.0" width="2.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="524.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="521.5" y="1043.0" width="2.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="524.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="522.3" y="1027.0" width="1.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="525.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="523.2" y="1011.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="526.2" y="1022.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=31369] (50 samples, 1.74%)</title><rect x="523.6" y="1299.0" width="20.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="526.6" y="1310.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="523.6" y="1283.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="526.6" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="523.6" y="1267.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="526.6" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="523.6" y="1251.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="526.6" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="523.6" y="1235.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="526.6" y="1246.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (48 samples, 1.67%)</title><rect x="524.0" y="1283.0" width="19.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="527.0" y="1294.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.03%)</title><rect x="525.6" y="1267.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.6" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.31%)</title><rect x="526.0" y="1267.0" width="3.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="529.0" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 0.28%)</title><rect x="526.5" y="1251.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="529.5" y="1262.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="526.5" y="1235.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="529.5" y="1246.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="526.9" y="1235.0" width="2.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="529.9" y="1246.0"></text>
</g>
<g>
<title>epoll_wait (7 samples, 0.24%)</title><rect x="526.9" y="1219.0" width="2.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="529.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="526.9" y="1203.0" width="2.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="529.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="526.9" y="1187.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="529.9" y="1198.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="526.9" y="1171.0" width="2.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="529.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="526.9" y="1155.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="529.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="526.9" y="1139.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="529.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="527.3" y="1123.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="530.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="527.7" y="1107.0" width="2.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="530.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="528.5" y="1091.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="531.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="528.9" y="1075.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="531.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="529.3" y="1059.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="532.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (34 samples, 1.18%)</title><rect x="529.7" y="1267.0" width="14.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.7" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (34 samples, 1.18%)</title><rect x="529.7" y="1251.0" width="14.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="532.7" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (26 samples, 0.91%)</title><rect x="529.7" y="1235.0" width="10.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="532.7" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (23 samples, 0.80%)</title><rect x="529.7" y="1219.0" width="9.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="532.7" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (23 samples, 0.80%)</title><rect x="529.7" y="1203.0" width="9.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.7" y="1214.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (23 samples, 0.80%)</title><rect x="529.7" y="1187.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="532.7" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.10%)</title><rect x="529.7" y="1171.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="529.7" y="1155.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="532.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="529.7" y="1139.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.07%)</title><rect x="530.2" y="1155.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="530.6" y="1139.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="530.6" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.6" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (20 samples, 0.70%)</title><rect x="531.0" y="1171.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.0" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (8 samples, 0.28%)</title><rect x="531.0" y="1155.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="534.0" y="1166.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (7 samples, 0.24%)</title><rect x="531.4" y="1139.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="534.4" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.03%)</title><rect x="531.4" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.4" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.03%)</title><rect x="531.4" y="1107.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="534.4" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.03%)</title><rect x="531.4" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="534.4" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (6 samples, 0.21%)</title><rect x="531.8" y="1123.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="534.8" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (6 samples, 0.21%)</title><rect x="531.8" y="1107.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="534.8" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.10%)</title><rect x="532.2" y="1091.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.2" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.10%)</title><rect x="532.2" y="1075.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.2" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.10%)</title><rect x="532.2" y="1059.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="535.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.03%)</title><rect x="532.2" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.2" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.03%)</title><rect x="532.6" y="1043.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="535.6" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.03%)</title><rect x="533.0" y="1043.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="536.0" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (2 samples, 0.07%)</title><rect x="533.4" y="1091.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="536.4" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.07%)</title><rect x="533.4" y="1075.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.07%)</title><rect x="533.4" y="1059.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="536.4" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (2 samples, 0.07%)</title><rect x="534.3" y="1155.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="537.3" y="1166.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (2 samples, 0.07%)</title><rect x="534.3" y="1139.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="537.3" y="1150.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.03%)</title><rect x="534.7" y="1123.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="537.7" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (10 samples, 0.35%)</title><rect x="535.1" y="1155.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.35%)</title><rect x="535.1" y="1139.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.35%)</title><rect x="535.1" y="1123.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.24%)</title><rect x="535.1" y="1107.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="538.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.24%)</title><rect x="535.1" y="1091.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.24%)</title><rect x="535.1" y="1075.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="538.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.24%)</title><rect x="535.1" y="1059.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.24%)</title><rect x="535.1" y="1043.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="538.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.24%)</title><rect x="535.1" y="1027.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="538.1" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.10%)</title><rect x="535.1" y="1011.0" width="1.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="538.1" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="535.5" y="995.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="538.5" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="535.9" y="995.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="538.9" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.14%)</title><rect x="536.3" y="1011.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="539.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="536.3" y="995.0" width="1.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="539.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="536.3" y="979.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="539.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="536.3" y="963.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="539.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="536.3" y="947.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="539.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="536.3" y="931.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="539.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="536.7" y="915.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="539.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="537.1" y="899.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="540.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="537.1" y="883.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="540.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.10%)</title><rect x="538.0" y="1107.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="541.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.07%)</title><rect x="538.4" y="1091.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="541.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.07%)</title><rect x="538.4" y="1075.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.03%)</title><rect x="538.8" y="1059.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="538.8" y="1043.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="538.8" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="541.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.03%)</title><rect x="539.2" y="1219.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="542.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="539.2" y="1203.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="542.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="539.2" y="1187.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="542.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="539.6" y="1219.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="542.6" y="1230.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.03%)</title><rect x="539.6" y="1203.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="542.6" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="540.0" y="1219.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="543.0" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="540.0" y="1203.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 0.28%)</title><rect x="540.4" y="1235.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.4" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (7 samples, 0.24%)</title><rect x="540.8" y="1219.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="540.8" y="1203.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="543.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="540.8" y="1187.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="543.8" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.03%)</title><rect x="540.8" y="1171.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="543.8" y="1182.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="540.8" y="1155.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="543.8" y="1166.0"></text>
</g>
<g>
<title>__GI___recv (6 samples, 0.21%)</title><rect x="541.2" y="1203.0" width="2.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="544.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="541.2" y="1187.0" width="2.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="544.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="541.2" y="1171.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="544.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="541.2" y="1155.0" width="2.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="544.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="541.2" y="1139.0" width="2.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="544.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="541.2" y="1123.0" width="2.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="544.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="541.2" y="1107.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="544.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="541.2" y="1091.0" width="2.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="544.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="542.1" y="1075.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="545.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="542.9" y="1059.0" width="0.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="545.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="543.3" y="1043.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="546.3" y="1054.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.03%)</title><rect x="543.7" y="1283.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="546.7" y="1294.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=31364] (68 samples, 2.37%)</title><rect x="544.1" y="1299.0" width="28.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="547.1" y="1310.0">[..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="544.1" y="1283.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="547.1" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="544.1" y="1267.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="547.1" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="544.1" y="1251.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="547.1" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="544.1" y="1235.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="547.1" y="1246.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="544.1" y="1219.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="547.1" y="1230.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (67 samples, 2.33%)</title><rect x="544.5" y="1283.0" width="27.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="547.5" y="1294.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 0.63%)</title><rect x="544.5" y="1267.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.5" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.07%)</title><rect x="544.5" y="1251.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.5" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.03%)</title><rect x="544.9" y="1235.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.9" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (16 samples, 0.56%)</title><rect x="545.4" y="1251.0" width="6.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.4" y="1262.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.07%)</title><rect x="546.6" y="1235.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="549.6" y="1246.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="547.4" y="1235.0" width="4.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="550.4" y="1246.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="547.4" y="1219.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="550.4" y="1230.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="547.4" y="1203.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="550.4" y="1214.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.31%)</title><rect x="547.8" y="1219.0" width="3.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="550.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="548.2" y="1203.0" width="3.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="551.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="548.2" y="1187.0" width="3.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="551.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="548.2" y="1171.0" width="3.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="551.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="548.2" y="1155.0" width="3.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="551.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="548.2" y="1139.0" width="3.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="551.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="549.1" y="1123.0" width="2.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="552.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="549.1" y="1107.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="552.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="549.1" y="1091.0" width="2.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="552.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="549.1" y="1075.0" width="2.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="552.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="549.5" y="1059.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="552.5" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="551.5" y="1235.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="554.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (49 samples, 1.71%)</title><rect x="551.9" y="1267.0" width="20.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="554.9" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (47 samples, 1.64%)</title><rect x="552.3" y="1251.0" width="19.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.3" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (35 samples, 1.22%)</title><rect x="552.3" y="1235.0" width="14.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="555.3" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (26 samples, 0.91%)</title><rect x="552.3" y="1219.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.3" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (26 samples, 0.91%)</title><rect x="552.3" y="1203.0" width="10.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="555.3" y="1214.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (25 samples, 0.87%)</title><rect x="552.3" y="1187.0" width="10.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="552.3" y="1171.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="552.3" y="1155.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="555.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="552.3" y="1139.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.3" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (24 samples, 0.84%)</title><rect x="552.8" y="1171.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="555.8" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (4 samples, 0.14%)</title><rect x="552.8" y="1155.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.8" y="1166.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (4 samples, 0.14%)</title><rect x="552.8" y="1139.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.8" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.03%)</title><rect x="552.8" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="555.8" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.03%)</title><rect x="553.2" y="1123.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="556.2" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="553.2" y="1107.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="556.2" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.07%)</title><rect x="553.6" y="1123.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.6" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (2 samples, 0.07%)</title><rect x="553.6" y="1107.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.6" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.07%)</title><rect x="553.6" y="1091.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="556.6" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.07%)</title><rect x="553.6" y="1075.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="556.6" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="553.6" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.6" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="554.0" y="1059.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.03%)</title><rect x="554.0" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="557.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (3 samples, 0.10%)</title><rect x="554.4" y="1155.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.4" y="1166.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (2 samples, 0.07%)</title><rect x="554.4" y="1139.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="557.4" y="1150.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (2 samples, 0.07%)</title><rect x="554.4" y="1123.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="555.2" y="1139.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="555.2" y="1123.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="558.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.03%)</title><rect x="555.2" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.03%)</title><rect x="555.2" y="1091.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="558.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.03%)</title><rect x="555.2" y="1075.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.2" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (17 samples, 0.59%)</title><rect x="555.6" y="1155.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.59%)</title><rect x="555.6" y="1139.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="558.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (17 samples, 0.59%)</title><rect x="555.6" y="1123.0" width="7.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="558.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 0.49%)</title><rect x="555.6" y="1107.0" width="5.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.49%)</title><rect x="555.6" y="1091.0" width="5.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="558.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.49%)</title><rect x="555.6" y="1075.0" width="5.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.49%)</title><rect x="555.6" y="1059.0" width="5.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="558.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.49%)</title><rect x="555.6" y="1043.0" width="5.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="558.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.49%)</title><rect x="555.6" y="1027.0" width="5.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.6" y="1038.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="555.6" y="1011.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="558.6" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.14%)</title><rect x="556.0" y="1011.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="559.0" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="556.0" y="995.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="559.0" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="556.4" y="995.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="559.4" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="556.9" y="995.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="559.9" y="1006.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="557.3" y="995.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="560.3" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.07%)</title><rect x="557.7" y="1011.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="560.7" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.24%)</title><rect x="558.5" y="1011.0" width="2.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="561.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="558.9" y="995.0" width="2.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="561.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="558.9" y="979.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="561.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="558.9" y="963.0" width="2.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="561.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="558.9" y="947.0" width="2.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="561.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="558.9" y="931.0" width="2.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="561.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="559.3" y="915.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="562.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="559.7" y="899.0" width="1.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="562.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="559.7" y="883.0" width="1.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="562.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="561.4" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="561.4" y="1091.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="564.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.07%)</title><rect x="561.8" y="1107.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="564.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.07%)</title><rect x="561.8" y="1091.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.07%)</title><rect x="561.8" y="1075.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="564.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="561.8" y="1059.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="561.8" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="564.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="561.8" y="1027.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="564.8" y="1038.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="561.8" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="564.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.03%)</title><rect x="562.2" y="1059.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="562.2" y="1043.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="562.2" y="1027.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.03%)</title><rect x="562.6" y="1187.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.6" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="562.6" y="1171.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.6" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="562.6" y="1155.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="565.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="562.6" y="1139.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="565.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="562.6" y="1123.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.6" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.14%)</title><rect x="563.0" y="1219.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="566.0" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.10%)</title><rect x="563.0" y="1203.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="563.8" y="1187.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="566.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="563.8" y="1171.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="563.8" y="1155.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="566.8" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.03%)</title><rect x="564.3" y="1203.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="567.3" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.07%)</title><rect x="564.7" y="1219.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="567.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.07%)</title><rect x="564.7" y="1203.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="567.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.07%)</title><rect x="564.7" y="1187.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="565.1" y="1171.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.1" y="1182.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="565.1" y="1155.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="568.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.10%)</title><rect x="565.5" y="1219.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="568.5" y="1230.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.03%)</title><rect x="565.9" y="1203.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.9" y="1214.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="566.3" y="1203.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="569.3" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (12 samples, 0.42%)</title><rect x="566.7" y="1235.0" width="5.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="569.7" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (12 samples, 0.42%)</title><rect x="566.7" y="1219.0" width="5.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="567.1" y="1203.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="570.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="567.1" y="1187.0" width="1.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="570.1" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.10%)</title><rect x="567.1" y="1171.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="570.1" y="1182.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.03%)</title><rect x="567.1" y="1155.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="570.1" y="1166.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="567.5" y="1155.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="570.5" y="1166.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.07%)</title><rect x="567.5" y="1139.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="570.5" y="1150.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="568.0" y="1123.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="571.0" y="1134.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.03%)</title><rect x="568.4" y="1171.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="571.4" y="1182.0"></text>
</g>
<g>
<title>__GI___recv (7 samples, 0.24%)</title><rect x="568.8" y="1203.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="571.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="568.8" y="1187.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="571.8" y="1198.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="568.8" y="1171.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="571.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="568.8" y="1155.0" width="2.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="571.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="568.8" y="1139.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="571.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="568.8" y="1123.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="571.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="568.8" y="1107.0" width="2.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="571.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="568.8" y="1091.0" width="2.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="571.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="570.0" y="1075.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="573.0" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="571.7" y="1251.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="574.7" y="1262.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="571.7" y="1235.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="574.7" y="1246.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=31370] (66 samples, 2.30%)</title><rect x="572.1" y="1299.0" width="27.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="575.1" y="1310.0">[..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (66 samples, 2.30%)</title><rect x="572.1" y="1283.0" width="27.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.1" y="1294.0">o..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.07%)</title><rect x="572.1" y="1267.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="575.1" y="1278.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.07%)</title><rect x="572.1" y="1251.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="575.1" y="1262.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (1 samples, 0.03%)</title><rect x="572.5" y="1235.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="575.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.45%)</title><rect x="572.9" y="1267.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="575.9" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.03%)</title><rect x="572.9" y="1251.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="575.9" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.03%)</title><rect x="572.9" y="1235.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.9" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (12 samples, 0.42%)</title><rect x="573.3" y="1251.0" width="4.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="576.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="574.5" y="1235.0" width="3.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="577.5" y="1246.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.31%)</title><rect x="574.5" y="1219.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="577.5" y="1230.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="574.5" y="1203.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="577.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="574.5" y="1187.0" width="3.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="577.5" y="1198.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="574.5" y="1171.0" width="3.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="577.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="574.5" y="1155.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="577.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="574.5" y="1139.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="577.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="574.5" y="1123.0" width="3.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="577.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="575.3" y="1107.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="578.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="575.8" y="1091.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="578.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="575.8" y="1075.0" width="2.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="578.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="576.6" y="1059.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="579.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (51 samples, 1.78%)</title><rect x="578.2" y="1267.0" width="21.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="581.2" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (51 samples, 1.78%)</title><rect x="578.2" y="1251.0" width="21.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="581.2" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (32 samples, 1.11%)</title><rect x="578.2" y="1235.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="581.2" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (28 samples, 0.97%)</title><rect x="578.6" y="1219.0" width="11.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="581.6" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (27 samples, 0.94%)</title><rect x="579.0" y="1203.0" width="11.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="582.0" y="1214.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (27 samples, 0.94%)</title><rect x="579.0" y="1187.0" width="11.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="582.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.10%)</title><rect x="579.0" y="1171.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="579.0" y="1155.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="582.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="579.0" y="1139.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.0" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="579.0" y="1123.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="582.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.07%)</title><rect x="579.5" y="1155.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="582.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="579.9" y="1139.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="579.9" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="582.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="579.9" y="1107.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="582.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (24 samples, 0.84%)</title><rect x="580.3" y="1171.0" width="9.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.3" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (6 samples, 0.21%)</title><rect x="580.3" y="1155.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="583.3" y="1166.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (6 samples, 0.21%)</title><rect x="580.3" y="1139.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="583.3" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.03%)</title><rect x="580.3" y="1123.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.3" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.14%)</title><rect x="580.7" y="1123.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="583.7" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (3 samples, 0.10%)</title><rect x="581.1" y="1107.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="584.1" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.10%)</title><rect x="581.1" y="1091.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.1" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.10%)</title><rect x="581.1" y="1075.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.1" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.10%)</title><rect x="581.1" y="1059.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.1" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.03%)</title><rect x="581.5" y="1043.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="584.5" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.03%)</title><rect x="581.9" y="1043.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.9" y="1054.0"></text>
</g>
<g>
<title>java/util/Set.of (1 samples, 0.03%)</title><rect x="582.3" y="1123.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="585.3" y="1134.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1 samples, 0.03%)</title><rect x="582.3" y="1107.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.3" y="1118.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (1 samples, 0.03%)</title><rect x="582.3" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="585.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (1 samples, 0.03%)</title><rect x="582.3" y="1075.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="585.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.03%)</title><rect x="582.3" y="1059.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="585.3" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (18 samples, 0.63%)</title><rect x="582.7" y="1155.0" width="7.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="585.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 0.63%)</title><rect x="582.7" y="1139.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (18 samples, 0.63%)</title><rect x="582.7" y="1123.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="585.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (16 samples, 0.56%)</title><rect x="582.7" y="1107.0" width="6.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="585.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.56%)</title><rect x="582.7" y="1091.0" width="6.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="585.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.56%)</title><rect x="582.7" y="1075.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.56%)</title><rect x="582.7" y="1059.0" width="6.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (16 samples, 0.56%)</title><rect x="582.7" y="1043.0" width="6.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="585.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (16 samples, 0.56%)</title><rect x="582.7" y="1027.0" width="6.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="585.7" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.10%)</title><rect x="582.7" y="1011.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="585.7" y="1022.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="583.6" y="995.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="586.6" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="584.0" y="1011.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="587.0" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.42%)</title><rect x="584.4" y="1011.0" width="4.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="587.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="584.4" y="995.0" width="4.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="587.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="584.4" y="979.0" width="4.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="587.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="584.8" y="963.0" width="4.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="587.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="584.8" y="947.0" width="4.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="587.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="584.8" y="931.0" width="4.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="587.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="584.8" y="915.0" width="4.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="587.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="585.2" y="899.0" width="4.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="588.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="585.6" y="883.0" width="3.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="588.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="588.9" y="867.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="591.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="588.9" y="851.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="591.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="588.9" y="835.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="591.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="588.9" y="819.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="591.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="588.9" y="803.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="591.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="588.9" y="787.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="591.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="588.9" y="771.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="591.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.07%)</title><rect x="589.3" y="1107.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="592.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.07%)</title><rect x="589.3" y="1091.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="592.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.07%)</title><rect x="589.3" y="1075.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="589.3" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="589.3" y="1043.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="589.3" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="592.3" y="1038.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="589.3" y="1011.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.03%)</title><rect x="589.7" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="589.7" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="589.7" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="592.7" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.07%)</title><rect x="590.1" y="1219.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.1" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="590.1" y="1203.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="593.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="590.1" y="1187.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="590.1" y="1171.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="593.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="590.1" y="1155.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="593.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="590.6" y="1203.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.6" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="590.6" y="1187.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="593.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.03%)</title><rect x="591.0" y="1219.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="594.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="591.0" y="1203.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="594.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="591.0" y="1187.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (19 samples, 0.66%)</title><rect x="591.4" y="1235.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="594.4" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (19 samples, 0.66%)</title><rect x="591.4" y="1219.0" width="7.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="594.4" y="1230.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.03%)</title><rect x="591.8" y="1203.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="594.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="592.2" y="1203.0" width="2.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="595.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="592.2" y="1187.0" width="2.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="595.2" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.14%)</title><rect x="592.2" y="1171.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="595.2" y="1182.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="592.2" y="1155.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="595.2" y="1166.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="592.6" y="1155.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="595.6" y="1166.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.07%)</title><rect x="592.6" y="1139.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="595.6" y="1150.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="593.4" y="1155.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="596.4" y="1166.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.03%)</title><rect x="593.8" y="1171.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="596.8" y="1182.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="594.2" y="1171.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="597.2" y="1182.0"></text>
</g>
<g>
<title>__GI___recv (11 samples, 0.38%)</title><rect x="594.7" y="1203.0" width="4.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="597.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="594.7" y="1187.0" width="4.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="597.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="594.7" y="1171.0" width="4.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="597.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="595.1" y="1155.0" width="4.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="598.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="595.1" y="1139.0" width="4.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="598.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="595.1" y="1123.0" width="4.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="598.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="595.1" y="1107.0" width="4.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="598.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="595.5" y="1091.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="598.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="596.3" y="1075.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="599.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="596.7" y="1059.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="599.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="597.9" y="1043.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="600.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="598.4" y="1027.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="601.4" y="1038.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=31380] (71 samples, 2.47%)</title><rect x="599.2" y="1299.0" width="29.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="602.2" y="1310.0">[N..</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.03%)</title><rect x="599.2" y="1283.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="602.2" y="1294.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="599.2" y="1267.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="602.2" y="1278.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.03%)</title><rect x="599.2" y="1251.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="602.2" y="1262.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.03%)</title><rect x="599.2" y="1235.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="602.2" y="1246.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="599.6" y="1283.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="602.6" y="1294.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (69 samples, 2.40%)</title><rect x="600.0" y="1283.0" width="28.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.0" y="1294.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (17 samples, 0.59%)</title><rect x="600.0" y="1267.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="603.0" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.03%)</title><rect x="600.4" y="1251.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.4" y="1262.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.03%)</title><rect x="600.4" y="1235.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="603.4" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (15 samples, 0.52%)</title><rect x="600.8" y="1251.0" width="6.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="603.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="601.6" y="1235.0" width="5.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="604.6" y="1246.0"></text>
</g>
<g>
<title>epoll_wait (12 samples, 0.42%)</title><rect x="601.6" y="1219.0" width="5.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="604.6" y="1230.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="601.6" y="1203.0" width="5.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="604.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="601.6" y="1187.0" width="5.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="604.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="602.1" y="1171.0" width="4.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="605.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="602.1" y="1155.0" width="4.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="605.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="602.1" y="1139.0" width="4.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="605.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="602.5" y="1123.0" width="4.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="605.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="602.9" y="1107.0" width="3.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="605.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="603.7" y="1091.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="606.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="604.1" y="1075.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="607.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="604.9" y="1059.0" width="1.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="607.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="606.2" y="1043.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="609.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="606.2" y="1027.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="609.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="606.2" y="1011.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="609.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="606.2" y="995.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="609.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="606.2" y="979.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="609.2" y="990.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="606.6" y="1235.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="609.6" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (52 samples, 1.81%)</title><rect x="607.0" y="1267.0" width="21.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.0" y="1278.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (48 samples, 1.67%)</title><rect x="608.6" y="1251.0" width="19.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="611.6" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (40 samples, 1.39%)</title><rect x="608.6" y="1235.0" width="16.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="611.6" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (33 samples, 1.15%)</title><rect x="608.6" y="1219.0" width="13.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.6" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (33 samples, 1.15%)</title><rect x="608.6" y="1203.0" width="13.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="611.6" y="1214.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (31 samples, 1.08%)</title><rect x="608.6" y="1187.0" width="12.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.14%)</title><rect x="608.6" y="1171.0" width="1.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="611.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="608.6" y="1155.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="611.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.07%)</title><rect x="608.6" y="1139.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="611.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="609.4" y="1155.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="609.4" y="1139.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="612.4" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="609.4" y="1123.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="612.4" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="609.9" y="1155.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="609.9" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="612.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="609.9" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="612.9" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (27 samples, 0.94%)</title><rect x="610.3" y="1171.0" width="11.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="610.3" y="1155.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="610.3" y="1139.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="613.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="610.3" y="1123.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="613.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (4 samples, 0.14%)</title><rect x="610.7" y="1155.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="613.7" y="1166.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (4 samples, 0.14%)</title><rect x="610.7" y="1139.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="613.7" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.03%)</title><rect x="610.7" y="1123.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.7" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="610.7" y="1107.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.03%)</title><rect x="610.7" y="1091.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.7" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.07%)</title><rect x="611.1" y="1123.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="614.1" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (2 samples, 0.07%)</title><rect x="611.1" y="1107.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="614.1" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.07%)</title><rect x="611.1" y="1091.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="614.1" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.07%)</title><rect x="611.1" y="1075.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.1" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="611.1" y="1059.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="614.1" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="611.5" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.5" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.03%)</title><rect x="611.5" y="1043.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="611.5" y="1027.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="614.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="611.5" y="1011.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="614.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="611.5" y="995.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="614.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="611.5" y="979.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="614.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="611.5" y="963.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="614.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="611.5" y="947.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="614.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="611.5" y="931.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="614.5" y="942.0"></text>
</g>
<g>
<title>java/util/Set.of (1 samples, 0.03%)</title><rect x="611.9" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="614.9" y="1134.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1 samples, 0.03%)</title><rect x="611.9" y="1107.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (2 samples, 0.07%)</title><rect x="612.3" y="1155.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.3" y="1166.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (2 samples, 0.07%)</title><rect x="612.3" y="1139.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="615.3" y="1150.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.03%)</title><rect x="612.3" y="1123.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="615.3" y="1134.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1 samples, 0.03%)</title><rect x="612.3" y="1107.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="615.3" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.03%)</title><rect x="612.3" y="1091.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.3" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.03%)</title><rect x="612.3" y="1075.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.3" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.03%)</title><rect x="612.7" y="1123.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="615.7" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (20 samples, 0.70%)</title><rect x="613.1" y="1155.0" width="8.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.70%)</title><rect x="613.1" y="1139.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.70%)</title><rect x="613.1" y="1123.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="616.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (18 samples, 0.63%)</title><rect x="613.1" y="1107.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (18 samples, 0.63%)</title><rect x="613.1" y="1091.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="616.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (18 samples, 0.63%)</title><rect x="613.1" y="1075.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="616.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (18 samples, 0.63%)</title><rect x="613.1" y="1059.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="616.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (18 samples, 0.63%)</title><rect x="613.1" y="1043.0" width="7.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (18 samples, 0.63%)</title><rect x="613.1" y="1027.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="616.1" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="613.1" y="1011.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="616.1" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="613.6" y="1011.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="616.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="613.6" y="995.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="616.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="613.6" y="979.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="616.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="613.6" y="963.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="616.6" y="974.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.24%)</title><rect x="614.0" y="1011.0" width="2.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="617.0" y="1022.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.07%)</title><rect x="614.0" y="995.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="617.0" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.07%)</title><rect x="614.8" y="995.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="617.8" y="1006.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="615.6" y="995.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="618.6" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="616.0" y="995.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="619.0" y="1006.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="616.4" y="995.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="619.4" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.31%)</title><rect x="616.8" y="1011.0" width="3.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="619.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="617.7" y="995.0" width="2.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="620.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="617.7" y="979.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="620.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="617.7" y="963.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="620.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="617.7" y="947.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="620.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="617.7" y="931.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="620.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="618.9" y="915.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="621.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="618.9" y="899.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="621.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="618.9" y="883.0" width="1.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="621.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="620.5" y="1107.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="623.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="620.5" y="1091.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="623.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="621.0" y="1107.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="624.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="621.0" y="1091.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="621.0" y="1075.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="621.0" y="1059.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.03%)</title><rect x="621.0" y="1043.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="624.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.07%)</title><rect x="621.4" y="1187.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.4" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.07%)</title><rect x="621.4" y="1171.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.4" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.07%)</title><rect x="621.4" y="1155.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.07%)</title><rect x="621.4" y="1139.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.4" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.07%)</title><rect x="622.2" y="1219.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.2" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="622.2" y="1203.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="622.2" y="1187.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="622.2" y="1171.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="622.2" y="1155.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="625.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="622.6" y="1203.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.6" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="622.6" y="1187.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="625.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.03%)</title><rect x="623.0" y="1219.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="626.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="623.0" y="1203.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="623.0" y="1187.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="626.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="623.0" y="1171.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="623.0" y="1155.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (3 samples, 0.10%)</title><rect x="623.4" y="1219.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.4" y="1230.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.03%)</title><rect x="623.8" y="1203.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="626.8" y="1214.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="624.2" y="1203.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="627.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="624.7" y="1219.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="624.7" y="1203.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="627.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="624.7" y="1187.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="624.7" y="1171.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="627.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="624.7" y="1155.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="627.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="624.7" y="1139.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 0.28%)</title><rect x="625.1" y="1235.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="628.1" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 0.28%)</title><rect x="625.1" y="1219.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="625.5" y="1203.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="628.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="625.5" y="1187.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="628.5" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.03%)</title><rect x="625.5" y="1171.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="628.5" y="1182.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="625.5" y="1155.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="628.5" y="1166.0"></text>
</g>
<g>
<title>__GI___recv (6 samples, 0.21%)</title><rect x="625.9" y="1203.0" width="2.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="628.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="625.9" y="1187.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="628.9" y="1198.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="625.9" y="1171.0" width="2.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="628.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="625.9" y="1155.0" width="2.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="628.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="625.9" y="1139.0" width="2.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="628.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="626.3" y="1123.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="629.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="626.7" y="1107.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="629.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="626.7" y="1091.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="629.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="627.1" y="1075.0" width="1.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="630.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="627.1" y="1059.0" width="1.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="630.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="627.5" y="1043.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="630.5" y="1054.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=31365] (49 samples, 1.71%)</title><rect x="628.3" y="1299.0" width="20.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="631.3" y="1310.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (49 samples, 1.71%)</title><rect x="628.3" y="1283.0" width="20.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.3" y="1294.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.31%)</title><rect x="628.8" y="1267.0" width="3.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.8" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 0.28%)</title><rect x="629.2" y="1251.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="632.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="629.6" y="1235.0" width="2.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="632.6" y="1246.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="629.6" y="1219.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="632.6" y="1230.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="629.6" y="1203.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="632.6" y="1214.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 0.17%)</title><rect x="630.0" y="1219.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="633.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="630.0" y="1203.0" width="2.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="633.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="630.0" y="1187.0" width="2.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="633.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="630.0" y="1171.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="633.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="630.0" y="1155.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="633.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="630.0" y="1139.0" width="2.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="633.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="630.4" y="1123.0" width="1.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="633.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="630.4" y="1107.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="633.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="630.4" y="1091.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="633.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="630.8" y="1075.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="633.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="630.8" y="1059.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="633.8" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="632.0" y="1235.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="635.0" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (39 samples, 1.36%)</title><rect x="632.5" y="1267.0" width="16.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.5" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (39 samples, 1.36%)</title><rect x="632.5" y="1251.0" width="16.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.5" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (26 samples, 0.91%)</title><rect x="632.5" y="1235.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="635.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (21 samples, 0.73%)</title><rect x="632.5" y="1219.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="635.5" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (21 samples, 0.73%)</title><rect x="632.5" y="1203.0" width="8.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.5" y="1214.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (18 samples, 0.63%)</title><rect x="632.5" y="1187.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.07%)</title><rect x="632.5" y="1171.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="635.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="632.9" y="1155.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="635.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.03%)</title><rect x="632.9" y="1139.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="635.9" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (16 samples, 0.56%)</title><rect x="633.3" y="1171.0" width="6.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.3" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (3 samples, 0.10%)</title><rect x="633.3" y="1155.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="636.3" y="1166.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (3 samples, 0.10%)</title><rect x="633.3" y="1139.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="636.3" y="1150.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.07%)</title><rect x="633.3" y="1123.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="636.3" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (2 samples, 0.07%)</title><rect x="633.3" y="1107.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="636.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.07%)</title><rect x="633.3" y="1091.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="636.3" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.07%)</title><rect x="633.3" y="1075.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.3" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="633.3" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="633.3" y="1043.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="633.3" y="1027.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="633.7" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="636.7" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.03%)</title><rect x="633.7" y="1043.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="636.7" y="1054.0"></text>
</g>
<g>
<title>java/util/Set.of (1 samples, 0.03%)</title><rect x="634.1" y="1123.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="637.1" y="1134.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (1 samples, 0.03%)</title><rect x="634.1" y="1107.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="637.1" y="1118.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (1 samples, 0.03%)</title><rect x="634.1" y="1091.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (1 samples, 0.03%)</title><rect x="634.1" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.03%)</title><rect x="634.1" y="1059.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.1" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (4 samples, 0.14%)</title><rect x="634.5" y="1155.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="637.5" y="1166.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.03%)</title><rect x="634.5" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.5" y="1150.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.03%)</title><rect x="634.5" y="1123.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="637.5" y="1134.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (1 samples, 0.03%)</title><rect x="634.5" y="1107.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="637.5" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (1 samples, 0.03%)</title><rect x="634.5" y="1091.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="637.5" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (3 samples, 0.10%)</title><rect x="634.9" y="1139.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="637.9" y="1150.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.03%)</title><rect x="634.9" y="1123.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="637.9" y="1134.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1 samples, 0.03%)</title><rect x="634.9" y="1107.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="637.9" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (2 samples, 0.07%)</title><rect x="635.3" y="1123.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.3" y="1134.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.03%)</title><rect x="635.7" y="1107.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.7" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.03%)</title><rect x="635.7" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="638.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (9 samples, 0.31%)</title><rect x="636.2" y="1155.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.03%)</title><rect x="636.2" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.03%)</title><rect x="636.2" y="1123.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.2" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.get$Lambda (1 samples, 0.03%)</title><rect x="636.2" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$63/2072192433.&lt;init&gt; (1 samples, 0.03%)</title><rect x="636.2" y="1091.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="639.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.28%)</title><rect x="636.6" y="1139.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="639.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.28%)</title><rect x="636.6" y="1123.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="639.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.24%)</title><rect x="636.6" y="1107.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.24%)</title><rect x="636.6" y="1091.0" width="2.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="639.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.24%)</title><rect x="636.6" y="1075.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="639.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.24%)</title><rect x="636.6" y="1059.0" width="2.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="639.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.24%)</title><rect x="636.6" y="1043.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="639.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.24%)</title><rect x="636.6" y="1027.0" width="2.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="639.6" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.24%)</title><rect x="636.6" y="1011.0" width="2.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="639.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="636.6" y="995.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="639.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="636.6" y="979.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="639.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="637.8" y="963.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="640.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="637.8" y="947.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="640.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="637.8" y="931.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="640.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="638.2" y="915.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="641.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="638.2" y="899.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="641.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="638.6" y="883.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="641.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="639.4" y="1107.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="639.4" y="1091.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="639.4" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="639.4" y="1059.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="639.4" y="1043.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="642.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="639.4" y="1027.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.4" y="1038.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="639.4" y="1011.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.07%)</title><rect x="639.9" y="1187.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="642.9" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.07%)</title><rect x="639.9" y="1171.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.9" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.07%)</title><rect x="639.9" y="1155.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.07%)</title><rect x="639.9" y="1139.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="642.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="640.3" y="1123.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="640.7" y="1187.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="640.7" y="1171.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.03%)</title><rect x="640.7" y="1155.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="643.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.07%)</title><rect x="641.1" y="1219.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.1" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="641.5" y="1203.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="641.5" y="1187.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="644.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="641.5" y="1171.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="641.5" y="1155.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="644.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.03%)</title><rect x="641.9" y="1219.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="641.9" y="1203.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="641.9" y="1187.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="641.9" y="1171.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="642.3" y="1219.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.3" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="642.7" y="1219.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="642.7" y="1203.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="645.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="642.7" y="1187.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="645.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="642.7" y="1171.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="645.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.03%)</title><rect x="642.7" y="1155.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="645.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.03%)</title><rect x="642.7" y="1139.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (13 samples, 0.45%)</title><rect x="643.1" y="1235.0" width="5.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="646.1" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (13 samples, 0.45%)</title><rect x="643.1" y="1219.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="643.6" y="1203.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="646.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="643.6" y="1187.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="646.6" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.03%)</title><rect x="643.6" y="1171.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="646.6" y="1182.0"></text>
</g>
<g>
<title>__GI___recv (2 samples, 0.07%)</title><rect x="644.0" y="1171.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="647.0" y="1182.0"></text>
</g>
<g>
<title>__GI___recv (9 samples, 0.31%)</title><rect x="644.8" y="1203.0" width="3.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="647.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="644.8" y="1187.0" width="3.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="647.8" y="1198.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="644.8" y="1171.0" width="3.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="647.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="644.8" y="1155.0" width="3.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="647.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="644.8" y="1139.0" width="3.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="647.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="645.2" y="1123.0" width="3.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="648.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="645.6" y="1107.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="648.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="646.0" y="1091.0" width="2.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="649.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="646.0" y="1075.0" width="2.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="649.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="646.4" y="1059.0" width="2.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="649.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="646.8" y="1043.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="649.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="647.2" y="1027.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="650.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="648.1" y="1011.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="651.1" y="1022.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=31371] (44 samples, 1.53%)</title><rect x="648.5" y="1299.0" width="18.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="651.5" y="1310.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="648.5" y="1283.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="651.5" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (1 samples, 0.03%)</title><rect x="648.5" y="1267.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="651.5" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="648.5" y="1251.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="651.5" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="648.5" y="1235.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="651.5" y="1246.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="648.5" y="1219.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="651.5" y="1230.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.03%)</title><rect x="648.5" y="1203.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="651.5" y="1214.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (43 samples, 1.50%)</title><rect x="648.9" y="1283.0" width="17.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="651.9" y="1294.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (12 samples, 0.42%)</title><rect x="648.9" y="1267.0" width="4.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="651.9" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (12 samples, 0.42%)</title><rect x="648.9" y="1251.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="651.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="648.9" y="1235.0" width="4.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="651.9" y="1246.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="648.9" y="1219.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="651.9" y="1230.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="649.3" y="1219.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="652.3" y="1230.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="649.3" y="1203.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="652.3" y="1214.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.31%)</title><rect x="649.7" y="1219.0" width="3.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="652.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="650.1" y="1203.0" width="3.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="653.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="650.1" y="1187.0" width="3.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="653.1" y="1198.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="650.1" y="1171.0" width="3.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="653.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="650.1" y="1155.0" width="3.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="653.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="650.1" y="1139.0" width="3.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="653.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="650.9" y="1123.0" width="2.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="653.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="651.8" y="1107.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="654.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="651.8" y="1091.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="654.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="651.8" y="1075.0" width="1.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="654.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="651.8" y="1059.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="654.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="653.0" y="1043.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="656.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="653.0" y="1027.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="656.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="653.0" y="1011.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="656.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="653.0" y="995.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="656.0" y="1006.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="653.4" y="1235.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="656.4" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (31 samples, 1.08%)</title><rect x="653.8" y="1267.0" width="12.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="656.8" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="653.8" y="1251.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="656.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="653.8" y="1235.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="656.8" y="1246.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="653.8" y="1219.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="656.8" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (30 samples, 1.04%)</title><rect x="654.2" y="1251.0" width="12.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="657.2" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (23 samples, 0.80%)</title><rect x="654.6" y="1235.0" width="9.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="657.6" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (22 samples, 0.77%)</title><rect x="654.6" y="1219.0" width="9.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.6" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 0.77%)</title><rect x="654.6" y="1203.0" width="9.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="657.6" y="1214.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (21 samples, 0.73%)</title><rect x="654.6" y="1187.0" width="8.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.10%)</title><rect x="654.6" y="1171.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="657.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="654.6" y="1155.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="657.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="654.6" y="1139.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="657.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.07%)</title><rect x="655.1" y="1155.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="658.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.07%)</title><rect x="655.1" y="1139.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.07%)</title><rect x="655.1" y="1123.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.1" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (18 samples, 0.63%)</title><rect x="655.9" y="1171.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.07%)</title><rect x="655.9" y="1155.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="658.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="655.9" y="1139.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="658.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="655.9" y="1123.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="656.3" y="1139.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="656.3" y="1123.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="659.3" y="1134.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="656.3" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="659.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (6 samples, 0.21%)</title><rect x="656.7" y="1155.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.7" y="1166.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (6 samples, 0.21%)</title><rect x="656.7" y="1139.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.7" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.07%)</title><rect x="656.7" y="1123.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.7" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.14%)</title><rect x="657.5" y="1123.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.5" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (4 samples, 0.14%)</title><rect x="657.5" y="1107.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.5" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (4 samples, 0.14%)</title><rect x="657.5" y="1091.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.5" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (4 samples, 0.14%)</title><rect x="657.5" y="1075.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="660.5" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (4 samples, 0.14%)</title><rect x="657.5" y="1059.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="660.5" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.03%)</title><rect x="657.9" y="1043.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.9" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.07%)</title><rect x="658.3" y="1043.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="661.3" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (10 samples, 0.35%)</title><rect x="659.2" y="1155.0" width="4.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="662.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (10 samples, 0.35%)</title><rect x="659.2" y="1139.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="662.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (10 samples, 0.35%)</title><rect x="659.2" y="1123.0" width="4.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="662.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (10 samples, 0.35%)</title><rect x="659.2" y="1107.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="662.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (10 samples, 0.35%)</title><rect x="659.2" y="1091.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="662.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (10 samples, 0.35%)</title><rect x="659.2" y="1075.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="662.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (10 samples, 0.35%)</title><rect x="659.2" y="1059.0" width="4.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (10 samples, 0.35%)</title><rect x="659.2" y="1043.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="662.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (10 samples, 0.35%)</title><rect x="659.2" y="1027.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.2" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.10%)</title><rect x="659.2" y="1011.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="662.2" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.07%)</title><rect x="659.2" y="995.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="662.2" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="660.0" y="995.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="663.0" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.24%)</title><rect x="660.4" y="1011.0" width="2.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="663.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="660.4" y="995.0" width="2.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="663.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="660.4" y="979.0" width="2.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="663.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="660.4" y="963.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="663.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="660.4" y="947.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="663.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="660.4" y="931.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="663.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="660.8" y="915.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="663.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="660.8" y="899.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="663.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="660.8" y="883.0" width="2.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="663.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="662.9" y="867.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="665.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="662.9" y="851.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="665.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="662.9" y="835.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="665.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="662.9" y="819.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="665.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="662.9" y="803.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="665.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="662.9" y="787.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="665.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="662.9" y="771.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="665.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="663.3" y="1187.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="666.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="663.7" y="1219.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="666.7" y="1230.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.03%)</title><rect x="663.7" y="1203.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="666.7" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.21%)</title><rect x="664.1" y="1235.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.1" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.21%)</title><rect x="664.1" y="1219.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="667.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="664.1" y="1203.0" width="0.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="667.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="664.1" y="1187.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="667.1" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.07%)</title><rect x="664.1" y="1171.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="667.1" y="1182.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.07%)</title><rect x="664.1" y="1155.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="667.1" y="1166.0"></text>
</g>
<g>
<title>__GI___recv (4 samples, 0.14%)</title><rect x="664.9" y="1203.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="667.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="664.9" y="1187.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="667.9" y="1198.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="664.9" y="1171.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="667.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="665.7" y="1155.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="668.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="665.7" y="1139.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="668.7" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="665.7" y="1123.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="668.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="665.7" y="1107.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="668.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="666.1" y="1091.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="669.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="666.1" y="1075.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="669.1" y="1086.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=31381] (75 samples, 2.61%)</title><rect x="666.6" y="1299.0" width="30.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="669.6" y="1310.0">[N..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.03%)</title><rect x="666.6" y="1283.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="669.6" y="1294.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.03%)</title><rect x="666.6" y="1267.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="669.6" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.03%)</title><rect x="666.6" y="1251.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="669.6" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="666.6" y="1235.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="669.6" y="1246.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="666.6" y="1219.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="669.6" y="1230.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (74 samples, 2.58%)</title><rect x="667.0" y="1283.0" width="30.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="670.0" y="1294.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (19 samples, 0.66%)</title><rect x="667.0" y="1267.0" width="7.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="670.0" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (17 samples, 0.59%)</title><rect x="667.8" y="1251.0" width="7.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="670.8" y="1262.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.07%)</title><rect x="668.2" y="1235.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="671.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="669.0" y="1235.0" width="5.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="672.0" y="1246.0"></text>
</g>
<g>
<title>epoll_wait (14 samples, 0.49%)</title><rect x="669.0" y="1219.0" width="5.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="672.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="669.0" y="1203.0" width="5.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="672.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="669.0" y="1187.0" width="5.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="672.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="669.4" y="1171.0" width="5.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="672.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="669.8" y="1155.0" width="5.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="672.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="669.8" y="1139.0" width="5.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="672.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="671.5" y="1123.0" width="3.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="674.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="672.3" y="1107.0" width="2.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="675.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="672.3" y="1091.0" width="2.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="675.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="672.3" y="1075.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="675.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="673.1" y="1059.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="676.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="674.4" y="1043.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="677.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="674.4" y="1027.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="677.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (55 samples, 1.92%)</title><rect x="674.8" y="1267.0" width="22.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="677.8" y="1278.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (55 samples, 1.92%)</title><rect x="674.8" y="1251.0" width="22.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="677.8" y="1262.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (44 samples, 1.53%)</title><rect x="674.8" y="1235.0" width="18.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="677.8" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (31 samples, 1.08%)</title><rect x="675.2" y="1219.0" width="12.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.2" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (31 samples, 1.08%)</title><rect x="675.2" y="1203.0" width="12.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="678.2" y="1214.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (30 samples, 1.04%)</title><rect x="675.2" y="1187.0" width="12.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.10%)</title><rect x="675.2" y="1171.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="675.2" y="1155.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="678.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="675.6" y="1139.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="678.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="676.0" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="679.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="676.0" y="1139.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="679.0" y="1150.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="676.0" y="1123.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="679.0" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (27 samples, 0.94%)</title><rect x="676.4" y="1171.0" width="11.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="679.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.07%)</title><rect x="676.4" y="1155.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="676.4" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="679.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="676.8" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="679.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="676.8" y="1123.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (6 samples, 0.21%)</title><rect x="677.2" y="1155.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="680.2" y="1166.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (6 samples, 0.21%)</title><rect x="677.2" y="1139.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="680.2" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.03%)</title><rect x="677.2" y="1123.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="680.2" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="677.2" y="1107.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="680.2" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.03%)</title><rect x="677.2" y="1091.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.2" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (5 samples, 0.17%)</title><rect x="677.7" y="1123.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="680.7" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (3 samples, 0.10%)</title><rect x="678.5" y="1107.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.5" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.10%)</title><rect x="678.5" y="1091.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="681.5" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.10%)</title><rect x="678.5" y="1075.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="681.5" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.10%)</title><rect x="678.5" y="1059.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="681.5" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (1 samples, 0.03%)</title><rect x="678.9" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.9" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (1 samples, 0.03%)</title><rect x="679.3" y="1043.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.3" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (4 samples, 0.14%)</title><rect x="679.7" y="1155.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="682.7" y="1166.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (3 samples, 0.10%)</title><rect x="679.7" y="1139.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="682.7" y="1150.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.03%)</title><rect x="679.7" y="1123.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="682.7" y="1134.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1 samples, 0.03%)</title><rect x="679.7" y="1107.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="682.7" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.03%)</title><rect x="679.7" y="1091.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="682.7" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (1 samples, 0.03%)</title><rect x="679.7" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="682.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (1 samples, 0.03%)</title><rect x="679.7" y="1059.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="679.7" y="1043.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="682.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="679.7" y="1027.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="682.7" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (1 samples, 0.03%)</title><rect x="680.1" y="1123.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="683.1" y="1134.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.03%)</title><rect x="680.1" y="1107.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="683.1" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (1 samples, 0.03%)</title><rect x="680.1" y="1091.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="683.1" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (1 samples, 0.03%)</title><rect x="680.1" y="1075.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.1" y="1086.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (1 samples, 0.03%)</title><rect x="680.1" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.1" y="1070.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1 samples, 0.03%)</title><rect x="680.5" y="1123.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="680.9" y="1139.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="683.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.03%)</title><rect x="680.9" y="1123.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="683.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.03%)</title><rect x="680.9" y="1107.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.03%)</title><rect x="680.9" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="683.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (1 samples, 0.03%)</title><rect x="680.9" y="1075.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="683.9" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (15 samples, 0.52%)</title><rect x="681.4" y="1155.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="684.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.52%)</title><rect x="681.4" y="1139.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="684.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (15 samples, 0.52%)</title><rect x="681.4" y="1123.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="684.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (13 samples, 0.45%)</title><rect x="681.4" y="1107.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="684.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (13 samples, 0.45%)</title><rect x="681.4" y="1091.0" width="5.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="684.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (13 samples, 0.45%)</title><rect x="681.4" y="1075.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="684.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (13 samples, 0.45%)</title><rect x="681.4" y="1059.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="684.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (13 samples, 0.45%)</title><rect x="681.4" y="1043.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (13 samples, 0.45%)</title><rect x="681.4" y="1027.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="684.4" y="1038.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="681.4" y="1011.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="684.4" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.42%)</title><rect x="681.8" y="1011.0" width="4.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="684.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="682.2" y="995.0" width="4.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="685.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="682.2" y="979.0" width="4.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="685.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="682.2" y="963.0" width="4.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="685.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="682.2" y="947.0" width="4.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="685.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="682.2" y="931.0" width="4.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="685.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="682.6" y="915.0" width="4.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="685.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="683.4" y="899.0" width="3.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="686.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="683.4" y="883.0" width="3.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="686.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="686.7" y="1107.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="689.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="686.7" y="1091.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="689.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="686.7" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="689.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="686.7" y="1059.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="689.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.03%)</title><rect x="686.7" y="1043.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="689.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.03%)</title><rect x="687.1" y="1107.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="690.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="687.1" y="1091.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.03%)</title><rect x="687.1" y="1075.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="690.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.03%)</title><rect x="687.5" y="1187.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="690.5" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="687.5" y="1171.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="690.5" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="687.5" y="1155.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="690.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="687.5" y="1139.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="690.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="687.5" y="1123.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="690.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.17%)</title><rect x="687.9" y="1219.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="690.9" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.03%)</title><rect x="688.3" y="1203.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="691.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="688.3" y="1187.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="688.3" y="1171.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="691.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="688.3" y="1155.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="691.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="688.7" y="1203.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.7" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="688.7" y="1187.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="691.7" y="1198.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.03%)</title><rect x="688.7" y="1171.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="691.7" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.07%)</title><rect x="689.2" y="1203.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="692.2" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (6 samples, 0.21%)</title><rect x="690.0" y="1219.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="693.0" y="1230.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (3 samples, 0.10%)</title><rect x="690.4" y="1203.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.4" y="1214.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.07%)</title><rect x="691.6" y="1203.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="694.6" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="692.4" y="1219.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="695.4" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="692.4" y="1203.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="695.4" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.38%)</title><rect x="692.9" y="1235.0" width="4.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="695.9" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 0.38%)</title><rect x="692.9" y="1219.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="695.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="693.3" y="1203.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="696.3" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="693.3" y="1187.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="696.3" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.03%)</title><rect x="693.3" y="1171.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="696.3" y="1182.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.03%)</title><rect x="693.3" y="1155.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="696.3" y="1166.0"></text>
</g>
<g>
<title>__GI___recv (1 samples, 0.03%)</title><rect x="693.7" y="1171.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="696.7" y="1182.0"></text>
</g>
<g>
<title>__GI___recv (8 samples, 0.28%)</title><rect x="694.1" y="1203.0" width="3.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="697.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="694.5" y="1187.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="697.5" y="1198.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="694.5" y="1171.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="697.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="694.5" y="1155.0" width="2.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="697.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="694.5" y="1139.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="697.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="694.5" y="1123.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="697.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="694.5" y="1107.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="697.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="694.9" y="1091.0" width="2.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="697.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="695.3" y="1075.0" width="2.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="698.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="696.1" y="1059.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="699.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="696.6" y="1043.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="699.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="697.0" y="1027.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="700.0" y="1038.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=31372] (34 samples, 1.18%)</title><rect x="697.4" y="1299.0" width="13.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="700.4" y="1310.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="697.4" y="1283.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="700.4" y="1294.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="697.4" y="1267.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="700.4" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="697.4" y="1251.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="700.4" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="697.4" y="1235.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="700.4" y="1246.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.03%)</title><rect x="697.4" y="1219.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="700.4" y="1230.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="697.8" y="1283.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="700.8" y="1294.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (32 samples, 1.11%)</title><rect x="698.2" y="1283.0" width="13.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="701.2" y="1294.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (8 samples, 0.28%)</title><rect x="698.2" y="1267.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="701.2" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (8 samples, 0.28%)</title><rect x="698.2" y="1251.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="701.2" y="1262.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="698.6" y="1235.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="701.6" y="1246.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="699.0" y="1235.0" width="2.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="702.0" y="1246.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.21%)</title><rect x="699.0" y="1219.0" width="2.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="702.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="699.0" y="1203.0" width="2.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="702.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="699.0" y="1187.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="702.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="699.0" y="1171.0" width="2.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="702.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="699.0" y="1155.0" width="2.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="702.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="699.0" y="1139.0" width="2.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="702.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="699.0" y="1123.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="702.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="699.4" y="1107.0" width="2.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="702.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="699.4" y="1091.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="702.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="699.4" y="1075.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="702.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="699.4" y="1059.0" width="2.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="702.4" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (24 samples, 0.84%)</title><rect x="701.5" y="1267.0" width="9.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="704.5" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (24 samples, 0.84%)</title><rect x="701.5" y="1251.0" width="9.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.5" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13 samples, 0.45%)</title><rect x="701.5" y="1235.0" width="5.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (12 samples, 0.42%)</title><rect x="701.5" y="1219.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.5" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (12 samples, 0.42%)</title><rect x="701.5" y="1203.0" width="4.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="704.5" y="1214.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (12 samples, 0.42%)</title><rect x="701.5" y="1187.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="704.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.07%)</title><rect x="701.5" y="1171.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="704.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.07%)</title><rect x="701.5" y="1155.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="704.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.07%)</title><rect x="701.5" y="1139.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.5" y="1150.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="701.9" y="1123.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="704.9" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (10 samples, 0.35%)</title><rect x="702.3" y="1171.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="705.3" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (2 samples, 0.07%)</title><rect x="702.3" y="1155.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.3" y="1166.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (2 samples, 0.07%)</title><rect x="702.3" y="1139.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.3" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.03%)</title><rect x="702.3" y="1123.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.3" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="702.3" y="1107.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="705.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.03%)</title><rect x="702.3" y="1091.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="705.3" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.03%)</title><rect x="702.7" y="1123.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="705.7" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (1 samples, 0.03%)</title><rect x="702.7" y="1107.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="705.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.03%)</title><rect x="702.7" y="1091.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.7" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.03%)</title><rect x="702.7" y="1075.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="705.7" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.03%)</title><rect x="702.7" y="1059.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="705.7" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.03%)</title><rect x="702.7" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="705.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (8 samples, 0.28%)</title><rect x="703.1" y="1155.0" width="3.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.28%)</title><rect x="703.1" y="1139.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.28%)</title><rect x="703.1" y="1123.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="706.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.21%)</title><rect x="703.1" y="1107.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.21%)</title><rect x="703.1" y="1091.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="706.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.21%)</title><rect x="703.1" y="1075.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="706.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.21%)</title><rect x="703.1" y="1059.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="706.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.21%)</title><rect x="703.1" y="1043.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="706.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.21%)</title><rect x="703.1" y="1027.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.1" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="703.1" y="1011.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="706.1" y="1022.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="703.1" y="995.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="706.1" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="703.5" y="1011.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="706.5" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.14%)</title><rect x="703.9" y="1011.0" width="1.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="706.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="704.4" y="995.0" width="1.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="707.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="704.4" y="979.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="707.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="704.8" y="963.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="707.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="704.8" y="947.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="707.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="704.8" y="931.0" width="0.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="707.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="705.2" y="915.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="708.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="705.2" y="899.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="708.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="705.2" y="883.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="708.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.07%)</title><rect x="705.6" y="1107.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="706.0" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="706.0" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="709.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.03%)</title><rect x="706.0" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="709.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="706.0" y="1043.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="709.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="706.0" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.03%)</title><rect x="706.4" y="1219.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="709.4" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="706.4" y="1203.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="709.4" y="1214.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="706.4" y="1187.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.38%)</title><rect x="706.8" y="1235.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="709.8" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 0.38%)</title><rect x="706.8" y="1219.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="706.8" y="1203.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="709.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="706.8" y="1187.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="709.8" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.07%)</title><rect x="706.8" y="1171.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="709.8" y="1182.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.03%)</title><rect x="706.8" y="1155.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="709.8" y="1166.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="707.2" y="1155.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="710.2" y="1166.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="707.2" y="1139.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="710.2" y="1150.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="707.2" y="1123.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="710.2" y="1134.0"></text>
</g>
<g>
<title>__GI___recv (9 samples, 0.31%)</title><rect x="707.6" y="1203.0" width="3.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="710.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="707.6" y="1187.0" width="3.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="710.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="707.6" y="1171.0" width="3.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="710.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="708.1" y="1155.0" width="3.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="711.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="708.1" y="1139.0" width="3.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="711.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="708.5" y="1123.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="711.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="708.5" y="1107.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="711.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="708.5" y="1091.0" width="2.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="711.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="708.9" y="1075.0" width="2.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="711.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="709.3" y="1059.0" width="2.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="712.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="709.7" y="1043.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="712.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="710.1" y="1027.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="713.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="710.5" y="1011.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="713.5" y="1022.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=31382] (32 samples, 1.11%)</title><rect x="711.3" y="1299.0" width="13.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="714.3" y="1310.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (32 samples, 1.11%)</title><rect x="711.3" y="1283.0" width="13.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.3" y="1294.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (9 samples, 0.31%)</title><rect x="711.3" y="1267.0" width="3.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="714.3" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (9 samples, 0.31%)</title><rect x="711.3" y="1251.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="711.3" y="1235.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="714.3" y="1246.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="711.3" y="1219.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="714.3" y="1230.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.28%)</title><rect x="711.8" y="1219.0" width="3.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="714.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="712.2" y="1203.0" width="2.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="715.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="712.2" y="1187.0" width="2.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="715.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="712.2" y="1171.0" width="2.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="715.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="712.2" y="1155.0" width="2.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="715.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="712.2" y="1139.0" width="2.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="715.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="713.0" y="1123.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="716.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="713.4" y="1107.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="716.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="713.4" y="1091.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="716.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="713.4" y="1075.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="716.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="713.8" y="1059.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="716.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (23 samples, 0.80%)</title><rect x="715.0" y="1267.0" width="9.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.0" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (23 samples, 0.80%)</title><rect x="715.0" y="1251.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.0" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (13 samples, 0.45%)</title><rect x="715.0" y="1235.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.0" y="1246.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (12 samples, 0.42%)</title><rect x="715.0" y="1219.0" width="5.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="718.0" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (12 samples, 0.42%)</title><rect x="715.0" y="1203.0" width="5.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.0" y="1214.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (12 samples, 0.42%)</title><rect x="715.0" y="1187.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.0" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.03%)</title><rect x="715.0" y="1171.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="718.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="715.0" y="1155.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.0" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (11 samples, 0.38%)</title><rect x="715.5" y="1171.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.5" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (2 samples, 0.07%)</title><rect x="715.5" y="1155.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="718.5" y="1166.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (2 samples, 0.07%)</title><rect x="715.5" y="1139.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.5" y="1150.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (1 samples, 0.03%)</title><rect x="715.5" y="1123.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.5" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (1 samples, 0.03%)</title><rect x="715.5" y="1107.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.5" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (1 samples, 0.03%)</title><rect x="715.5" y="1091.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.5" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (1 samples, 0.03%)</title><rect x="715.9" y="1123.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="718.9" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (4 samples, 0.14%)</title><rect x="716.3" y="1155.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="719.3" y="1166.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.03%)</title><rect x="716.3" y="1139.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="719.3" y="1150.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.03%)</title><rect x="716.3" y="1123.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="719.3" y="1134.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (3 samples, 0.10%)</title><rect x="716.7" y="1139.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="719.7" y="1150.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.03%)</title><rect x="717.1" y="1123.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.1" y="1134.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (1 samples, 0.03%)</title><rect x="717.5" y="1123.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="720.5" y="1134.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (1 samples, 0.03%)</title><rect x="717.5" y="1107.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.5" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (5 samples, 0.17%)</title><rect x="717.9" y="1155.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="720.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.17%)</title><rect x="717.9" y="1139.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="720.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.17%)</title><rect x="717.9" y="1123.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.17%)</title><rect x="717.9" y="1107.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="720.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.17%)</title><rect x="717.9" y="1091.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="720.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.17%)</title><rect x="717.9" y="1075.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="720.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.17%)</title><rect x="717.9" y="1059.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="720.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.17%)</title><rect x="717.9" y="1043.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="720.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.17%)</title><rect x="717.9" y="1027.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.9" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.07%)</title><rect x="717.9" y="1011.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="720.9" y="1022.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.07%)</title><rect x="717.9" y="995.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="720.9" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.10%)</title><rect x="718.7" y="1011.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="721.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="718.7" y="995.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="721.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="718.7" y="979.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="721.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="718.7" y="963.0" width="1.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="721.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="718.7" y="947.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="721.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="718.7" y="931.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="721.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="718.7" y="915.0" width="1.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="721.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="718.7" y="899.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="721.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="718.7" y="883.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="721.7" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="720.0" y="1219.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="723.0" y="1230.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.03%)</title><rect x="720.0" y="1203.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="723.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (10 samples, 0.35%)</title><rect x="720.4" y="1235.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="723.4" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (10 samples, 0.35%)</title><rect x="720.4" y="1219.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.4" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="720.4" y="1203.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="723.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="720.4" y="1187.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="723.4" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.07%)</title><rect x="720.4" y="1171.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="723.4" y="1182.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="720.4" y="1155.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="723.4" y="1166.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="720.8" y="1155.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="723.8" y="1166.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="720.8" y="1139.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="723.8" y="1150.0"></text>
</g>
<g>
<title>__GI___recv (8 samples, 0.28%)</title><rect x="721.2" y="1203.0" width="3.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="724.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="721.2" y="1187.0" width="3.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="724.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="721.2" y="1171.0" width="3.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="724.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="721.6" y="1155.0" width="2.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="724.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="721.6" y="1139.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="724.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="721.6" y="1123.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="724.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="722.4" y="1107.0" width="2.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="725.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="722.4" y="1091.0" width="2.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="725.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="722.8" y="1075.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="725.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="723.7" y="1059.0" width="0.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="726.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="723.7" y="1043.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="726.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="724.1" y="1027.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="727.1" y="1038.0"></text>
</g>
<g>
<title>[ProxyWorker-0 tid=31425] (147 samples, 5.12%)</title><rect x="724.5" y="1299.0" width="60.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="727.5" y="1310.0">[Proxy..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (5 samples, 0.17%)</title><rect x="724.5" y="1283.0" width="2.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="727.5" y="1294.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.17%)</title><rect x="724.5" y="1267.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="727.5" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.17%)</title><rect x="724.5" y="1251.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="727.5" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.17%)</title><rect x="724.5" y="1235.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="727.5" y="1246.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.03%)</title><rect x="724.9" y="1219.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="727.9" y="1230.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="724.9" y="1203.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="727.9" y="1214.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.03%)</title><rect x="724.9" y="1187.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="727.9" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.03%)</title><rect x="724.9" y="1171.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="727.9" y="1182.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_region(unsigned long, bool, bool) (1 samples, 0.03%)</title><rect x="724.9" y="1155.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="727.9" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="725.3" y="1219.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="728.3" y="1230.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.03%)</title><rect x="725.3" y="1203.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="728.3" y="1214.0"></text>
</g>
<g>
<title>__memset_erms (2 samples, 0.07%)</title><rect x="725.7" y="1219.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="728.7" y="1230.0"></text>
</g>
<g>
<title>[not_walkable] (2 samples, 0.07%)</title><rect x="726.5" y="1283.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="729.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/Thread.run (140 samples, 4.87%)</title><rect x="727.4" y="1283.0" width="57.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="730.4" y="1294.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (140 samples, 4.87%)</title><rect x="727.4" y="1267.0" width="57.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="730.4" y="1278.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (140 samples, 4.87%)</title><rect x="727.4" y="1251.0" width="57.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.4" y="1262.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (115 samples, 4.00%)</title><rect x="727.4" y="1235.0" width="47.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.4" y="1246.0">java..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (102 samples, 3.55%)</title><rect x="727.4" y="1219.0" width="41.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="730.4" y="1230.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (102 samples, 3.55%)</title><rect x="727.4" y="1203.0" width="41.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.4" y="1214.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="727.8" y="1187.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="730.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="727.8" y="1171.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="730.8" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (100 samples, 3.48%)</title><rect x="728.2" y="1187.0" width="41.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="731.2" y="1198.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (100 samples, 3.48%)</title><rect x="728.2" y="1171.0" width="41.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.2" y="1182.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (100 samples, 3.48%)</title><rect x="728.2" y="1155.0" width="41.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.2" y="1166.0">ru/..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="728.2" y="1139.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="731.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="728.2" y="1123.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="731.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="728.2" y="1107.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="731.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="728.2" y="1091.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="731.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="728.2" y="1075.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="731.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="728.2" y="1059.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="731.2" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.10%)</title><rect x="728.6" y="1139.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="731.6" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.10%)</title><rect x="728.6" y="1123.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="731.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.03%)</title><rect x="729.0" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (1 samples, 0.03%)</title><rect x="729.4" y="1107.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="732.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (96 samples, 3.34%)</title><rect x="729.8" y="1139.0" width="39.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="732.8" y="1150.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (96 samples, 3.34%)</title><rect x="729.8" y="1123.0" width="39.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="732.8" y="1134.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="729.8" y="1107.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="732.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="729.8" y="1091.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="732.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="729.8" y="1075.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (20 samples, 0.70%)</title><rect x="730.7" y="1107.0" width="8.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (20 samples, 0.70%)</title><rect x="730.7" y="1091.0" width="8.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="733.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="731.5" y="1075.0" width="1.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="734.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="731.5" y="1059.0" width="1.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="734.5" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.10%)</title><rect x="731.5" y="1043.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="734.5" y="1054.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="731.5" y="1027.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="734.5" y="1038.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="731.9" y="1027.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="734.9" y="1038.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="732.3" y="1027.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="735.3" y="1038.0"></text>
</g>
<g>
<title>__GI___recv (15 samples, 0.52%)</title><rect x="732.7" y="1075.0" width="6.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="735.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="732.7" y="1059.0" width="6.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="735.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="732.7" y="1043.0" width="6.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="735.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="732.7" y="1027.0" width="6.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="735.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="732.7" y="1011.0" width="6.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="735.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="732.7" y="995.0" width="6.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="735.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="733.1" y="979.0" width="5.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="736.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="733.1" y="963.0" width="5.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="736.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="733.1" y="947.0" width="5.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="736.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="734.8" y="931.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="737.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="734.8" y="915.0" width="4.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="737.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="736.8" y="899.0" width="2.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="739.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="737.6" y="883.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="740.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="738.5" y="867.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="741.5" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (13 samples, 0.45%)</title><rect x="738.9" y="1107.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="739.3" y="1091.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="742.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="739.3" y="1075.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="742.3" y="1086.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="739.7" y="1091.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="742.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.14%)</title><rect x="740.1" y="1091.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.14%)</title><rect x="740.1" y="1075.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.14%)</title><rect x="740.1" y="1059.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.1" y="1070.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.03%)</title><rect x="741.3" y="1043.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="744.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (6 samples, 0.21%)</title><rect x="741.7" y="1091.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="744.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.10%)</title><rect x="742.6" y="1075.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="745.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.10%)</title><rect x="742.6" y="1059.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="745.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="743.8" y="1075.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="746.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="743.8" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="746.8" y="1070.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="743.8" y="1043.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="746.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (1 samples, 0.03%)</title><rect x="744.2" y="1107.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="747.2" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="744.2" y="1091.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="747.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="744.2" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="747.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="744.2" y="1059.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.03%)</title><rect x="744.6" y="1107.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="747.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="744.6" y="1091.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="747.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="744.6" y="1075.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="747.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (5 samples, 0.17%)</title><rect x="745.0" y="1107.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="748.0" y="1118.0"></text>
</g>
<g>
<title>__GI___setsockopt (5 samples, 0.17%)</title><rect x="745.0" y="1091.0" width="2.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="748.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="745.4" y="1075.0" width="1.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="748.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="745.4" y="1059.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="748.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="745.4" y="1043.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="748.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="745.4" y="1027.0" width="1.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="748.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="746.3" y="1011.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="749.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="746.7" y="995.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="749.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="746.7" y="979.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="749.7" y="990.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (52 samples, 1.81%)</title><rect x="747.1" y="1107.0" width="21.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="750.1" y="1118.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (3 samples, 0.10%)</title><rect x="747.1" y="1091.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="750.1" y="1102.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="747.5" y="1075.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="750.5" y="1086.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.03%)</title><rect x="747.9" y="1075.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="750.9" y="1086.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="748.3" y="1091.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="751.3" y="1102.0"></text>
</g>
<g>
<title>__send (47 samples, 1.64%)</title><rect x="748.7" y="1091.0" width="19.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="751.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.64%)</title><rect x="748.7" y="1075.0" width="19.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="751.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.64%)</title><rect x="748.7" y="1059.0" width="19.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="751.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.64%)</title><rect x="748.7" y="1043.0" width="19.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="751.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.64%)</title><rect x="748.7" y="1027.0" width="19.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="751.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.64%)</title><rect x="748.7" y="1011.0" width="19.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="751.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.64%)</title><rect x="748.7" y="995.0" width="19.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="751.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.64%)</title><rect x="748.7" y="979.0" width="19.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="751.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.64%)</title><rect x="748.7" y="963.0" width="19.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="751.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 1.53%)</title><rect x="750.0" y="947.0" width="18.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="753.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.39%)</title><rect x="751.6" y="931.0" width="16.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="754.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.39%)</title><rect x="751.6" y="915.0" width="16.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="754.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="752.0" y="899.0" width="16.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="755.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.25%)</title><rect x="753.3" y="883.0" width="14.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="756.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="753.7" y="867.0" width="14.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="756.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 1.18%)</title><rect x="754.1" y="851.0" width="13.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="757.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.15%)</title><rect x="754.5" y="835.0" width="13.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="757.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.11%)</title><rect x="754.9" y="819.0" width="13.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="757.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.11%)</title><rect x="754.9" y="803.0" width="13.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="757.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="755.3" y="787.0" width="12.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="758.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="756.1" y="771.0" width="11.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="759.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="756.5" y="755.0" width="11.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="759.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="757.4" y="739.0" width="10.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="760.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="758.6" y="723.0" width="9.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="761.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="758.6" y="707.0" width="9.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="761.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="758.6" y="691.0" width="9.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="761.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="758.6" y="675.0" width="9.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="761.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="759.0" y="659.0" width="9.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="762.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="760.2" y="643.0" width="7.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="763.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="760.6" y="627.0" width="7.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="763.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="761.1" y="611.0" width="6.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="764.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="761.1" y="595.0" width="6.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="764.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="761.1" y="579.0" width="6.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="764.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="761.5" y="563.0" width="6.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="764.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="763.1" y="547.0" width="4.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="766.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="763.1" y="531.0" width="4.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="766.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="764.3" y="515.0" width="3.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="767.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="765.2" y="499.0" width="2.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="768.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="765.6" y="483.0" width="2.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="768.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="765.6" y="467.0" width="2.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="768.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="767.2" y="451.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="770.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="767.2" y="435.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="770.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="767.6" y="419.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="770.6" y="430.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="768.0" y="1091.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="771.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (2 samples, 0.07%)</title><rect x="768.5" y="1107.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="771.5" y="1118.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (2 samples, 0.07%)</title><rect x="768.5" y="1091.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="771.5" y="1102.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkFirst (2 samples, 0.07%)</title><rect x="768.5" y="1075.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="771.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (12 samples, 0.42%)</title><rect x="769.3" y="1219.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="772.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (12 samples, 0.42%)</title><rect x="769.3" y="1203.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (12 samples, 0.42%)</title><rect x="769.3" y="1187.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="772.3" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (12 samples, 0.42%)</title><rect x="769.3" y="1171.0" width="4.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="772.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.42%)</title><rect x="769.3" y="1155.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.42%)</title><rect x="769.3" y="1139.0" width="4.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="772.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.42%)</title><rect x="769.3" y="1123.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="772.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.42%)</title><rect x="769.3" y="1107.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.42%)</title><rect x="769.3" y="1091.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="772.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.42%)</title><rect x="769.3" y="1075.0" width="4.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="772.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.42%)</title><rect x="769.3" y="1059.0" width="4.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.3" y="1070.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="769.3" y="1043.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="772.3" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.38%)</title><rect x="769.7" y="1043.0" width="4.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="772.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="769.7" y="1027.0" width="4.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="772.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="769.7" y="1011.0" width="4.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="772.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="769.7" y="995.0" width="4.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="772.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="769.7" y="979.0" width="4.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="772.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="770.1" y="963.0" width="4.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="773.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="770.1" y="947.0" width="4.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="773.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="770.1" y="931.0" width="4.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="773.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="770.5" y="915.0" width="3.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="773.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (1 samples, 0.03%)</title><rect x="774.2" y="1219.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.2" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (1 samples, 0.03%)</title><rect x="774.2" y="1203.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="777.2" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (1 samples, 0.03%)</title><rect x="774.2" y="1187.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="777.2" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1 samples, 0.03%)</title><rect x="774.2" y="1171.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1 samples, 0.03%)</title><rect x="774.2" y="1155.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="777.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (25 samples, 0.87%)</title><rect x="774.6" y="1235.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="777.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (24 samples, 0.84%)</title><rect x="775.0" y="1219.0" width="9.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (12 samples, 0.42%)</title><rect x="775.0" y="1203.0" width="5.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="778.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.42%)</title><rect x="775.0" y="1187.0" width="5.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.42%)</title><rect x="775.0" y="1171.0" width="5.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="778.0" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (7 samples, 0.24%)</title><rect x="775.0" y="1155.0" width="2.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="778.0" y="1166.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="775.4" y="1139.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="778.4" y="1150.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.07%)</title><rect x="775.8" y="1139.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="778.8" y="1150.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="776.7" y="1139.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="779.7" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="776.7" y="1123.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="779.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="776.7" y="1107.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="779.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="776.7" y="1091.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="779.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="776.7" y="1075.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="779.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="776.7" y="1059.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="779.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="776.7" y="1043.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="779.7" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.07%)</title><rect x="777.1" y="1139.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="780.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="777.9" y="1155.0" width="2.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="780.9" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.17%)</title><rect x="777.9" y="1139.0" width="2.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="780.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="778.3" y="1123.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="781.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="778.3" y="1107.0" width="1.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="781.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="778.3" y="1091.0" width="1.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="781.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="778.3" y="1075.0" width="1.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="781.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="778.7" y="1059.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="781.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="778.7" y="1043.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="781.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="778.7" y="1027.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="781.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="778.7" y="1011.0" width="1.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="781.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="779.1" y="995.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="782.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.14%)</title><rect x="780.0" y="1203.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="783.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.14%)</title><rect x="780.0" y="1187.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="783.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (4 samples, 0.14%)</title><rect x="780.0" y="1171.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.predecessor (1 samples, 0.03%)</title><rect x="780.4" y="1155.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="783.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.03%)</title><rect x="780.4" y="1139.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="783.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.03%)</title><rect x="780.8" y="1155.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="783.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="781.2" y="1155.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="784.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="781.2" y="1139.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.28%)</title><rect x="781.6" y="1203.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="784.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.28%)</title><rect x="781.6" y="1187.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="784.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.28%)</title><rect x="781.6" y="1171.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="784.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.28%)</title><rect x="781.6" y="1155.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="784.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.28%)</title><rect x="781.6" y="1139.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="784.6" y="1150.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="781.6" y="1123.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="784.6" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.24%)</title><rect x="782.0" y="1123.0" width="2.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="785.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="782.0" y="1107.0" width="2.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="785.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="782.0" y="1091.0" width="2.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="785.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="782.4" y="1075.0" width="2.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="785.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="782.4" y="1059.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="785.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="782.4" y="1043.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="785.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="782.8" y="1027.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="785.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="782.8" y="1011.0" width="2.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="785.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="782.8" y="995.0" width="2.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="785.8" y="1006.0"></text>
</g>
<g>
<title>[ProxyWorker-1 tid=31426] (147 samples, 5.12%)</title><rect x="784.9" y="1299.0" width="60.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="787.9" y="1310.0">[Proxy..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.14%)</title><rect x="784.9" y="1283.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="787.9" y="1294.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.14%)</title><rect x="784.9" y="1267.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="787.9" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.10%)</title><rect x="785.3" y="1251.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="788.3" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.07%)</title><rect x="785.3" y="1235.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="788.3" y="1246.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="785.3" y="1219.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="788.3" y="1230.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.03%)</title><rect x="785.3" y="1203.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="788.3" y="1214.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="785.7" y="1219.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="788.7" y="1230.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="786.1" y="1235.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="789.1" y="1246.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="786.5" y="1283.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="789.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/Thread.run (141 samples, 4.91%)</title><rect x="786.9" y="1283.0" width="58.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.9" y="1294.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (141 samples, 4.91%)</title><rect x="786.9" y="1267.0" width="58.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="789.9" y="1278.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (141 samples, 4.91%)</title><rect x="786.9" y="1251.0" width="58.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="789.9" y="1262.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (110 samples, 3.83%)</title><rect x="786.9" y="1235.0" width="45.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="789.9" y="1246.0">java..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (100 samples, 3.48%)</title><rect x="786.9" y="1219.0" width="41.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="789.9" y="1230.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (100 samples, 3.48%)</title><rect x="786.9" y="1203.0" width="41.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.9" y="1214.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.07%)</title><rect x="786.9" y="1187.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="787.4" y="1171.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.4" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (98 samples, 3.41%)</title><rect x="787.8" y="1187.0" width="40.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="790.8" y="1198.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (98 samples, 3.41%)</title><rect x="787.8" y="1171.0" width="40.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="790.8" y="1182.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (98 samples, 3.41%)</title><rect x="787.8" y="1155.0" width="40.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.8" y="1166.0">ru/..</text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.07%)</title><rect x="788.2" y="1139.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="791.2" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.07%)</title><rect x="788.2" y="1123.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="791.2" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (94 samples, 3.27%)</title><rect x="789.0" y="1139.0" width="38.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="792.0" y="1150.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (94 samples, 3.27%)</title><rect x="789.0" y="1123.0" width="38.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="792.0" y="1134.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="789.8" y="1107.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="792.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="789.8" y="1091.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="792.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="789.8" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="792.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (19 samples, 0.66%)</title><rect x="790.2" y="1107.0" width="7.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.2" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (19 samples, 0.66%)</title><rect x="790.2" y="1091.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="793.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="790.2" y="1075.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="793.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="790.2" y="1059.0" width="1.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="793.2" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.14%)</title><rect x="790.2" y="1043.0" width="1.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="793.2" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="790.2" y="1027.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="793.2" y="1038.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="790.6" y="1011.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="793.6" y="1022.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.03%)</title><rect x="791.1" y="1027.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="794.1" y="1038.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="791.5" y="1027.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="794.5" y="1038.0"></text>
</g>
<g>
<title>__GI___recv (15 samples, 0.52%)</title><rect x="791.9" y="1075.0" width="6.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="794.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="791.9" y="1059.0" width="6.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="794.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="791.9" y="1043.0" width="6.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="794.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="791.9" y="1027.0" width="6.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="794.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="791.9" y="1011.0" width="6.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="794.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="791.9" y="995.0" width="6.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="794.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="791.9" y="979.0" width="6.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="794.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="791.9" y="963.0" width="6.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="794.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="792.7" y="947.0" width="5.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="795.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="793.1" y="931.0" width="4.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="796.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="793.5" y="915.0" width="4.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="796.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="794.3" y="899.0" width="3.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="797.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="795.2" y="883.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="798.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="795.2" y="867.0" width="2.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="798.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="797.6" y="851.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="800.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="797.6" y="835.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="800.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="797.6" y="819.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="800.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (12 samples, 0.42%)</title><rect x="798.0" y="1107.0" width="5.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="798.0" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="801.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="798.0" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="801.0" y="1086.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="798.0" y="1059.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.0" y="1070.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.07%)</title><rect x="798.4" y="1091.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="801.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (7 samples, 0.24%)</title><rect x="799.3" y="1091.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="802.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.17%)</title><rect x="800.1" y="1075.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="803.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.17%)</title><rect x="800.1" y="1059.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="803.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="801.7" y="1043.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="804.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="801.7" y="1027.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="804.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.03%)</title><rect x="801.7" y="1011.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="802.1" y="1091.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.03%)</title><rect x="802.1" y="1075.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.03%)</title><rect x="802.6" y="1091.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="805.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="802.6" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="802.6" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (5 samples, 0.17%)</title><rect x="803.0" y="1107.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="806.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.03%)</title><rect x="803.0" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="806.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.10%)</title><rect x="803.4" y="1091.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="806.4" y="1102.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="803.4" y="1075.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="806.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="803.8" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="806.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.03%)</title><rect x="803.8" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="806.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.03%)</title><rect x="804.2" y="1075.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="807.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="804.2" y="1059.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="807.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="804.2" y="1043.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="807.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.03%)</title><rect x="804.6" y="1091.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="804.6" y="1075.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="807.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="804.6" y="1059.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="807.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (8 samples, 0.28%)</title><rect x="805.0" y="1107.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="808.0" y="1118.0"></text>
</g>
<g>
<title>__GI___setsockopt (8 samples, 0.28%)</title><rect x="805.0" y="1091.0" width="3.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="808.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="805.8" y="1075.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="808.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="805.8" y="1059.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="808.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="805.8" y="1043.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="808.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="805.8" y="1027.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="808.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="806.3" y="1011.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="809.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="806.3" y="995.0" width="2.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="809.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="806.7" y="979.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="809.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="806.7" y="963.0" width="1.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="809.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="806.7" y="947.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="809.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="807.1" y="931.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="810.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="807.9" y="915.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="810.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (46 samples, 1.60%)</title><rect x="808.3" y="1107.0" width="18.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="811.3" y="1118.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (2 samples, 0.07%)</title><rect x="808.7" y="1091.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="811.7" y="1102.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="808.7" y="1075.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="811.7" y="1086.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.03%)</title><rect x="809.1" y="1075.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="812.1" y="1086.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.07%)</title><rect x="809.5" y="1091.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="812.5" y="1102.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="810.4" y="1091.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="813.4" y="1102.0"></text>
</g>
<g>
<title>__send (39 samples, 1.36%)</title><rect x="810.8" y="1091.0" width="16.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="813.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="810.8" y="1075.0" width="16.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="813.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="810.8" y="1059.0" width="16.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="813.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="810.8" y="1043.0" width="16.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="813.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="810.8" y="1027.0" width="16.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="813.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="810.8" y="1011.0" width="16.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="813.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 1.32%)</title><rect x="811.2" y="995.0" width="15.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="814.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 1.32%)</title><rect x="811.2" y="979.0" width="15.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="814.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 1.32%)</title><rect x="811.2" y="963.0" width="15.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="814.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.29%)</title><rect x="811.6" y="947.0" width="15.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="814.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.29%)</title><rect x="811.6" y="931.0" width="15.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="814.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.25%)</title><rect x="812.0" y="915.0" width="14.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="815.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.25%)</title><rect x="812.0" y="899.0" width="14.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="815.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="812.4" y="883.0" width="14.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="815.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="812.4" y="867.0" width="14.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="815.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="812.4" y="851.0" width="14.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="815.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="812.4" y="835.0" width="14.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="815.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="812.4" y="819.0" width="14.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="815.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="814.1" y="803.0" width="12.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="817.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="814.1" y="787.0" width="12.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="817.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="814.1" y="771.0" width="12.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="817.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.94%)</title><rect x="815.7" y="755.0" width="11.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="818.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.91%)</title><rect x="816.1" y="739.0" width="10.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="819.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="816.9" y="723.0" width="9.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="819.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="817.3" y="707.0" width="9.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="820.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="817.3" y="691.0" width="9.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="820.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="817.3" y="675.0" width="9.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="820.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="817.3" y="659.0" width="9.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="820.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="817.3" y="643.0" width="9.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="820.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="817.3" y="627.0" width="9.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="820.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="817.3" y="611.0" width="9.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="820.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="817.3" y="595.0" width="9.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="820.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="817.3" y="579.0" width="9.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="820.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.77%)</title><rect x="817.8" y="563.0" width="9.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="820.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="818.2" y="547.0" width="8.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="821.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="819.0" y="531.0" width="7.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="822.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="819.8" y="515.0" width="7.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="822.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="821.0" y="499.0" width="5.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="824.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="821.9" y="483.0" width="4.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="824.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="821.9" y="467.0" width="4.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="824.9" y="478.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="826.8" y="1091.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="829.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/pool/Pool.returnObject (1 samples, 0.03%)</title><rect x="827.2" y="1107.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.2" y="1118.0"></text>
</g>
<g>
<title>java/util/LinkedList.addFirst (1 samples, 0.03%)</title><rect x="827.2" y="1091.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="830.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="827.6" y="1139.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="830.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 0.03%)</title><rect x="827.6" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="830.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (9 samples, 0.31%)</title><rect x="828.0" y="1219.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="831.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (9 samples, 0.31%)</title><rect x="828.0" y="1203.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="831.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (9 samples, 0.31%)</title><rect x="828.0" y="1187.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.0" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (9 samples, 0.31%)</title><rect x="828.0" y="1171.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.31%)</title><rect x="828.0" y="1155.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="831.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.31%)</title><rect x="828.0" y="1139.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="831.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.31%)</title><rect x="828.0" y="1123.0" width="3.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="831.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.31%)</title><rect x="828.0" y="1107.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="831.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.31%)</title><rect x="828.0" y="1091.0" width="3.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="831.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.31%)</title><rect x="828.0" y="1075.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.31%)</title><rect x="828.0" y="1059.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="831.0" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.10%)</title><rect x="828.0" y="1043.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="831.0" y="1054.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="828.4" y="1027.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="831.4" y="1038.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="828.9" y="1027.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="831.9" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.21%)</title><rect x="829.3" y="1043.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="832.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="829.3" y="1027.0" width="2.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="832.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="829.3" y="1011.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="832.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="829.3" y="995.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="832.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="829.7" y="979.0" width="2.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="832.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="829.7" y="963.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="832.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="829.7" y="947.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="832.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="829.7" y="931.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="832.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="829.7" y="915.0" width="2.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="832.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="830.9" y="899.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="833.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="830.9" y="883.0" width="0.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="833.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="830.9" y="867.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="833.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="831.3" y="851.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="834.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="831.3" y="835.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="834.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="831.3" y="819.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="834.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="831.3" y="803.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="834.3" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (1 samples, 0.03%)</title><rect x="831.7" y="1219.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.7" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (1 samples, 0.03%)</title><rect x="831.7" y="1203.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.7" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (1 samples, 0.03%)</title><rect x="831.7" y="1187.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.7" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1 samples, 0.03%)</title><rect x="831.7" y="1171.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="834.7" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1 samples, 0.03%)</title><rect x="831.7" y="1155.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="834.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="831.7" y="1139.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="834.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="831.7" y="1123.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="834.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="831.7" y="1107.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="834.7" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="831.7" y="1091.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="834.7" y="1102.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.03%)</title><rect x="831.7" y="1075.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="834.7" y="1086.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (1 samples, 0.03%)</title><rect x="831.7" y="1059.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="834.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.03%)</title><rect x="832.1" y="1235.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="832.1" y="1219.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="835.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.03%)</title><rect x="832.1" y="1203.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="835.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.03%)</title><rect x="832.1" y="1187.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="835.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="832.1" y="1171.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="835.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="832.1" y="1155.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 1.04%)</title><rect x="832.5" y="1235.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="835.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (1 samples, 0.03%)</title><rect x="833.0" y="1219.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="836.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (28 samples, 0.97%)</title><rect x="833.4" y="1219.0" width="11.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="836.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (16 samples, 0.56%)</title><rect x="833.8" y="1203.0" width="6.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="836.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (16 samples, 0.56%)</title><rect x="833.8" y="1187.0" width="6.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="836.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (16 samples, 0.56%)</title><rect x="833.8" y="1171.0" width="6.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="836.8" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (9 samples, 0.31%)</title><rect x="833.8" y="1155.0" width="3.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="836.8" y="1166.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.03%)</title><rect x="834.2" y="1139.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="837.2" y="1150.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="834.6" y="1139.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="837.6" y="1150.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.03%)</title><rect x="835.0" y="1139.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="838.0" y="1150.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.07%)</title><rect x="835.4" y="1139.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="838.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="835.4" y="1123.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="838.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="835.4" y="1107.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="838.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="835.4" y="1091.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="838.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="835.8" y="1075.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="838.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="835.8" y="1059.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="838.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="835.8" y="1043.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="838.8" y="1054.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="836.2" y="1139.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="839.2" y="1150.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="836.7" y="1139.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="839.7" y="1150.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="837.1" y="1139.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="840.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="837.5" y="1155.0" width="2.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="840.5" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.21%)</title><rect x="837.5" y="1139.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="840.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="837.5" y="1123.0" width="2.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="840.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="837.5" y="1107.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="840.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="837.5" y="1091.0" width="2.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="840.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="837.5" y="1075.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="840.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="837.5" y="1059.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="840.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="837.5" y="1043.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="840.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="838.3" y="1027.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="841.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="838.3" y="1011.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="841.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="838.3" y="995.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="841.3" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.03%)</title><rect x="839.9" y="1139.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="842.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (1 samples, 0.03%)</title><rect x="840.4" y="1203.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="843.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (1 samples, 0.03%)</title><rect x="840.4" y="1187.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (1 samples, 0.03%)</title><rect x="840.4" y="1171.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="843.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="840.4" y="1155.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="843.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.03%)</title><rect x="840.4" y="1139.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="843.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="840.4" y="1123.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="843.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="840.4" y="1107.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="843.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="840.4" y="1091.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="843.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.31%)</title><rect x="840.8" y="1203.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="843.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.31%)</title><rect x="840.8" y="1187.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="843.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.31%)</title><rect x="840.8" y="1171.0" width="3.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="843.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.31%)</title><rect x="840.8" y="1155.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.31%)</title><rect x="840.8" y="1139.0" width="3.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="843.8" y="1150.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.03%)</title><rect x="840.8" y="1123.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="843.8" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.07%)</title><rect x="841.2" y="1123.0" width="0.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="844.2" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="841.2" y="1107.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="844.2" y="1118.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="841.6" y="1107.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="844.6" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.21%)</title><rect x="842.0" y="1123.0" width="2.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="845.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="842.4" y="1107.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="845.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="842.4" y="1091.0" width="2.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="845.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="842.4" y="1075.0" width="2.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="845.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="842.4" y="1059.0" width="2.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="845.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="842.4" y="1043.0" width="2.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="845.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="843.2" y="1027.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="846.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="843.6" y="1011.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="846.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="843.6" y="995.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="846.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="844.5" y="1203.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="847.5" y="1214.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (1 samples, 0.03%)</title><rect x="844.9" y="1283.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="847.9" y="1294.0"></text>
</g>
<g>
<title>[ProxyWorker-2 tid=31429] (148 samples, 5.15%)</title><rect x="845.3" y="1299.0" width="60.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="848.3" y="1310.0">[Proxy..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (4 samples, 0.14%)</title><rect x="845.3" y="1283.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="848.3" y="1294.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.14%)</title><rect x="845.3" y="1267.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="848.3" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.14%)</title><rect x="845.3" y="1251.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="848.3" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.14%)</title><rect x="845.3" y="1235.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="848.3" y="1246.0"></text>
</g>
<g>
<title>G1CardTable::g1_mark_as_young(MemRegion const&amp;) (1 samples, 0.03%)</title><rect x="845.3" y="1219.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="848.3" y="1230.0"></text>
</g>
<g>
<title>G1CollectedHeap::mem_allocate(unsigned long, bool*) (1 samples, 0.03%)</title><rect x="845.7" y="1219.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="848.7" y="1230.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.03%)</title><rect x="845.7" y="1203.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="848.7" y="1214.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.03%)</title><rect x="845.7" y="1187.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="848.7" y="1198.0"></text>
</g>
<g>
<title>G1SurvivorRegions::length() const (1 samples, 0.03%)</title><rect x="845.7" y="1171.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="848.7" y="1182.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="846.1" y="1219.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="849.1" y="1230.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.03%)</title><rect x="846.1" y="1203.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="849.1" y="1214.0"></text>
</g>
<g>
<title>__memset_erms (1 samples, 0.03%)</title><rect x="846.5" y="1219.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="849.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (144 samples, 5.01%)</title><rect x="846.9" y="1283.0" width="59.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="849.9" y="1294.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (144 samples, 5.01%)</title><rect x="846.9" y="1267.0" width="59.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="849.9" y="1278.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (144 samples, 5.01%)</title><rect x="846.9" y="1251.0" width="59.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="849.9" y="1262.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (112 samples, 3.90%)</title><rect x="846.9" y="1235.0" width="46.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.9" y="1246.0">java..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (98 samples, 3.41%)</title><rect x="846.9" y="1219.0" width="40.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="849.9" y="1230.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (98 samples, 3.41%)</title><rect x="846.9" y="1203.0" width="40.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="849.9" y="1214.0">jav..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="847.3" y="1187.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="847.3" y="1171.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="850.3" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (96 samples, 3.34%)</title><rect x="847.8" y="1187.0" width="39.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="850.8" y="1198.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (96 samples, 3.34%)</title><rect x="847.8" y="1171.0" width="39.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="850.8" y="1182.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (96 samples, 3.34%)</title><rect x="847.8" y="1155.0" width="39.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.8" y="1166.0">ru/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (96 samples, 3.34%)</title><rect x="847.8" y="1139.0" width="39.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="850.8" y="1150.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (96 samples, 3.34%)</title><rect x="847.8" y="1123.0" width="39.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.8" y="1134.0">one..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.07%)</title><rect x="847.8" y="1107.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="850.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.07%)</title><rect x="847.8" y="1091.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="850.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.07%)</title><rect x="847.8" y="1075.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="850.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (19 samples, 0.66%)</title><rect x="848.6" y="1107.0" width="7.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="851.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (19 samples, 0.66%)</title><rect x="848.6" y="1091.0" width="7.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="851.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="848.6" y="1075.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="851.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="848.6" y="1059.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="851.6" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.07%)</title><rect x="848.6" y="1043.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="851.6" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="849.0" y="1027.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="852.0" y="1038.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.03%)</title><rect x="849.0" y="1011.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="852.0" y="1022.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="849.4" y="1043.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="852.4" y="1054.0"></text>
</g>
<g>
<title>__GI___recv (15 samples, 0.52%)</title><rect x="849.8" y="1075.0" width="6.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="852.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="849.8" y="1059.0" width="6.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="852.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="849.8" y="1043.0" width="6.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="852.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="849.8" y="1027.0" width="6.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="852.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="850.2" y="1011.0" width="5.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="853.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="850.2" y="995.0" width="5.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="853.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="850.2" y="979.0" width="5.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="853.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="850.6" y="963.0" width="5.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="853.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="851.9" y="947.0" width="4.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="854.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="853.1" y="931.0" width="2.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="856.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="853.9" y="915.0" width="2.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="856.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="854.3" y="899.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="857.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="854.3" y="883.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="857.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="854.7" y="867.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="857.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="855.6" y="851.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="858.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="855.6" y="835.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="858.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="855.6" y="819.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="858.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="855.6" y="803.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="858.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="855.6" y="787.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="858.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="855.6" y="771.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="858.6" y="782.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="856.0" y="1075.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="859.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (7 samples, 0.24%)</title><rect x="856.4" y="1107.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (3 samples, 0.10%)</title><rect x="857.2" y="1091.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="860.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="857.2" y="1075.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.10%)</title><rect x="857.2" y="1059.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="860.2" y="1070.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.03%)</title><rect x="858.0" y="1043.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (2 samples, 0.07%)</title><rect x="858.4" y="1091.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="861.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="858.4" y="1075.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="861.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="858.8" y="1075.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="858.8" y="1059.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (9 samples, 0.31%)</title><rect x="859.3" y="1107.0" width="3.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.3" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.21%)</title><rect x="859.7" y="1091.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="862.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (3 samples, 0.10%)</title><rect x="859.7" y="1075.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="862.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.07%)</title><rect x="860.9" y="1075.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="863.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="861.3" y="1059.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="864.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="861.3" y="1043.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="864.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="861.7" y="1075.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="864.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="861.7" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="864.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.07%)</title><rect x="862.1" y="1091.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="865.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="862.5" y="1075.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="862.5" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (15 samples, 0.52%)</title><rect x="863.0" y="1107.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="866.0" y="1118.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_setTimeout (1 samples, 0.03%)</title><rect x="863.0" y="1091.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="866.0" y="1102.0"></text>
</g>
<g>
<title>__GI___setsockopt (14 samples, 0.49%)</title><rect x="863.4" y="1091.0" width="5.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="866.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="864.2" y="1075.0" width="4.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="867.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="864.2" y="1059.0" width="4.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="867.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="864.6" y="1043.0" width="4.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="867.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="864.6" y="1027.0" width="4.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="867.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="864.6" y="1011.0" width="4.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="867.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="865.4" y="995.0" width="3.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="868.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="866.2" y="979.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="869.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="867.9" y="963.0" width="1.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="870.9" y="974.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (44 samples, 1.53%)</title><rect x="869.1" y="1107.0" width="18.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="872.1" y="1118.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (5 samples, 0.17%)</title><rect x="869.5" y="1091.0" width="2.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="872.5" y="1102.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="869.5" y="1075.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="872.5" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.03%)</title><rect x="869.9" y="1075.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="872.9" y="1086.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.07%)</title><rect x="870.3" y="1075.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="873.3" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.07%)</title><rect x="870.3" y="1059.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="873.3" y="1070.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="871.2" y="1075.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="874.2" y="1086.0"></text>
</g>
<g>
<title>__send (38 samples, 1.32%)</title><rect x="871.6" y="1091.0" width="15.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="874.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.29%)</title><rect x="872.0" y="1075.0" width="15.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="875.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.29%)</title><rect x="872.0" y="1059.0" width="15.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="875.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.29%)</title><rect x="872.0" y="1043.0" width="15.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="875.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 1.25%)</title><rect x="872.4" y="1027.0" width="14.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="875.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="872.8" y="1011.0" width="14.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="875.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="872.8" y="995.0" width="14.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="875.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.15%)</title><rect x="873.6" y="979.0" width="13.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="876.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.15%)</title><rect x="873.6" y="963.0" width="13.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="876.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.15%)</title><rect x="873.6" y="947.0" width="13.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="876.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.15%)</title><rect x="873.6" y="931.0" width="13.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="876.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 1.15%)</title><rect x="873.6" y="915.0" width="13.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="876.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.11%)</title><rect x="874.0" y="899.0" width="13.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="877.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.04%)</title><rect x="874.9" y="883.0" width="12.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="877.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="875.7" y="867.0" width="11.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="878.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="875.7" y="851.0" width="11.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="878.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="875.7" y="835.0" width="11.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="878.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="875.7" y="819.0" width="11.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="878.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="875.7" y="803.0" width="11.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="878.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="875.7" y="787.0" width="11.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="878.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.94%)</title><rect x="876.1" y="771.0" width="11.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="879.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="878.6" y="755.0" width="8.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="881.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="878.6" y="739.0" width="8.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="881.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="878.6" y="723.0" width="8.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="881.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.70%)</title><rect x="879.0" y="707.0" width="8.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="882.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="879.4" y="691.0" width="7.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="882.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="879.8" y="675.0" width="7.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="882.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="879.8" y="659.0" width="7.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="882.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="880.2" y="643.0" width="7.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="883.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="880.2" y="627.0" width="7.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="883.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="880.2" y="611.0" width="7.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="883.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="880.2" y="595.0" width="7.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="883.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="880.2" y="579.0" width="7.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="883.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.52%)</title><rect x="881.0" y="563.0" width="6.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="884.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="881.4" y="547.0" width="5.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="884.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="881.4" y="531.0" width="5.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="884.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="882.7" y="515.0" width="4.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="885.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="883.5" y="499.0" width="3.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="886.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="883.9" y="483.0" width="3.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="886.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="884.3" y="467.0" width="2.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="887.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (12 samples, 0.42%)</title><rect x="887.2" y="1219.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="890.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (12 samples, 0.42%)</title><rect x="887.2" y="1203.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="890.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (12 samples, 0.42%)</title><rect x="887.2" y="1187.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="890.2" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (12 samples, 0.42%)</title><rect x="887.2" y="1171.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.42%)</title><rect x="887.2" y="1155.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.03%)</title><rect x="887.2" y="1139.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="890.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.31%)</title><rect x="887.6" y="1139.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="890.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.31%)</title><rect x="887.6" y="1123.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.31%)</title><rect x="887.6" y="1107.0" width="3.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.31%)</title><rect x="887.6" y="1091.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="890.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.31%)</title><rect x="887.6" y="1075.0" width="3.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.31%)</title><rect x="887.6" y="1059.0" width="3.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="890.6" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.17%)</title><rect x="887.6" y="1043.0" width="2.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="890.6" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.03%)</title><rect x="888.0" y="1027.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="891.0" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="888.4" y="1027.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="891.4" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="888.8" y="1027.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="891.8" y="1038.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="889.2" y="1027.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="892.2" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.14%)</title><rect x="889.7" y="1043.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="892.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="889.7" y="1027.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="892.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="889.7" y="1011.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="892.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="889.7" y="995.0" width="1.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="892.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="889.7" y="979.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="892.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="890.1" y="963.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="893.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="890.1" y="947.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="893.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="890.5" y="931.0" width="0.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="893.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="890.5" y="915.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="893.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.03%)</title><rect x="891.3" y="1139.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.03%)</title><rect x="891.3" y="1123.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="894.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.03%)</title><rect x="891.3" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.03%)</title><rect x="891.3" y="1091.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.03%)</title><rect x="891.3" y="1075.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="891.3" y="1059.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="894.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="891.3" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="894.3" y="1054.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.03%)</title><rect x="891.3" y="1027.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="894.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.03%)</title><rect x="891.7" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.03%)</title><rect x="891.7" y="1123.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="894.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.03%)</title><rect x="891.7" y="1107.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="894.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.03%)</title><rect x="891.7" y="1091.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="894.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="891.7" y="1075.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="894.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="891.7" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (2 samples, 0.07%)</title><rect x="892.1" y="1219.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="895.1" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (2 samples, 0.07%)</title><rect x="892.1" y="1203.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="895.1" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (2 samples, 0.07%)</title><rect x="892.1" y="1187.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="895.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (2 samples, 0.07%)</title><rect x="892.1" y="1171.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="895.1" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1 samples, 0.03%)</title><rect x="892.5" y="1155.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="895.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.03%)</title><rect x="892.9" y="1235.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="895.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="892.9" y="1219.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="895.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (31 samples, 1.08%)</title><rect x="893.4" y="1235.0" width="12.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="896.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (31 samples, 1.08%)</title><rect x="893.4" y="1219.0" width="12.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="896.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (23 samples, 0.80%)</title><rect x="893.4" y="1203.0" width="9.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (23 samples, 0.80%)</title><rect x="893.4" y="1187.0" width="9.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="896.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (23 samples, 0.80%)</title><rect x="893.4" y="1171.0" width="9.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.4" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.28%)</title><rect x="894.2" y="1155.0" width="3.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="897.2" y="1166.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.10%)</title><rect x="895.4" y="1139.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="898.4" y="1150.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="896.2" y="1123.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="899.2" y="1134.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.07%)</title><rect x="896.6" y="1139.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="899.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="896.6" y="1123.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="899.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="896.6" y="1107.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="899.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="896.6" y="1091.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="899.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="896.6" y="1075.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="899.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="896.6" y="1059.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="899.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="897.5" y="1155.0" width="5.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="900.5" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (12 samples, 0.42%)</title><rect x="897.5" y="1139.0" width="4.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="900.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="898.3" y="1123.0" width="4.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="901.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.35%)</title><rect x="898.3" y="1107.0" width="4.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="901.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="898.7" y="1091.0" width="3.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="901.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="898.7" y="1075.0" width="3.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="901.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="898.7" y="1059.0" width="3.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="901.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="898.7" y="1043.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="901.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="899.5" y="1027.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="902.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="899.5" y="1011.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="902.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="899.9" y="995.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="902.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="902.0" y="979.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="905.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="902.0" y="963.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="905.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="902.0" y="947.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="905.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="902.0" y="931.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="905.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="902.0" y="915.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="905.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="902.0" y="899.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="905.0" y="910.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="902.4" y="1139.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="905.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.07%)</title><rect x="902.8" y="1203.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="905.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.07%)</title><rect x="902.8" y="1187.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="905.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.07%)</title><rect x="902.8" y="1171.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="905.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.03%)</title><rect x="902.8" y="1155.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="903.2" y="1155.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="906.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="903.2" y="1139.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.17%)</title><rect x="903.6" y="1203.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.17%)</title><rect x="903.6" y="1187.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.17%)</title><rect x="903.6" y="1171.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.17%)</title><rect x="903.6" y="1155.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.17%)</title><rect x="903.6" y="1139.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="906.6" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="903.6" y="1123.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="906.6" y="1134.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.03%)</title><rect x="903.6" y="1107.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="906.6" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.14%)</title><rect x="904.0" y="1123.0" width="1.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="907.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="904.4" y="1107.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="907.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="904.4" y="1091.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="907.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="904.4" y="1075.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="907.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="904.4" y="1059.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="907.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="904.4" y="1043.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="907.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="904.4" y="1027.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="907.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="904.4" y="1011.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="907.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="904.4" y="995.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="907.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="905.7" y="1203.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.7" y="1214.0"></text>
</g>
<g>
<title>[ProxyWorker-3 tid=31428] (151 samples, 5.26%)</title><rect x="906.1" y="1299.0" width="62.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="909.1" y="1310.0">[Proxy..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="906.1" y="1283.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="909.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/Thread.run (150 samples, 5.22%)</title><rect x="906.5" y="1283.0" width="61.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.5" y="1294.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (150 samples, 5.22%)</title><rect x="906.5" y="1267.0" width="61.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="909.5" y="1278.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (150 samples, 5.22%)</title><rect x="906.5" y="1251.0" width="61.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="909.5" y="1262.0">java/u..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.14%)</title><rect x="907.3" y="1235.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.10%)</title><rect x="907.7" y="1219.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="910.7" y="1230.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.03%)</title><rect x="908.1" y="1203.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="911.1" y="1214.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (1 samples, 0.03%)</title><rect x="908.6" y="1203.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="911.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (120 samples, 4.18%)</title><rect x="909.0" y="1235.0" width="49.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="912.0" y="1246.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (106 samples, 3.69%)</title><rect x="909.0" y="1219.0" width="43.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="912.0" y="1230.0">java..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (106 samples, 3.69%)</title><rect x="909.0" y="1203.0" width="43.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="912.0" y="1214.0">java..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.07%)</title><rect x="909.4" y="1187.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="912.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="909.8" y="1171.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="912.8" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (103 samples, 3.59%)</title><rect x="910.2" y="1187.0" width="42.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="913.2" y="1198.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (103 samples, 3.59%)</title><rect x="910.2" y="1171.0" width="42.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="913.2" y="1182.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (103 samples, 3.59%)</title><rect x="910.2" y="1155.0" width="42.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.2" y="1166.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (103 samples, 3.59%)</title><rect x="910.2" y="1139.0" width="42.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.2" y="1150.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (103 samples, 3.59%)</title><rect x="910.2" y="1123.0" width="42.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.2" y="1134.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="910.2" y="1107.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="910.2" y="1091.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="910.2" y="1075.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (28 samples, 0.97%)</title><rect x="910.6" y="1107.0" width="11.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (28 samples, 0.97%)</title><rect x="910.6" y="1091.0" width="11.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="911.0" y="1075.0" width="2.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="914.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="911.0" y="1059.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="914.0" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.10%)</title><rect x="911.0" y="1043.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="914.0" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="911.4" y="1027.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="914.4" y="1038.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="911.4" y="1011.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="914.4" y="1022.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="911.8" y="1027.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="914.8" y="1038.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.07%)</title><rect x="912.3" y="1043.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="915.3" y="1054.0"></text>
</g>
<g>
<title>__GI___recv (22 samples, 0.77%)</title><rect x="913.1" y="1075.0" width="9.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="916.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="913.5" y="1059.0" width="8.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="916.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="913.5" y="1043.0" width="8.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="916.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.70%)</title><rect x="913.9" y="1027.0" width="8.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="916.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.70%)</title><rect x="913.9" y="1011.0" width="8.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="916.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="914.3" y="995.0" width="7.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="917.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="914.3" y="979.0" width="7.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="917.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.63%)</title><rect x="914.7" y="963.0" width="7.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="917.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="916.4" y="947.0" width="5.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="919.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="916.4" y="931.0" width="5.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="919.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="916.4" y="915.0" width="5.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="919.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.31%)</title><rect x="918.4" y="899.0" width="3.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="921.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="919.2" y="883.0" width="2.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="922.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="920.5" y="867.0" width="1.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="923.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="921.7" y="851.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="924.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="921.7" y="835.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="924.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="921.7" y="819.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="924.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="921.7" y="803.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="924.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (7 samples, 0.24%)</title><rect x="922.1" y="1107.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="925.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="922.5" y="1091.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="925.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="922.5" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="925.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="922.5" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.14%)</title><rect x="922.9" y="1091.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="924.2" y="1075.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="927.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.03%)</title><rect x="924.2" y="1059.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.03%)</title><rect x="924.6" y="1091.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="927.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="924.6" y="1075.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="927.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="924.6" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="927.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (7 samples, 0.24%)</title><rect x="925.0" y="1107.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="928.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.07%)</title><rect x="925.0" y="1091.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="928.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.14%)</title><rect x="925.8" y="1091.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="928.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="925.8" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="928.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (2 samples, 0.07%)</title><rect x="926.2" y="1075.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="929.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.03%)</title><rect x="927.0" y="1075.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="930.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.03%)</title><rect x="927.5" y="1091.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.03%)</title><rect x="927.9" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="930.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="927.9" y="1091.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="927.9" y="1075.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="930.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (7 samples, 0.24%)</title><rect x="928.3" y="1107.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="931.3" y="1118.0"></text>
</g>
<g>
<title>__GI___setsockopt (7 samples, 0.24%)</title><rect x="928.3" y="1091.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="931.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="928.3" y="1075.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="931.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="928.3" y="1059.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="931.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="928.3" y="1043.0" width="2.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="931.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="928.3" y="1027.0" width="2.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="931.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="928.3" y="1011.0" width="2.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="931.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="929.1" y="995.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="932.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="929.5" y="979.0" width="1.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="932.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="930.3" y="963.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="933.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="930.7" y="947.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="933.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="930.7" y="931.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="933.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="930.7" y="915.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="933.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (52 samples, 1.81%)</title><rect x="931.2" y="1107.0" width="21.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="934.2" y="1118.0">o..</text>
</g>
<g>
<title>__send (52 samples, 1.81%)</title><rect x="931.2" y="1091.0" width="21.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="934.2" y="1102.0">_..</text>
</g>
<g>
<title>[unknown] (52 samples, 1.81%)</title><rect x="931.2" y="1075.0" width="21.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="934.2" y="1086.0">[..</text>
</g>
<g>
<title>[unknown] (52 samples, 1.81%)</title><rect x="931.2" y="1059.0" width="21.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="934.2" y="1070.0">[..</text>
</g>
<g>
<title>[unknown] (52 samples, 1.81%)</title><rect x="931.2" y="1043.0" width="21.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="934.2" y="1054.0">[..</text>
</g>
<g>
<title>[unknown] (51 samples, 1.78%)</title><rect x="931.6" y="1027.0" width="20.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="934.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.78%)</title><rect x="931.6" y="1011.0" width="20.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="934.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.78%)</title><rect x="931.6" y="995.0" width="20.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="934.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.78%)</title><rect x="931.6" y="979.0" width="20.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="934.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.78%)</title><rect x="931.6" y="963.0" width="20.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="934.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.78%)</title><rect x="931.6" y="947.0" width="20.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="934.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.78%)</title><rect x="931.6" y="931.0" width="20.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="934.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.64%)</title><rect x="933.2" y="915.0" width="19.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="936.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 1.43%)</title><rect x="935.7" y="899.0" width="16.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="938.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.39%)</title><rect x="936.1" y="883.0" width="16.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="939.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.39%)</title><rect x="936.1" y="867.0" width="16.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="939.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 1.39%)</title><rect x="936.1" y="851.0" width="16.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="939.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="936.5" y="835.0" width="16.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="939.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="936.5" y="819.0" width="16.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="939.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 1.36%)</title><rect x="936.5" y="803.0" width="16.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="939.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 1.29%)</title><rect x="937.3" y="787.0" width="15.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="940.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="938.1" y="771.0" width="14.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="941.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="939.8" y="755.0" width="12.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="942.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.04%)</title><rect x="940.2" y="739.0" width="12.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="943.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="940.6" y="723.0" width="11.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="943.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="940.6" y="707.0" width="11.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="943.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="941.0" y="691.0" width="11.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="944.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.94%)</title><rect x="941.4" y="675.0" width="11.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="944.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.94%)</title><rect x="941.4" y="659.0" width="11.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="944.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="942.2" y="643.0" width="10.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="945.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="942.2" y="627.0" width="10.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="945.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="942.2" y="611.0" width="10.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="945.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="942.2" y="595.0" width="10.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="945.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.84%)</title><rect x="942.7" y="579.0" width="9.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="945.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.73%)</title><rect x="943.9" y="563.0" width="8.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="946.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.70%)</title><rect x="944.3" y="547.0" width="8.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="947.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.70%)</title><rect x="944.3" y="531.0" width="8.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="947.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.56%)</title><rect x="945.9" y="515.0" width="6.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="948.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="948.0" y="499.0" width="4.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="951.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="948.0" y="483.0" width="4.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="951.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="948.0" y="467.0" width="4.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="951.0" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (13 samples, 0.45%)</title><rect x="952.5" y="1219.0" width="5.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="955.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (13 samples, 0.45%)</title><rect x="952.5" y="1203.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (13 samples, 0.45%)</title><rect x="952.5" y="1187.0" width="5.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="955.5" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (13 samples, 0.45%)</title><rect x="952.5" y="1171.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="955.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.45%)</title><rect x="952.5" y="1155.0" width="5.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="955.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.38%)</title><rect x="952.5" y="1139.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="955.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.38%)</title><rect x="952.5" y="1123.0" width="4.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="955.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.38%)</title><rect x="952.5" y="1107.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="955.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.38%)</title><rect x="952.5" y="1091.0" width="4.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="955.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.38%)</title><rect x="952.5" y="1075.0" width="4.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="955.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.38%)</title><rect x="952.5" y="1059.0" width="4.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="955.5" y="1070.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="952.5" y="1043.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="955.5" y="1054.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="952.9" y="1043.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="955.9" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.03%)</title><rect x="953.3" y="1043.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="956.3" y="1054.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="953.3" y="1027.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="956.3" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.28%)</title><rect x="953.8" y="1043.0" width="3.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="956.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="953.8" y="1027.0" width="3.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="956.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="953.8" y="1011.0" width="3.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="956.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="954.2" y="995.0" width="2.8" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="957.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="954.2" y="979.0" width="2.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="957.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="954.2" y="963.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="957.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="955.0" y="947.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="958.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="955.4" y="931.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="958.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="955.4" y="915.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="958.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.07%)</title><rect x="957.0" y="1139.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="960.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.07%)</title><rect x="957.0" y="1123.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="960.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.07%)</title><rect x="957.0" y="1107.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.07%)</title><rect x="957.0" y="1091.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="960.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (2 samples, 0.07%)</title><rect x="957.0" y="1075.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="960.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.07%)</title><rect x="957.0" y="1059.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="960.0" y="1070.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.07%)</title><rect x="957.0" y="1043.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="960.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="957.5" y="1027.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="960.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="957.5" y="1011.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="960.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="957.5" y="995.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="960.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="957.5" y="979.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="960.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="957.5" y="963.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="960.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="957.5" y="947.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="960.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="957.5" y="931.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="960.5" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (1 samples, 0.03%)</title><rect x="957.9" y="1219.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.9" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (1 samples, 0.03%)</title><rect x="957.9" y="1203.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="960.9" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (1 samples, 0.03%)</title><rect x="957.9" y="1187.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="960.9" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1 samples, 0.03%)</title><rect x="957.9" y="1171.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="960.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (1 samples, 0.03%)</title><rect x="957.9" y="1155.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="960.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.03%)</title><rect x="958.3" y="1235.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="961.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="958.3" y="1219.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="961.3" y="1230.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.03%)</title><rect x="958.3" y="1203.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="961.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (23 samples, 0.80%)</title><rect x="958.7" y="1235.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="961.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (23 samples, 0.80%)</title><rect x="958.7" y="1219.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="961.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (15 samples, 0.52%)</title><rect x="959.1" y="1203.0" width="6.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="962.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.03%)</title><rect x="959.1" y="1187.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="962.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.03%)</title><rect x="959.1" y="1171.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="962.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.03%)</title><rect x="959.1" y="1155.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.49%)</title><rect x="959.5" y="1187.0" width="5.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 0.49%)</title><rect x="959.5" y="1171.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="962.5" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.17%)</title><rect x="959.9" y="1155.0" width="2.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="962.9" y="1166.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.07%)</title><rect x="959.9" y="1139.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="962.9" y="1150.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.03%)</title><rect x="960.7" y="1139.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="963.7" y="1150.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.03%)</title><rect x="961.1" y="1139.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="964.1" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.03%)</title><rect x="961.6" y="1139.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="964.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="962.0" y="1155.0" width="3.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="965.0" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.28%)</title><rect x="962.0" y="1139.0" width="3.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="965.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="962.4" y="1123.0" width="2.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="965.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="962.4" y="1107.0" width="2.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="965.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="962.4" y="1091.0" width="2.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="965.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="962.4" y="1075.0" width="2.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="965.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="962.8" y="1059.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="965.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="963.2" y="1043.0" width="2.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="966.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="963.2" y="1027.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="966.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="963.6" y="1011.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="966.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="963.6" y="995.0" width="1.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="966.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.07%)</title><rect x="965.3" y="1203.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.07%)</title><rect x="965.3" y="1187.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="968.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.07%)</title><rect x="965.3" y="1171.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="968.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (1 samples, 0.03%)</title><rect x="965.3" y="1155.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="968.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="965.7" y="1155.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.17%)</title><rect x="966.1" y="1203.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.17%)</title><rect x="966.1" y="1187.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="969.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.17%)</title><rect x="966.1" y="1171.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.17%)</title><rect x="966.1" y="1155.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.17%)</title><rect x="966.1" y="1139.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.1" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.17%)</title><rect x="966.1" y="1123.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="969.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="966.1" y="1107.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="969.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="966.1" y="1091.0" width="2.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="969.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="966.1" y="1075.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="969.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="966.1" y="1059.0" width="2.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="969.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="966.1" y="1043.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="969.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="966.9" y="1027.0" width="1.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="969.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="966.9" y="1011.0" width="1.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="969.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.07%)</title><rect x="967.3" y="995.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="970.3" y="1006.0"></text>
</g>
<g>
<title>[ProxyWorker-4 tid=31427] (147 samples, 5.12%)</title><rect x="968.1" y="1299.0" width="60.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="971.1" y="1310.0">[Proxy..</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (2 samples, 0.07%)</title><rect x="968.1" y="1283.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="971.1" y="1294.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.07%)</title><rect x="968.1" y="1267.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="971.1" y="1278.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="968.5" y="1251.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="971.5" y="1262.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="968.5" y="1235.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="971.5" y="1246.0"></text>
</g>
<g>
<title>__memset_erms (1 samples, 0.03%)</title><rect x="968.5" y="1219.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="971.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (145 samples, 5.05%)</title><rect x="969.0" y="1283.0" width="59.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="972.0" y="1294.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (145 samples, 5.05%)</title><rect x="969.0" y="1267.0" width="59.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="972.0" y="1278.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (145 samples, 5.05%)</title><rect x="969.0" y="1251.0" width="59.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="972.0" y="1262.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (116 samples, 4.04%)</title><rect x="969.0" y="1235.0" width="47.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="972.0" y="1246.0">java..</text>
</g>
<g>
<title>java/util/concurrent/Executors$RunnableAdapter.call (109 samples, 3.80%)</title><rect x="969.0" y="1219.0" width="44.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="972.0" y="1230.0">java..</text>
</g>
<g>
<title>java/util/concurrent/FutureTask.run (109 samples, 3.80%)</title><rect x="969.0" y="1203.0" width="44.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="972.0" y="1214.0">java..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$72/2116297974.call (109 samples, 3.80%)</title><rect x="969.0" y="1187.0" width="44.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="972.0" y="1198.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$getResponsesFromRelicas$0 (109 samples, 3.80%)</title><rect x="969.0" y="1171.0" width="44.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.0" y="1182.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.proxy (109 samples, 3.80%)</title><rect x="969.0" y="1155.0" width="44.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="972.0" y="1166.0">ru/m..</text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="969.0" y="1139.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="972.0" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="969.0" y="1123.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="972.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (107 samples, 3.73%)</title><rect x="969.4" y="1139.0" width="43.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="972.4" y="1150.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (107 samples, 3.73%)</title><rect x="969.4" y="1123.0" width="43.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="972.4" y="1134.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (24 samples, 0.84%)</title><rect x="969.4" y="1107.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="972.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (24 samples, 0.84%)</title><rect x="969.4" y="1091.0" width="9.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="972.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="969.8" y="1075.0" width="1.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="972.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="969.8" y="1059.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="972.8" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.07%)</title><rect x="969.8" y="1043.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="972.8" y="1054.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="970.2" y="1027.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="973.2" y="1038.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="970.6" y="1043.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="973.6" y="1054.0"></text>
</g>
<g>
<title>__GI___recv (19 samples, 0.66%)</title><rect x="971.0" y="1075.0" width="7.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="974.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="971.0" y="1059.0" width="7.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="974.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="971.0" y="1043.0" width="7.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="974.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="971.0" y="1027.0" width="7.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="974.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="971.0" y="1011.0" width="7.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="974.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="971.0" y="995.0" width="7.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="974.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.66%)</title><rect x="971.0" y="979.0" width="7.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="974.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="971.8" y="963.0" width="7.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="974.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.45%)</title><rect x="973.5" y="947.0" width="5.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="976.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.42%)</title><rect x="973.9" y="931.0" width="4.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="976.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.38%)</title><rect x="974.3" y="915.0" width="4.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="977.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="976.4" y="899.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="979.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="976.4" y="883.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="979.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="977.2" y="867.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="980.2" y="878.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="978.8" y="1075.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="981.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (8 samples, 0.28%)</title><rect x="979.2" y="1107.0" width="3.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.10%)</title><rect x="979.2" y="1091.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="979.2" y="1075.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="979.2" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="982.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.07%)</title><rect x="979.6" y="1075.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="982.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="979.6" y="1059.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="982.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.03%)</title><rect x="979.6" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="982.6" y="1054.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="980.0" y="1059.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="983.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (4 samples, 0.14%)</title><rect x="980.5" y="1091.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="983.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.14%)</title><rect x="980.5" y="1075.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="983.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.14%)</title><rect x="980.5" y="1059.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="983.5" y="1070.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.03%)</title><rect x="981.7" y="1043.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="984.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.getStatus (1 samples, 0.03%)</title><rect x="982.1" y="1091.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="985.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.toBytes (3 samples, 0.10%)</title><rect x="982.5" y="1107.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="985.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="982.5" y="1091.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="985.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.03%)</title><rect x="982.5" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="985.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.07%)</title><rect x="982.9" y="1091.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="985.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.07%)</title><rect x="982.9" y="1075.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="985.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="983.3" y="1059.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="986.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (7 samples, 0.24%)</title><rect x="983.7" y="1107.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="986.7" y="1118.0"></text>
</g>
<g>
<title>__GI___setsockopt (6 samples, 0.21%)</title><rect x="984.2" y="1091.0" width="2.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="987.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="984.2" y="1075.0" width="2.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="987.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="984.2" y="1059.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="987.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="984.2" y="1043.0" width="2.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="987.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="984.2" y="1027.0" width="2.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="987.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="984.6" y="1011.0" width="2.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="987.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="985.4" y="995.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="988.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="985.4" y="979.0" width="1.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="988.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="985.4" y="963.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="988.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="986.2" y="947.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="989.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (65 samples, 2.26%)</title><rect x="986.6" y="1107.0" width="26.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="989.6" y="1118.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_writeFully (1 samples, 0.03%)</title><rect x="986.6" y="1091.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="989.6" y="1102.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="986.6" y="1075.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="989.6" y="1086.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="987.0" y="1091.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="990.0" y="1102.0"></text>
</g>
<g>
<title>__send (63 samples, 2.19%)</title><rect x="987.4" y="1091.0" width="25.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="990.4" y="1102.0">_..</text>
</g>
<g>
<title>[unknown] (63 samples, 2.19%)</title><rect x="987.4" y="1075.0" width="25.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="990.4" y="1086.0">[..</text>
</g>
<g>
<title>[unknown] (63 samples, 2.19%)</title><rect x="987.4" y="1059.0" width="25.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="990.4" y="1070.0">[..</text>
</g>
<g>
<title>[unknown] (62 samples, 2.16%)</title><rect x="987.9" y="1043.0" width="25.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="990.9" y="1054.0">[..</text>
</g>
<g>
<title>[unknown] (62 samples, 2.16%)</title><rect x="987.9" y="1027.0" width="25.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="990.9" y="1038.0">[..</text>
</g>
<g>
<title>[unknown] (62 samples, 2.16%)</title><rect x="987.9" y="1011.0" width="25.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="990.9" y="1022.0">[..</text>
</g>
<g>
<title>[unknown] (62 samples, 2.16%)</title><rect x="987.9" y="995.0" width="25.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="990.9" y="1006.0">[..</text>
</g>
<g>
<title>[unknown] (61 samples, 2.12%)</title><rect x="988.3" y="979.0" width="25.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="991.3" y="990.0">[..</text>
</g>
<g>
<title>[unknown] (60 samples, 2.09%)</title><rect x="988.7" y="963.0" width="24.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="991.7" y="974.0">[..</text>
</g>
<g>
<title>[unknown] (58 samples, 2.02%)</title><rect x="989.5" y="947.0" width="23.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="992.5" y="958.0">[..</text>
</g>
<g>
<title>[unknown] (56 samples, 1.95%)</title><rect x="990.3" y="931.0" width="23.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="993.3" y="942.0">[..</text>
</g>
<g>
<title>[unknown] (54 samples, 1.88%)</title><rect x="991.1" y="915.0" width="22.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="994.1" y="926.0">[..</text>
</g>
<g>
<title>[unknown] (51 samples, 1.78%)</title><rect x="992.4" y="899.0" width="20.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="995.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 1.71%)</title><rect x="993.2" y="883.0" width="20.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="996.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 1.71%)</title><rect x="993.2" y="867.0" width="20.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="996.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 1.71%)</title><rect x="993.2" y="851.0" width="20.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="996.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.64%)</title><rect x="994.0" y="835.0" width="19.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="997.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.64%)</title><rect x="994.0" y="819.0" width="19.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="997.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 1.57%)</title><rect x="994.8" y="803.0" width="18.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="997.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 1.43%)</title><rect x="996.5" y="787.0" width="16.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="999.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 1.32%)</title><rect x="997.7" y="771.0" width="15.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1000.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.22%)</title><rect x="998.9" y="755.0" width="14.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1001.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.11%)</title><rect x="1000.2" y="739.0" width="13.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1003.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 1.11%)</title><rect x="1000.2" y="723.0" width="13.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1003.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="1000.6" y="707.0" width="12.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1003.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.08%)</title><rect x="1000.6" y="691.0" width="12.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1003.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 1.04%)</title><rect x="1001.0" y="675.0" width="12.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1004.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="1001.4" y="659.0" width="11.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1004.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 1.01%)</title><rect x="1001.4" y="643.0" width="11.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1004.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="1001.8" y="627.0" width="11.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1004.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="1001.8" y="611.0" width="11.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1004.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="1001.8" y="595.0" width="11.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1004.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.97%)</title><rect x="1001.8" y="579.0" width="11.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1004.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.87%)</title><rect x="1003.1" y="563.0" width="10.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1006.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.80%)</title><rect x="1003.9" y="547.0" width="9.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1006.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.70%)</title><rect x="1005.1" y="531.0" width="8.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1008.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.59%)</title><rect x="1006.3" y="515.0" width="7.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1009.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="1007.6" y="499.0" width="5.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1010.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="1007.6" y="483.0" width="5.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1010.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.49%)</title><rect x="1007.6" y="467.0" width="5.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1010.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1012.9" y="451.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1015.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1012.9" y="435.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1015.9" y="446.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1012.9" y="419.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1015.9" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="1013.3" y="1139.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1016.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (1 samples, 0.03%)</title><rect x="1013.3" y="1123.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1016.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.set (7 samples, 0.24%)</title><rect x="1013.7" y="1219.0" width="2.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1016.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.finishCompletion (7 samples, 0.24%)</title><rect x="1013.7" y="1203.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ExecutorCompletionService$QueueingFuture.done (7 samples, 0.24%)</title><rect x="1013.7" y="1187.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1016.7" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.add (7 samples, 0.24%)</title><rect x="1013.7" y="1171.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1016.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.24%)</title><rect x="1013.7" y="1155.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1016.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.17%)</title><rect x="1013.7" y="1139.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1016.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.17%)</title><rect x="1013.7" y="1123.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1016.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.17%)</title><rect x="1013.7" y="1107.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1016.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.17%)</title><rect x="1013.7" y="1091.0" width="2.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1016.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.17%)</title><rect x="1013.7" y="1075.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1016.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.17%)</title><rect x="1013.7" y="1059.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1016.7" y="1070.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.17%)</title><rect x="1013.7" y="1043.0" width="2.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1016.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="1013.7" y="1027.0" width="2.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1016.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="1013.7" y="1011.0" width="2.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1016.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="1013.7" y="995.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1016.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="1013.7" y="979.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1016.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="1013.7" y="963.0" width="2.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1016.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.17%)</title><rect x="1013.7" y="947.0" width="2.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1016.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="1014.2" y="931.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1017.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="1014.2" y="915.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1017.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1015.4" y="899.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1018.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1015.4" y="883.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1018.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1015.4" y="867.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1018.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1015.4" y="851.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1018.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1015.4" y="835.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1018.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1015.4" y="819.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1018.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1015.4" y="803.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1018.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.07%)</title><rect x="1015.8" y="1139.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.07%)</title><rect x="1015.8" y="1123.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1018.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (2 samples, 0.07%)</title><rect x="1015.8" y="1107.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1018.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.03%)</title><rect x="1016.2" y="1091.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1019.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.03%)</title><rect x="1016.2" y="1075.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1019.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.03%)</title><rect x="1016.2" y="1059.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1019.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1016.2" y="1043.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1019.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1016.2" y="1027.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1019.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1016.2" y="1011.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1019.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1016.2" y="995.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1019.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1016.2" y="979.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1019.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1016.2" y="963.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1019.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1016.2" y="947.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1019.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (29 samples, 1.01%)</title><rect x="1016.6" y="1235.0" width="11.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1019.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (26 samples, 0.91%)</title><rect x="1017.8" y="1219.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1020.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (14 samples, 0.49%)</title><rect x="1018.3" y="1203.0" width="5.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1021.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.07%)</title><rect x="1018.3" y="1187.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1021.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.07%)</title><rect x="1018.3" y="1171.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1021.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.07%)</title><rect x="1018.3" y="1155.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1021.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.03%)</title><rect x="1018.3" y="1139.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1021.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.03%)</title><rect x="1018.3" y="1123.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1021.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="1018.3" y="1107.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1021.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.03%)</title><rect x="1018.7" y="1139.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1021.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="1018.7" y="1123.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1021.7" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="1018.7" y="1107.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1021.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1018.7" y="1091.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1021.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1018.7" y="1075.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1021.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1018.7" y="1059.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1021.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1018.7" y="1043.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1021.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1018.7" y="1027.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1021.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1018.7" y="1011.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1021.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1018.7" y="995.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1021.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1018.7" y="979.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1021.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (12 samples, 0.42%)</title><rect x="1019.1" y="1187.0" width="4.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1022.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.42%)</title><rect x="1019.1" y="1171.0" width="4.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1022.1" y="1182.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.10%)</title><rect x="1019.1" y="1155.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1022.1" y="1166.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="1019.5" y="1139.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1022.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1019.5" y="1123.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1022.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1019.5" y="1107.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1022.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1019.5" y="1091.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1022.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1019.5" y="1075.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1022.5" y="1086.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="1019.9" y="1139.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1022.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.28%)</title><rect x="1020.3" y="1155.0" width="3.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1023.3" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (8 samples, 0.28%)</title><rect x="1020.3" y="1139.0" width="3.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1023.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="1020.7" y="1123.0" width="2.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1023.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="1020.7" y="1107.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1023.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="1020.7" y="1091.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1023.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="1020.7" y="1075.0" width="2.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1023.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="1020.7" y="1059.0" width="2.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1023.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="1020.7" y="1043.0" width="2.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1023.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="1020.7" y="1027.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1023.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.24%)</title><rect x="1020.7" y="1011.0" width="2.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1023.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.21%)</title><rect x="1021.1" y="995.0" width="2.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1024.1" y="1006.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="1023.6" y="1155.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1026.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.07%)</title><rect x="1024.0" y="1203.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1027.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.07%)</title><rect x="1024.0" y="1187.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1027.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.07%)</title><rect x="1024.0" y="1171.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1027.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.03%)</title><rect x="1024.4" y="1155.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1027.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.03%)</title><rect x="1024.4" y="1139.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1027.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.28%)</title><rect x="1024.8" y="1203.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1027.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.28%)</title><rect x="1024.8" y="1187.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1027.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.28%)</title><rect x="1024.8" y="1171.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.28%)</title><rect x="1024.8" y="1155.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1027.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.28%)</title><rect x="1024.8" y="1139.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1027.8" y="1150.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="1024.8" y="1123.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1027.8" y="1134.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.07%)</title><rect x="1025.2" y="1123.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1028.2" y="1134.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.07%)</title><rect x="1025.2" y="1107.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1028.2" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.17%)</title><rect x="1026.1" y="1123.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1029.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="1026.5" y="1107.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1029.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="1026.5" y="1091.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1029.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="1026.5" y="1075.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1029.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="1026.5" y="1059.0" width="1.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1029.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.14%)</title><rect x="1026.5" y="1043.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1029.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="1026.9" y="1027.0" width="1.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1029.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="1026.9" y="1011.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1029.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.10%)</title><rect x="1026.9" y="995.0" width="1.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1029.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="1028.1" y="1203.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1031.1" y="1214.0"></text>
</g>
<g>
<title>[tid=31347] (6 samples, 0.21%)</title><rect x="1028.5" y="1299.0" width="2.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1031.5" y="1310.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.21%)</title><rect x="1028.5" y="1283.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1031.5" y="1294.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.21%)</title><rect x="1028.5" y="1267.0" width="2.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1031.5" y="1278.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.21%)</title><rect x="1028.5" y="1251.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1031.5" y="1262.0"></text>
</g>
<g>
<title>GangWorker::loop() (6 samples, 0.21%)</title><rect x="1028.5" y="1235.0" width="2.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1031.5" y="1246.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (6 samples, 0.21%)</title><rect x="1028.5" y="1219.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1031.5" y="1230.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.03%)</title><rect x="1028.5" y="1203.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1031.5" y="1214.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1028.5" y="1187.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1031.5" y="1198.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.14%)</title><rect x="1028.9" y="1203.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1031.9" y="1214.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.14%)</title><rect x="1028.9" y="1187.0" width="1.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1031.9" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.14%)</title><rect x="1028.9" y="1171.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1031.9" y="1182.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.14%)</title><rect x="1028.9" y="1155.0" width="1.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1031.9" y="1166.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.14%)</title><rect x="1028.9" y="1139.0" width="1.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1031.9" y="1150.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.10%)</title><rect x="1028.9" y="1123.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1031.9" y="1134.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.07%)</title><rect x="1029.4" y="1107.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1032.4" y="1118.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.07%)</title><rect x="1029.4" y="1091.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1032.4" y="1102.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (1 samples, 0.03%)</title><rect x="1030.2" y="1123.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1033.2" y="1134.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="1030.2" y="1107.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1033.2" y="1118.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="1030.2" y="1091.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1033.2" y="1102.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="1030.6" y="1203.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1033.6" y="1214.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="1030.6" y="1187.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1033.6" y="1198.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.03%)</title><rect x="1030.6" y="1171.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1033.6" y="1182.0"></text>
</g>
<g>
<title>[tid=31352] (3 samples, 0.10%)</title><rect x="1031.0" y="1299.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1034.0" y="1310.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.10%)</title><rect x="1031.0" y="1283.0" width="1.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1034.0" y="1294.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.10%)</title><rect x="1031.0" y="1267.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1034.0" y="1278.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.10%)</title><rect x="1031.0" y="1251.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1034.0" y="1262.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.10%)</title><rect x="1031.0" y="1235.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1034.0" y="1246.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.10%)</title><rect x="1031.0" y="1219.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1034.0" y="1230.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (2 samples, 0.07%)</title><rect x="1031.0" y="1203.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1034.0" y="1214.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.03%)</title><rect x="1031.4" y="1187.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1034.4" y="1198.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (1 samples, 0.03%)</title><rect x="1031.4" y="1171.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1034.4" y="1182.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.03%)</title><rect x="1031.4" y="1155.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1034.4" y="1166.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.03%)</title><rect x="1031.4" y="1139.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1034.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1031.4" y="1123.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1034.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1031.4" y="1107.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1034.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1031.4" y="1091.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1034.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1031.4" y="1075.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1034.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1031.4" y="1059.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1034.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1031.4" y="1043.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1034.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1031.4" y="1027.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1034.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1031.4" y="1011.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1034.4" y="1022.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (1 samples, 0.03%)</title><rect x="1031.8" y="1203.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1034.8" y="1214.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (1 samples, 0.03%)</title><rect x="1031.8" y="1187.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1034.8" y="1198.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (1 samples, 0.03%)</title><rect x="1031.8" y="1171.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1034.8" y="1182.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (1 samples, 0.03%)</title><rect x="1031.8" y="1155.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1034.8" y="1166.0"></text>
</g>
<g>
<title>G1CollectedHeap::gc_epilogue(bool) (1 samples, 0.03%)</title><rect x="1031.8" y="1139.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1034.8" y="1150.0"></text>
</g>
<g>
<title>MemoryService::track_memory_usage() (1 samples, 0.03%)</title><rect x="1031.8" y="1123.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1034.8" y="1134.0"></text>
</g>
<g>
<title>MemoryPool::record_peak_memory_usage() (1 samples, 0.03%)</title><rect x="1031.8" y="1107.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1034.8" y="1118.0"></text>
</g>
<g>
<title>[tid=31356] (354 samples, 12.33%)</title><rect x="1032.2" y="1299.0" width="145.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1035.2" y="1310.0">[tid=31356]</text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="1032.2" y="1283.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1035.2" y="1294.0"></text>
</g>
<g>
<title>start_thread (352 samples, 12.26%)</title><rect x="1032.6" y="1283.0" width="144.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1035.6" y="1294.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (352 samples, 12.26%)</title><rect x="1032.6" y="1267.0" width="144.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1035.6" y="1278.0">thread_native_entr..</text>
</g>
<g>
<title>Thread::call_run() (352 samples, 12.26%)</title><rect x="1032.6" y="1251.0" width="144.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1035.6" y="1262.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (352 samples, 12.26%)</title><rect x="1032.6" y="1235.0" width="144.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1035.6" y="1246.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (352 samples, 12.26%)</title><rect x="1032.6" y="1219.0" width="144.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1035.6" y="1230.0">JavaThread::thread..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (352 samples, 12.26%)</title><rect x="1032.6" y="1203.0" width="144.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1035.6" y="1214.0">CompileBroker::com..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (351 samples, 12.22%)</title><rect x="1032.6" y="1187.0" width="144.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1035.6" y="1198.0">CompileBroker::inv..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (350 samples, 12.19%)</title><rect x="1032.6" y="1171.0" width="143.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1035.6" y="1182.0">C2Compiler::compil..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (350 samples, 12.19%)</title><rect x="1032.6" y="1155.0" width="143.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1035.6" y="1166.0">Compile::Compile(c..</text>
</g>
<g>
<title>Compile::Code_Gen() (166 samples, 5.78%)</title><rect x="1032.6" y="1139.0" width="68.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1035.6" y="1150.0">Compile..</text>
</g>
<g>
<title>Compile::Output() (7 samples, 0.24%)</title><rect x="1032.6" y="1123.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1035.6" y="1134.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (3 samples, 0.10%)</title><rect x="1032.6" y="1107.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1035.6" y="1118.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.03%)</title><rect x="1033.5" y="1091.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1036.5" y="1102.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (1 samples, 0.03%)</title><rect x="1033.5" y="1075.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1036.5" y="1086.0"></text>
</g>
<g>
<title>CompressedWriteStream::write_int_mb(int) (1 samples, 0.03%)</title><rect x="1033.5" y="1059.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1036.5" y="1070.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (3 samples, 0.10%)</title><rect x="1033.9" y="1107.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1036.9" y="1118.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (3 samples, 0.10%)</title><rect x="1033.9" y="1091.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1036.9" y="1102.0"></text>
</g>
<g>
<title>rFlagsRegOper::clone() const (1 samples, 0.03%)</title><rect x="1034.7" y="1075.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1037.7" y="1086.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="1035.1" y="1107.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1038.1" y="1118.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (6 samples, 0.21%)</title><rect x="1035.5" y="1123.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1038.5" y="1134.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (1 samples, 0.03%)</title><rect x="1035.5" y="1107.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1038.5" y="1118.0"></text>
</g>
<g>
<title>MachSpillCopyNode::bottom_type() const (1 samples, 0.03%)</title><rect x="1035.5" y="1091.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1038.5" y="1102.0"></text>
</g>
<g>
<title>HandlerImpl::emit_deopt_handler(CodeBuffer&amp;) (1 samples, 0.03%)</title><rect x="1035.9" y="1107.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1038.9" y="1118.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (4 samples, 0.14%)</title><rect x="1036.3" y="1107.0" width="1.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1039.3" y="1118.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (4 samples, 0.14%)</title><rect x="1036.3" y="1091.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1039.3" y="1102.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (3 samples, 0.10%)</title><rect x="1036.3" y="1075.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1039.3" y="1086.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.03%)</title><rect x="1037.6" y="1075.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1040.6" y="1086.0"></text>
</g>
<g>
<title>Matcher::match() (14 samples, 0.49%)</title><rect x="1038.0" y="1123.0" width="5.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1041.0" y="1134.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (2 samples, 0.07%)</title><rect x="1038.0" y="1107.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1041.0" y="1118.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (10 samples, 0.35%)</title><rect x="1038.8" y="1107.0" width="4.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1041.8" y="1118.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (2 samples, 0.07%)</title><rect x="1039.2" y="1091.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1042.2" y="1102.0"></text>
</g>
<g>
<title>CallNode::match(ProjNode const*, Matcher const*) (1 samples, 0.03%)</title><rect x="1040.0" y="1091.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1043.0" y="1102.0"></text>
</g>
<g>
<title>Node::Node(Node*) (1 samples, 0.03%)</title><rect x="1040.0" y="1075.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1043.0" y="1086.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (6 samples, 0.21%)</title><rect x="1040.4" y="1091.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1043.4" y="1102.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (3 samples, 0.10%)</title><rect x="1040.4" y="1075.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1043.4" y="1086.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.03%)</title><rect x="1040.9" y="1059.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1043.9" y="1070.0"></text>
</g>
<g>
<title>TypeLong::singleton() const (1 samples, 0.03%)</title><rect x="1041.3" y="1059.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1044.3" y="1070.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (3 samples, 0.10%)</title><rect x="1041.7" y="1075.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1044.7" y="1086.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.07%)</title><rect x="1041.7" y="1059.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1044.7" y="1070.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.07%)</title><rect x="1041.7" y="1043.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1044.7" y="1054.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.07%)</title><rect x="1041.7" y="1027.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1044.7" y="1038.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.03%)</title><rect x="1042.1" y="1011.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1045.1" y="1022.0"></text>
</g>
<g>
<title>negL_rRegNode::Expand(State*, Node_List&amp;, Node*) (1 samples, 0.03%)</title><rect x="1042.5" y="1059.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1045.5" y="1070.0"></text>
</g>
<g>
<title>Node::Node(Node*) (1 samples, 0.03%)</title><rect x="1042.5" y="1043.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1045.5" y="1054.0"></text>
</g>
<g>
<title>MultiNode::match(ProjNode const*, Matcher const*) (1 samples, 0.03%)</title><rect x="1042.9" y="1107.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1045.9" y="1118.0"></text>
</g>
<g>
<title>ProjNode::Opcode() const (1 samples, 0.03%)</title><rect x="1043.3" y="1107.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1046.3" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.03%)</title><rect x="1043.7" y="1123.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1046.7" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.03%)</title><rect x="1043.7" y="1107.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1046.7" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (18 samples, 0.63%)</title><rect x="1044.1" y="1123.0" width="7.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1047.1" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (18 samples, 0.63%)</title><rect x="1044.1" y="1107.0" width="7.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1047.1" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1044.1" y="1091.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1047.1" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::replace_block_proj_ctrl(Node*) (1 samples, 0.03%)</title><rect x="1044.1" y="1075.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1047.1" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (4 samples, 0.14%)</title><rect x="1044.6" y="1091.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1047.6" y="1102.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (1 samples, 0.03%)</title><rect x="1044.6" y="1075.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1047.6" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (3 samples, 0.10%)</title><rect x="1045.0" y="1075.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1048.0" y="1086.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="1045.8" y="1059.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1048.8" y="1070.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="1045.8" y="1043.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1048.8" y="1054.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (4 samples, 0.14%)</title><rect x="1046.2" y="1091.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1049.2" y="1102.0"></text>
</g>
<g>
<title>MachProjNode::bottom_type() const (1 samples, 0.03%)</title><rect x="1046.6" y="1075.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1049.6" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.03%)</title><rect x="1047.0" y="1075.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1050.0" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (1 samples, 0.03%)</title><rect x="1047.4" y="1075.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1050.4" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.07%)</title><rect x="1047.8" y="1091.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.8" y="1102.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.03%)</title><rect x="1048.3" y="1075.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1051.3" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (2 samples, 0.07%)</title><rect x="1048.7" y="1091.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1051.7" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1049.1" y="1075.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1052.1" y="1086.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.03%)</title><rect x="1049.5" y="1091.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1052.5" y="1102.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.07%)</title><rect x="1049.9" y="1091.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1052.9" y="1102.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.03%)</title><rect x="1050.3" y="1075.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1053.3" y="1086.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int, Arena*) (1 samples, 0.03%)</title><rect x="1050.3" y="1059.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1053.3" y="1070.0"></text>
</g>
<g>
<title>__memset_erms (1 samples, 0.03%)</title><rect x="1050.7" y="1091.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1053.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1050.7" y="1075.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1053.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1050.7" y="1059.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1053.7" y="1070.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (1 samples, 0.03%)</title><rect x="1051.1" y="1091.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1054.1" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::fixup_flow() (1 samples, 0.03%)</title><rect x="1051.5" y="1123.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1054.5" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (119 samples, 4.14%)</title><rect x="1051.9" y="1123.0" width="48.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1054.9" y="1134.0">Phas..</text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.03%)</title><rect x="1051.9" y="1107.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1054.9" y="1118.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.03%)</title><rect x="1052.4" y="1107.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1055.4" y="1118.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (8 samples, 0.28%)</title><rect x="1052.8" y="1107.0" width="3.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1055.8" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (9 samples, 0.31%)</title><rect x="1056.1" y="1107.0" width="3.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1059.1" y="1118.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.07%)</title><rect x="1056.9" y="1091.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1059.9" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (1 samples, 0.03%)</title><rect x="1057.7" y="1091.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1060.7" y="1102.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (3 samples, 0.10%)</title><rect x="1058.1" y="1091.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1061.1" y="1102.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1058.9" y="1075.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1061.9" y="1086.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.03%)</title><rect x="1059.3" y="1091.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1062.3" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.10%)</title><rect x="1059.8" y="1107.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1062.8" y="1118.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1059.8" y="1091.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1062.8" y="1102.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (2 samples, 0.07%)</title><rect x="1060.2" y="1091.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1063.2" y="1102.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1060.6" y="1075.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1063.6" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (11 samples, 0.38%)</title><rect x="1061.0" y="1107.0" width="4.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1064.0" y="1118.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.03%)</title><rect x="1064.7" y="1091.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1067.7" y="1102.0"></text>
</g>
<g>
<title>rRegPOper::type() const (1 samples, 0.03%)</title><rect x="1064.7" y="1075.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1067.7" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.03%)</title><rect x="1065.1" y="1091.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1068.1" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1065.1" y="1075.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1068.1" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (26 samples, 0.91%)</title><rect x="1065.5" y="1107.0" width="10.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1068.5" y="1118.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.03%)</title><rect x="1066.7" y="1091.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1069.7" y="1102.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.03%)</title><rect x="1067.2" y="1091.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1070.2" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (6 samples, 0.21%)</title><rect x="1067.6" y="1091.0" width="2.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1070.6" y="1102.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.03%)</title><rect x="1068.8" y="1075.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1071.8" y="1086.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (2 samples, 0.07%)</title><rect x="1069.2" y="1075.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1072.2" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (11 samples, 0.38%)</title><rect x="1070.0" y="1091.0" width="4.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1073.0" y="1102.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.03%)</title><rect x="1072.5" y="1075.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1075.5" y="1086.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.14%)</title><rect x="1072.9" y="1075.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1075.9" y="1086.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (3 samples, 0.10%)</title><rect x="1074.5" y="1091.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1077.5" y="1102.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (2 samples, 0.07%)</title><rect x="1075.0" y="1075.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1078.0" y="1086.0"></text>
</g>
<g>
<title>castP2XNode::rule() const (1 samples, 0.03%)</title><rect x="1075.8" y="1091.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1078.8" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (1 samples, 0.03%)</title><rect x="1076.2" y="1107.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1079.2" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (7 samples, 0.24%)</title><rect x="1076.6" y="1107.0" width="2.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1079.6" y="1118.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (1 samples, 0.03%)</title><rect x="1077.4" y="1091.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1080.4" y="1102.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.03%)</title><rect x="1077.8" y="1091.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1080.8" y="1102.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.03%)</title><rect x="1078.2" y="1091.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1081.2" y="1102.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (1 samples, 0.03%)</title><rect x="1078.7" y="1091.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1081.7" y="1102.0"></text>
</g>
<g>
<title>RegMask::is_vector(unsigned int) (1 samples, 0.03%)</title><rect x="1079.1" y="1091.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1082.1" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (2 samples, 0.07%)</title><rect x="1079.5" y="1107.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1082.5" y="1118.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.03%)</title><rect x="1079.9" y="1091.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1082.9" y="1102.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (6 samples, 0.21%)</title><rect x="1080.3" y="1107.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1083.3" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (15 samples, 0.52%)</title><rect x="1082.8" y="1107.0" width="6.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1085.8" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (6 samples, 0.21%)</title><rect x="1085.6" y="1091.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1088.6" y="1102.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (2 samples, 0.07%)</title><rect x="1088.1" y="1091.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1091.1" y="1102.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (7 samples, 0.24%)</title><rect x="1088.9" y="1107.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1091.9" y="1118.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (1 samples, 0.03%)</title><rect x="1088.9" y="1091.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1091.9" y="1102.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (2 samples, 0.07%)</title><rect x="1089.3" y="1091.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1092.3" y="1102.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (4 samples, 0.14%)</title><rect x="1090.2" y="1091.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1093.2" y="1102.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (1 samples, 0.03%)</title><rect x="1090.2" y="1075.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1093.2" y="1086.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::union_helper(Node*, Node*, unsigned int, unsigned int, Node*, Node*, Node*, Block*, unsigned int) (1 samples, 0.03%)</title><rect x="1090.6" y="1075.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1093.6" y="1086.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.03%)</title><rect x="1090.6" y="1059.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1093.6" y="1070.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (1 samples, 0.03%)</title><rect x="1091.0" y="1075.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1094.0" y="1086.0"></text>
</g>
<g>
<title>PhaseIFG::effective_degree(unsigned int) const (1 samples, 0.03%)</title><rect x="1091.4" y="1075.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1094.4" y="1086.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1091.4" y="1059.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1094.4" y="1070.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (2 samples, 0.07%)</title><rect x="1091.8" y="1107.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1094.8" y="1118.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1092.2" y="1091.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1095.2" y="1102.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (2 samples, 0.07%)</title><rect x="1092.6" y="1107.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1095.6" y="1118.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.07%)</title><rect x="1092.6" y="1091.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1095.6" y="1102.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (13 samples, 0.45%)</title><rect x="1093.4" y="1107.0" width="5.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1096.4" y="1118.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.03%)</title><rect x="1096.7" y="1091.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1099.7" y="1102.0"></text>
</g>
<g>
<title>IndexSet::free_block(unsigned int) (1 samples, 0.03%)</title><rect x="1097.1" y="1091.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1100.1" y="1102.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.10%)</title><rect x="1097.6" y="1091.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1100.6" y="1102.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int, Arena*) (1 samples, 0.03%)</title><rect x="1098.4" y="1075.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1101.4" y="1086.0"></text>
</g>
<g>
<title>RegMask::clear_to_sets(int) (1 samples, 0.03%)</title><rect x="1098.8" y="1107.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1101.8" y="1118.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.03%)</title><rect x="1099.2" y="1107.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1102.2" y="1118.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.03%)</title><rect x="1099.6" y="1107.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1102.6" y="1118.0"></text>
</g>
<g>
<title>__memset_erms (1 samples, 0.03%)</title><rect x="1100.0" y="1107.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1103.0" y="1118.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (1 samples, 0.03%)</title><rect x="1100.4" y="1107.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1103.4" y="1118.0"></text>
</g>
<g>
<title>Compile::Optimize() (149 samples, 5.19%)</title><rect x="1100.8" y="1139.0" width="61.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1103.8" y="1150.0">Compil..</text>
</g>
<g>
<title>CallNode::bottom_type() const (1 samples, 0.03%)</title><rect x="1100.8" y="1123.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1103.8" y="1134.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (3 samples, 0.10%)</title><rect x="1101.3" y="1123.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1104.3" y="1134.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (3 samples, 0.10%)</title><rect x="1101.3" y="1107.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1104.3" y="1118.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.252] (1 samples, 0.03%)</title><rect x="1102.1" y="1091.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1105.1" y="1102.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.03%)</title><rect x="1102.1" y="1075.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1105.1" y="1086.0"></text>
</g>
<g>
<title>Compile::copy_node_notes_to(Node*, Node*) (1 samples, 0.03%)</title><rect x="1102.1" y="1059.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1105.1" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (3 samples, 0.10%)</title><rect x="1102.5" y="1123.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1105.5" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (3 samples, 0.10%)</title><rect x="1102.5" y="1107.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1105.5" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::add_call_node(CallNode*) (1 samples, 0.03%)</title><rect x="1102.9" y="1091.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1105.9" y="1102.0"></text>
</g>
<g>
<title>ciKlass::is_subclass_of(ciKlass*) (1 samples, 0.03%)</title><rect x="1102.9" y="1075.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1105.9" y="1086.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.03%)</title><rect x="1102.9" y="1059.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1105.9" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1103.3" y="1091.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1106.3" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.03%)</title><rect x="1103.3" y="1075.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1106.3" y="1086.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (3 samples, 0.10%)</title><rect x="1103.7" y="1123.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1106.7" y="1134.0"></text>
</g>
<g>
<title>ConstraintCastNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1104.1" y="1107.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1107.1" y="1118.0"></text>
</g>
<g>
<title>TypeOopPtr::filter_helper(Type const*, bool) const (1 samples, 0.03%)</title><rect x="1104.1" y="1091.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1107.1" y="1102.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.03%)</title><rect x="1104.1" y="1075.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1107.1" y="1086.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.03%)</title><rect x="1104.1" y="1059.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1107.1" y="1070.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="1104.5" y="1107.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1107.5" y="1118.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.03%)</title><rect x="1104.5" y="1091.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1107.5" y="1102.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.03%)</title><rect x="1105.0" y="1123.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1108.0" y="1134.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.03%)</title><rect x="1105.0" y="1107.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1108.0" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (113 samples, 3.93%)</title><rect x="1105.4" y="1123.0" width="46.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1108.4" y="1134.0">Phas..</text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (4 samples, 0.14%)</title><rect x="1105.4" y="1107.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1108.4" y="1118.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.03%)</title><rect x="1106.6" y="1091.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1109.6" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (8 samples, 0.28%)</title><rect x="1107.0" y="1107.0" width="3.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1110.0" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (3 samples, 0.10%)</title><rect x="1109.1" y="1091.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1112.1" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.03%)</title><rect x="1109.9" y="1075.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1112.9" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (84 samples, 2.92%)</title><rect x="1110.3" y="1107.0" width="34.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1113.3" y="1118.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (76 samples, 2.65%)</title><rect x="1113.6" y="1091.0" width="31.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1116.6" y="1102.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.03%)</title><rect x="1114.8" y="1075.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1117.8" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (70 samples, 2.44%)</title><rect x="1115.2" y="1075.0" width="28.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1118.2" y="1086.0">Ph..</text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.03%)</title><rect x="1116.0" y="1059.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1119.0" y="1070.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="1116.0" y="1043.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1119.0" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (3 samples, 0.10%)</title><rect x="1116.5" y="1059.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1119.5" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (2 samples, 0.07%)</title><rect x="1116.9" y="1043.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1119.9" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.118] (1 samples, 0.03%)</title><rect x="1117.3" y="1027.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1120.3" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1117.7" y="1059.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1120.7" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.118] (1 samples, 0.03%)</title><rect x="1117.7" y="1043.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1120.7" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.03%)</title><rect x="1118.1" y="1059.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1121.1" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (62 samples, 2.16%)</title><rect x="1118.5" y="1059.0" width="25.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1121.5" y="1070.0">P..</text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.118] (1 samples, 0.03%)</title><rect x="1143.2" y="1043.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1143.6" y="1043.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1146.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1143.6" y="1027.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1146.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1143.6" y="1011.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1146.6" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.03%)</title><rect x="1144.0" y="1075.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.0" y="1086.0"></text>
</g>
<g>
<title>ProjNode::is_uncommon_trap_if_pattern(Deoptimization::DeoptReason) (1 samples, 0.03%)</title><rect x="1144.4" y="1075.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.4" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (6 samples, 0.21%)</title><rect x="1144.8" y="1107.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1147.8" y="1118.0"></text>
</g>
<g>
<title>IfFalseNode::Opcode() const (1 samples, 0.03%)</title><rect x="1146.9" y="1091.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.9" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (4 samples, 0.14%)</title><rect x="1147.3" y="1107.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1150.3" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (2 samples, 0.07%)</title><rect x="1148.1" y="1091.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1151.1" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.03%)</title><rect x="1148.5" y="1075.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1151.5" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.17%)</title><rect x="1148.9" y="1107.0" width="2.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1151.9" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.17%)</title><rect x="1148.9" y="1091.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1151.9" y="1102.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1148.9" y="1075.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.9" y="1086.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1149.3" y="1075.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.3" y="1086.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.03%)</title><rect x="1149.3" y="1059.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1152.3" y="1070.0"></text>
</g>
<g>
<title>AllocateNode::Ideal_allocation(Node*, PhaseTransform*, long&amp;) (1 samples, 0.03%)</title><rect x="1149.3" y="1043.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.3" y="1054.0"></text>
</g>
<g>
<title>AddPNode::Ideal_base_and_offset(Node*, PhaseTransform*, long&amp;) (1 samples, 0.03%)</title><rect x="1149.3" y="1027.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1152.3" y="1038.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (2 samples, 0.07%)</title><rect x="1149.7" y="1075.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.7" y="1086.0"></text>
</g>
<g>
<title>NodeHash::hash_delete(Node const*) (1 samples, 0.03%)</title><rect x="1149.7" y="1059.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1152.7" y="1070.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1150.1" y="1059.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1153.1" y="1070.0"></text>
</g>
<g>
<title>TypeNode::hash() const (1 samples, 0.03%)</title><rect x="1150.6" y="1075.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1153.6" y="1086.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (1 samples, 0.03%)</title><rect x="1151.0" y="1107.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1154.0" y="1118.0"></text>
</g>
<g>
<title>__memset_erms (1 samples, 0.03%)</title><rect x="1151.4" y="1107.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1154.4" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (19 samples, 0.66%)</title><rect x="1151.8" y="1123.0" width="7.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1154.8" y="1134.0"></text>
</g>
<g>
<title>Node::Identity(PhaseGVN*) (1 samples, 0.03%)</title><rect x="1151.8" y="1107.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1154.8" y="1118.0"></text>
</g>
<g>
<title>Node::hash() const (1 samples, 0.03%)</title><rect x="1152.2" y="1107.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1155.2" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (17 samples, 0.59%)</title><rect x="1152.6" y="1107.0" width="7.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1155.6" y="1118.0"></text>
</g>
<g>
<title>AddPNode::Identity(PhaseGVN*) (1 samples, 0.03%)</title><rect x="1153.0" y="1091.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.0" y="1102.0"></text>
</g>
<g>
<title>TypeLong::eq(Type const*) const (1 samples, 0.03%)</title><rect x="1153.0" y="1075.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.0" y="1086.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (2 samples, 0.07%)</title><rect x="1153.4" y="1091.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.4" y="1102.0"></text>
</g>
<g>
<title>CmpPNode::Opcode() const (1 samples, 0.03%)</title><rect x="1153.4" y="1075.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.4" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.03%)</title><rect x="1153.8" y="1075.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.8" y="1086.0"></text>
</g>
<g>
<title>BoolNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1153.8" y="1059.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.8" y="1070.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1154.3" y="1091.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1157.3" y="1102.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1154.3" y="1075.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1157.3" y="1086.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1154.3" y="1059.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1157.3" y="1070.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1154.7" y="1091.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.7" y="1102.0"></text>
</g>
<g>
<title>MemNode::can_see_stored_value(Node*, PhaseTransform*) const (1 samples, 0.03%)</title><rect x="1154.7" y="1075.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1157.7" y="1086.0"></text>
</g>
<g>
<title>PhaseTransform::zerocon(BasicType) (1 samples, 0.03%)</title><rect x="1154.7" y="1059.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.7" y="1070.0"></text>
</g>
<g>
<title>PhaseValues::uncached_makecon(Type const*) (1 samples, 0.03%)</title><rect x="1154.7" y="1043.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.7" y="1054.0"></text>
</g>
<g>
<title>ConNode::make(Type const*) (1 samples, 0.03%)</title><rect x="1154.7" y="1027.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1157.7" y="1038.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1154.7" y="1011.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1157.7" y="1022.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.03%)</title><rect x="1154.7" y="995.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1157.7" y="1006.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.03%)</title><rect x="1155.1" y="1091.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1158.1" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (3 samples, 0.10%)</title><rect x="1155.5" y="1091.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1158.5" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.03%)</title><rect x="1156.3" y="1075.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1159.3" y="1086.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.03%)</title><rect x="1156.3" y="1059.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1159.3" y="1070.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1156.7" y="1091.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1159.7" y="1102.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (3 samples, 0.10%)</title><rect x="1157.1" y="1091.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.1" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.07%)</title><rect x="1157.1" y="1075.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1160.1" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.03%)</title><rect x="1157.1" y="1059.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1160.1" y="1070.0"></text>
</g>
<g>
<title>Unique_Node_List::remove(Node*) (1 samples, 0.03%)</title><rect x="1157.1" y="1043.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.1" y="1054.0"></text>
</g>
<g>
<title>PhiNode::hash() const (1 samples, 0.03%)</title><rect x="1157.5" y="1059.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.5" y="1070.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1158.0" y="1075.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.0" y="1086.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1158.4" y="1091.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.4" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (1 samples, 0.03%)</title><rect x="1158.4" y="1075.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.4" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="1059.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.4" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="1043.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.4" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="1027.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1161.4" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="1011.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.4" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="995.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.4" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="979.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.4" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="963.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.4" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="947.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.4" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="931.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.4" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="915.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.4" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="899.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.4" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="883.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.4" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="867.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.4" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="851.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.4" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="835.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.4" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="819.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.4" y="830.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="803.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.4" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="787.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.4" y="798.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.03%)</title><rect x="1158.4" y="771.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1161.4" y="782.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.03%)</title><rect x="1158.4" y="755.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.4" y="766.0"></text>
</g>
<g>
<title>XorLNode::add_id() const (1 samples, 0.03%)</title><rect x="1158.8" y="1091.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1161.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1159.2" y="1091.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1162.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1159.2" y="1075.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1162.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1159.2" y="1059.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1162.2" y="1070.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (3 samples, 0.10%)</title><rect x="1159.6" y="1123.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1162.6" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.07%)</title><rect x="1159.6" y="1107.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.6" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.07%)</title><rect x="1159.6" y="1091.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.6" y="1102.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.03%)</title><rect x="1159.6" y="1075.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.6" y="1086.0"></text>
</g>
<g>
<title>StoreNode::Identity(PhaseGVN*) (1 samples, 0.03%)</title><rect x="1160.0" y="1075.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.0" y="1086.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (1 samples, 0.03%)</title><rect x="1160.4" y="1107.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.4" y="1118.0"></text>
</g>
<g>
<title>PhaseMacroExpand::prefetch_allocation(Node*, Node*&amp;, Node*&amp;, Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1160.4" y="1091.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.4" y="1102.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1160.4" y="1075.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.4" y="1086.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (3 samples, 0.10%)</title><rect x="1160.8" y="1123.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.8" y="1134.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.07%)</title><rect x="1161.2" y="1107.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.2" y="1118.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.03%)</title><rect x="1161.7" y="1091.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.7" y="1102.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (33 samples, 1.15%)</title><rect x="1162.1" y="1139.0" width="13.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1165.1" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (33 samples, 1.15%)</title><rect x="1162.1" y="1123.0" width="13.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.1" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (33 samples, 1.15%)</title><rect x="1162.1" y="1107.0" width="13.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.1" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (33 samples, 1.15%)</title><rect x="1162.1" y="1091.0" width="13.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.1" y="1102.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.03%)</title><rect x="1162.1" y="1075.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.1" y="1086.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (1 samples, 0.03%)</title><rect x="1162.1" y="1059.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.1" y="1070.0"></text>
</g>
<g>
<title>GraphKit::combine_exception_states(SafePointNode*, SafePointNode*) (1 samples, 0.03%)</title><rect x="1162.1" y="1043.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.1" y="1054.0"></text>
</g>
<g>
<title>MergeMemNode::iteration_setup(MergeMemNode const*) (1 samples, 0.03%)</title><rect x="1162.1" y="1027.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1165.1" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (32 samples, 1.11%)</title><rect x="1162.5" y="1075.0" width="13.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.5" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (31 samples, 1.08%)</title><rect x="1162.5" y="1059.0" width="12.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.5" y="1070.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.07%)</title><rect x="1162.9" y="1043.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.9" y="1054.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.07%)</title><rect x="1162.9" y="1027.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.9" y="1038.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.07%)</title><rect x="1162.9" y="1011.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.9" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.07%)</title><rect x="1162.9" y="995.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.9" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.07%)</title><rect x="1162.9" y="979.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.9" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.07%)</title><rect x="1162.9" y="963.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.9" y="974.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.07%)</title><rect x="1162.9" y="947.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.9" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.07%)</title><rect x="1162.9" y="931.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.9" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1162.9" y="915.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.9" y="926.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.03%)</title><rect x="1162.9" y="899.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.9" y="910.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="1162.9" y="883.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1165.9" y="894.0"></text>
</g>
<g>
<title>ciConstantPoolCache::get(int) (1 samples, 0.03%)</title><rect x="1162.9" y="867.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.9" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.03%)</title><rect x="1163.3" y="915.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.3" y="926.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1163.3" y="899.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1166.3" y="910.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1163.3" y="883.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.3" y="894.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1163.3" y="867.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.3" y="878.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1163.3" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1166.3" y="862.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1163.3" y="835.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.3" y="846.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1163.3" y="819.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1166.3" y="830.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (1 samples, 0.03%)</title><rect x="1163.3" y="803.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.3" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.03%)</title><rect x="1163.3" y="787.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1166.3" y="798.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.03%)</title><rect x="1163.3" y="771.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.3" y="782.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.03%)</title><rect x="1163.3" y="755.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1166.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1163.3" y="739.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1166.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1163.3" y="723.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1166.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1163.3" y="707.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1166.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1163.3" y="691.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1166.3" y="702.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1163.7" y="1043.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.7" y="1054.0"></text>
</g>
<g>
<title>GraphKit::set_edges_for_java_call(CallJavaNode*, bool, bool) (1 samples, 0.03%)</title><rect x="1163.7" y="1027.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.7" y="1038.0"></text>
</g>
<g>
<title>GraphKit::add_safepoint_edges(SafePointNode*, bool) (1 samples, 0.03%)</title><rect x="1163.7" y="1011.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1166.7" y="1022.0"></text>
</g>
<g>
<title>AbstractInterpreter::bytecode_should_reexecute(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1163.7" y="995.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.7" y="1006.0"></text>
</g>
<g>
<title>GraphKit::GraphKit(JVMState*) (1 samples, 0.03%)</title><rect x="1164.1" y="1043.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1167.1" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (18 samples, 0.63%)</title><rect x="1164.5" y="1043.0" width="7.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1167.5" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (18 samples, 0.63%)</title><rect x="1164.5" y="1027.0" width="7.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1167.5" y="1038.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.03%)</title><rect x="1164.5" y="1011.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1167.5" y="1022.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1164.5" y="995.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1167.5" y="1006.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1164.5" y="979.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.5" y="990.0"></text>
</g>
<g>
<title>ciBytecodeStream::has_method_type() (1 samples, 0.03%)</title><rect x="1164.5" y="963.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1167.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (17 samples, 0.59%)</title><rect x="1164.9" y="1011.0" width="7.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1167.9" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (17 samples, 0.59%)</title><rect x="1164.9" y="995.0" width="7.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1167.9" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (17 samples, 0.59%)</title><rect x="1164.9" y="979.0" width="7.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1167.9" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (15 samples, 0.52%)</title><rect x="1164.9" y="963.0" width="6.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1167.9" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.35%)</title><rect x="1164.9" y="947.0" width="4.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.9" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.35%)</title><rect x="1164.9" y="931.0" width="4.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1167.9" y="942.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.03%)</title><rect x="1164.9" y="915.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1167.9" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1164.9" y="899.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1167.9" y="910.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.03%)</title><rect x="1165.3" y="915.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.3" y="926.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.03%)</title><rect x="1165.3" y="899.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.3" y="910.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.03%)</title><rect x="1165.3" y="883.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.3" y="894.0"></text>
</g>
<g>
<title>ConstraintCastNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1165.3" y="867.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1168.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.24%)</title><rect x="1165.8" y="915.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.8" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.24%)</title><rect x="1165.8" y="899.0" width="2.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.24%)</title><rect x="1165.8" y="883.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.24%)</title><rect x="1165.8" y="867.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.8" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.17%)</title><rect x="1165.8" y="851.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1168.8" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.17%)</title><rect x="1165.8" y="835.0" width="2.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.17%)</title><rect x="1165.8" y="819.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1168.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.17%)</title><rect x="1165.8" y="803.0" width="2.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.8" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.17%)</title><rect x="1165.8" y="787.0" width="2.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.10%)</title><rect x="1166.2" y="771.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.2" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.10%)</title><rect x="1166.2" y="755.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.2" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.10%)</title><rect x="1166.2" y="739.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.10%)</title><rect x="1166.2" y="723.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.10%)</title><rect x="1166.2" y="707.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.10%)</title><rect x="1166.2" y="691.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1166.2" y="675.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.2" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1166.2" y="659.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1169.2" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1166.2" y="643.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1166.2" y="627.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.2" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1166.2" y="611.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1169.2" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1166.2" y="595.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1166.2" y="579.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.2" y="590.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1166.2" y="563.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.2" y="574.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.03%)</title><rect x="1166.2" y="547.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.2" y="558.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_min_max(vmIntrinsics::ID) (1 samples, 0.03%)</title><rect x="1166.2" y="531.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.2" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1166.2" y="515.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1169.2" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1166.6" y="563.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.6" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1166.6" y="547.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1166.6" y="531.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.6" y="542.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.03%)</title><rect x="1166.6" y="515.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.6" y="526.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1166.6" y="499.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.6" y="510.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1166.6" y="483.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1169.6" y="494.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (1 samples, 0.03%)</title><rect x="1166.6" y="467.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.6" y="478.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1167.0" y="675.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="1167.0" y="659.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.0" y="670.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.03%)</title><rect x="1167.0" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.0" y="654.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="1167.0" y="627.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.0" y="638.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.03%)</title><rect x="1167.0" y="611.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.0" y="622.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (1 samples, 0.03%)</title><rect x="1167.0" y="595.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1170.0" y="606.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1167.0" y="579.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.0" y="590.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1167.0" y="563.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.0" y="574.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (1 samples, 0.03%)</title><rect x="1167.0" y="547.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.0" y="558.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.03%)</title><rect x="1167.4" y="771.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.4" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1167.4" y="755.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1170.4" y="766.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1167.8" y="851.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.8" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1167.8" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.8" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1167.8" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1167.8" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.8" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1167.8" y="787.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1170.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1167.8" y="771.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1170.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1167.8" y="755.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.8" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1167.8" y="739.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1170.8" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1167.8" y="723.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1170.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1167.8" y="707.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1170.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1167.8" y="691.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1167.8" y="675.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1170.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1167.8" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.8" y="670.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1167.8" y="643.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.8" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1167.8" y="627.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.8" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1167.8" y="611.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1170.8" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1167.8" y="595.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.8" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1167.8" y="579.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1170.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1167.8" y="563.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1167.8" y="547.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.8" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1167.8" y="531.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.8" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1167.8" y="515.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.8" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1167.8" y="499.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1170.8" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1167.8" y="483.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.8" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1167.8" y="467.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.8" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1167.8" y="451.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1170.8" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1167.8" y="435.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.8" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1167.8" y="419.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.8" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1167.8" y="403.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.8" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1167.8" y="387.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.8" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1167.8" y="371.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.8" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1167.8" y="355.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.8" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1167.8" y="339.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1170.8" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1167.8" y="323.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.8" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1167.8" y="307.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.8" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1167.8" y="291.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1170.8" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1167.8" y="275.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1170.8" y="286.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1167.8" y="259.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.8" y="270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1167.8" y="243.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1170.8" y="254.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1167.8" y="227.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.8" y="238.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1167.8" y="211.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.8" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1167.8" y="195.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.8" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1167.8" y="179.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1170.8" y="190.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1167.8" y="163.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1170.8" y="174.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1167.8" y="147.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.8" y="158.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1167.8" y="131.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.8" y="142.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1167.8" y="115.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.8" y="126.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1167.8" y="99.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1170.8" y="110.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1167.8" y="83.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1170.8" y="94.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1167.8" y="67.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1170.8" y="78.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.03%)</title><rect x="1167.8" y="51.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1170.8" y="62.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.03%)</title><rect x="1167.8" y="35.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.8" y="46.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1168.2" y="851.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.03%)</title><rect x="1168.6" y="915.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1171.6" y="926.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1168.6" y="899.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.6" y="910.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1168.6" y="883.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1171.6" y="894.0"></text>
</g>
<g>
<title>TypeOopPtr::filter_helper(Type const*, bool) const (1 samples, 0.03%)</title><rect x="1168.6" y="867.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1171.6" y="878.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.03%)</title><rect x="1168.6" y="851.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.6" y="862.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.03%)</title><rect x="1168.6" y="835.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.6" y="846.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1168.6" y="819.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.6" y="830.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1168.6" y="803.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.6" y="814.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.17%)</title><rect x="1169.0" y="947.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1172.0" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.10%)</title><rect x="1169.0" y="931.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.0" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.10%)</title><rect x="1169.0" y="915.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.10%)</title><rect x="1169.0" y="899.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.10%)</title><rect x="1169.0" y="883.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.10%)</title><rect x="1169.0" y="867.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.10%)</title><rect x="1169.0" y="851.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.0" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.10%)</title><rect x="1169.0" y="835.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.0" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.10%)</title><rect x="1169.0" y="819.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.10%)</title><rect x="1169.0" y="803.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.10%)</title><rect x="1169.0" y="787.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.10%)</title><rect x="1169.0" y="771.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.10%)</title><rect x="1169.0" y="755.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.0" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1169.0" y="739.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1172.0" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1169.0" y="723.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.0" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1169.0" y="707.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.0" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1169.0" y="691.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1169.0" y="675.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1169.0" y="659.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.0" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.0" y="643.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.0" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1169.0" y="627.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1172.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1169.0" y="611.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1169.0" y="595.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.0" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1169.0" y="579.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1169.0" y="563.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.0" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.0" y="547.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.0" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1169.0" y="531.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.0" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1169.0" y="515.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.0" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1169.0" y="499.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.0" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1169.0" y="483.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1169.0" y="467.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.0" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.0" y="451.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.0" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1169.0" y="435.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.0" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1169.0" y="419.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.0" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1169.0" y="403.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.0" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1169.0" y="387.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.0" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1169.0" y="371.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.0" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.0" y="355.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.0" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1169.0" y="339.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.0" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1169.0" y="323.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.0" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1169.0" y="307.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.0" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1169.0" y="291.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.0" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1169.0" y="275.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.0" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.0" y="259.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.0" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1169.0" y="243.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.0" y="254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1169.0" y="227.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.0" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1169.0" y="211.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.0" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1169.0" y="195.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.0" y="206.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1169.0" y="179.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.0" y="190.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.0" y="163.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.0" y="174.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1169.0" y="147.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.0" y="158.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1169.0" y="131.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.0" y="142.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1169.0" y="115.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.0" y="126.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1169.0" y="99.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.0" y="110.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1169.0" y="83.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1172.0" y="94.0"></text>
</g>
<g>
<title>GraphKit::record_profiled_arguments_for_speculation(ciMethod*, Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1169.0" y="67.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.0" y="78.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1169.5" y="659.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.5" y="670.0"></text>
</g>
<g>
<title>AddNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1169.5" y="643.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.5" y="654.0"></text>
</g>
<g>
<title>AddNode::add_of_identity(Type const*, Type const*) const (1 samples, 0.03%)</title><rect x="1169.5" y="627.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.5" y="638.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1169.5" y="611.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.5" y="622.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.03%)</title><rect x="1169.5" y="595.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.5" y="606.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.9" y="739.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.9" y="750.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.9" y="723.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.9" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.9" y="707.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.9" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1169.9" y="691.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1169.9" y="675.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1169.9" y="659.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1169.9" y="643.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.9" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1169.9" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.9" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.9" y="611.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.9" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.9" y="595.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.9" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1169.9" y="579.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1169.9" y="563.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.9" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1169.9" y="547.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1169.9" y="531.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1172.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1169.9" y="515.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.9" y="526.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.9" y="499.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.9" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.9" y="483.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.9" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1169.9" y="467.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.9" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1169.9" y="451.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1169.9" y="435.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.9" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1169.9" y="419.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.9" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1169.9" y="403.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.9" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.9" y="387.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1172.9" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1169.9" y="371.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.9" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1169.9" y="355.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.9" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1169.9" y="339.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.9" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1169.9" y="323.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.9" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1169.9" y="307.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.9" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1169.9" y="291.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.9" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1169.9" y="275.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.9" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1169.9" y="259.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.9" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1169.9" y="243.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.9" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1169.9" y="227.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1172.9" y="238.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1169.9" y="211.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1172.9" y="222.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="1169.9" y="195.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.9" y="206.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.03%)</title><rect x="1169.9" y="179.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1172.9" y="190.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.03%)</title><rect x="1169.9" y="163.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1172.9" y="174.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.03%)</title><rect x="1169.9" y="147.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1172.9" y="158.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.03%)</title><rect x="1169.9" y="131.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.9" y="142.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.03%)</title><rect x="1169.9" y="115.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1172.9" y="126.0"></text>
</g>
<g>
<title>LoadNode::make(PhaseGVN&amp;, Node*, Node*, Node*, TypePtr const*, Type const*, BasicType, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool) (1 samples, 0.03%)</title><rect x="1169.9" y="99.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.9" y="110.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1169.9" y="83.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1172.9" y="94.0"></text>
</g>
<g>
<title>LoadNode::Identity(PhaseGVN*) (1 samples, 0.03%)</title><rect x="1169.9" y="67.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.9" y="78.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1170.3" y="931.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.3" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1170.3" y="915.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.3" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1170.3" y="899.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.3" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1170.3" y="883.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1173.3" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1170.3" y="867.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1173.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1170.3" y="851.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1170.3" y="835.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1173.3" y="846.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1170.3" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.3" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1170.3" y="803.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.3" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1170.3" y="787.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.3" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1170.3" y="771.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1170.3" y="755.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1173.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1170.3" y="739.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1170.3" y="723.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.3" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1170.3" y="707.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.3" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1170.3" y="691.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1170.3" y="675.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1170.3" y="659.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1170.3" y="643.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1173.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1170.3" y="627.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.3" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1170.3" y="611.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.3" y="622.0"></text>
</g>
<g>
<title>GraphKit::replace_in_map(Node*, Node*) [clone .part.173] (1 samples, 0.03%)</title><rect x="1170.3" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1173.3" y="606.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.03%)</title><rect x="1170.3" y="579.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.3" y="590.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.03%)</title><rect x="1170.3" y="563.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1173.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.03%)</title><rect x="1170.7" y="883.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1173.7" y="894.0"></text>
</g>
<g>
<title>GraphKit::use_exception_state(SafePointNode*) (1 samples, 0.03%)</title><rect x="1170.7" y="867.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.7" y="878.0"></text>
</g>
<g>
<title>Node::del_req(unsigned int) (1 samples, 0.03%)</title><rect x="1170.7" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1173.7" y="862.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.03%)</title><rect x="1171.1" y="963.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.1" y="974.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="1171.1" y="947.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1174.1" y="958.0"></text>
</g>
<g>
<title>GraphKit::basic_plus_adr(Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1171.1" y="931.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.1" y="942.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1171.1" y="915.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1174.1" y="926.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.03%)</title><rect x="1171.5" y="963.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.5" y="974.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1171.5" y="947.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.5" y="958.0"></text>
</g>
<g>
<title>BoolNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1171.5" y="931.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.5" y="942.0"></text>
</g>
<g>
<title>PhaseTransform::makecon(Type const*) (1 samples, 0.03%)</title><rect x="1171.5" y="915.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.5" y="926.0"></text>
</g>
<g>
<title>ParmNode::Opcode() const (1 samples, 0.03%)</title><rect x="1171.5" y="899.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.5" y="910.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (8 samples, 0.28%)</title><rect x="1171.9" y="1043.0" width="3.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.9" y="1054.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.17%)</title><rect x="1171.9" y="1027.0" width="2.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.9" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.17%)</title><rect x="1171.9" y="1011.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.9" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.17%)</title><rect x="1171.9" y="995.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1174.9" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.17%)</title><rect x="1171.9" y="979.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.9" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.17%)</title><rect x="1171.9" y="963.0" width="2.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.9" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.17%)</title><rect x="1171.9" y="947.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.9" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.10%)</title><rect x="1171.9" y="931.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.9" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.10%)</title><rect x="1171.9" y="915.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1174.9" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.10%)</title><rect x="1171.9" y="899.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.9" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.10%)</title><rect x="1171.9" y="883.0" width="1.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1174.9" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.10%)</title><rect x="1171.9" y="867.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.9" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1171.9" y="851.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1174.9" y="862.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1171.9" y="835.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.9" y="846.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1171.9" y="819.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.9" y="830.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1171.9" y="803.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.9" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1171.9" y="787.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.9" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1171.9" y="771.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.9" y="782.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1171.9" y="755.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.9" y="766.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1171.9" y="739.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.9" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::compute_exceptions() (1 samples, 0.03%)</title><rect x="1171.9" y="723.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.9" y="734.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1172.3" y="835.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.3" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1172.3" y="819.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.3" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1172.3" y="803.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1172.3" y="787.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.3" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1172.3" y="771.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1172.3" y="755.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1172.3" y="739.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1175.3" y="750.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1172.3" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.3" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1172.3" y="707.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.3" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1172.3" y="691.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1172.3" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1172.3" y="659.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1172.3" y="643.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1172.3" y="627.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.3" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1172.3" y="611.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.3" y="622.0"></text>
</g>
<g>
<title>GraphKit::type_check_receiver(Node*, ciKlass*, float, Node**) (1 samples, 0.03%)</title><rect x="1172.3" y="595.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.3" y="606.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1172.3" y="579.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.3" y="590.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1172.3" y="563.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.03%)</title><rect x="1172.7" y="851.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.7" y="862.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.03%)</title><rect x="1172.7" y="835.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.7" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::uncommon_trap_Type() (1 samples, 0.03%)</title><rect x="1172.7" y="819.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.7" y="830.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1172.7" y="803.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.7" y="814.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1172.7" y="787.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.7" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1173.2" y="931.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.2" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1173.2" y="915.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.2" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1173.2" y="899.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1173.2" y="883.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1173.2" y="867.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.2" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1173.2" y="851.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1173.2" y="835.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.2" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1173.2" y="819.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.2" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1173.2" y="803.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1173.2" y="787.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1173.2" y="771.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1173.2" y="755.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1173.2" y="739.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.2" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1173.2" y="723.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.2" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1173.2" y="707.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1173.2" y="691.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1173.2" y="675.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1173.2" y="659.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1173.2" y="643.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.2" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1173.2" y="627.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.2" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1173.2" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.2" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1173.2" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1173.2" y="579.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1173.2" y="563.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1173.2" y="547.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.2" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1173.2" y="531.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.2" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1173.2" y="515.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1173.2" y="499.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.2" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1173.2" y="483.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.2" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1173.2" y="467.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.2" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1173.2" y="451.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.2" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1173.2" y="435.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.2" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1173.2" y="419.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.2" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1173.2" y="403.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.2" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1173.2" y="387.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.2" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1173.2" y="371.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.2" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1173.2" y="355.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.2" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1173.2" y="339.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.2" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1173.2" y="323.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.2" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1173.2" y="307.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.2" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1173.2" y="291.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.2" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1173.2" y="275.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.2" y="286.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1173.2" y="259.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.2" y="270.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1173.2" y="243.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.2" y="254.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1173.2" y="227.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1176.2" y="238.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1173.2" y="211.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.2" y="222.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1173.2" y="195.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.2" y="206.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1173.2" y="179.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.2" y="190.0"></text>
</g>
<g>
<title>ResourceObj::operator new(unsigned long, Arena*) (1 samples, 0.03%)</title><rect x="1173.2" y="163.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.2" y="174.0"></text>
</g>
<g>
<title>Parse::merge_common(Parse::Block*, int) (1 samples, 0.03%)</title><rect x="1173.6" y="867.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1176.6" y="878.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1173.6" y="851.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.6" y="862.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1173.6" y="835.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1176.6" y="846.0"></text>
</g>
<g>
<title>VectorSet::VectorSet(Arena*) (1 samples, 0.03%)</title><rect x="1173.6" y="819.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.6" y="830.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.10%)</title><rect x="1174.0" y="1027.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.0" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.10%)</title><rect x="1174.0" y="1011.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.0" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.10%)</title><rect x="1174.0" y="995.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.0" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.10%)</title><rect x="1174.0" y="979.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1177.0" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.10%)</title><rect x="1174.0" y="963.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.0" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.10%)</title><rect x="1174.0" y="947.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.0" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.10%)</title><rect x="1174.0" y="931.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1177.0" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.07%)</title><rect x="1174.0" y="915.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1177.0" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.07%)</title><rect x="1174.0" y="899.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.07%)</title><rect x="1174.0" y="883.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.07%)</title><rect x="1174.0" y="867.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1177.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.07%)</title><rect x="1174.0" y="851.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.07%)</title><rect x="1174.0" y="835.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.0" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1174.0" y="819.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.0" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1174.0" y="803.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1174.0" y="787.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1174.0" y="771.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1174.0" y="755.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1177.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1174.0" y="739.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.0" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1174.0" y="723.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.0" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1174.0" y="707.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1177.0" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1174.0" y="691.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1177.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1174.0" y="675.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1174.0" y="659.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1174.0" y="643.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.0" y="654.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1174.0" y="627.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.0" y="638.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1174.0" y="611.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.0" y="622.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1174.0" y="595.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.0" y="606.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1174.0" y="579.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1177.0" y="590.0"></text>
</g>
<g>
<title>ciMethod::is_accessor() const (1 samples, 0.03%)</title><rect x="1174.0" y="563.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.0" y="574.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1174.4" y="819.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.4" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1174.4" y="803.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.4" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1174.4" y="787.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.4" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1174.4" y="771.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.4" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1174.4" y="755.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1174.4" y="739.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1177.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1174.4" y="723.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.4" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1174.4" y="707.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.4" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1174.4" y="691.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.4" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1174.4" y="675.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1177.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1174.4" y="659.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1174.4" y="643.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1177.4" y="654.0"></text>
</g>
<g>
<title>PhiNode::slice_memory(TypePtr const*) const (1 samples, 0.03%)</title><rect x="1174.4" y="627.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.4" y="638.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1174.8" y="915.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1177.8" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1174.8" y="899.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1177.8" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1174.8" y="883.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1177.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1174.8" y="867.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1174.8" y="851.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1177.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1174.8" y="835.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1174.8" y="819.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.8" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1174.8" y="803.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.8" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1174.8" y="787.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1174.8" y="771.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1174.8" y="755.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1177.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1174.8" y="739.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1174.8" y="723.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.8" y="734.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1174.8" y="707.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1177.8" y="718.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1174.8" y="691.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.8" y="702.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1174.8" y="675.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1177.8" y="686.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1174.8" y="659.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1177.8" y="670.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1174.8" y="643.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1177.8" y="654.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1174.8" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1177.8" y="638.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1174.8" y="611.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.8" y="622.0"></text>
</g>
<g>
<title>ciTypeFlow::Block::successors(ciBytecodeStream*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1174.8" y="595.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.8" y="606.0"></text>
</g>
<g>
<title>Parse::do_checkcast() (1 samples, 0.03%)</title><rect x="1175.2" y="1059.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.2" y="1070.0"></text>
</g>
<g>
<title>GraphKit::gen_checkcast(Node*, Node*, Node**) (1 samples, 0.03%)</title><rect x="1175.2" y="1043.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.2" y="1054.0"></text>
</g>
<g>
<title>GraphKit::maybe_cast_profiled_receiver(Node*, ciKlass*, ciKlass*, bool) (1 samples, 0.03%)</title><rect x="1175.2" y="1027.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.2" y="1038.0"></text>
</g>
<g>
<title>GraphKit::type_check_receiver(Node*, ciKlass*, float, Node**) (1 samples, 0.03%)</title><rect x="1175.2" y="1011.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.2" y="1022.0"></text>
</g>
<g>
<title>GraphKit::load_object_klass(Node*) (1 samples, 0.03%)</title><rect x="1175.2" y="995.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.2" y="1006.0"></text>
</g>
<g>
<title>Node::Node(Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1175.2" y="979.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.2" y="990.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.07%)</title><rect x="1175.6" y="1139.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.6" y="1150.0"></text>
</g>
<g>
<title>Unique_Node_List::remove_useless_nodes(VectorSet&amp;) (1 samples, 0.03%)</title><rect x="1176.0" y="1123.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.0" y="1134.0"></text>
</g>
<g>
<title>CompileBroker::collect_statistics(CompilerThread*, elapsedTimer, CompileTask*) (1 samples, 0.03%)</title><rect x="1176.4" y="1171.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.4" y="1182.0"></text>
</g>
<g>
<title>__strncpy_sse2_unaligned (1 samples, 0.03%)</title><rect x="1176.4" y="1155.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1179.4" y="1166.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.03%)</title><rect x="1176.9" y="1187.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.9" y="1198.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.03%)</title><rect x="1176.9" y="1171.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1179.9" y="1182.0"></text>
</g>
<g>
<title>sysmalloc (1 samples, 0.03%)</title><rect x="1177.3" y="1283.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1180.3" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.3" y="1267.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1180.3" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.3" y="1251.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1180.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.3" y="1235.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1180.3" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.3" y="1219.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1180.3" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.3" y="1203.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1180.3" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.3" y="1187.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1180.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.3" y="1171.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1180.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.3" y="1155.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1180.3" y="1166.0"></text>
</g>
<g>
<title>[tid=31357] (13 samples, 0.45%)</title><rect x="1177.7" y="1299.0" width="5.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1180.7" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.7" y="1283.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1180.7" y="1294.0"></text>
</g>
<g>
<title>__GI___open64 (1 samples, 0.03%)</title><rect x="1177.7" y="1267.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1180.7" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.7" y="1251.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1180.7" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.7" y="1235.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1180.7" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.7" y="1219.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1180.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.7" y="1203.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1180.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.7" y="1187.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1180.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.7" y="1171.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1180.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.7" y="1155.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1180.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.7" y="1139.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1180.7" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.7" y="1123.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1180.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.7" y="1107.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1180.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.7" y="1091.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1180.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1177.7" y="1075.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1180.7" y="1086.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="1178.1" y="1283.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1181.1" y="1294.0"></text>
</g>
<g>
<title>start_thread (11 samples, 0.38%)</title><rect x="1178.5" y="1283.0" width="4.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1181.5" y="1294.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 0.38%)</title><rect x="1178.5" y="1267.0" width="4.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1181.5" y="1278.0"></text>
</g>
<g>
<title>Thread::call_run() (11 samples, 0.38%)</title><rect x="1178.5" y="1251.0" width="4.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.5" y="1262.0"></text>
</g>
<g>
<title>JavaThread::run() (11 samples, 0.38%)</title><rect x="1178.5" y="1235.0" width="4.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.5" y="1246.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (11 samples, 0.38%)</title><rect x="1178.5" y="1219.0" width="4.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.5" y="1230.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (10 samples, 0.35%)</title><rect x="1178.5" y="1203.0" width="4.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.5" y="1214.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (8 samples, 0.28%)</title><rect x="1178.5" y="1187.0" width="3.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.5" y="1198.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (8 samples, 0.28%)</title><rect x="1178.5" y="1171.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.5" y="1182.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (8 samples, 0.28%)</title><rect x="1178.5" y="1155.0" width="3.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.5" y="1166.0"></text>
</g>
<g>
<title>Compilation::compile_method() (8 samples, 0.28%)</title><rect x="1178.5" y="1139.0" width="3.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.5" y="1150.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (7 samples, 0.24%)</title><rect x="1178.5" y="1123.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.5" y="1134.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (2 samples, 0.07%)</title><rect x="1178.5" y="1107.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.5" y="1118.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (2 samples, 0.07%)</title><rect x="1178.5" y="1091.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.5" y="1102.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (2 samples, 0.07%)</title><rect x="1178.5" y="1075.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.5" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.03%)</title><rect x="1178.9" y="1059.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.9" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1178.9" y="1043.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.9" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1178.9" y="1027.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.9" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1178.9" y="1011.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.9" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1178.9" y="995.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.9" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1178.9" y="979.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.9" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1178.9" y="963.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.9" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1178.9" y="947.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.9" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1178.9" y="931.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.9" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1178.9" y="915.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1181.9" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.03%)</title><rect x="1178.9" y="899.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.9" y="910.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data() (1 samples, 0.03%)</title><rect x="1178.9" y="883.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.9" y="894.0"></text>
</g>
<g>
<title>ciMethod::ensure_method_data(methodHandle const&amp;) (1 samples, 0.03%)</title><rect x="1178.9" y="867.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.9" y="878.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.03%)</title><rect x="1178.9" y="851.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.9" y="862.0"></text>
</g>
<g>
<title>ciReceiverTypeData::translate_from(ProfileData const*) (1 samples, 0.03%)</title><rect x="1178.9" y="835.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.9" y="846.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1178.9" y="819.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.9" y="830.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1178.9" y="803.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.9" y="814.0"></text>
</g>
<g>
<title>InstanceKlass::protection_domain() const (1 samples, 0.03%)</title><rect x="1178.9" y="787.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.9" y="798.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (1 samples, 0.03%)</title><rect x="1179.3" y="1107.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.3" y="1118.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (1 samples, 0.03%)</title><rect x="1179.3" y="1091.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.3" y="1102.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (1 samples, 0.03%)</title><rect x="1179.3" y="1075.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.3" y="1086.0"></text>
</g>
<g>
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (1 samples, 0.03%)</title><rect x="1179.3" y="1059.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.3" y="1070.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (1 samples, 0.03%)</title><rect x="1179.3" y="1043.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.3" y="1054.0"></text>
</g>
<g>
<title>CodeEmitInfo::record_debug_info(DebugInformationRecorder*, int) (1 samples, 0.03%)</title><rect x="1179.3" y="1027.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.3" y="1038.0"></text>
</g>
<g>
<title>LocationValue::write_on(DebugInfoWriteStream*) (1 samples, 0.03%)</title><rect x="1179.3" y="1011.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.3" y="1022.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (4 samples, 0.14%)</title><rect x="1179.7" y="1107.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.7" y="1118.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (3 samples, 0.10%)</title><rect x="1179.7" y="1091.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.7" y="1102.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (3 samples, 0.10%)</title><rect x="1179.7" y="1075.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.7" y="1086.0"></text>
</g>
<g>
<title>LIRGenerator::do_Base(Base*) (1 samples, 0.03%)</title><rect x="1179.7" y="1059.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1182.7" y="1070.0"></text>
</g>
<g>
<title>LIRGenerator::increment_event_counter(CodeEmitInfo*, LIR_OprDesc*, int, bool) (1 samples, 0.03%)</title><rect x="1179.7" y="1043.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.7" y="1054.0"></text>
</g>
<g>
<title>LIR_OprDesc::is_constant() const [clone .part.59] (1 samples, 0.03%)</title><rect x="1179.7" y="1027.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.7" y="1038.0"></text>
</g>
<g>
<title>LIRGenerator::do_CheckCast(CheckCast*) (1 samples, 0.03%)</title><rect x="1180.1" y="1059.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.1" y="1070.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1180.1" y="1043.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1183.1" y="1054.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileCall(ProfileCall*) (1 samples, 0.03%)</title><rect x="1180.6" y="1059.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.6" y="1070.0"></text>
</g>
<g>
<title>GrowableArray&lt;LIR_Op*&gt;::append(LIR_Op* const&amp;) (1 samples, 0.03%)</title><rect x="1180.6" y="1043.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.6" y="1054.0"></text>
</g>
<g>
<title>GrowableArray&lt;LIR_Op*&gt;::grow(int) (1 samples, 0.03%)</title><rect x="1180.6" y="1027.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.6" y="1038.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.03%)</title><rect x="1180.6" y="1011.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.6" y="1022.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.03%)</title><rect x="1181.0" y="1091.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.0" y="1102.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.03%)</title><rect x="1181.0" y="1075.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.0" y="1086.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (1 samples, 0.03%)</title><rect x="1181.0" y="1059.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.0" y="1070.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (1 samples, 0.03%)</title><rect x="1181.0" y="1043.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.0" y="1054.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (1 samples, 0.03%)</title><rect x="1181.0" y="1027.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.0" y="1038.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (1 samples, 0.03%)</title><rect x="1181.0" y="1011.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.0" y="1022.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.03%)</title><rect x="1181.4" y="1123.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.4" y="1134.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.03%)</title><rect x="1181.4" y="1107.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.4" y="1118.0"></text>
</g>
<g>
<title>nmethod::copy_values(GrowableArray&lt;Metadata*&gt;*) (1 samples, 0.03%)</title><rect x="1181.4" y="1091.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.4" y="1102.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.03%)</title><rect x="1181.8" y="1187.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.8" y="1198.0"></text>
</g>
<g>
<title>__GI_sysinfo (1 samples, 0.03%)</title><rect x="1181.8" y="1171.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1184.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1181.8" y="1155.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1184.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1181.8" y="1139.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1184.8" y="1150.0"></text>
</g>
<g>
<title>CompileQueue::get() (1 samples, 0.03%)</title><rect x="1182.2" y="1187.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.2" y="1198.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1182.2" y="1171.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.2" y="1182.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1182.2" y="1155.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.2" y="1166.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.03%)</title><rect x="1182.2" y="1139.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1185.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1182.2" y="1123.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1185.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1182.2" y="1107.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1185.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1182.2" y="1091.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1185.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1182.2" y="1075.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1185.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1182.2" y="1059.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1185.2" y="1070.0"></text>
</g>
<g>
<title>CompileBroker::possibly_add_compiler_threads() (1 samples, 0.03%)</title><rect x="1182.6" y="1203.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.6" y="1214.0"></text>
</g>
<g>
<title>[tid=31359] (2 samples, 0.07%)</title><rect x="1183.0" y="1299.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1186.0" y="1310.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.07%)</title><rect x="1183.0" y="1283.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1186.0" y="1294.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.07%)</title><rect x="1183.0" y="1267.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1186.0" y="1278.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.07%)</title><rect x="1183.0" y="1251.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.0" y="1262.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.07%)</title><rect x="1183.0" y="1235.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.0" y="1246.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.07%)</title><rect x="1183.0" y="1219.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.0" y="1230.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (2 samples, 0.07%)</title><rect x="1183.0" y="1203.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.0" y="1214.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (2 samples, 0.07%)</title><rect x="1183.0" y="1187.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.0" y="1198.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (2 samples, 0.07%)</title><rect x="1183.0" y="1171.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.0" y="1182.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (2 samples, 0.07%)</title><rect x="1183.0" y="1155.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1186.0" y="1166.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (1 samples, 0.03%)</title><rect x="1183.0" y="1139.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.0" y="1150.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.03%)</title><rect x="1183.0" y="1123.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.0" y="1134.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1183.0" y="1107.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1186.0" y="1118.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.03%)</title><rect x="1183.4" y="1139.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.4" y="1150.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.03%)</title><rect x="1183.4" y="1123.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.4" y="1134.0"></text>
</g>
<g>
<title>[tid=31360] (1 samples, 0.03%)</title><rect x="1183.8" y="1299.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1186.8" y="1310.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="1183.8" y="1283.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1186.8" y="1294.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.03%)</title><rect x="1183.8" y="1267.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1186.8" y="1278.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.03%)</title><rect x="1183.8" y="1251.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.8" y="1262.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.03%)</title><rect x="1183.8" y="1235.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.8" y="1246.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.03%)</title><rect x="1183.8" y="1219.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.8" y="1230.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1183.8" y="1203.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.8" y="1214.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="1183.8" y="1187.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.8" y="1198.0"></text>
</g>
<g>
<title>[tid=31373] (4 samples, 0.14%)</title><rect x="1184.2" y="1299.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1187.2" y="1310.0"></text>
</g>
<g>
<title>start_thread (4 samples, 0.14%)</title><rect x="1184.2" y="1283.0" width="1.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1187.2" y="1294.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (4 samples, 0.14%)</title><rect x="1184.2" y="1267.0" width="1.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1187.2" y="1278.0"></text>
</g>
<g>
<title>Thread::call_run() (4 samples, 0.14%)</title><rect x="1184.2" y="1251.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.2" y="1262.0"></text>
</g>
<g>
<title>GangWorker::loop() (4 samples, 0.14%)</title><rect x="1184.2" y="1235.0" width="1.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.2" y="1246.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (4 samples, 0.14%)</title><rect x="1184.2" y="1219.0" width="1.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.2" y="1230.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.07%)</title><rect x="1184.2" y="1203.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.2" y="1214.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.03%)</title><rect x="1184.2" y="1187.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.2" y="1198.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.03%)</title><rect x="1184.2" y="1171.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.2" y="1182.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1184.7" y="1187.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1187.7" y="1198.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (2 samples, 0.07%)</title><rect x="1185.1" y="1203.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.1" y="1214.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (2 samples, 0.07%)</title><rect x="1185.1" y="1187.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.1" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (2 samples, 0.07%)</title><rect x="1185.1" y="1171.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.1" y="1182.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (2 samples, 0.07%)</title><rect x="1185.1" y="1155.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.1" y="1166.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (2 samples, 0.07%)</title><rect x="1185.1" y="1139.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.1" y="1150.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.03%)</title><rect x="1185.1" y="1123.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.1" y="1134.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (1 samples, 0.03%)</title><rect x="1185.5" y="1123.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.5" y="1134.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="1185.5" y="1107.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.5" y="1118.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1185.5" y="1091.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.5" y="1102.0"></text>
</g>
<g>
<title>[tid=31374] (5 samples, 0.17%)</title><rect x="1185.9" y="1299.0" width="2.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1188.9" y="1310.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.17%)</title><rect x="1185.9" y="1283.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1188.9" y="1294.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.17%)</title><rect x="1185.9" y="1267.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1188.9" y="1278.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.17%)</title><rect x="1185.9" y="1251.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.9" y="1262.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.17%)</title><rect x="1185.9" y="1235.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.9" y="1246.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.17%)</title><rect x="1185.9" y="1219.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.9" y="1230.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.14%)</title><rect x="1185.9" y="1203.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.9" y="1214.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.14%)</title><rect x="1185.9" y="1187.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.9" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.14%)</title><rect x="1185.9" y="1171.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.9" y="1182.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.14%)</title><rect x="1185.9" y="1155.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.9" y="1166.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.14%)</title><rect x="1185.9" y="1139.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.9" y="1150.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.10%)</title><rect x="1185.9" y="1123.0" width="1.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.9" y="1134.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.10%)</title><rect x="1185.9" y="1107.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.9" y="1118.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.03%)</title><rect x="1186.7" y="1091.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.7" y="1102.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (1 samples, 0.03%)</title><rect x="1187.1" y="1123.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.1" y="1134.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (1 samples, 0.03%)</title><rect x="1187.1" y="1107.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.1" y="1118.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.03%)</title><rect x="1187.1" y="1091.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.1" y="1102.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.03%)</title><rect x="1187.5" y="1203.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.5" y="1214.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.03%)</title><rect x="1187.5" y="1187.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.5" y="1198.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1187.5" y="1171.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.5" y="1182.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (1 samples, 0.03%)</title><rect x="1187.5" y="1155.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.5" y="1166.0"></text>
</g>
<g>
<title>frame::oops_interpreted_do(OopClosure*, RegisterMap const*, bool) (1 samples, 0.03%)</title><rect x="1187.5" y="1139.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.5" y="1150.0"></text>
</g>
<g>
<title>[tid=31375] (5 samples, 0.17%)</title><rect x="1187.9" y="1299.0" width="2.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1190.9" y="1310.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.17%)</title><rect x="1187.9" y="1283.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1190.9" y="1294.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.17%)</title><rect x="1187.9" y="1267.0" width="2.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1190.9" y="1278.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.17%)</title><rect x="1187.9" y="1251.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.9" y="1262.0"></text>
</g>
<g>
<title>GangWorker::loop() (5 samples, 0.17%)</title><rect x="1187.9" y="1235.0" width="2.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.9" y="1246.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (5 samples, 0.17%)</title><rect x="1187.9" y="1219.0" width="2.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.9" y="1230.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.07%)</title><rect x="1187.9" y="1203.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.9" y="1214.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.07%)</title><rect x="1187.9" y="1187.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1190.9" y="1198.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.10%)</title><rect x="1188.8" y="1203.0" width="1.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.8" y="1214.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.10%)</title><rect x="1188.8" y="1187.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.8" y="1198.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.10%)</title><rect x="1188.8" y="1171.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.8" y="1182.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.10%)</title><rect x="1188.8" y="1155.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.8" y="1166.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.10%)</title><rect x="1188.8" y="1139.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.8" y="1150.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.10%)</title><rect x="1188.8" y="1123.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.8" y="1134.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.10%)</title><rect x="1188.8" y="1107.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.8" y="1118.0"></text>
</g>
</g>
</svg>
