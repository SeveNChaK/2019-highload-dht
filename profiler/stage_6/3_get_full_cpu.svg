<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1254" onload="init(evt)" viewBox="0 0 1200 1254" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1237"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1237"> </text>
<g id="frames">
<g>
<title>all (4,934 samples, 100.00%)</title><rect x="10.0" y="1203.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="1214.0">all</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (2 samples, 0.04%)</title><rect x="10.0" y="1187.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="13.0" y="1198.0"></text>
</g>
<g>
<title>Klass::class_loader() const (3 samples, 0.06%)</title><rect x="10.5" y="1187.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.5" y="1198.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (12 samples, 0.24%)</title><rect x="11.4" y="1187.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.4" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (6 samples, 0.12%)</title><rect x="11.7" y="1171.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="14.7" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.08%)</title><rect x="11.9" y="1155.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="14.9" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.08%)</title><rect x="11.9" y="1139.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.9" y="1150.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.08%)</title><rect x="11.9" y="1123.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.9" y="1134.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.04%)</title><rect x="12.2" y="1107.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.2" y="1118.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.10%)</title><rect x="13.1" y="1171.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.1" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.10%)</title><rect x="13.1" y="1155.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.1" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.10%)</title><rect x="13.1" y="1139.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.1" y="1150.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (2 samples, 0.04%)</title><rect x="13.3" y="1123.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="16.3" y="1134.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (2 samples, 0.04%)</title><rect x="13.3" y="1107.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.3" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="13.8" y="1123.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.8" y="1134.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (4 samples, 0.08%)</title><rect x="14.3" y="1187.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="17.3" y="1198.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.08%)</title><rect x="14.3" y="1171.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="17.3" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.08%)</title><rect x="14.3" y="1155.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="17.3" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.06%)</title><rect x="14.3" y="1139.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.3" y="1150.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (29 samples, 0.59%)</title><rect x="15.3" y="1187.0" width="6.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="18.3" y="1198.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="15.5" y="1171.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="18.5" y="1182.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (26 samples, 0.53%)</title><rect x="16.0" y="1171.0" width="6.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.0" y="1182.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (24 samples, 0.49%)</title><rect x="16.2" y="1155.0" width="5.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="19.2" y="1166.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (2 samples, 0.04%)</title><rect x="16.2" y="1139.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="19.2" y="1150.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (19 samples, 0.39%)</title><rect x="16.7" y="1139.0" width="4.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="19.7" y="1150.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (4 samples, 0.08%)</title><rect x="16.9" y="1123.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="19.9" y="1134.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (3 samples, 0.06%)</title><rect x="17.2" y="1107.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="20.2" y="1118.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (3 samples, 0.06%)</title><rect x="18.1" y="1123.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="21.1" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (9 samples, 0.18%)</title><rect x="18.8" y="1123.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="21.8" y="1134.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (2 samples, 0.04%)</title><rect x="18.8" y="1107.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="21.8" y="1118.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (4 samples, 0.08%)</title><rect x="19.8" y="1107.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="22.8" y="1118.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (4 samples, 0.08%)</title><rect x="19.8" y="1091.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="22.8" y="1102.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.04%)</title><rect x="20.3" y="1075.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="23.3" y="1086.0"></text>
</g>
<g>
<title>ObjAllocator::initialize(HeapWord*) const (2 samples, 0.04%)</title><rect x="21.2" y="1139.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="24.2" y="1150.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (45 samples, 0.91%)</title><rect x="22.4" y="1187.0" width="10.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="25.4" y="1198.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (42 samples, 0.85%)</title><rect x="23.2" y="1171.0" width="10.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="26.2" y="1182.0"></text>
</g>
<g>
<title>JavaThread::is_lock_owned(unsigned char*) const (3 samples, 0.06%)</title><rect x="23.9" y="1155.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="26.9" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (15 samples, 0.30%)</title><rect x="24.8" y="1155.0" width="3.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="27.8" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (13 samples, 0.26%)</title><rect x="24.8" y="1139.0" width="3.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="27.8" y="1150.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.04%)</title><rect x="27.9" y="1139.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="30.9" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (18 samples, 0.36%)</title><rect x="28.4" y="1155.0" width="4.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="31.4" y="1166.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (12 samples, 0.24%)</title><rect x="29.6" y="1139.0" width="2.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="32.6" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (3 samples, 0.06%)</title><rect x="30.3" y="1123.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="33.3" y="1134.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.04%)</title><rect x="31.8" y="1123.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="34.8" y="1134.0"></text>
</g>
<g>
<title>jfr_is_event_enabled(JfrEventId) (2 samples, 0.04%)</title><rect x="32.7" y="1155.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="35.7" y="1166.0"></text>
</g>
<g>
<title>[not_walkable] (9 samples, 0.18%)</title><rect x="33.2" y="1187.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="36.2" y="1198.0"></text>
</g>
<g>
<title>[not_walkable_Java] (24 samples, 0.49%)</title><rect x="35.4" y="1187.0" width="5.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="38.4" y="1198.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (2 samples, 0.04%)</title><rect x="35.6" y="1171.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="38.6" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (8 samples, 0.16%)</title><rect x="36.3" y="1171.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="39.3" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (7 samples, 0.14%)</title><rect x="36.5" y="1155.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="39.5" y="1166.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.06%)</title><rect x="36.5" y="1139.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="39.5" y="1150.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.06%)</title><rect x="36.5" y="1123.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="39.5" y="1134.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.04%)</title><rect x="36.8" y="1107.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="39.8" y="1118.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.08%)</title><rect x="37.3" y="1139.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="40.3" y="1150.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.04%)</title><rect x="37.7" y="1123.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="40.7" y="1134.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="37.7" y="1107.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="40.7" y="1118.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.04%)</title><rect x="37.7" y="1091.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="40.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.18%)</title><rect x="38.9" y="1171.0" width="2.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="41.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="38.9" y="1155.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="41.9" y="1166.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.08%)</title><rect x="39.4" y="1139.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="42.4" y="1150.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="39.9" y="1123.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="42.9" y="1134.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="40.4" y="1155.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="43.4" y="1166.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.06%)</title><rect x="40.4" y="1139.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="43.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="41.1" y="1187.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="44.1" y="1198.0"></text>
</g>
<g>
<title>[unknown_Java] (54 samples, 1.09%)</title><rect x="41.8" y="1187.0" width="12.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="44.8" y="1198.0"></text>
</g>
<g>
<title>G1BarrierSetRuntime::write_ref_array_post_entry(HeapWord*, unsigned long) (2 samples, 0.04%)</title><rect x="51.1" y="1171.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="54.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="51.6" y="1171.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="54.6" y="1182.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.22%)</title><rect x="52.1" y="1171.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="55.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="52.1" y="1155.0" width="2.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="55.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="52.1" y="1139.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="55.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="52.1" y="1123.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="55.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="52.1" y="1107.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="55.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="52.1" y="1091.0" width="2.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="55.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="53.3" y="1075.0" width="1.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="56.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="53.3" y="1059.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="56.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="53.3" y="1043.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="56.3" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (14 samples, 0.28%)</title><rect x="54.7" y="1187.0" width="3.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="57.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.20%)</title><rect x="55.7" y="1171.0" width="2.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="58.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.20%)</title><rect x="55.7" y="1155.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="58.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="56.2" y="1139.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="59.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="56.2" y="1123.0" width="1.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="59.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="56.2" y="1107.0" width="1.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="59.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="57.1" y="1091.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="60.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="57.4" y="1075.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="60.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="57.6" y="1059.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="60.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,455 samples, 49.76%)</title><rect x="58.3" y="1187.0" width="587.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="61.3" y="1198.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,455 samples, 49.76%)</title><rect x="58.3" y="1171.0" width="587.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.3" y="1182.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,455 samples, 49.76%)</title><rect x="58.3" y="1155.0" width="587.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="61.3" y="1166.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.06%)</title><rect x="62.1" y="1139.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="65.1" y="1150.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.08%)</title><rect x="62.9" y="1139.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="65.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (11 samples, 0.22%)</title><rect x="63.8" y="1139.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (10 samples, 0.20%)</title><rect x="64.0" y="1123.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.0" y="1134.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (9 samples, 0.18%)</title><rect x="64.0" y="1107.0" width="2.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="67.0" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (2 samples, 0.04%)</title><rect x="64.8" y="1091.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="67.8" y="1102.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="65.5" y="1091.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="68.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (555 samples, 11.25%)</title><rect x="66.4" y="1139.0" width="132.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="69.4" y="1150.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (551 samples, 11.17%)</title><rect x="67.2" y="1123.0" width="131.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.2" y="1134.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (550 samples, 11.15%)</title><rect x="67.4" y="1107.0" width="131.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.4" y="1118.0">java/util/concur..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/901790106.apply (547 samples, 11.09%)</title><rect x="68.1" y="1091.0" width="130.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.1" y="1102.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (545 samples, 11.05%)</title><rect x="68.6" y="1075.0" width="130.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="71.6" y="1086.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (545 samples, 11.05%)</title><rect x="68.6" y="1059.0" width="130.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.6" y="1070.0">jdk/internal/net..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="68.6" y="1043.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="71.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="68.6" y="1027.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$241/574542749.get$Lambda (3 samples, 0.06%)</title><rect x="68.6" y="1011.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$241/574542749.&lt;init&gt; (2 samples, 0.04%)</title><rect x="68.8" y="995.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.incrementAndGet (2 samples, 0.04%)</title><rect x="69.3" y="1043.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="72.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (525 samples, 10.64%)</title><rect x="69.8" y="1043.0" width="125.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="72.8" y="1054.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (525 samples, 10.64%)</title><rect x="69.8" y="1027.0" width="125.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="72.8" y="1038.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (524 samples, 10.62%)</title><rect x="70.0" y="1011.0" width="125.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.0" y="1022.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (234 samples, 4.74%)</title><rect x="70.3" y="995.0" width="55.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="73.3" y="1006.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (234 samples, 4.74%)</title><rect x="70.3" y="979.0" width="55.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.3" y="990.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (232 samples, 4.70%)</title><rect x="70.5" y="963.0" width="55.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.5" y="974.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="70.5" y="947.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="73.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="70.5" y="931.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="73.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$215/26138573.apply (230 samples, 4.66%)</title><rect x="71.0" y="947.0" width="55.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.0" y="958.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (230 samples, 4.66%)</title><rect x="71.0" y="931.0" width="55.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.0" y="942.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (230 samples, 4.66%)</title><rect x="71.0" y="915.0" width="55.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.0" y="926.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$147/1130664697.apply (230 samples, 4.66%)</title><rect x="71.0" y="899.0" width="55.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="74.0" y="910.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (229 samples, 4.64%)</title><rect x="71.2" y="883.0" width="54.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="74.2" y="894.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="71.5" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="71.5" y="851.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="74.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="71.5" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="74.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.04%)</title><rect x="71.5" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="74.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (226 samples, 4.58%)</title><rect x="71.9" y="867.0" width="54.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="74.9" y="878.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (193 samples, 3.91%)</title><rect x="71.9" y="851.0" width="46.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.9" y="862.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (193 samples, 3.91%)</title><rect x="71.9" y="835.0" width="46.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="74.9" y="846.0">java..</text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="71.9" y="819.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="74.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/1607741215.apply (191 samples, 3.87%)</title><rect x="72.4" y="819.0" width="45.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="75.4" y="830.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (190 samples, 3.85%)</title><rect x="72.7" y="803.0" width="45.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.7" y="814.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="72.9" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="72.9" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$251/1699099187.get$Lambda (2 samples, 0.04%)</title><rect x="72.9" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="75.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="73.6" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="73.6" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (2 samples, 0.04%)</title><rect x="73.6" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="76.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.04%)</title><rect x="73.6" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.12%)</title><rect x="74.1" y="787.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (6 samples, 0.12%)</title><rect x="74.1" y="771.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="77.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.12%)</title><rect x="74.1" y="755.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.12%)</title><rect x="74.1" y="739.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.12%)</title><rect x="74.1" y="723.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.12%)</title><rect x="74.1" y="707.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="77.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.04%)</title><rect x="74.3" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.04%)</title><rect x="75.1" y="691.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.04%)</title><rect x="75.1" y="675.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="78.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (66 samples, 1.34%)</title><rect x="75.5" y="787.0" width="15.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="78.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (66 samples, 1.34%)</title><rect x="75.5" y="771.0" width="15.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="78.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (11 samples, 0.22%)</title><rect x="75.5" y="755.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (9 samples, 0.18%)</title><rect x="76.0" y="739.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="79.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (9 samples, 0.18%)</title><rect x="76.0" y="723.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (4 samples, 0.08%)</title><rect x="77.2" y="707.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (55 samples, 1.11%)</title><rect x="78.2" y="755.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="81.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (55 samples, 1.11%)</title><rect x="78.2" y="739.0" width="13.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (37 samples, 0.75%)</title><rect x="78.2" y="723.0" width="8.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="81.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (37 samples, 0.75%)</title><rect x="78.2" y="707.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="81.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (37 samples, 0.75%)</title><rect x="78.2" y="691.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="81.2" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (37 samples, 0.75%)</title><rect x="78.2" y="675.0" width="8.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="81.2" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (37 samples, 0.75%)</title><rect x="78.2" y="659.0" width="8.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="81.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.73%)</title><rect x="78.2" y="643.0" width="8.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="81.2" y="654.0"></text>
</g>
<g>
<title>write (36 samples, 0.73%)</title><rect x="78.2" y="627.0" width="8.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="81.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.71%)</title><rect x="78.4" y="611.0" width="8.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="81.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.71%)</title><rect x="78.4" y="595.0" width="8.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="81.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.63%)</title><rect x="79.4" y="579.0" width="7.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="82.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.63%)</title><rect x="79.4" y="563.0" width="7.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="82.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.63%)</title><rect x="79.4" y="547.0" width="7.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="82.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.59%)</title><rect x="79.8" y="531.0" width="7.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="82.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.55%)</title><rect x="80.3" y="515.0" width="6.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="83.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.47%)</title><rect x="81.3" y="499.0" width="5.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="84.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.36%)</title><rect x="82.5" y="483.0" width="4.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="85.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.32%)</title><rect x="82.9" y="467.0" width="3.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="85.9" y="478.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="84.1" y="451.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="87.1" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.06%)</title><rect x="87.0" y="723.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="90.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (15 samples, 0.30%)</title><rect x="87.7" y="723.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="90.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (14 samples, 0.28%)</title><rect x="87.7" y="707.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (14 samples, 0.28%)</title><rect x="87.7" y="691.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (14 samples, 0.28%)</title><rect x="87.7" y="675.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="90.7" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/604125138.linkToTargetMethod (14 samples, 0.28%)</title><rect x="87.7" y="659.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="90.7" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/741669172.invoke (14 samples, 0.28%)</title><rect x="87.7" y="643.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="90.7" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="88.7" y="627.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="91.7" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.04%)</title><rect x="88.9" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="91.9" y="622.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/726950788.invokeStatic (3 samples, 0.06%)</title><rect x="89.4" y="627.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="92.4" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (3 samples, 0.06%)</title><rect x="89.4" y="611.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="92.4" y="622.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (3 samples, 0.06%)</title><rect x="89.4" y="595.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.4" y="606.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="89.6" y="579.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="92.6" y="590.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.04%)</title><rect x="89.6" y="563.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="92.6" y="574.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1982791261.invoke (4 samples, 0.08%)</title><rect x="90.1" y="627.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.1" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.08%)</title><rect x="90.1" y="611.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="93.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (4 samples, 0.08%)</title><rect x="90.1" y="595.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.1" y="606.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.08%)</title><rect x="90.1" y="579.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="93.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (112 samples, 2.27%)</title><rect x="91.3" y="787.0" width="26.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.3" y="798.0">j..</text>
</g>
<g>
<title>java/lang/Long.toString (2 samples, 0.04%)</title><rect x="91.8" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="92.7" y="771.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.7" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="92.7" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.7" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="92.7" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="95.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="92.7" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.7" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="92.7" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="95.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (69 samples, 1.40%)</title><rect x="93.5" y="771.0" width="16.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (9 samples, 0.18%)</title><rect x="94.2" y="755.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="97.2" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (8 samples, 0.16%)</title><rect x="94.4" y="739.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.4" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (8 samples, 0.16%)</title><rect x="94.4" y="723.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.4" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (8 samples, 0.16%)</title><rect x="94.4" y="707.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="97.4" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (8 samples, 0.16%)</title><rect x="94.4" y="691.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.4" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.12%)</title><rect x="94.9" y="675.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="97.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.06%)</title><rect x="95.6" y="659.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="98.6" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="95.9" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.9" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="95.9" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="98.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (29 samples, 0.59%)</title><rect x="96.3" y="755.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (10 samples, 0.20%)</title><rect x="96.3" y="739.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.3" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.20%)</title><rect x="96.3" y="723.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="99.3" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.08%)</title><rect x="96.8" y="707.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.8" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.06%)</title><rect x="97.1" y="691.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.1" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="97.3" y="675.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="100.3" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.04%)</title><rect x="97.8" y="707.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="100.8" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.04%)</title><rect x="98.7" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.7" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.04%)</title><rect x="98.7" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.7" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.04%)</title><rect x="98.7" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.04%)</title><rect x="98.7" y="691.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.04%)</title><rect x="98.7" y="675.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.7" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.04%)</title><rect x="98.7" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.7" y="670.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (10 samples, 0.20%)</title><rect x="99.2" y="739.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="102.2" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (9 samples, 0.18%)</title><rect x="99.4" y="723.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="102.4" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (8 samples, 0.16%)</title><rect x="99.7" y="707.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="102.7" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (4 samples, 0.08%)</title><rect x="99.9" y="691.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="102.9" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="100.2" y="675.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="103.2" y="686.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$257/499187032.test (2 samples, 0.04%)</title><rect x="101.1" y="691.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.1" y="702.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$257/499187032.test (7 samples, 0.14%)</title><rect x="101.6" y="739.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="104.6" y="750.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (5 samples, 0.10%)</title><rect x="102.1" y="723.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="105.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1002191352.test (5 samples, 0.10%)</title><rect x="102.1" y="707.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="105.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (5 samples, 0.10%)</title><rect x="102.1" y="691.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.1" y="702.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/1426329391.test (5 samples, 0.10%)</title><rect x="102.1" y="675.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.1" y="686.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (5 samples, 0.10%)</title><rect x="102.1" y="659.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="105.1" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/360067785.test (4 samples, 0.08%)</title><rect x="102.1" y="643.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="105.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (4 samples, 0.08%)</title><rect x="102.1" y="627.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="105.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.06%)</title><rect x="102.3" y="611.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="105.3" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.06%)</title><rect x="102.3" y="595.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="105.3" y="606.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="102.3" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="105.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (28 samples, 0.57%)</title><rect x="103.3" y="755.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="106.3" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (28 samples, 0.57%)</title><rect x="103.3" y="739.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="106.3" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (28 samples, 0.57%)</title><rect x="103.3" y="723.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.3" y="734.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (3 samples, 0.06%)</title><rect x="103.3" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.3" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (3 samples, 0.06%)</title><rect x="103.3" y="691.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.3" y="702.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="103.3" y="675.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="106.3" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (23 samples, 0.47%)</title><rect x="104.5" y="707.0" width="5.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="107.5" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/1304086955.accept (20 samples, 0.41%)</title><rect x="104.9" y="691.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.9" y="702.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (19 samples, 0.39%)</title><rect x="105.2" y="675.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="108.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.10%)</title><rect x="105.2" y="659.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.10%)</title><rect x="105.2" y="643.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.2" y="654.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.08%)</title><rect x="105.4" y="627.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.4" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="106.4" y="659.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="106.4" y="643.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="109.4" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.get$Lambda (3 samples, 0.06%)</title><rect x="106.4" y="627.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.4" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.&lt;init&gt; (3 samples, 0.06%)</title><rect x="106.4" y="611.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="109.4" y="622.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (4 samples, 0.08%)</title><rect x="107.1" y="659.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.1" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.accept (4 samples, 0.08%)</title><rect x="107.1" y="643.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="110.1" y="654.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (4 samples, 0.08%)</title><rect x="107.1" y="627.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.1" y="638.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.04%)</title><rect x="107.6" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="110.6" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.04%)</title><rect x="107.6" y="595.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="110.6" y="606.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="107.6" y="579.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.6" y="590.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="107.6" y="563.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.6" y="574.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.14%)</title><rect x="108.1" y="659.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="111.1" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (3 samples, 0.06%)</title><rect x="108.3" y="643.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.3" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.04%)</title><rect x="109.0" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.0" y="654.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="109.0" y="627.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="112.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="109.0" y="611.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (5 samples, 0.10%)</title><rect x="110.0" y="771.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="113.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (4 samples, 0.08%)</title><rect x="110.0" y="755.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="113.0" y="766.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (2 samples, 0.04%)</title><rect x="110.4" y="739.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (5 samples, 0.10%)</title><rect x="111.2" y="771.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="114.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (5 samples, 0.10%)</title><rect x="111.2" y="755.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="114.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.08%)</title><rect x="111.2" y="739.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.2" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (4 samples, 0.08%)</title><rect x="111.2" y="723.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="114.2" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22429093.invoke (4 samples, 0.08%)</title><rect x="111.2" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.2" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.08%)</title><rect x="111.2" y="691.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="114.2" y="702.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (2 samples, 0.04%)</title><rect x="111.2" y="675.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="114.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="111.2" y="659.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="114.2" y="670.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.04%)</title><rect x="111.6" y="675.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.6" y="686.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.04%)</title><rect x="111.6" y="659.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="114.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (24 samples, 0.49%)</title><rect x="112.4" y="771.0" width="5.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="115.4" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.08%)</title><rect x="112.4" y="755.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.4" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.18%)</title><rect x="113.3" y="755.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="116.3" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (9 samples, 0.18%)</title><rect x="113.3" y="739.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.3" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.14%)</title><rect x="113.8" y="723.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="116.8" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (7 samples, 0.14%)</title><rect x="113.8" y="707.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="116.8" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.04%)</title><rect x="114.3" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="117.3" y="702.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.06%)</title><rect x="114.8" y="691.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="117.8" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.04%)</title><rect x="115.0" y="675.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="118.0" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.20%)</title><rect x="115.5" y="755.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="118.5" y="766.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.04%)</title><rect x="116.2" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="119.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="116.2" y="723.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="119.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="116.2" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="116.2" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="119.2" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (5 samples, 0.10%)</title><rect x="116.7" y="739.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="119.7" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (4 samples, 0.08%)</title><rect x="116.9" y="723.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="119.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (33 samples, 0.67%)</title><rect x="118.1" y="851.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="121.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (14 samples, 0.28%)</title><rect x="121.7" y="835.0" width="3.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.24%)</title><rect x="122.2" y="819.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (12 samples, 0.24%)</title><rect x="122.2" y="803.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="125.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (12 samples, 0.24%)</title><rect x="122.2" y="787.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (12 samples, 0.24%)</title><rect x="122.2" y="771.0" width="2.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9 samples, 0.18%)</title><rect x="122.4" y="755.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/939607844.run (8 samples, 0.16%)</title><rect x="122.6" y="739.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (8 samples, 0.16%)</title><rect x="122.6" y="723.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="125.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.12%)</title><rect x="122.6" y="707.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="125.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.04%)</title><rect x="124.6" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="127.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.06%)</title><rect x="126.2" y="995.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="129.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (286 samples, 5.80%)</title><rect x="126.9" y="995.0" width="68.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="129.9" y="1006.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="126.9" y="979.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="129.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="126.9" y="963.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="129.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="127.4" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="127.4" y="963.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="130.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (282 samples, 5.72%)</title><rect x="127.9" y="979.0" width="67.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="130.9" y="990.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (253 samples, 5.13%)</title><rect x="128.1" y="963.0" width="60.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.1" y="974.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (253 samples, 5.13%)</title><rect x="128.1" y="947.0" width="60.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.1" y="958.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (253 samples, 5.13%)</title><rect x="128.1" y="931.0" width="60.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.1" y="942.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="128.1" y="915.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="131.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="128.1" y="899.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="131.1" y="910.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="128.1" y="883.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="131.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/660313033.apply (251 samples, 5.09%)</title><rect x="128.6" y="915.0" width="60.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="131.6" y="926.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (251 samples, 5.09%)</title><rect x="128.6" y="899.0" width="60.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.6" y="910.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (250 samples, 5.07%)</title><rect x="128.9" y="883.0" width="59.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="131.9" y="894.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (115 samples, 2.33%)</title><rect x="129.1" y="867.0" width="27.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="132.1" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (115 samples, 2.33%)</title><rect x="129.1" y="851.0" width="27.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="132.1" y="862.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (114 samples, 2.31%)</title><rect x="129.3" y="835.0" width="27.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="132.3" y="846.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$207/677586424.apply (112 samples, 2.27%)</title><rect x="129.6" y="819.0" width="26.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.6" y="830.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (111 samples, 2.25%)</title><rect x="129.8" y="803.0" width="26.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.8" y="814.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (111 samples, 2.25%)</title><rect x="129.8" y="787.0" width="26.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.8" y="798.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (111 samples, 2.25%)</title><rect x="129.8" y="771.0" width="26.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.8" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (82 samples, 1.66%)</title><rect x="129.8" y="755.0" width="19.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="132.8" y="766.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (8 samples, 0.16%)</title><rect x="129.8" y="739.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.08%)</title><rect x="129.8" y="723.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="132.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (3 samples, 0.06%)</title><rect x="129.8" y="707.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="132.8" y="718.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (4 samples, 0.08%)</title><rect x="130.8" y="723.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.8" y="734.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (4 samples, 0.08%)</title><rect x="130.8" y="707.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.8" y="718.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (4 samples, 0.08%)</title><rect x="130.8" y="691.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="133.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (70 samples, 1.42%)</title><rect x="131.7" y="739.0" width="16.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (64 samples, 1.30%)</title><rect x="131.7" y="723.0" width="15.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="134.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (64 samples, 1.30%)</title><rect x="131.7" y="707.0" width="15.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="134.7" y="718.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (62 samples, 1.26%)</title><rect x="132.2" y="691.0" width="14.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="135.2" y="702.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (36 samples, 0.73%)</title><rect x="133.6" y="675.0" width="8.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="136.6" y="686.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 0.08%)</title><rect x="135.6" y="659.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="138.6" y="670.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.04%)</title><rect x="136.5" y="659.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="139.5" y="670.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.12%)</title><rect x="137.5" y="659.0" width="1.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="140.5" y="670.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.10%)</title><rect x="137.7" y="643.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="140.7" y="654.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.06%)</title><rect x="137.7" y="627.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="140.7" y="638.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.04%)</title><rect x="138.4" y="627.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="141.4" y="638.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (14 samples, 0.28%)</title><rect x="138.9" y="659.0" width="3.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="141.9" y="670.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.08%)</title><rect x="140.3" y="643.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="143.3" y="654.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.04%)</title><rect x="140.8" y="627.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="143.8" y="638.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.04%)</title><rect x="141.3" y="643.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="144.3" y="654.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.04%)</title><rect x="141.8" y="643.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="144.8" y="654.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.04%)</title><rect x="141.8" y="627.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="144.8" y="638.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="141.8" y="611.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="144.8" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/146370526.run (15 samples, 0.30%)</title><rect x="142.7" y="675.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="145.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (14 samples, 0.28%)</title><rect x="143.0" y="659.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="146.0" y="670.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (14 samples, 0.28%)</title><rect x="143.0" y="643.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="146.0" y="654.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.04%)</title><rect x="143.4" y="627.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="146.4" y="638.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (7 samples, 0.14%)</title><rect x="143.9" y="627.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.9" y="638.0"></text>
</g>
<g>
<title>java/lang/System.checkKey (3 samples, 0.06%)</title><rect x="143.9" y="611.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.9" y="622.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.06%)</title><rect x="143.9" y="595.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.9" y="606.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.08%)</title><rect x="144.6" y="611.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="147.6" y="622.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.06%)</title><rect x="144.9" y="595.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="147.9" y="606.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.06%)</title><rect x="145.6" y="627.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="148.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.06%)</title><rect x="145.6" y="611.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="148.6" y="622.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="146.3" y="675.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="149.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (6 samples, 0.12%)</title><rect x="147.0" y="723.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="150.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (6 samples, 0.12%)</title><rect x="147.0" y="707.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="150.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (4 samples, 0.08%)</title><rect x="148.5" y="739.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (2 samples, 0.04%)</title><rect x="149.0" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (29 samples, 0.59%)</title><rect x="149.4" y="755.0" width="7.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="152.4" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.14%)</title><rect x="149.7" y="739.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.7" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.14%)</title><rect x="149.7" y="723.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.7" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.12%)</title><rect x="149.9" y="707.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="152.9" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.10%)</title><rect x="150.1" y="691.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="153.1" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.04%)</title><rect x="150.6" y="675.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.6" y="686.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (4 samples, 0.08%)</title><rect x="151.3" y="739.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="154.3" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (17 samples, 0.34%)</title><rect x="152.3" y="739.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="155.3" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (6 samples, 0.12%)</title><rect x="152.8" y="723.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.8" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.04%)</title><rect x="154.2" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.2" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (7 samples, 0.14%)</title><rect x="154.7" y="723.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="157.7" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (6 samples, 0.12%)</title><rect x="154.9" y="707.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (134 samples, 2.72%)</title><rect x="156.6" y="867.0" width="32.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="159.6" y="878.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (134 samples, 2.72%)</title><rect x="156.6" y="851.0" width="32.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="159.6" y="862.0">jd..</text>
</g>
<g>
<title>java/util/LinkedList.add (8 samples, 0.16%)</title><rect x="157.1" y="835.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="160.1" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (7 samples, 0.14%)</title><rect x="157.3" y="819.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (13 samples, 0.26%)</title><rect x="159.0" y="835.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="162.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (6 samples, 0.12%)</title><rect x="162.3" y="835.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="165.3" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="162.3" y="819.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.3" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="162.3" y="803.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="165.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/939607844.get$Lambda (3 samples, 0.06%)</title><rect x="162.3" y="787.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="165.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/939607844.&lt;init&gt; (3 samples, 0.06%)</title><rect x="162.3" y="771.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="165.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (2 samples, 0.04%)</title><rect x="163.1" y="819.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="166.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (8 samples, 0.16%)</title><rect x="163.8" y="835.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="166.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (5 samples, 0.10%)</title><rect x="164.3" y="819.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="167.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (3 samples, 0.06%)</title><rect x="164.5" y="803.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="167.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (20 samples, 0.41%)</title><rect x="165.7" y="835.0" width="4.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="168.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (13 samples, 0.26%)</title><rect x="165.7" y="819.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="168.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (10 samples, 0.20%)</title><rect x="166.4" y="803.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="169.4" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.08%)</title><rect x="166.6" y="787.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="169.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.08%)</title><rect x="166.6" y="771.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="169.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (2 samples, 0.04%)</title><rect x="166.6" y="755.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="169.6" y="766.0"></text>
</g>
<g>
<title>java/util/Objects.equals (2 samples, 0.04%)</title><rect x="166.6" y="739.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="169.6" y="750.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (2 samples, 0.04%)</title><rect x="166.6" y="723.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="169.6" y="734.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (2 samples, 0.04%)</title><rect x="166.6" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="169.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (3 samples, 0.06%)</title><rect x="168.1" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.1" y="798.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.06%)</title><rect x="168.1" y="771.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="171.1" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.06%)</title><rect x="168.1" y="755.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="171.1" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (3 samples, 0.06%)</title><rect x="168.1" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="171.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (6 samples, 0.12%)</title><rect x="168.8" y="819.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="171.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (4 samples, 0.08%)</title><rect x="169.3" y="803.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="172.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (2 samples, 0.04%)</title><rect x="169.8" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="172.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (74 samples, 1.50%)</title><rect x="170.5" y="835.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="173.5" y="846.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (74 samples, 1.50%)</title><rect x="170.5" y="819.0" width="17.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="173.5" y="830.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (45 samples, 0.91%)</title><rect x="171.0" y="803.0" width="10.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="174.0" y="814.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (2 samples, 0.04%)</title><rect x="171.9" y="787.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="174.9" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (4 samples, 0.08%)</title><rect x="172.6" y="787.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="175.6" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (2 samples, 0.04%)</title><rect x="172.6" y="771.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="175.6" y="782.0"></text>
</g>
<g>
<title>method_matches(Method const*, Symbol const*, bool, bool, bool) (2 samples, 0.04%)</title><rect x="173.1" y="771.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="176.1" y="782.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.04%)</title><rect x="173.6" y="787.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="176.6" y="798.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (12 samples, 0.24%)</title><rect x="174.1" y="787.0" width="2.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="177.1" y="798.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (3 samples, 0.06%)</title><rect x="174.8" y="771.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="177.8" y="782.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.04%)</title><rect x="175.5" y="771.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="178.5" y="782.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.04%)</title><rect x="176.5" y="771.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="179.5" y="782.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.06%)</title><rect x="176.9" y="787.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="179.9" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (2 samples, 0.04%)</title><rect x="177.9" y="787.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="180.9" y="798.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (7 samples, 0.14%)</title><rect x="178.6" y="787.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="181.6" y="798.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.08%)</title><rect x="179.1" y="771.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="182.1" y="782.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.06%)</title><rect x="179.1" y="755.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="182.1" y="766.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (6 samples, 0.12%)</title><rect x="180.3" y="787.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="183.3" y="798.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.04%)</title><rect x="180.8" y="771.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="183.8" y="782.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.04%)</title><rect x="181.2" y="771.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="184.2" y="782.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.04%)</title><rect x="182.0" y="803.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="185.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$161/731132211.run (21 samples, 0.43%)</title><rect x="182.4" y="803.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (18 samples, 0.36%)</title><rect x="183.1" y="787.0" width="4.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="186.1" y="798.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (18 samples, 0.36%)</title><rect x="183.1" y="771.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.1" y="782.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (17 samples, 0.34%)</title><rect x="183.1" y="755.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="186.1" y="766.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (17 samples, 0.34%)</title><rect x="183.1" y="739.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.1" y="750.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (15 samples, 0.30%)</title><rect x="183.6" y="723.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="186.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.charAt (5 samples, 0.10%)</title><rect x="184.8" y="707.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (2 samples, 0.04%)</title><rect x="185.5" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="188.5" y="702.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (5 samples, 0.10%)</title><rect x="186.0" y="707.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="189.0" y="718.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.04%)</title><rect x="187.5" y="803.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="190.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.04%)</title><rect x="188.2" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="191.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.04%)</title><rect x="188.2" y="819.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="191.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (6 samples, 0.12%)</title><rect x="188.7" y="963.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="191.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (6 samples, 0.12%)</title><rect x="188.7" y="947.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="191.7" y="958.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.12%)</title><rect x="188.7" y="931.0" width="1.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="191.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.request (2 samples, 0.04%)</title><rect x="190.1" y="963.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (19 samples, 0.39%)</title><rect x="190.8" y="963.0" width="4.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (8 samples, 0.16%)</title><rect x="191.0" y="947.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="194.0" y="958.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.06%)</title><rect x="191.5" y="931.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="194.5" y="942.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.06%)</title><rect x="192.2" y="931.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (10 samples, 0.20%)</title><rect x="193.0" y="947.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.0" y="958.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.14%)</title><rect x="193.0" y="931.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="196.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (6 samples, 0.12%)</title><rect x="193.2" y="915.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="196.2" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="193.9" y="899.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="196.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (3 samples, 0.06%)</title><rect x="194.6" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.6" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1425625864.linkToTargetMethod (3 samples, 0.06%)</title><rect x="194.6" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="197.6" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/587140885.invoke (3 samples, 0.06%)</title><rect x="194.6" y="899.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="197.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/566159350.invoke (2 samples, 0.04%)</title><rect x="194.9" y="883.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="197.9" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="194.9" y="867.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="197.9" y="878.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.04%)</title><rect x="194.9" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="197.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.timeout (2 samples, 0.04%)</title><rect x="195.3" y="1043.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (13 samples, 0.26%)</title><rect x="195.8" y="1043.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="198.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (9 samples, 0.18%)</title><rect x="196.5" y="1027.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="199.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (4 samples, 0.08%)</title><rect x="196.8" y="1011.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="199.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (3 samples, 0.06%)</title><rect x="197.7" y="1011.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (4 samples, 0.08%)</title><rect x="199.2" y="1139.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="202.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.08%)</title><rect x="199.2" y="1123.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="202.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (3 samples, 0.06%)</title><rect x="200.1" y="1139.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="200.1" y="1123.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="203.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (430 samples, 8.72%)</title><rect x="200.8" y="1139.0" width="102.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.8" y="1150.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (385 samples, 7.80%)</title><rect x="204.0" y="1123.0" width="92.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="207.0" y="1134.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (268 samples, 5.43%)</title><rect x="205.2" y="1107.0" width="64.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.2" y="1118.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.06%)</title><rect x="205.9" y="1091.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (3 samples, 0.06%)</title><rect x="205.9" y="1075.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.06%)</title><rect x="206.6" y="1091.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.shouldParkAfterFailedAcquire (2 samples, 0.04%)</title><rect x="206.8" y="1075.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (40 samples, 0.81%)</title><rect x="207.3" y="1091.0" width="9.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (39 samples, 0.79%)</title><rect x="207.5" y="1075.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="210.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (39 samples, 0.79%)</title><rect x="207.5" y="1059.0" width="9.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (37 samples, 0.75%)</title><rect x="208.0" y="1043.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="211.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (37 samples, 0.75%)</title><rect x="208.0" y="1027.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.0" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.20%)</title><rect x="208.3" y="1011.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="211.3" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (2 samples, 0.04%)</title><rect x="208.7" y="995.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="211.7" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.06%)</title><rect x="209.5" y="995.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="212.5" y="1006.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="210.2" y="995.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="213.2" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (26 samples, 0.53%)</title><rect x="210.7" y="1011.0" width="6.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="213.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.53%)</title><rect x="210.7" y="995.0" width="6.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="213.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.53%)</title><rect x="210.7" y="979.0" width="6.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="213.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.51%)</title><rect x="210.9" y="963.0" width="6.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="213.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.51%)</title><rect x="210.9" y="947.0" width="6.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="213.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.51%)</title><rect x="210.9" y="931.0" width="6.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="213.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.49%)</title><rect x="211.1" y="915.0" width="5.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="214.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.47%)</title><rect x="211.4" y="899.0" width="5.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="214.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.45%)</title><rect x="211.6" y="883.0" width="5.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="214.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (218 samples, 4.42%)</title><rect x="217.1" y="1091.0" width="52.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="220.1" y="1102.0">java/..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (218 samples, 4.42%)</title><rect x="217.1" y="1075.0" width="52.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="220.1" y="1086.0">jdk/i..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (3 samples, 0.06%)</title><rect x="218.5" y="1059.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="221.5" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Park (91 samples, 1.84%)</title><rect x="219.3" y="1059.0" width="21.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="222.3" y="1070.0">U..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (7 samples, 0.14%)</title><rect x="221.9" y="1043.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="224.9" y="1054.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (28 samples, 0.57%)</title><rect x="223.8" y="1043.0" width="6.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="226.8" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (7 samples, 0.14%)</title><rect x="228.1" y="1027.0" width="1.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="231.1" y="1038.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="230.0" y="1027.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="233.0" y="1038.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="230.7" y="1043.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="233.7" y="1054.0"></text>
</g>
<g>
<title>__lll_unlock_wake (20 samples, 0.41%)</title><rect x="231.2" y="1043.0" width="4.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="234.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.39%)</title><rect x="231.5" y="1027.0" width="4.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="234.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.39%)</title><rect x="231.5" y="1011.0" width="4.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="234.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.28%)</title><rect x="232.7" y="995.0" width="3.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="235.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.26%)</title><rect x="232.9" y="979.0" width="3.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="235.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.24%)</title><rect x="233.1" y="963.0" width="2.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="236.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="234.6" y="947.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="237.6" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.10%)</title><rect x="236.0" y="1043.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="239.0" y="1054.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="237.4" y="1043.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="240.4" y="1054.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.06%)</title><rect x="238.2" y="1043.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="241.2" y="1054.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (7 samples, 0.14%)</title><rect x="239.4" y="1043.0" width="1.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="242.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (118 samples, 2.39%)</title><rect x="241.0" y="1059.0" width="28.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="244.0" y="1070.0">[u..</text>
</g>
<g>
<title>__pthread_cond_wait (103 samples, 2.09%)</title><rect x="241.5" y="1043.0" width="24.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="244.5" y="1054.0">_..</text>
</g>
<g>
<title>[unknown] (84 samples, 1.70%)</title><rect x="246.0" y="1027.0" width="20.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="249.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (84 samples, 1.70%)</title><rect x="246.0" y="1011.0" width="20.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="249.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.58%)</title><rect x="247.5" y="995.0" width="18.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="250.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.58%)</title><rect x="247.5" y="979.0" width="18.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="250.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 1.46%)</title><rect x="248.9" y="963.0" width="17.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="251.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 1.36%)</title><rect x="250.1" y="947.0" width="16.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="253.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 1.22%)</title><rect x="251.8" y="931.0" width="14.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="254.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.95%)</title><rect x="254.9" y="915.0" width="11.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="257.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.87%)</title><rect x="255.9" y="899.0" width="10.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="258.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="265.7" y="883.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="268.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="265.7" y="867.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="268.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="265.7" y="851.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="268.7" y="862.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (6 samples, 0.12%)</title><rect x="266.1" y="1043.0" width="1.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="269.1" y="1054.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.06%)</title><rect x="267.8" y="1043.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="270.8" y="1054.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (3 samples, 0.06%)</title><rect x="268.5" y="1043.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="271.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (34 samples, 0.69%)</title><rect x="269.2" y="1107.0" width="8.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (34 samples, 0.69%)</title><rect x="269.2" y="1091.0" width="8.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="272.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.08%)</title><rect x="269.5" y="1075.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="272.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.06%)</title><rect x="269.7" y="1059.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="272.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (25 samples, 0.51%)</title><rect x="270.4" y="1075.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (7 samples, 0.14%)</title><rect x="270.7" y="1059.0" width="1.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="273.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.14%)</title><rect x="270.7" y="1043.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="273.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (4 samples, 0.08%)</title><rect x="270.7" y="1027.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="271.6" y="1027.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="274.6" y="1038.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.06%)</title><rect x="271.6" y="1011.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="274.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (5 samples, 0.10%)</title><rect x="272.4" y="1059.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="275.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (10 samples, 0.20%)</title><rect x="273.6" y="1059.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="276.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (10 samples, 0.20%)</title><rect x="273.6" y="1043.0" width="2.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (6 samples, 0.12%)</title><rect x="274.0" y="1027.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="277.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.04%)</title><rect x="275.5" y="1027.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="278.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.04%)</title><rect x="275.5" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="278.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.04%)</title><rect x="275.9" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="278.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="276.7" y="1075.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="279.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (78 samples, 1.58%)</title><rect x="277.4" y="1107.0" width="18.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="280.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (78 samples, 1.58%)</title><rect x="277.4" y="1091.0" width="18.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (78 samples, 1.58%)</title><rect x="277.4" y="1075.0" width="18.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="280.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (78 samples, 1.58%)</title><rect x="277.4" y="1059.0" width="18.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="280.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (78 samples, 1.58%)</title><rect x="277.4" y="1043.0" width="18.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="280.4" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (15 samples, 0.30%)</title><rect x="277.6" y="1027.0" width="3.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="280.6" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.08%)</title><rect x="278.6" y="1011.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="281.6" y="1022.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.08%)</title><rect x="279.8" y="1011.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="282.8" y="1022.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="280.7" y="1011.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="283.7" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.04%)</title><rect x="281.2" y="1027.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="284.2" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (60 samples, 1.22%)</title><rect x="281.7" y="1027.0" width="14.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="284.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 1.13%)</title><rect x="282.6" y="1011.0" width="13.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="285.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 1.13%)</title><rect x="282.6" y="995.0" width="13.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="285.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.07%)</title><rect x="283.4" y="979.0" width="12.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="286.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.03%)</title><rect x="283.8" y="963.0" width="12.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="286.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.99%)</title><rect x="284.3" y="947.0" width="11.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="287.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.87%)</title><rect x="285.7" y="931.0" width="10.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="288.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.79%)</title><rect x="286.7" y="915.0" width="9.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="289.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.77%)</title><rect x="286.9" y="899.0" width="9.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="289.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (31 samples, 0.63%)</title><rect x="296.0" y="1123.0" width="7.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="299.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (31 samples, 0.63%)</title><rect x="296.0" y="1107.0" width="7.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (17 samples, 0.34%)</title><rect x="299.4" y="1091.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="302.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (3 samples, 0.06%)</title><rect x="299.6" y="1075.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="302.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.06%)</title><rect x="299.6" y="1059.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="302.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="299.9" y="1043.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="302.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (2 samples, 0.04%)</title><rect x="300.6" y="1075.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="303.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="300.6" y="1059.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="303.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (9 samples, 0.18%)</title><rect x="301.1" y="1075.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.18%)</title><rect x="301.1" y="1059.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.1" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.06%)</title><rect x="301.1" y="1043.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="304.1" y="1054.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="301.1" y="1027.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="304.1" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.08%)</title><rect x="302.0" y="1043.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="305.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="302.2" y="1027.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="305.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="302.2" y="1011.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="305.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="302.2" y="995.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="305.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="302.2" y="979.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="305.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="302.5" y="963.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="305.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="302.5" y="947.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="305.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="302.5" y="931.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="305.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="302.5" y="915.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="305.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (4 samples, 0.08%)</title><rect x="303.7" y="1139.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$255/1801153474.run (450 samples, 9.12%)</title><rect x="304.9" y="1139.0" width="107.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="307.9" y="1150.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (448 samples, 9.08%)</title><rect x="305.4" y="1123.0" width="107.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.4" y="1134.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (448 samples, 9.08%)</title><rect x="305.4" y="1107.0" width="107.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="308.4" y="1118.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (441 samples, 8.94%)</title><rect x="307.0" y="1091.0" width="105.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="310.0" y="1102.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (441 samples, 8.94%)</title><rect x="307.0" y="1075.0" width="105.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.0" y="1086.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (441 samples, 8.94%)</title><rect x="307.0" y="1059.0" width="105.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.0" y="1070.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (440 samples, 8.92%)</title><rect x="307.3" y="1043.0" width="105.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.3" y="1054.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (440 samples, 8.92%)</title><rect x="307.3" y="1027.0" width="105.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="310.3" y="1038.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (440 samples, 8.92%)</title><rect x="307.3" y="1011.0" width="105.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="310.3" y="1022.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (439 samples, 8.90%)</title><rect x="307.3" y="995.0" width="105.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="310.3" y="1006.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (439 samples, 8.90%)</title><rect x="307.3" y="979.0" width="105.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="310.3" y="990.0">jdk/internal..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (79 samples, 1.60%)</title><rect x="309.2" y="963.0" width="18.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="312.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (68 samples, 1.38%)</title><rect x="309.7" y="947.0" width="16.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="312.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (68 samples, 1.38%)</title><rect x="309.7" y="931.0" width="16.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="312.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (66 samples, 1.34%)</title><rect x="309.9" y="915.0" width="15.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="312.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (61 samples, 1.24%)</title><rect x="310.4" y="899.0" width="14.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="313.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (36 samples, 0.73%)</title><rect x="310.4" y="883.0" width="8.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="313.4" y="894.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="311.1" y="867.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="314.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.06%)</title><rect x="311.6" y="867.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="314.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.06%)</title><rect x="311.6" y="851.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$264/500678966.apply (11 samples, 0.22%)</title><rect x="312.3" y="867.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="315.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (11 samples, 0.22%)</title><rect x="312.3" y="851.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="315.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (11 samples, 0.22%)</title><rect x="312.3" y="835.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="315.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (7 samples, 0.14%)</title><rect x="313.3" y="819.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (5 samples, 0.10%)</title><rect x="313.7" y="803.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="316.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (5 samples, 0.10%)</title><rect x="313.7" y="787.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="316.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (5 samples, 0.10%)</title><rect x="313.7" y="771.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/1208971968.apply (17 samples, 0.34%)</title><rect x="314.9" y="867.0" width="4.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="317.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (17 samples, 0.34%)</title><rect x="314.9" y="851.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="317.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (17 samples, 0.34%)</title><rect x="314.9" y="835.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="317.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (17 samples, 0.34%)</title><rect x="314.9" y="819.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (17 samples, 0.34%)</title><rect x="314.9" y="803.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="317.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (16 samples, 0.32%)</title><rect x="315.2" y="787.0" width="3.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="318.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$286/1806093010.run (16 samples, 0.32%)</title><rect x="315.2" y="771.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="318.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (16 samples, 0.32%)</title><rect x="315.2" y="755.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="318.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (5 samples, 0.10%)</title><rect x="315.2" y="739.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="318.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.08%)</title><rect x="315.4" y="723.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="318.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.08%)</title><rect x="315.4" y="707.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="318.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.08%)</title><rect x="315.4" y="691.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.08%)</title><rect x="315.4" y="675.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="318.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.08%)</title><rect x="315.4" y="659.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="318.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/939607844.run (4 samples, 0.08%)</title><rect x="315.4" y="643.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="318.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4 samples, 0.08%)</title><rect x="315.4" y="627.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="318.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (3 samples, 0.06%)</title><rect x="315.6" y="611.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (3 samples, 0.06%)</title><rect x="315.6" y="595.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (3 samples, 0.06%)</title><rect x="315.6" y="579.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="318.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (3 samples, 0.06%)</title><rect x="315.6" y="563.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="318.6" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (3 samples, 0.06%)</title><rect x="315.6" y="547.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="318.6" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (3 samples, 0.06%)</title><rect x="315.6" y="531.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="318.6" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/200648898.run (2 samples, 0.04%)</title><rect x="315.6" y="515.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="318.6" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2 samples, 0.04%)</title><rect x="315.6" y="499.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.6" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2 samples, 0.04%)</title><rect x="315.6" y="483.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="318.6" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.04%)</title><rect x="315.6" y="467.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="318.6" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.04%)</title><rect x="315.6" y="451.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="318.6" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (11 samples, 0.22%)</title><rect x="316.4" y="739.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="319.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (11 samples, 0.22%)</title><rect x="316.4" y="723.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.22%)</title><rect x="316.4" y="707.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (11 samples, 0.22%)</title><rect x="316.4" y="691.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (11 samples, 0.22%)</title><rect x="316.4" y="675.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="319.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.22%)</title><rect x="316.4" y="659.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (10 samples, 0.20%)</title><rect x="316.4" y="643.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="319.4" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (10 samples, 0.20%)</title><rect x="316.4" y="627.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.4" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (10 samples, 0.20%)</title><rect x="316.4" y="611.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="319.4" y="622.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (10 samples, 0.20%)</title><rect x="316.4" y="595.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.4" y="606.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (10 samples, 0.20%)</title><rect x="316.4" y="579.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="319.4" y="590.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (10 samples, 0.20%)</title><rect x="316.4" y="563.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="319.4" y="574.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (10 samples, 0.20%)</title><rect x="316.4" y="547.0" width="2.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="319.4" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (10 samples, 0.20%)</title><rect x="316.4" y="531.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="319.4" y="542.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (10 samples, 0.20%)</title><rect x="316.4" y="515.0" width="2.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="319.4" y="526.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (10 samples, 0.20%)</title><rect x="316.4" y="499.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="319.4" y="510.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (8 samples, 0.16%)</title><rect x="316.8" y="483.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="319.8" y="494.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (8 samples, 0.16%)</title><rect x="316.8" y="467.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="319.8" y="478.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (2 samples, 0.04%)</title><rect x="317.1" y="451.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="320.1" y="462.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (2 samples, 0.04%)</title><rect x="317.1" y="435.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="320.1" y="446.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.04%)</title><rect x="317.8" y="451.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="320.8" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (22 samples, 0.45%)</title><rect x="319.0" y="883.0" width="5.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="322.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (21 samples, 0.43%)</title><rect x="319.2" y="867.0" width="5.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="322.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$239/628439043.apply (19 samples, 0.39%)</title><rect x="319.7" y="851.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="322.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (18 samples, 0.36%)</title><rect x="319.9" y="835.0" width="4.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (18 samples, 0.36%)</title><rect x="319.9" y="819.0" width="4.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="322.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$145/867919385.apply (15 samples, 0.30%)</title><rect x="319.9" y="803.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="322.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (15 samples, 0.30%)</title><rect x="319.9" y="787.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="322.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.06%)</title><rect x="319.9" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="322.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.06%)</title><rect x="319.9" y="755.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="322.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (2 samples, 0.04%)</title><rect x="319.9" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="322.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.04%)</title><rect x="319.9" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="322.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (11 samples, 0.22%)</title><rect x="320.9" y="771.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.04%)</title><rect x="322.3" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="325.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.04%)</title><rect x="322.3" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="325.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (3 samples, 0.06%)</title><rect x="322.8" y="755.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="325.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$147/1130664697.apply (3 samples, 0.06%)</title><rect x="323.5" y="803.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="326.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (3 samples, 0.06%)</title><rect x="323.5" y="787.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="326.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (3 samples, 0.06%)</title><rect x="323.5" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="326.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (3 samples, 0.06%)</title><rect x="323.5" y="755.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="326.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.06%)</title><rect x="323.5" y="739.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="326.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.06%)</title><rect x="323.5" y="723.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="326.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (3 samples, 0.06%)</title><rect x="323.5" y="707.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="326.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (3 samples, 0.06%)</title><rect x="323.5" y="691.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="326.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$274/1586985635.get (3 samples, 0.06%)</title><rect x="325.0" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="328.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (9 samples, 0.18%)</title><rect x="325.9" y="947.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="328.9" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.10%)</title><rect x="325.9" y="931.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="328.9" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.10%)</title><rect x="325.9" y="915.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="328.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (3 samples, 0.06%)</title><rect x="327.1" y="931.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="330.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (3 samples, 0.06%)</title><rect x="327.1" y="915.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="330.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (2 samples, 0.04%)</title><rect x="327.1" y="899.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="330.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (3 samples, 0.06%)</title><rect x="328.1" y="963.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="331.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.06%)</title><rect x="328.1" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="331.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.06%)</title><rect x="328.1" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (348 samples, 7.05%)</title><rect x="328.8" y="963.0" width="83.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="331.8" y="974.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (348 samples, 7.05%)</title><rect x="328.8" y="947.0" width="83.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="331.8" y="958.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (348 samples, 7.05%)</title><rect x="328.8" y="931.0" width="83.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="331.8" y="942.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (347 samples, 7.03%)</title><rect x="329.0" y="915.0" width="83.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="332.0" y="926.0">jdk/inter..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$271/2126917903.run (4 samples, 0.08%)</title><rect x="329.0" y="899.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="332.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (4 samples, 0.08%)</title><rect x="329.0" y="883.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="332.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (4 samples, 0.08%)</title><rect x="329.0" y="867.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="332.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (2 samples, 0.04%)</title><rect x="329.5" y="851.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="332.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (340 samples, 6.89%)</title><rect x="330.0" y="899.0" width="81.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.0" y="910.0">jdk/inter..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (332 samples, 6.73%)</title><rect x="330.2" y="883.0" width="79.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.2" y="894.0">java/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (332 samples, 6.73%)</title><rect x="330.2" y="867.0" width="79.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.2" y="878.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (330 samples, 6.69%)</title><rect x="330.7" y="851.0" width="78.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="333.7" y="862.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (330 samples, 6.69%)</title><rect x="330.7" y="835.0" width="78.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.7" y="846.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (7 samples, 0.14%)</title><rect x="330.9" y="819.0" width="1.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="333.9" y="830.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (5 samples, 0.10%)</title><rect x="331.4" y="803.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="334.4" y="814.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (2 samples, 0.04%)</title><rect x="331.7" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="334.7" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="331.7" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.7" y="782.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.04%)</title><rect x="331.7" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="334.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.04%)</title><rect x="332.1" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.04%)</title><rect x="332.1" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="335.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.04%)</title><rect x="332.1" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="335.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (2 samples, 0.04%)</title><rect x="332.1" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="335.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (2 samples, 0.04%)</title><rect x="332.6" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="335.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (2 samples, 0.04%)</title><rect x="333.1" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="336.1" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setShadow (2 samples, 0.04%)</title><rect x="333.6" y="819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="336.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (309 samples, 6.26%)</title><rect x="334.1" y="819.0" width="73.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="337.1" y="830.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (309 samples, 6.26%)</title><rect x="334.1" y="803.0" width="73.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="337.1" y="814.0">sun/nio/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (2 samples, 0.04%)</title><rect x="334.3" y="787.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="337.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (304 samples, 6.16%)</title><rect x="334.8" y="787.0" width="72.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="337.8" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (304 samples, 6.16%)</title><rect x="334.8" y="771.0" width="72.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="337.8" y="782.0">[unknown]</text>
</g>
<g>
<title>__GI___writev (303 samples, 6.14%)</title><rect x="334.8" y="755.0" width="72.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="337.8" y="766.0">__GI___w..</text>
</g>
<g>
<title>[unknown] (302 samples, 6.12%)</title><rect x="335.0" y="739.0" width="72.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="338.0" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (302 samples, 6.12%)</title><rect x="335.0" y="723.0" width="72.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="338.0" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (298 samples, 6.04%)</title><rect x="336.0" y="707.0" width="71.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="339.0" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (294 samples, 5.96%)</title><rect x="336.9" y="691.0" width="70.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="339.9" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (291 samples, 5.90%)</title><rect x="337.6" y="675.0" width="69.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="340.6" y="686.0">[unknown]</text>
</g>
<g>
<title>[unknown] (285 samples, 5.78%)</title><rect x="339.1" y="659.0" width="68.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="342.1" y="670.0">[unknown]</text>
</g>
<g>
<title>[unknown] (280 samples, 5.67%)</title><rect x="340.3" y="643.0" width="66.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="343.3" y="654.0">[unknown]</text>
</g>
<g>
<title>[unknown] (267 samples, 5.41%)</title><rect x="343.4" y="627.0" width="63.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="346.4" y="638.0">[unknown]</text>
</g>
<g>
<title>[unknown] (264 samples, 5.35%)</title><rect x="344.1" y="611.0" width="63.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="347.1" y="622.0">[unknown]</text>
</g>
<g>
<title>[unknown] (262 samples, 5.31%)</title><rect x="344.6" y="595.0" width="62.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="347.6" y="606.0">[unkno..</text>
</g>
<g>
<title>[unknown] (258 samples, 5.23%)</title><rect x="345.5" y="579.0" width="61.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="348.5" y="590.0">[unkno..</text>
</g>
<g>
<title>[unknown] (255 samples, 5.17%)</title><rect x="346.3" y="563.0" width="60.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="349.3" y="574.0">[unkno..</text>
</g>
<g>
<title>[unknown] (242 samples, 4.90%)</title><rect x="349.4" y="547.0" width="57.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="352.4" y="558.0">[unkno..</text>
</g>
<g>
<title>[unknown] (236 samples, 4.78%)</title><rect x="350.8" y="531.0" width="56.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="353.8" y="542.0">[unkno..</text>
</g>
<g>
<title>[unknown] (232 samples, 4.70%)</title><rect x="351.8" y="515.0" width="55.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="354.8" y="526.0">[unkn..</text>
</g>
<g>
<title>[unknown] (222 samples, 4.50%)</title><rect x="354.1" y="499.0" width="53.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="357.1" y="510.0">[unkn..</text>
</g>
<g>
<title>[unknown] (201 samples, 4.07%)</title><rect x="359.2" y="483.0" width="48.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="362.2" y="494.0">[unk..</text>
</g>
<g>
<title>[unknown] (196 samples, 3.97%)</title><rect x="360.4" y="467.0" width="46.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="363.4" y="478.0">[unk..</text>
</g>
<g>
<title>[unknown] (193 samples, 3.91%)</title><rect x="361.1" y="451.0" width="46.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="364.1" y="462.0">[unk..</text>
</g>
<g>
<title>[unknown] (190 samples, 3.85%)</title><rect x="361.8" y="435.0" width="45.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="364.8" y="446.0">[unk..</text>
</g>
<g>
<title>[unknown] (187 samples, 3.79%)</title><rect x="362.5" y="419.0" width="44.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="365.5" y="430.0">[unk..</text>
</g>
<g>
<title>[unknown] (186 samples, 3.77%)</title><rect x="362.8" y="403.0" width="44.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="365.8" y="414.0">[unk..</text>
</g>
<g>
<title>[unknown] (178 samples, 3.61%)</title><rect x="364.7" y="387.0" width="42.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="367.7" y="398.0">[unk..</text>
</g>
<g>
<title>[unknown] (166 samples, 3.36%)</title><rect x="367.5" y="371.0" width="39.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="370.5" y="382.0">[un..</text>
</g>
<g>
<title>[unknown] (150 samples, 3.04%)</title><rect x="371.4" y="355.0" width="35.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="374.4" y="366.0">[un..</text>
</g>
<g>
<title>[unknown] (140 samples, 2.84%)</title><rect x="373.8" y="339.0" width="33.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="376.8" y="350.0">[u..</text>
</g>
<g>
<title>[unknown] (129 samples, 2.61%)</title><rect x="376.4" y="323.0" width="30.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="379.4" y="334.0">[u..</text>
</g>
<g>
<title>[unknown] (126 samples, 2.55%)</title><rect x="377.1" y="307.0" width="30.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="380.1" y="318.0">[u..</text>
</g>
<g>
<title>[unknown] (122 samples, 2.47%)</title><rect x="378.1" y="291.0" width="29.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="381.1" y="302.0">[u..</text>
</g>
<g>
<title>[unknown] (118 samples, 2.39%)</title><rect x="379.0" y="275.0" width="28.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="382.0" y="286.0">[u..</text>
</g>
<g>
<title>[unknown] (118 samples, 2.39%)</title><rect x="379.0" y="259.0" width="28.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="382.0" y="270.0">[u..</text>
</g>
<g>
<title>[unknown] (111 samples, 2.25%)</title><rect x="380.7" y="243.0" width="26.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="383.7" y="254.0">[..</text>
</g>
<g>
<title>[unknown] (103 samples, 2.09%)</title><rect x="382.6" y="227.0" width="24.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="385.6" y="238.0">[..</text>
</g>
<g>
<title>[unknown] (96 samples, 1.95%)</title><rect x="384.3" y="211.0" width="22.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="387.3" y="222.0">[..</text>
</g>
<g>
<title>[unknown] (95 samples, 1.93%)</title><rect x="384.5" y="195.0" width="22.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="387.5" y="206.0">[..</text>
</g>
<g>
<title>[unknown] (91 samples, 1.84%)</title><rect x="385.5" y="179.0" width="21.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="388.5" y="190.0">[..</text>
</g>
<g>
<title>[unknown] (84 samples, 1.70%)</title><rect x="387.2" y="163.0" width="20.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="390.2" y="174.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 1.56%)</title><rect x="388.8" y="147.0" width="18.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="391.8" y="158.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 1.40%)</title><rect x="390.7" y="131.0" width="16.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="393.7" y="142.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 1.22%)</title><rect x="392.9" y="115.0" width="14.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="395.9" y="126.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.99%)</title><rect x="395.5" y="99.0" width="11.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="398.5" y="110.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.87%)</title><rect x="397.0" y="83.0" width="10.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="400.0" y="94.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.83%)</title><rect x="397.4" y="67.0" width="9.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="400.4" y="78.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="406.3" y="51.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="409.3" y="62.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="406.5" y="35.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="409.5" y="46.0"></text>
</g>
<g>
<title>fdval (2 samples, 0.04%)</title><rect x="407.5" y="787.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="410.5" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="408.0" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerLastTemporaryDirectBuffer (5 samples, 0.10%)</title><rect x="408.4" y="819.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="411.4" y="830.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.06%)</title><rect x="408.4" y="803.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="411.4" y="814.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (2 samples, 0.04%)</title><rect x="408.4" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.4" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.offerLast (2 samples, 0.04%)</title><rect x="409.2" y="803.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="412.2" y="814.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (6 samples, 0.12%)</title><rect x="409.6" y="883.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="412.6" y="894.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.04%)</title><rect x="409.6" y="867.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.6" y="878.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.04%)</title><rect x="410.1" y="867.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="413.1" y="878.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (2 samples, 0.04%)</title><rect x="410.1" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.1" y="862.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (2 samples, 0.04%)</title><rect x="410.6" y="867.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="413.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (3 samples, 0.06%)</title><rect x="411.3" y="899.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="414.3" y="910.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (2 samples, 0.04%)</title><rect x="411.5" y="883.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="414.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (517 samples, 10.48%)</title><rect x="412.5" y="1139.0" width="123.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="415.5" y="1150.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (515 samples, 10.44%)</title><rect x="413.0" y="1123.0" width="123.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.0" y="1134.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (2 samples, 0.04%)</title><rect x="413.5" y="1107.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (2 samples, 0.04%)</title><rect x="413.5" y="1091.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (2 samples, 0.04%)</title><rect x="413.5" y="1075.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (276 samples, 5.59%)</title><rect x="413.9" y="1107.0" width="66.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.9" y="1118.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/939607844.run (274 samples, 5.55%)</title><rect x="414.4" y="1091.0" width="65.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.4" y="1102.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (274 samples, 5.55%)</title><rect x="414.4" y="1075.0" width="65.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="417.4" y="1086.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.06%)</title><rect x="415.1" y="1059.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="418.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (3 samples, 0.06%)</title><rect x="415.1" y="1043.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (31 samples, 0.63%)</title><rect x="416.1" y="1059.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (31 samples, 0.63%)</title><rect x="416.1" y="1043.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="419.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (31 samples, 0.63%)</title><rect x="416.1" y="1027.0" width="7.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (30 samples, 0.61%)</title><rect x="416.3" y="1011.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (30 samples, 0.61%)</title><rect x="416.3" y="995.0" width="7.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="416.3" y="979.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="419.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="416.3" y="963.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="419.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$260/530077054.get$Lambda (2 samples, 0.04%)</title><rect x="416.3" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (28 samples, 0.57%)</title><rect x="416.8" y="979.0" width="6.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="419.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (27 samples, 0.55%)</title><rect x="417.0" y="963.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (27 samples, 0.55%)</title><rect x="417.0" y="947.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="420.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (22 samples, 0.45%)</title><rect x="418.2" y="931.0" width="5.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="421.2" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (19 samples, 0.39%)</title><rect x="419.0" y="915.0" width="4.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (18 samples, 0.36%)</title><rect x="419.2" y="899.0" width="4.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.30%)</title><rect x="419.4" y="883.0" width="3.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="422.4" y="894.0"></text>
</g>
<g>
<title>write (15 samples, 0.30%)</title><rect x="419.4" y="867.0" width="3.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="422.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.30%)</title><rect x="419.4" y="851.0" width="3.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="422.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.30%)</title><rect x="419.4" y="835.0" width="3.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="422.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.30%)</title><rect x="419.4" y="819.0" width="3.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="422.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.30%)</title><rect x="419.4" y="803.0" width="3.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="422.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.30%)</title><rect x="419.4" y="787.0" width="3.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="422.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.30%)</title><rect x="419.4" y="771.0" width="3.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="422.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.28%)</title><rect x="419.7" y="755.0" width="3.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="422.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.28%)</title><rect x="419.7" y="739.0" width="3.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="422.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.26%)</title><rect x="419.9" y="723.0" width="3.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="422.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="420.4" y="707.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="423.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.20%)</title><rect x="420.6" y="691.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="423.6" y="702.0"></text>
</g>
<g>
<title>write (2 samples, 0.04%)</title><rect x="423.0" y="883.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="426.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.04%)</title><rect x="423.5" y="1059.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="426.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (233 samples, 4.72%)</title><rect x="424.2" y="1059.0" width="55.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.2" y="1070.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (232 samples, 4.70%)</title><rect x="424.2" y="1043.0" width="55.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.2" y="1054.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (232 samples, 4.70%)</title><rect x="424.2" y="1027.0" width="55.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.2" y="1038.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (232 samples, 4.70%)</title><rect x="424.2" y="1011.0" width="55.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="427.2" y="1022.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (129 samples, 2.61%)</title><rect x="424.5" y="995.0" width="30.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.5" y="1006.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (129 samples, 2.61%)</title><rect x="424.5" y="979.0" width="30.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.5" y="990.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (129 samples, 2.61%)</title><rect x="424.5" y="963.0" width="30.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="427.5" y="974.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (126 samples, 2.55%)</title><rect x="425.2" y="947.0" width="30.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="428.2" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.06%)</title><rect x="425.2" y="931.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="428.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.06%)</title><rect x="425.2" y="915.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="428.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (3 samples, 0.06%)</title><rect x="425.2" y="899.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="428.2" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_L_I (2 samples, 0.04%)</title><rect x="425.4" y="883.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="428.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (123 samples, 2.49%)</title><rect x="425.9" y="931.0" width="29.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="428.9" y="942.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (122 samples, 2.47%)</title><rect x="426.1" y="915.0" width="29.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="429.1" y="926.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (122 samples, 2.47%)</title><rect x="426.1" y="899.0" width="29.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.1" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.14%)</title><rect x="426.1" y="883.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="429.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.14%)</title><rect x="426.1" y="867.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.14%)</title><rect x="426.1" y="851.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.14%)</title><rect x="426.1" y="835.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="429.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.04%)</title><rect x="427.1" y="819.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="430.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (103 samples, 2.09%)</title><rect x="427.8" y="883.0" width="24.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.8" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (103 samples, 2.09%)</title><rect x="427.8" y="867.0" width="24.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.8" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (96 samples, 1.95%)</title><rect x="427.8" y="851.0" width="23.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="430.8" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$267/408775171.apply (2 samples, 0.04%)</title><rect x="429.5" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="432.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (2 samples, 0.04%)</title><rect x="429.5" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="432.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (2 samples, 0.04%)</title><rect x="429.5" y="803.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="432.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/1208971968.apply (73 samples, 1.48%)</title><rect x="430.0" y="835.0" width="17.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="433.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (73 samples, 1.48%)</title><rect x="430.0" y="819.0" width="17.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.04%)</title><rect x="430.2" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="433.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.04%)</title><rect x="430.2" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (70 samples, 1.42%)</title><rect x="430.7" y="803.0" width="16.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="433.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (69 samples, 1.40%)</title><rect x="430.9" y="787.0" width="16.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (68 samples, 1.38%)</title><rect x="430.9" y="771.0" width="16.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.9" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (17 samples, 0.34%)</title><rect x="431.2" y="755.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="434.2" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.04%)</title><rect x="431.2" y="739.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="434.2" y="750.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.04%)</title><rect x="431.2" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.2" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.04%)</title><rect x="431.2" y="707.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="434.2" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="431.2" y="691.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.2" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.04%)</title><rect x="431.2" y="675.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="434.2" y="686.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="431.2" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="434.2" y="670.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="431.2" y="643.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="434.2" y="654.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (11 samples, 0.22%)</title><rect x="431.6" y="739.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.6" y="750.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (11 samples, 0.22%)</title><rect x="431.6" y="723.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.6" y="734.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (11 samples, 0.22%)</title><rect x="431.6" y="707.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.6" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (11 samples, 0.22%)</title><rect x="431.6" y="691.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="434.6" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (10 samples, 0.20%)</title><rect x="431.6" y="675.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="434.6" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.04%)</title><rect x="432.1" y="659.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="435.1" y="670.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (3 samples, 0.06%)</title><rect x="432.6" y="659.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="435.6" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$281/586229749.applyAsLong (2 samples, 0.04%)</title><rect x="432.6" y="643.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="435.6" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.04%)</title><rect x="433.3" y="659.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="436.3" y="670.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (4 samples, 0.08%)</title><rect x="434.3" y="739.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="437.3" y="750.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (4 samples, 0.08%)</title><rect x="434.3" y="723.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline$StatelessOp.&lt;init&gt; (3 samples, 0.06%)</title><rect x="434.5" y="707.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="437.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.&lt;init&gt; (3 samples, 0.06%)</title><rect x="434.5" y="691.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="437.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (3 samples, 0.06%)</title><rect x="434.5" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="437.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="435.2" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="438.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.04%)</title><rect x="435.7" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.7" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (2 samples, 0.04%)</title><rect x="435.7" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (2 samples, 0.04%)</title><rect x="436.2" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.04%)</title><rect x="436.2" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (44 samples, 0.89%)</title><rect x="436.7" y="755.0" width="10.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="439.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$286/1806093010.run (44 samples, 0.89%)</title><rect x="436.7" y="739.0" width="10.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="439.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (40 samples, 0.81%)</title><rect x="437.6" y="723.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="440.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="438.1" y="707.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="441.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="438.1" y="691.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="441.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1374968253.get$Lambda (3 samples, 0.06%)</title><rect x="438.1" y="675.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1374968253.&lt;init&gt; (3 samples, 0.06%)</title><rect x="438.1" y="659.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="441.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="438.8" y="707.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="441.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="438.8" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="441.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (4 samples, 0.08%)</title><rect x="439.8" y="707.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="442.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.reference (3 samples, 0.06%)</title><rect x="439.8" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="442.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (10 samples, 0.20%)</title><rect x="440.7" y="707.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="443.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (10 samples, 0.20%)</title><rect x="440.7" y="691.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="443.7" y="702.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (9 samples, 0.18%)</title><rect x="440.7" y="675.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="443.7" y="686.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (9 samples, 0.18%)</title><rect x="440.7" y="659.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="443.7" y="670.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (9 samples, 0.18%)</title><rect x="440.7" y="643.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="443.7" y="654.0"></text>
</g>
<g>
<title>JVM_IHashCode (7 samples, 0.14%)</title><rect x="440.7" y="627.0" width="1.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="443.7" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.06%)</title><rect x="441.7" y="611.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="444.7" y="622.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.04%)</title><rect x="442.4" y="627.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="445.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (10 samples, 0.20%)</title><rect x="443.1" y="707.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="446.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.08%)</title><rect x="444.5" y="691.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.5" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/712256162.invoke (4 samples, 0.08%)</title><rect x="444.5" y="675.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="444.5" y="659.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (7 samples, 0.14%)</title><rect x="445.5" y="707.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (6 samples, 0.12%)</title><rect x="445.7" y="691.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="448.7" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="446.2" y="675.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="449.2" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/712256162.invoke (3 samples, 0.06%)</title><rect x="446.2" y="659.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="449.2" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="446.2" y="643.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="449.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$241/574542749.apply (14 samples, 0.28%)</title><rect x="447.4" y="835.0" width="3.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="450.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (14 samples, 0.28%)</title><rect x="447.4" y="819.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="450.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (12 samples, 0.24%)</title><rect x="447.7" y="803.0" width="2.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.7" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (2 samples, 0.04%)</title><rect x="448.6" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.6" y="798.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="448.6" y="771.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.6" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.04%)</title><rect x="448.6" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="451.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (6 samples, 0.12%)</title><rect x="449.1" y="787.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (5 samples, 0.10%)</title><rect x="449.3" y="771.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="452.3" y="782.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (4 samples, 0.08%)</title><rect x="449.6" y="755.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.6" y="766.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.06%)</title><rect x="449.8" y="739.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.04%)</title><rect x="450.8" y="851.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="453.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (5 samples, 0.10%)</title><rect x="451.2" y="851.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="454.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (2 samples, 0.04%)</title><rect x="451.7" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="454.7" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="451.7" y="819.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="454.7" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="451.7" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="454.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$277/282632138.apply (9 samples, 0.18%)</title><rect x="452.4" y="883.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="455.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (9 samples, 0.18%)</title><rect x="452.4" y="867.0" width="2.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="455.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (8 samples, 0.16%)</title><rect x="452.7" y="851.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (6 samples, 0.12%)</title><rect x="452.7" y="835.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="454.1" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$304/1506719647.apply (3 samples, 0.06%)</title><rect x="454.6" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="457.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (3 samples, 0.06%)</title><rect x="454.6" y="867.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="457.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (2 samples, 0.04%)</title><rect x="454.8" y="851.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="457.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (100 samples, 2.03%)</title><rect x="455.3" y="995.0" width="23.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="458.3" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (9 samples, 0.18%)</title><rect x="457.2" y="979.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="460.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (5 samples, 0.10%)</title><rect x="457.9" y="963.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="460.9" y="974.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (5 samples, 0.10%)</title><rect x="457.9" y="947.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="460.9" y="958.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.04%)</title><rect x="458.7" y="931.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="461.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.04%)</title><rect x="459.4" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="462.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (10 samples, 0.20%)</title><rect x="459.9" y="979.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="462.9" y="990.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.10%)</title><rect x="460.3" y="963.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="463.3" y="974.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.10%)</title><rect x="460.3" y="947.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.3" y="958.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.08%)</title><rect x="460.6" y="931.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="463.6" y="942.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.04%)</title><rect x="461.8" y="963.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="464.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (33 samples, 0.67%)</title><rect x="462.2" y="979.0" width="7.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="465.2" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (31 samples, 0.63%)</title><rect x="462.2" y="963.0" width="7.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="465.2" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (31 samples, 0.63%)</title><rect x="462.2" y="947.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="465.2" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.08%)</title><rect x="463.9" y="931.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.9" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.08%)</title><rect x="463.9" y="915.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="466.9" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/1304086955.get$Lambda (4 samples, 0.08%)</title><rect x="463.9" y="899.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="466.9" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/1304086955.&lt;init&gt; (4 samples, 0.08%)</title><rect x="463.9" y="883.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="466.9" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.&lt;init&gt; (3 samples, 0.06%)</title><rect x="464.9" y="931.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="467.9" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (12 samples, 0.24%)</title><rect x="465.6" y="931.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="468.6" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/1304086955.accept (11 samples, 0.22%)</title><rect x="465.6" y="915.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="468.6" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (11 samples, 0.22%)</title><rect x="465.6" y="899.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="468.6" y="910.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.06%)</title><rect x="465.8" y="883.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="468.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.06%)</title><rect x="465.8" y="867.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="468.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.06%)</title><rect x="465.8" y="851.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="468.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="465.8" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="468.8" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="466.6" y="883.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="469.6" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="466.6" y="867.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="469.6" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.get$Lambda (3 samples, 0.06%)</title><rect x="466.6" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="469.6" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.&lt;init&gt; (3 samples, 0.06%)</title><rect x="466.6" y="835.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="469.6" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.06%)</title><rect x="467.5" y="883.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="470.5" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.04%)</title><rect x="467.5" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.5" y="878.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="467.5" y="851.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.5" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="467.5" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="470.5" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="467.5" y="819.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.5" y="830.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (5 samples, 0.10%)</title><rect x="468.5" y="931.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="471.5" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (5 samples, 0.10%)</title><rect x="468.5" y="915.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="471.5" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="469.2" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="472.2" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="469.7" y="963.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="472.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (38 samples, 0.77%)</title><rect x="470.1" y="979.0" width="9.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="473.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (34 samples, 0.69%)</title><rect x="470.9" y="963.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="471.3" y="947.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="474.3" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="471.3" y="931.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="474.3" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="471.6" y="915.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.6" y="926.0"></text>
</g>
<g>
<title>java/lang/String.substring (6 samples, 0.12%)</title><rect x="472.3" y="947.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="475.3" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.12%)</title><rect x="472.3" y="931.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="475.3" y="942.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="473.2" y="915.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="476.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (6 samples, 0.12%)</title><rect x="473.7" y="947.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="476.7" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (5 samples, 0.10%)</title><rect x="474.0" y="931.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="477.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.06%)</title><rect x="475.2" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="478.2" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.06%)</title><rect x="475.2" y="931.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="478.2" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.08%)</title><rect x="475.9" y="947.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="478.9" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.08%)</title><rect x="475.9" y="931.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="478.9" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.08%)</title><rect x="475.9" y="915.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="478.9" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.08%)</title><rect x="475.9" y="899.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.9" y="910.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.06%)</title><rect x="476.1" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="479.1" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (9 samples, 0.18%)</title><rect x="476.8" y="947.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="479.8" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.06%)</title><rect x="477.1" y="931.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="480.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.06%)</title><rect x="477.1" y="915.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.1" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.06%)</title><rect x="477.1" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$280/178266912.apply (4 samples, 0.08%)</title><rect x="478.0" y="931.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (4 samples, 0.08%)</title><rect x="478.0" y="915.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.0" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="478.5" y="899.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="481.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/752412765.accept (2 samples, 0.04%)</title><rect x="479.2" y="995.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="482.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.04%)</title><rect x="479.2" y="979.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="482.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.04%)</title><rect x="479.2" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="482.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (235 samples, 4.76%)</title><rect x="479.9" y="1107.0" width="56.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.9" y="1118.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (232 samples, 4.70%)</title><rect x="480.7" y="1091.0" width="55.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="483.7" y="1102.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (231 samples, 4.68%)</title><rect x="480.7" y="1075.0" width="55.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="483.7" y="1086.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/939607844.run (229 samples, 4.64%)</title><rect x="480.9" y="1059.0" width="54.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="483.9" y="1070.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (229 samples, 4.64%)</title><rect x="480.9" y="1043.0" width="54.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="483.9" y="1054.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (7 samples, 0.14%)</title><rect x="481.6" y="1027.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="484.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (3 samples, 0.06%)</title><rect x="482.1" y="1011.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="485.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.06%)</title><rect x="482.1" y="995.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="485.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.06%)</title><rect x="482.1" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (219 samples, 4.44%)</title><rect x="483.3" y="1027.0" width="52.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="486.3" y="1038.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (219 samples, 4.44%)</title><rect x="483.3" y="1011.0" width="52.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.3" y="1022.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (218 samples, 4.42%)</title><rect x="483.3" y="995.0" width="52.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.3" y="1006.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (217 samples, 4.40%)</title><rect x="483.5" y="979.0" width="51.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.5" y="990.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (217 samples, 4.40%)</title><rect x="483.5" y="963.0" width="51.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="486.5" y="974.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (217 samples, 4.40%)</title><rect x="483.5" y="947.0" width="51.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="486.5" y="958.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/200648898.run (91 samples, 1.84%)</title><rect x="484.0" y="931.0" width="21.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.0" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.04%)</title><rect x="484.0" y="915.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="487.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (89 samples, 1.80%)</title><rect x="484.5" y="915.0" width="21.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="487.5" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.clear (2 samples, 0.04%)</title><rect x="484.5" y="899.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="487.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (87 samples, 1.76%)</title><rect x="485.0" y="899.0" width="20.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="488.0" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (12 samples, 0.24%)</title><rect x="485.4" y="883.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="488.4" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.06%)</title><rect x="485.4" y="867.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.4" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.06%)</title><rect x="485.4" y="851.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.4" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.06%)</title><rect x="485.4" y="835.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.4" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.06%)</title><rect x="485.4" y="819.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.4" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.06%)</title><rect x="485.4" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="488.4" y="814.0"></text>
</g>
<g>
<title>java/util/Collection.stream (7 samples, 0.14%)</title><rect x="486.2" y="867.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="489.2" y="878.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.04%)</title><rect x="486.2" y="851.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="489.2" y="862.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.10%)</title><rect x="486.6" y="851.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="489.6" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (4 samples, 0.08%)</title><rect x="486.9" y="835.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.9" y="846.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (4 samples, 0.08%)</title><rect x="486.9" y="819.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="489.9" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (4 samples, 0.08%)</title><rect x="486.9" y="803.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.9" y="814.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (2 samples, 0.04%)</title><rect x="487.4" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="490.4" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.04%)</title><rect x="487.8" y="867.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="490.8" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.04%)</title><rect x="487.8" y="851.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="490.8" y="862.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.04%)</title><rect x="487.8" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="490.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (70 samples, 1.42%)</title><rect x="488.3" y="883.0" width="16.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.3" y="894.0"></text>
</g>
<g>
<title>java/time/Instant.now (4 samples, 0.08%)</title><rect x="488.3" y="867.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.3" y="878.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (4 samples, 0.08%)</title><rect x="488.3" y="851.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.06%)</title><rect x="488.6" y="835.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="491.6" y="846.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="488.8" y="819.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="491.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (66 samples, 1.34%)</title><rect x="489.3" y="867.0" width="15.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="492.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (9 samples, 0.18%)</title><rect x="489.7" y="851.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.7" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.08%)</title><rect x="490.7" y="835.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="493.7" y="846.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (4 samples, 0.08%)</title><rect x="490.7" y="819.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.7" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (4 samples, 0.08%)</title><rect x="490.7" y="803.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="493.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (3 samples, 0.06%)</title><rect x="491.9" y="851.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="491.9" y="835.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="494.9" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="491.9" y="819.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (52 samples, 1.05%)</title><rect x="492.6" y="851.0" width="12.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="495.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (52 samples, 1.05%)</title><rect x="492.6" y="835.0" width="12.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (5 samples, 0.10%)</title><rect x="492.6" y="819.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.10%)</title><rect x="492.6" y="803.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.10%)</title><rect x="492.6" y="787.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="495.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.04%)</title><rect x="492.6" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="495.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (2 samples, 0.04%)</title><rect x="493.1" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="496.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (46 samples, 0.93%)</title><rect x="494.1" y="819.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="497.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (46 samples, 0.93%)</title><rect x="494.1" y="803.0" width="11.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="497.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (34 samples, 0.69%)</title><rect x="494.1" y="787.0" width="8.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (34 samples, 0.69%)</title><rect x="494.1" y="771.0" width="8.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (34 samples, 0.69%)</title><rect x="494.1" y="755.0" width="8.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="497.1" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (34 samples, 0.69%)</title><rect x="494.1" y="739.0" width="8.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="497.1" y="750.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (34 samples, 0.69%)</title><rect x="494.1" y="723.0" width="8.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="497.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.67%)</title><rect x="494.1" y="707.0" width="7.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="497.1" y="718.0"></text>
</g>
<g>
<title>write (33 samples, 0.67%)</title><rect x="494.1" y="691.0" width="7.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="497.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.61%)</title><rect x="494.8" y="675.0" width="7.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="497.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.61%)</title><rect x="494.8" y="659.0" width="7.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="497.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.61%)</title><rect x="494.8" y="643.0" width="7.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="497.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.61%)</title><rect x="494.8" y="627.0" width="7.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="497.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.61%)</title><rect x="494.8" y="611.0" width="7.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="497.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.57%)</title><rect x="495.2" y="595.0" width="6.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="498.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.57%)</title><rect x="495.2" y="579.0" width="6.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="498.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.49%)</title><rect x="496.2" y="563.0" width="5.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="499.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.47%)</title><rect x="496.4" y="547.0" width="5.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="499.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.43%)</title><rect x="496.9" y="531.0" width="5.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="499.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.30%)</title><rect x="498.4" y="515.0" width="3.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="501.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (11 samples, 0.22%)</title><rect x="502.4" y="787.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="505.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (8 samples, 0.16%)</title><rect x="502.9" y="771.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (8 samples, 0.16%)</title><rect x="502.9" y="755.0" width="1.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (8 samples, 0.16%)</title><rect x="502.9" y="739.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="505.9" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/604125138.linkToTargetMethod (8 samples, 0.16%)</title><rect x="502.9" y="723.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="505.9" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/741669172.invoke (8 samples, 0.16%)</title><rect x="502.9" y="707.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.9" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="502.9" y="691.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="505.9" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.04%)</title><rect x="502.9" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="505.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.04%)</title><rect x="502.9" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.9" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/726950788.invokeStatic (4 samples, 0.08%)</title><rect x="503.4" y="691.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="506.4" y="702.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (3 samples, 0.06%)</title><rect x="503.6" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="506.6" y="686.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (3 samples, 0.06%)</title><rect x="503.6" y="659.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="506.6" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="503.9" y="643.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="506.9" y="654.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.04%)</title><rect x="503.9" y="627.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="506.9" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1982791261.invoke (2 samples, 0.04%)</title><rect x="504.3" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="507.3" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="504.3" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="507.3" y="686.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.04%)</title><rect x="504.3" y="659.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="507.3" y="670.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.04%)</title><rect x="504.3" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="507.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (3 samples, 0.06%)</title><rect x="505.1" y="883.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1374968253.accept (15 samples, 0.30%)</title><rect x="505.8" y="931.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (15 samples, 0.30%)</title><rect x="505.8" y="915.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="508.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (15 samples, 0.30%)</title><rect x="505.8" y="899.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 0.24%)</title><rect x="505.8" y="883.0" width="2.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.24%)</title><rect x="505.8" y="867.0" width="2.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12 samples, 0.24%)</title><rect x="505.8" y="851.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="508.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (12 samples, 0.24%)</title><rect x="505.8" y="835.0" width="2.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.08%)</title><rect x="505.8" y="819.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="508.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.08%)</title><rect x="505.8" y="803.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="508.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.08%)</title><rect x="505.8" y="787.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="508.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.08%)</title><rect x="505.8" y="771.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="508.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.08%)</title><rect x="505.8" y="755.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="508.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.08%)</title><rect x="505.8" y="739.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="508.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.08%)</title><rect x="505.8" y="723.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.08%)</title><rect x="505.8" y="707.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (4 samples, 0.08%)</title><rect x="505.8" y="691.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="508.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/311362326.accept (2 samples, 0.04%)</title><rect x="506.0" y="675.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="509.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$294/1808175138.accept (7 samples, 0.14%)</title><rect x="507.0" y="819.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (5 samples, 0.10%)</title><rect x="507.4" y="803.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="510.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (5 samples, 0.10%)</title><rect x="507.4" y="787.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="510.4" y="798.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (4 samples, 0.08%)</title><rect x="507.7" y="771.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.7" y="782.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (4 samples, 0.08%)</title><rect x="507.7" y="755.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.7" y="766.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (4 samples, 0.08%)</title><rect x="507.7" y="739.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$220/1039191075.accept (3 samples, 0.06%)</title><rect x="508.6" y="883.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="511.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (2 samples, 0.04%)</title><rect x="508.9" y="867.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="511.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.04%)</title><rect x="508.9" y="851.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="511.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (89 samples, 1.80%)</title><rect x="509.4" y="931.0" width="21.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="512.4" y="942.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (89 samples, 1.80%)</title><rect x="509.4" y="915.0" width="21.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.4" y="926.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (89 samples, 1.80%)</title><rect x="509.4" y="899.0" width="21.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.4" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (82 samples, 1.66%)</title><rect x="509.6" y="883.0" width="19.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (81 samples, 1.64%)</title><rect x="509.8" y="867.0" width="19.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (81 samples, 1.64%)</title><rect x="509.8" y="851.0" width="19.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (81 samples, 1.64%)</title><rect x="509.8" y="835.0" width="19.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="512.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.08%)</title><rect x="509.8" y="819.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="512.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.08%)</title><rect x="509.8" y="803.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="512.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.08%)</title><rect x="509.8" y="787.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.08%)</title><rect x="509.8" y="771.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="512.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.08%)</title><rect x="509.8" y="755.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="512.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.08%)</title><rect x="509.8" y="739.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="512.8" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.08%)</title><rect x="509.8" y="723.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="512.8" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.08%)</title><rect x="509.8" y="707.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="512.8" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (4 samples, 0.08%)</title><rect x="509.8" y="691.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="512.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$296/1374665315.accept (77 samples, 1.56%)</title><rect x="510.8" y="819.0" width="18.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="513.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (77 samples, 1.56%)</title><rect x="510.8" y="803.0" width="18.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="513.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (77 samples, 1.56%)</title><rect x="510.8" y="787.0" width="18.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="513.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (77 samples, 1.56%)</title><rect x="510.8" y="771.0" width="18.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="513.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (8 samples, 0.16%)</title><rect x="511.3" y="755.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.08%)</title><rect x="511.3" y="739.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.06%)</title><rect x="511.5" y="723.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="514.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.06%)</title><rect x="511.5" y="707.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="514.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.04%)</title><rect x="511.8" y="691.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="514.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$304/1506719647.apply (4 samples, 0.08%)</title><rect x="512.2" y="739.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="515.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (4 samples, 0.08%)</title><rect x="512.2" y="723.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="515.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (4 samples, 0.08%)</title><rect x="512.2" y="707.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="515.2" y="718.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (2 samples, 0.04%)</title><rect x="512.7" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="515.7" y="702.0"></text>
</g>
<g>
<title>java/util/Optional.of (2 samples, 0.04%)</title><rect x="512.7" y="675.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="515.7" y="686.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (2 samples, 0.04%)</title><rect x="512.7" y="659.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="515.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (66 samples, 1.34%)</title><rect x="513.4" y="755.0" width="15.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="516.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (66 samples, 1.34%)</title><rect x="513.4" y="739.0" width="15.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="516.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (61 samples, 1.24%)</title><rect x="513.4" y="723.0" width="14.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="516.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (42 samples, 0.85%)</title><rect x="513.7" y="707.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="516.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (42 samples, 0.85%)</title><rect x="513.7" y="691.0" width="10.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (42 samples, 0.85%)</title><rect x="513.7" y="675.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (41 samples, 0.83%)</title><rect x="513.9" y="659.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (41 samples, 0.83%)</title><rect x="513.9" y="643.0" width="9.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="516.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (41 samples, 0.83%)</title><rect x="513.9" y="627.0" width="9.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.9" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.14%)</title><rect x="514.4" y="611.0" width="1.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="517.4" y="622.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="514.4" y="595.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="517.4" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.04%)</title><rect x="514.9" y="595.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="517.9" y="606.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="515.6" y="595.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="518.6" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="516.1" y="611.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="519.1" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (30 samples, 0.61%)</title><rect x="516.5" y="611.0" width="7.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="519.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.59%)</title><rect x="516.8" y="595.0" width="6.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="519.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.59%)</title><rect x="516.8" y="579.0" width="6.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="519.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.53%)</title><rect x="517.5" y="563.0" width="6.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="520.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.51%)</title><rect x="517.7" y="547.0" width="6.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="520.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.49%)</title><rect x="518.0" y="531.0" width="5.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="521.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.43%)</title><rect x="518.7" y="515.0" width="5.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="521.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.34%)</title><rect x="519.6" y="499.0" width="4.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="522.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.30%)</title><rect x="520.1" y="483.0" width="3.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="523.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (18 samples, 0.36%)</title><rect x="523.7" y="707.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="526.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (18 samples, 0.36%)</title><rect x="523.7" y="691.0" width="4.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (17 samples, 0.34%)</title><rect x="523.9" y="675.0" width="4.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (17 samples, 0.34%)</title><rect x="523.9" y="659.0" width="4.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="526.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (17 samples, 0.34%)</title><rect x="523.9" y="643.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="526.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.34%)</title><rect x="523.9" y="627.0" width="4.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="526.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.34%)</title><rect x="523.9" y="611.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="526.9" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (17 samples, 0.34%)</title><rect x="523.9" y="595.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.9" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.06%)</title><rect x="526.3" y="579.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="529.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$299/1072904856.accept (4 samples, 0.08%)</title><rect x="527.1" y="579.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.1" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$301/759656526.accept (3 samples, 0.06%)</title><rect x="528.0" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="531.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (3 samples, 0.06%)</title><rect x="528.0" y="707.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="531.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$141/621367896.accept (2 samples, 0.04%)</title><rect x="528.7" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="531.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.lambda$sendAsync$0 (2 samples, 0.04%)</title><rect x="528.7" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="531.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (2 samples, 0.04%)</title><rect x="528.7" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="531.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (6 samples, 0.12%)</title><rect x="529.2" y="883.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="532.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (4 samples, 0.08%)</title><rect x="529.7" y="867.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="532.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (11 samples, 0.22%)</title><rect x="530.6" y="931.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (11 samples, 0.22%)</title><rect x="530.6" y="915.0" width="2.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (11 samples, 0.22%)</title><rect x="530.6" y="899.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="533.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (10 samples, 0.20%)</title><rect x="530.9" y="883.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.9" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (10 samples, 0.20%)</title><rect x="530.9" y="867.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="533.9" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (9 samples, 0.18%)</title><rect x="531.1" y="851.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.1" y="862.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.04%)</title><rect x="532.3" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="535.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (3 samples, 0.06%)</title><rect x="533.3" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="536.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (3 samples, 0.06%)</title><rect x="533.3" y="915.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="536.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (6 samples, 0.12%)</title><rect x="534.0" y="931.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="537.0" y="942.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.slice (6 samples, 0.12%)</title><rect x="534.0" y="915.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.0" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.06%)</title><rect x="534.5" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="537.5" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="534.5" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="537.5" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="534.5" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="537.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/200648898.run (2 samples, 0.04%)</title><rect x="534.7" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="537.7" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$111/543001321.run (457 samples, 9.26%)</title><rect x="536.1" y="1139.0" width="109.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="539.1" y="1150.0">ru/mail/polis..</text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="537.1" y="1123.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="540.1" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$106/1750686086.run (450 samples, 9.12%)</title><rect x="537.8" y="1123.0" width="107.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="540.8" y="1134.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (448 samples, 9.08%)</title><rect x="538.3" y="1107.0" width="107.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="541.3" y="1118.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (423 samples, 8.57%)</title><rect x="539.0" y="1091.0" width="101.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="542.0" y="1102.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="540.4" y="1075.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="543.4" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="540.4" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="543.4" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="540.4" y="1043.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.4" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="540.4" y="1027.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="543.4" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="540.4" y="1011.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.4" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (64 samples, 1.30%)</title><rect x="541.4" y="1075.0" width="15.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.4" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (60 samples, 1.22%)</title><rect x="542.1" y="1059.0" width="14.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.1" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (52 samples, 1.05%)</title><rect x="542.1" y="1043.0" width="12.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="545.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.06%)</title><rect x="542.1" y="1027.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="545.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="542.1" y="1011.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="545.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.06%)</title><rect x="542.1" y="995.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (2 samples, 0.04%)</title><rect x="542.4" y="979.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (49 samples, 0.99%)</title><rect x="542.8" y="1027.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="545.8" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (39 samples, 0.79%)</title><rect x="543.3" y="1011.0" width="9.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="546.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (31 samples, 0.63%)</title><rect x="543.8" y="995.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="546.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (31 samples, 0.63%)</title><rect x="543.8" y="979.0" width="7.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (31 samples, 0.63%)</title><rect x="543.8" y="963.0" width="7.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (30 samples, 0.61%)</title><rect x="544.0" y="947.0" width="7.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="547.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (30 samples, 0.61%)</title><rect x="544.0" y="931.0" width="7.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="547.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (30 samples, 0.61%)</title><rect x="544.0" y="915.0" width="7.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="547.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (28 samples, 0.57%)</title><rect x="544.5" y="899.0" width="6.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="547.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (13 samples, 0.26%)</title><rect x="548.1" y="883.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.1" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (13 samples, 0.26%)</title><rect x="548.1" y="867.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="551.1" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (7 samples, 0.14%)</title><rect x="549.5" y="851.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.5" y="862.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.08%)</title><rect x="550.0" y="835.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="553.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (6 samples, 0.12%)</title><rect x="551.2" y="995.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (6 samples, 0.12%)</title><rect x="551.2" y="979.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.2" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6 samples, 0.12%)</title><rect x="551.2" y="963.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.2" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6 samples, 0.12%)</title><rect x="551.2" y="947.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.2" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.04%)</title><rect x="551.2" y="931.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="554.2" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.&lt;init&gt; (2 samples, 0.04%)</title><rect x="551.2" y="915.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="554.2" y="926.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (4 samples, 0.08%)</title><rect x="551.7" y="931.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="554.7" y="942.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (4 samples, 0.08%)</title><rect x="551.7" y="915.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="554.7" y="926.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (4 samples, 0.08%)</title><rect x="551.7" y="899.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="554.7" y="910.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (4 samples, 0.08%)</title><rect x="551.7" y="883.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="554.7" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap$DescendingSubMap$DescendingEntrySetView.iterator (2 samples, 0.04%)</title><rect x="551.9" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="554.9" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (8 samples, 0.16%)</title><rect x="552.6" y="1011.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.6" y="1022.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (4 samples, 0.08%)</title><rect x="552.6" y="995.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.6" y="1006.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.08%)</title><rect x="552.6" y="979.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.6" y="990.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.04%)</title><rect x="553.1" y="963.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="556.1" y="974.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.04%)</title><rect x="553.1" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="556.1" y="958.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.04%)</title><rect x="553.1" y="931.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="556.1" y="942.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.04%)</title><rect x="553.1" y="915.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="556.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.04%)</title><rect x="553.1" y="899.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="556.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (4 samples, 0.08%)</title><rect x="553.6" y="995.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="556.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (4 samples, 0.08%)</title><rect x="553.6" y="979.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="556.6" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.06%)</title><rect x="553.8" y="963.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="556.8" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.06%)</title><rect x="553.8" y="947.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.04%)</title><rect x="554.1" y="931.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.1" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.04%)</title><rect x="554.1" y="915.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.1" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.04%)</title><rect x="554.1" y="899.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.1" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.04%)</title><rect x="554.1" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="557.1" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (8 samples, 0.16%)</title><rect x="554.6" y="1043.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="557.6" y="1054.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (6 samples, 0.12%)</title><rect x="554.6" y="1027.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="557.6" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Preconditions.checkNotNull (2 samples, 0.04%)</title><rect x="554.6" y="1011.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.6" y="1022.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (4 samples, 0.08%)</title><rect x="555.0" y="1011.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="558.0" y="1022.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.&lt;init&gt; (3 samples, 0.06%)</title><rect x="555.3" y="995.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (28 samples, 0.57%)</title><rect x="556.7" y="1075.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.7" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (7 samples, 0.14%)</title><rect x="557.0" y="1059.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="560.0" y="1070.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (7 samples, 0.14%)</title><rect x="557.0" y="1043.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="560.0" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (4 samples, 0.08%)</title><rect x="557.0" y="1027.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="560.0" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (3 samples, 0.06%)</title><rect x="557.2" y="1011.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.2" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (3 samples, 0.06%)</title><rect x="557.2" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="560.2" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.06%)</title><rect x="557.2" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="560.2" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.entrySet (3 samples, 0.06%)</title><rect x="557.9" y="1027.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="560.9" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.08%)</title><rect x="558.6" y="1059.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.6" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/HashCode$BytesHashCode.asLong (2 samples, 0.04%)</title><rect x="558.6" y="1043.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="561.6" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="559.1" y="1043.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.1" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="559.1" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.1" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="559.1" y="1011.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.1" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (3 samples, 0.06%)</title><rect x="560.1" y="1059.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="563.1" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (2 samples, 0.04%)</title><rect x="560.3" y="1043.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.3" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="560.3" y="1027.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.3" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="560.3" y="1011.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (11 samples, 0.22%)</title><rect x="560.8" y="1059.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="563.8" y="1070.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (7 samples, 0.14%)</title><rect x="560.8" y="1043.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="563.8" y="1054.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (2 samples, 0.04%)</title><rect x="561.3" y="1027.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="564.3" y="1038.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (2 samples, 0.04%)</title><rect x="561.3" y="1011.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="564.3" y="1022.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (2 samples, 0.04%)</title><rect x="561.3" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="564.3" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.04%)</title><rect x="561.3" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.3" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.04%)</title><rect x="561.3" y="963.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="564.3" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (2 samples, 0.04%)</title><rect x="562.0" y="1027.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.0" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (4 samples, 0.08%)</title><rect x="562.5" y="1043.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.5" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeMap.exportEntry (2 samples, 0.04%)</title><rect x="562.5" y="1027.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.5" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (2 samples, 0.04%)</title><rect x="562.9" y="1027.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.9" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.executeIfProxied (39 samples, 0.79%)</title><rect x="563.4" y="1075.0" width="9.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="566.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.08%)</title><rect x="563.6" y="1059.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="566.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.08%)</title><rect x="563.6" y="1043.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="566.6" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$278/895497718.get$Lambda (4 samples, 0.08%)</title><rect x="563.6" y="1027.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="566.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$278/895497718.&lt;init&gt; (2 samples, 0.04%)</title><rect x="564.1" y="1011.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (5 samples, 0.10%)</title><rect x="564.6" y="1059.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (5 samples, 0.10%)</title><rect x="564.6" y="1043.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="567.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (5 samples, 0.10%)</title><rect x="564.6" y="1027.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (28 samples, 0.57%)</title><rect x="565.8" y="1059.0" width="6.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="568.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (28 samples, 0.57%)</title><rect x="565.8" y="1043.0" width="6.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="568.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (28 samples, 0.57%)</title><rect x="565.8" y="1027.0" width="6.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="568.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (28 samples, 0.57%)</title><rect x="565.8" y="1011.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (28 samples, 0.57%)</title><rect x="565.8" y="995.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="568.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.tryLockPhase (3 samples, 0.06%)</title><rect x="566.0" y="979.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="569.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.06%)</title><rect x="566.0" y="963.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="569.0" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.06%)</title><rect x="566.0" y="947.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="569.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (24 samples, 0.49%)</title><rect x="566.8" y="979.0" width="5.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="569.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 0.47%)</title><rect x="567.0" y="963.0" width="5.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="570.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.47%)</title><rect x="567.0" y="947.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.0" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.20%)</title><rect x="567.0" y="931.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="570.0" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.08%)</title><rect x="568.0" y="915.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="571.0" y="926.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="568.9" y="915.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="571.9" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (13 samples, 0.26%)</title><rect x="569.4" y="931.0" width="3.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="572.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.26%)</title><rect x="569.4" y="915.0" width="3.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="572.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.26%)</title><rect x="569.4" y="899.0" width="3.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="572.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.24%)</title><rect x="569.6" y="883.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="572.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.24%)</title><rect x="569.6" y="867.0" width="2.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="572.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.24%)</title><rect x="569.6" y="851.0" width="2.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="572.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.24%)</title><rect x="569.6" y="835.0" width="2.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="572.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.24%)</title><rect x="569.6" y="819.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="572.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="569.9" y="803.0" width="2.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="572.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getResponsesFromReplicas (271 samples, 5.49%)</title><rect x="572.7" y="1075.0" width="64.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.7" y="1086.0">ru/mail..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.14%)</title><rect x="572.7" y="1059.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="575.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/157683534.invoke (7 samples, 0.14%)</title><rect x="572.7" y="1043.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="575.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.08%)</title><rect x="573.2" y="1027.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (2 samples, 0.04%)</title><rect x="573.2" y="1011.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="576.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.04%)</title><rect x="573.7" y="1011.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.7" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.04%)</title><rect x="573.7" y="995.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.7" y="1006.0"></text>
</g>
<g>
<title>java/net/URI.create (36 samples, 0.73%)</title><rect x="574.4" y="1059.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.4" y="1070.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (36 samples, 0.73%)</title><rect x="574.4" y="1043.0" width="8.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="577.4" y="1054.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (36 samples, 0.73%)</title><rect x="574.4" y="1027.0" width="8.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.4" y="1038.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (2 samples, 0.04%)</title><rect x="574.6" y="1011.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="577.6" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (29 samples, 0.59%)</title><rect x="575.4" y="1011.0" width="6.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="578.4" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (20 samples, 0.41%)</title><rect x="575.6" y="995.0" width="4.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="578.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="576.6" y="979.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="579.6" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="576.6" y="963.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="579.6" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (10 samples, 0.20%)</title><rect x="577.0" y="979.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="580.0" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (7 samples, 0.14%)</title><rect x="577.5" y="963.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="580.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.08%)</title><rect x="577.8" y="947.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="580.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.08%)</title><rect x="577.8" y="931.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="580.8" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.06%)</title><rect x="578.0" y="915.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="581.0" y="926.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.04%)</title><rect x="578.7" y="947.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.7" y="958.0"></text>
</g>
<g>
<title>java/net/URI.match (2 samples, 0.04%)</title><rect x="578.7" y="931.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="581.7" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.08%)</title><rect x="579.4" y="979.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="582.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="579.9" y="963.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="582.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="579.9" y="947.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="582.9" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (8 samples, 0.16%)</title><rect x="580.4" y="995.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.4" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.06%)</title><rect x="582.3" y="1011.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="585.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.04%)</title><rect x="582.3" y="995.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="585.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.04%)</title><rect x="582.3" y="979.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="585.3" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (6 samples, 0.12%)</title><rect x="583.0" y="1059.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="586.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (6 samples, 0.12%)</title><rect x="583.0" y="1043.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="586.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (3 samples, 0.06%)</title><rect x="583.7" y="1027.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="586.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.04%)</title><rect x="584.0" y="1011.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="587.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.04%)</title><rect x="584.0" y="995.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="587.0" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.08%)</title><rect x="584.7" y="1059.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="587.7" y="1070.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (3 samples, 0.06%)</title><rect x="584.9" y="1043.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.9" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (2 samples, 0.04%)</title><rect x="585.2" y="1027.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="588.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.04%)</title><rect x="585.2" y="1011.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="588.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (173 samples, 3.51%)</title><rect x="585.7" y="1059.0" width="41.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.7" y="1070.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (173 samples, 3.51%)</title><rect x="585.7" y="1043.0" width="41.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="588.7" y="1054.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (173 samples, 3.51%)</title><rect x="585.7" y="1027.0" width="41.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="588.7" y="1038.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (172 samples, 3.49%)</title><rect x="585.9" y="1011.0" width="41.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="588.9" y="1022.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.06%)</title><rect x="586.1" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="589.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.06%)</title><rect x="586.1" y="979.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="589.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (2 samples, 0.04%)</title><rect x="586.1" y="963.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="589.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.04%)</title><rect x="586.1" y="947.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (116 samples, 2.35%)</title><rect x="587.3" y="995.0" width="27.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="590.3" y="1006.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.10%)</title><rect x="590.0" y="979.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.0" y="990.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.04%)</title><rect x="590.0" y="963.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="593.0" y="974.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (2 samples, 0.04%)</title><rect x="590.0" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="593.0" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.04%)</title><rect x="590.0" y="931.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="593.0" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.04%)</title><rect x="590.0" y="915.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="593.0" y="926.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.06%)</title><rect x="590.4" y="963.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.4" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.06%)</title><rect x="590.4" y="947.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="593.4" y="958.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.06%)</title><rect x="590.4" y="931.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="593.4" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.06%)</title><rect x="590.4" y="915.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.4" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.04%)</title><rect x="590.4" y="899.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="593.4" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (14 samples, 0.28%)</title><rect x="591.4" y="979.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="594.4" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (13 samples, 0.26%)</title><rect x="591.6" y="963.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.6" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (13 samples, 0.26%)</title><rect x="591.6" y="947.0" width="3.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="594.6" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (13 samples, 0.26%)</title><rect x="591.6" y="931.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="594.6" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/1304086955.accept (13 samples, 0.26%)</title><rect x="591.6" y="915.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="594.6" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.24%)</title><rect x="591.9" y="899.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.9" y="910.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.16%)</title><rect x="591.9" y="883.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="594.9" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.accept (8 samples, 0.16%)</title><rect x="591.9" y="867.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="594.9" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (8 samples, 0.16%)</title><rect x="591.9" y="851.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="594.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.trim (4 samples, 0.08%)</title><rect x="591.9" y="835.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.9" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.06%)</title><rect x="592.1" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="595.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/107456312.test (3 samples, 0.06%)</title><rect x="593.1" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="596.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (3 samples, 0.06%)</title><rect x="593.1" y="819.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="596.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (3 samples, 0.06%)</title><rect x="593.1" y="803.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.04%)</title><rect x="593.1" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.04%)</title><rect x="593.8" y="883.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="596.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.04%)</title><rect x="593.8" y="867.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.8" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="593.8" y="851.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="596.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="593.8" y="835.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="596.8" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="594.3" y="883.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="597.3" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="594.3" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="597.3" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.get$Lambda (2 samples, 0.04%)</title><rect x="594.3" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.3" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.&lt;init&gt; (2 samples, 0.04%)</title><rect x="594.3" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.04%)</title><rect x="595.0" y="979.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="598.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (80 samples, 1.62%)</title><rect x="595.5" y="979.0" width="19.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="598.5" y="990.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (80 samples, 1.62%)</title><rect x="595.5" y="963.0" width="19.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="598.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.04%)</title><rect x="595.5" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.5" y="958.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="595.5" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="598.5" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="595.5" y="915.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="598.5" y="926.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (78 samples, 1.58%)</title><rect x="595.9" y="947.0" width="18.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="598.9" y="958.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (48 samples, 0.97%)</title><rect x="596.4" y="931.0" width="11.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="599.4" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.06%)</title><rect x="598.1" y="915.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="601.1" y="926.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (3 samples, 0.06%)</title><rect x="598.1" y="899.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="601.1" y="910.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 0.12%)</title><rect x="599.8" y="915.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="602.8" y="926.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.04%)</title><rect x="600.2" y="899.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="603.2" y="910.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.04%)</title><rect x="601.2" y="915.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="604.2" y="926.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.08%)</title><rect x="601.7" y="915.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="604.7" y="926.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (4 samples, 0.08%)</title><rect x="602.6" y="915.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="605.6" y="926.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.12%)</title><rect x="604.1" y="915.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="607.1" y="926.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.08%)</title><rect x="604.1" y="899.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="607.1" y="910.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.06%)</title><rect x="604.1" y="883.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="607.1" y="894.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.06%)</title><rect x="604.1" y="867.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="607.1" y="878.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (2 samples, 0.04%)</title><rect x="605.0" y="899.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="608.0" y="910.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (10 samples, 0.20%)</title><rect x="605.5" y="915.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="608.5" y="926.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.10%)</title><rect x="606.7" y="899.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="609.7" y="910.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (4 samples, 0.08%)</title><rect x="606.9" y="883.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="609.9" y="894.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.08%)</title><rect x="606.9" y="867.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="609.9" y="878.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.08%)</title><rect x="606.9" y="851.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="609.9" y="862.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.04%)</title><rect x="607.9" y="931.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="610.9" y="942.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.04%)</title><rect x="608.8" y="931.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="611.8" y="942.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.04%)</title><rect x="609.3" y="931.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="612.3" y="942.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (18 samples, 0.36%)</title><rect x="609.8" y="931.0" width="4.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="612.8" y="942.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (18 samples, 0.36%)</title><rect x="609.8" y="915.0" width="4.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.8" y="926.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (5 samples, 0.10%)</title><rect x="610.3" y="899.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.10%)</title><rect x="610.3" y="883.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.3" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.08%)</title><rect x="610.5" y="867.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="613.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.04%)</title><rect x="611.5" y="899.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="614.5" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="611.5" y="883.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.5" y="894.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (9 samples, 0.18%)</title><rect x="612.0" y="899.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.0" y="910.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (2 samples, 0.04%)</title><rect x="612.2" y="883.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="615.2" y="894.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.04%)</title><rect x="612.2" y="867.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.2" y="878.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.04%)</title><rect x="612.2" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="615.2" y="862.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.12%)</title><rect x="612.7" y="883.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="615.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.12%)</title><rect x="612.7" y="867.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.06%)</title><rect x="613.2" y="851.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="616.2" y="862.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="613.4" y="835.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="616.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.04%)</title><rect x="614.6" y="979.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.6" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="614.6" y="963.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="617.6" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (2 samples, 0.04%)</title><rect x="614.6" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="617.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (22 samples, 0.45%)</title><rect x="615.1" y="995.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (3 samples, 0.06%)</title><rect x="615.5" y="979.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="618.5" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="615.5" y="963.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.06%)</title><rect x="615.5" y="947.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="618.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$127/1339200468.get$Lambda (3 samples, 0.06%)</title><rect x="615.5" y="931.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$127/1339200468.&lt;init&gt; (3 samples, 0.06%)</title><rect x="615.5" y="915.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="618.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (17 samples, 0.34%)</title><rect x="616.3" y="979.0" width="4.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="619.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (17 samples, 0.34%)</title><rect x="616.3" y="963.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="619.3" y="974.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (4 samples, 0.08%)</title><rect x="616.7" y="947.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="619.7" y="958.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (4 samples, 0.08%)</title><rect x="616.7" y="931.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="619.7" y="942.0"></text>
</g>
<g>
<title>java/lang/Class.privateGetDeclaredConstructors (4 samples, 0.08%)</title><rect x="616.7" y="915.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="619.7" y="926.0"></text>
</g>
<g>
<title>java/lang/Class.reflectionData (2 samples, 0.04%)</title><rect x="617.2" y="899.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.2" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (8 samples, 0.16%)</title><rect x="617.9" y="947.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.9" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (8 samples, 0.16%)</title><rect x="617.9" y="931.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.9" y="942.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (8 samples, 0.16%)</title><rect x="617.9" y="915.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.9" y="926.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (5 samples, 0.10%)</title><rect x="618.7" y="899.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="621.7" y="910.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.06%)</title><rect x="619.1" y="883.0" width="0.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="622.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (28 samples, 0.57%)</title><rect x="620.3" y="995.0" width="6.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="623.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (23 samples, 0.47%)</title><rect x="621.0" y="979.0" width="5.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.&lt;init&gt; (2 samples, 0.04%)</title><rect x="621.3" y="963.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="624.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (20 samples, 0.41%)</title><rect x="621.8" y="963.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.41%)</title><rect x="621.8" y="947.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (3 samples, 0.06%)</title><rect x="622.2" y="931.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="625.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (14 samples, 0.28%)</title><rect x="623.0" y="931.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="626.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (14 samples, 0.28%)</title><rect x="623.0" y="915.0" width="3.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (14 samples, 0.28%)</title><rect x="623.0" y="899.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (14 samples, 0.28%)</title><rect x="623.0" y="883.0" width="3.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (14 samples, 0.28%)</title><rect x="623.0" y="867.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="626.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (14 samples, 0.28%)</title><rect x="623.0" y="851.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="626.0" y="862.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (13 samples, 0.26%)</title><rect x="623.2" y="835.0" width="3.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="626.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="623.7" y="819.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="626.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="623.7" y="803.0" width="2.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="626.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.20%)</title><rect x="623.9" y="787.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="626.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.20%)</title><rect x="623.9" y="771.0" width="2.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="626.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.20%)</title><rect x="623.9" y="755.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="626.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.14%)</title><rect x="624.6" y="739.0" width="1.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="627.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.14%)</title><rect x="624.6" y="723.0" width="1.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="627.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="624.9" y="707.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="627.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2 samples, 0.04%)</title><rect x="626.5" y="979.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="629.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="626.5" y="963.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="629.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="626.5" y="947.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="629.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (23 samples, 0.47%)</title><rect x="627.0" y="1059.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (23 samples, 0.47%)</title><rect x="627.0" y="1043.0" width="5.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="630.0" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (23 samples, 0.47%)</title><rect x="627.0" y="1027.0" width="5.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.0" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (23 samples, 0.47%)</title><rect x="627.0" y="1011.0" width="5.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="630.0" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="628.0" y="995.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="631.0" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (17 samples, 0.34%)</title><rect x="628.5" y="995.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="631.5" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/1304086955.accept (17 samples, 0.34%)</title><rect x="628.5" y="979.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="631.5" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (14 samples, 0.28%)</title><rect x="629.2" y="963.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="632.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.trim (11 samples, 0.22%)</title><rect x="629.2" y="947.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.2" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (11 samples, 0.22%)</title><rect x="629.2" y="931.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.2" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (10 samples, 0.20%)</title><rect x="629.4" y="915.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="632.4" y="926.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (9 samples, 0.18%)</title><rect x="629.4" y="899.0" width="2.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="632.4" y="910.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.12%)</title><rect x="629.7" y="883.0" width="1.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="632.7" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.04%)</title><rect x="632.0" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="635.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (6 samples, 0.12%)</title><rect x="632.5" y="1059.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (6 samples, 0.12%)</title><rect x="632.5" y="1043.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="635.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (6 samples, 0.12%)</title><rect x="632.5" y="1027.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.5" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.06%)</title><rect x="632.5" y="1011.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.5" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.06%)</title><rect x="632.5" y="995.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="635.5" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.06%)</title><rect x="632.5" y="979.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="635.5" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.06%)</title><rect x="632.5" y="963.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="635.5" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.06%)</title><rect x="633.2" y="1011.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="636.2" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.04%)</title><rect x="633.2" y="995.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="636.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getFirstResponses (15 samples, 0.30%)</title><rect x="634.0" y="1059.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="637.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (10 samples, 0.20%)</title><rect x="634.7" y="1043.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="637.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (7 samples, 0.14%)</title><rect x="635.2" y="1027.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (7 samples, 0.14%)</title><rect x="635.2" y="1011.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.&lt;init&gt; (2 samples, 0.04%)</title><rect x="635.2" y="995.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="638.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (5 samples, 0.10%)</title><rect x="635.6" y="995.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="638.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (5 samples, 0.10%)</title><rect x="635.6" y="979.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (5 samples, 0.10%)</title><rect x="635.6" y="963.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (5 samples, 0.10%)</title><rect x="635.6" y="947.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="635.6" y="931.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="638.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.06%)</title><rect x="636.1" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="639.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="636.1" y="915.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="639.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="636.1" y="899.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="639.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="636.1" y="883.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="639.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.06%)</title><rect x="636.1" y="867.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="639.1" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="636.4" y="851.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="639.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="636.4" y="835.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="639.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="636.4" y="819.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="639.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="636.4" y="803.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="639.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="636.4" y="787.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="639.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="636.4" y="771.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="639.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="636.4" y="755.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="639.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="636.4" y="739.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="639.4" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="636.4" y="723.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="639.4" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (2 samples, 0.04%)</title><rect x="637.1" y="1043.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="640.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (10 samples, 0.20%)</title><rect x="637.8" y="1075.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="640.8" y="1086.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (2 samples, 0.04%)</title><rect x="637.8" y="1059.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="640.8" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.getData (2 samples, 0.04%)</title><rect x="637.8" y="1043.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="640.8" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.04%)</title><rect x="638.3" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="641.3" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="638.3" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="641.3" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.04%)</title><rect x="638.7" y="1059.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.7" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.04%)</title><rect x="638.7" y="1043.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="641.7" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="638.7" y="1027.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="641.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="638.7" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.getData (4 samples, 0.08%)</title><rect x="639.2" y="1059.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="642.2" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (2 samples, 0.04%)</title><rect x="639.7" y="1043.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="642.7" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (2 samples, 0.04%)</title><rect x="639.7" y="1027.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="639.7" y="1011.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.7" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="639.7" y="995.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (22 samples, 0.45%)</title><rect x="640.2" y="1091.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="641.9" y="1075.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.9" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.06%)</title><rect x="642.3" y="1075.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="645.3" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.06%)</title><rect x="642.3" y="1059.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="645.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.20%)</title><rect x="643.0" y="1075.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="646.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="643.3" y="1059.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="646.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.04%)</title><rect x="644.0" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="647.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="644.0" y="1043.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="647.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (3 samples, 0.06%)</title><rect x="644.7" y="1059.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="647.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="645.0" y="1043.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="648.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="645.0" y="1027.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="648.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="645.0" y="1011.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="648.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (837 samples, 16.96%)</title><rect x="645.4" y="1187.0" width="200.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="648.4" y="1198.0">java/util/concurrent/ForkJ..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (837 samples, 16.96%)</title><rect x="645.4" y="1171.0" width="200.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="648.4" y="1182.0">java/util/concurrent/ForkJ..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (726 samples, 14.71%)</title><rect x="647.4" y="1155.0" width="173.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="650.4" y="1166.0">java/util/concurrent/F..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (709 samples, 14.37%)</title><rect x="649.7" y="1139.0" width="169.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.7" y="1150.0">java/util/concurrent/F..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.04%)</title><rect x="649.7" y="1123.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (705 samples, 14.29%)</title><rect x="650.7" y="1123.0" width="168.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="653.7" y="1134.0">java/util/concurrent/F..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (414 samples, 8.39%)</title><rect x="651.7" y="1107.0" width="99.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.7" y="1118.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (414 samples, 8.39%)</title><rect x="651.7" y="1091.0" width="99.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.7" y="1102.0">java/util/co..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$278/895497718.run (411 samples, 8.33%)</title><rect x="652.4" y="1075.0" width="98.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="655.4" y="1086.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$executeIfProxied$10 (411 samples, 8.33%)</title><rect x="652.4" y="1059.0" width="98.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="655.4" y="1070.0">ru/mail/poli..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.16%)</title><rect x="652.9" y="1043.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="655.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (8 samples, 0.16%)</title><rect x="652.9" y="1027.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="655.9" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (8 samples, 0.16%)</title><rect x="652.9" y="1011.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="655.9" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (8 samples, 0.16%)</title><rect x="652.9" y="995.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="655.9" y="1006.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="653.6" y="979.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (114 samples, 2.31%)</title><rect x="654.8" y="1043.0" width="27.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="657.8" y="1054.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.10%)</title><rect x="655.0" y="1027.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="658.0" y="1038.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.08%)</title><rect x="655.0" y="1011.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.0" y="1022.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (4 samples, 0.08%)</title><rect x="655.0" y="995.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="658.0" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (4 samples, 0.08%)</title><rect x="655.0" y="979.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="658.0" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.04%)</title><rect x="655.2" y="963.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.2" y="974.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.04%)</title><rect x="655.2" y="947.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="658.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (108 samples, 2.19%)</title><rect x="656.2" y="1027.0" width="25.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.2" y="1038.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (91 samples, 1.84%)</title><rect x="656.2" y="1011.0" width="21.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="659.2" y="1022.0">r..</text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.06%)</title><rect x="656.4" y="995.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="659.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="656.4" y="979.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.06%)</title><rect x="656.4" y="963.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="659.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (2 samples, 0.04%)</title><rect x="656.7" y="947.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="659.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (2 samples, 0.04%)</title><rect x="656.7" y="931.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="659.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (86 samples, 1.74%)</title><rect x="657.4" y="995.0" width="20.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.06%)</title><rect x="657.4" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.06%)</title><rect x="657.4" y="963.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.06%)</title><rect x="657.4" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="660.4" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (74 samples, 1.50%)</title><rect x="658.1" y="979.0" width="17.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="661.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (66 samples, 1.34%)</title><rect x="658.6" y="963.0" width="15.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="661.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (65 samples, 1.32%)</title><rect x="658.8" y="947.0" width="15.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (63 samples, 1.28%)</title><rect x="659.3" y="931.0" width="15.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="662.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (61 samples, 1.24%)</title><rect x="659.6" y="915.0" width="14.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="662.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.inBounds (4 samples, 0.08%)</title><rect x="659.8" y="899.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="662.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.tooLow (4 samples, 0.08%)</title><rect x="659.8" y="883.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="662.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.06%)</title><rect x="660.0" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.0" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="660.3" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="663.3" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="660.3" y="835.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="663.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (56 samples, 1.13%)</title><rect x="660.7" y="899.0" width="13.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="663.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (56 samples, 1.13%)</title><rect x="660.7" y="883.0" width="13.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.06%)</title><rect x="660.7" y="867.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="663.7" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.06%)</title><rect x="660.7" y="851.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.7" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.06%)</title><rect x="660.7" y="835.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="663.7" y="846.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.06%)</title><rect x="660.7" y="819.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="663.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (53 samples, 1.07%)</title><rect x="661.5" y="867.0" width="12.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="664.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (29 samples, 0.59%)</title><rect x="667.2" y="851.0" width="6.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.2" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (27 samples, 0.55%)</title><rect x="667.7" y="835.0" width="6.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.7" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.28%)</title><rect x="670.8" y="819.0" width="3.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="673.8" y="830.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (13 samples, 0.26%)</title><rect x="671.0" y="803.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="674.0" y="814.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.06%)</title><rect x="673.4" y="787.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="676.4" y="798.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (2 samples, 0.04%)</title><rect x="673.4" y="771.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="676.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (6 samples, 0.12%)</title><rect x="674.4" y="963.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="677.4" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (6 samples, 0.12%)</title><rect x="674.4" y="947.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="677.4" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (5 samples, 0.10%)</title><rect x="674.6" y="931.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="677.6" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (5 samples, 0.10%)</title><rect x="674.6" y="915.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="677.6" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.peekingIterator (2 samples, 0.04%)</title><rect x="674.6" y="899.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="677.6" y="910.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (2 samples, 0.04%)</title><rect x="675.3" y="899.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="678.3" y="910.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (2 samples, 0.04%)</title><rect x="675.3" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.3" y="894.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (2 samples, 0.04%)</title><rect x="675.3" y="867.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="678.3" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (2 samples, 0.04%)</title><rect x="675.3" y="851.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.3" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (9 samples, 0.18%)</title><rect x="675.8" y="979.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="678.8" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (7 samples, 0.14%)</title><rect x="675.8" y="963.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="678.8" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (6 samples, 0.12%)</title><rect x="676.1" y="947.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="679.1" y="958.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.add (3 samples, 0.06%)</title><rect x="676.8" y="931.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="679.8" y="942.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.offer (3 samples, 0.06%)</title><rect x="676.8" y="915.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="679.8" y="926.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUp (3 samples, 0.06%)</title><rect x="676.8" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.8" y="910.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.siftUpUsingComparator (3 samples, 0.06%)</title><rect x="676.8" y="883.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="679.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.04%)</title><rect x="677.0" y="867.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="680.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.04%)</title><rect x="677.5" y="963.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="680.5" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="677.5" y="947.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="680.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (17 samples, 0.34%)</title><rect x="678.0" y="1011.0" width="4.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="681.0" y="1022.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.06%)</title><rect x="678.0" y="995.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="681.0" y="1006.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="678.0" y="979.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="681.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (14 samples, 0.28%)</title><rect x="678.7" y="995.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="681.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (14 samples, 0.28%)</title><rect x="678.7" y="979.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="681.7" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (14 samples, 0.28%)</title><rect x="678.7" y="963.0" width="3.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="681.7" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (14 samples, 0.28%)</title><rect x="678.7" y="947.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="681.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (14 samples, 0.28%)</title><rect x="678.7" y="931.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="681.7" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (9 samples, 0.18%)</title><rect x="679.2" y="915.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="682.2" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (9 samples, 0.18%)</title><rect x="679.2" y="899.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="682.2" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (8 samples, 0.16%)</title><rect x="679.4" y="883.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="682.4" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.equals (2 samples, 0.04%)</title><rect x="681.3" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="684.3" y="926.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (2 samples, 0.04%)</title><rect x="681.3" y="899.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="684.3" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.sendResponse (266 samples, 5.39%)</title><rect x="682.0" y="1043.0" width="63.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="685.0" y="1054.0">ru/mail..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (266 samples, 5.39%)</title><rect x="682.0" y="1027.0" width="63.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="685.0" y="1038.0">one/nio..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.06%)</title><rect x="682.3" y="1011.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="685.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="682.3" y="995.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="685.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="682.3" y="979.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="685.3" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (260 samples, 5.27%)</title><rect x="683.0" y="1011.0" width="62.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.0" y="1022.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.08%)</title><rect x="683.0" y="995.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.08%)</title><rect x="683.0" y="979.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="686.0" y="990.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.04%)</title><rect x="683.5" y="963.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="686.5" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (256 samples, 5.19%)</title><rect x="683.9" y="995.0" width="61.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="686.9" y="1006.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (256 samples, 5.19%)</title><rect x="683.9" y="979.0" width="61.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="686.9" y="990.0">one/ni..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="684.2" y="963.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="687.2" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (252 samples, 5.11%)</title><rect x="684.7" y="963.0" width="60.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="687.7" y="974.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (251 samples, 5.09%)</title><rect x="684.9" y="947.0" width="60.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="687.9" y="958.0">one/ni..</text>
</g>
<g>
<title>[unknown] (14 samples, 0.28%)</title><rect x="685.6" y="931.0" width="3.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="688.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.28%)</title><rect x="685.6" y="915.0" width="3.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="688.6" y="926.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (11 samples, 0.22%)</title><rect x="685.6" y="899.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="688.6" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="686.3" y="883.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="689.3" y="894.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.10%)</title><rect x="687.1" y="883.0" width="1.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="690.1" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.06%)</title><rect x="687.3" y="867.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="690.3" y="878.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="688.5" y="899.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="691.5" y="910.0"></text>
</g>
<g>
<title>__send (234 samples, 4.74%)</title><rect x="689.0" y="931.0" width="55.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="692.0" y="942.0">__send</text>
</g>
<g>
<title>[unknown] (233 samples, 4.72%)</title><rect x="689.2" y="915.0" width="55.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="692.2" y="926.0">[unkn..</text>
</g>
<g>
<title>[unknown] (233 samples, 4.72%)</title><rect x="689.2" y="899.0" width="55.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="692.2" y="910.0">[unkn..</text>
</g>
<g>
<title>[unknown] (232 samples, 4.70%)</title><rect x="689.4" y="883.0" width="55.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="692.4" y="894.0">[unkn..</text>
</g>
<g>
<title>[unknown] (231 samples, 4.68%)</title><rect x="689.7" y="867.0" width="55.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="692.7" y="878.0">[unkn..</text>
</g>
<g>
<title>[unknown] (228 samples, 4.62%)</title><rect x="690.4" y="851.0" width="54.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="693.4" y="862.0">[unkn..</text>
</g>
<g>
<title>[unknown] (227 samples, 4.60%)</title><rect x="690.6" y="835.0" width="54.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="693.6" y="846.0">[unkn..</text>
</g>
<g>
<title>[unknown] (226 samples, 4.58%)</title><rect x="690.9" y="819.0" width="54.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="693.9" y="830.0">[unkn..</text>
</g>
<g>
<title>[unknown] (225 samples, 4.56%)</title><rect x="691.1" y="803.0" width="53.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="694.1" y="814.0">[unkn..</text>
</g>
<g>
<title>[unknown] (213 samples, 4.32%)</title><rect x="694.0" y="787.0" width="50.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="697.0" y="798.0">[unkn..</text>
</g>
<g>
<title>[unknown] (200 samples, 4.05%)</title><rect x="697.1" y="771.0" width="47.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="700.1" y="782.0">[unk..</text>
</g>
<g>
<title>[unknown] (189 samples, 3.83%)</title><rect x="699.7" y="755.0" width="45.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="702.7" y="766.0">[unk..</text>
</g>
<g>
<title>[unknown] (178 samples, 3.61%)</title><rect x="702.4" y="739.0" width="42.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="705.4" y="750.0">[unk..</text>
</g>
<g>
<title>[unknown] (160 samples, 3.24%)</title><rect x="706.7" y="723.0" width="38.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="709.7" y="734.0">[un..</text>
</g>
<g>
<title>[unknown] (157 samples, 3.18%)</title><rect x="707.4" y="707.0" width="37.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="710.4" y="718.0">[un..</text>
</g>
<g>
<title>[unknown] (151 samples, 3.06%)</title><rect x="708.8" y="691.0" width="36.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="711.8" y="702.0">[un..</text>
</g>
<g>
<title>[unknown] (148 samples, 3.00%)</title><rect x="709.5" y="675.0" width="35.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="712.5" y="686.0">[un..</text>
</g>
<g>
<title>[unknown] (146 samples, 2.96%)</title><rect x="710.0" y="659.0" width="34.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="713.0" y="670.0">[u..</text>
</g>
<g>
<title>[unknown] (144 samples, 2.92%)</title><rect x="710.5" y="643.0" width="34.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="713.5" y="654.0">[u..</text>
</g>
<g>
<title>[unknown] (135 samples, 2.74%)</title><rect x="712.6" y="627.0" width="32.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="715.6" y="638.0">[u..</text>
</g>
<g>
<title>[unknown] (129 samples, 2.61%)</title><rect x="714.1" y="611.0" width="30.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="717.1" y="622.0">[u..</text>
</g>
<g>
<title>[unknown] (114 samples, 2.31%)</title><rect x="717.7" y="595.0" width="27.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="720.7" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (105 samples, 2.13%)</title><rect x="719.8" y="579.0" width="25.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="722.8" y="590.0">[..</text>
</g>
<g>
<title>[unknown] (102 samples, 2.07%)</title><rect x="720.5" y="563.0" width="24.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="723.5" y="574.0">[..</text>
</g>
<g>
<title>[unknown] (97 samples, 1.97%)</title><rect x="721.7" y="547.0" width="23.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="724.7" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (94 samples, 1.91%)</title><rect x="722.4" y="531.0" width="22.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="725.4" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (91 samples, 1.84%)</title><rect x="723.2" y="515.0" width="21.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="726.2" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (91 samples, 1.84%)</title><rect x="723.2" y="499.0" width="21.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="726.2" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (83 samples, 1.68%)</title><rect x="725.1" y="483.0" width="19.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="728.1" y="494.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.64%)</title><rect x="725.6" y="467.0" width="19.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="728.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.62%)</title><rect x="725.8" y="451.0" width="19.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="728.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.62%)</title><rect x="725.8" y="435.0" width="19.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="728.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (79 samples, 1.60%)</title><rect x="726.0" y="419.0" width="18.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="729.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 1.42%)</title><rect x="728.2" y="403.0" width="16.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="731.2" y="414.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 1.28%)</title><rect x="729.9" y="387.0" width="15.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="732.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 1.18%)</title><rect x="731.1" y="371.0" width="13.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="734.1" y="382.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.95%)</title><rect x="733.7" y="355.0" width="11.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="736.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.73%)</title><rect x="736.3" y="339.0" width="8.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="739.3" y="350.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.63%)</title><rect x="737.5" y="323.0" width="7.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="740.5" y="334.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.57%)</title><rect x="738.2" y="307.0" width="6.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="741.2" y="318.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (6 samples, 0.12%)</title><rect x="745.9" y="1043.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="748.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.04%)</title><rect x="746.4" y="1027.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="749.4" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="746.4" y="1011.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="749.4" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.04%)</title><rect x="746.8" y="1027.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="749.8" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (14 samples, 0.28%)</title><rect x="747.3" y="1043.0" width="3.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="750.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/604125138.linkToTargetMethod (8 samples, 0.16%)</title><rect x="747.6" y="1027.0" width="1.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1046774945.invoke (8 samples, 0.16%)</title><rect x="747.6" y="1011.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="750.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="748.3" y="995.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.04%)</title><rect x="748.3" y="979.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (2 samples, 0.04%)</title><rect x="748.3" y="963.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="751.3" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.10%)</title><rect x="749.5" y="1027.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="752.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (287 samples, 5.82%)</title><rect x="750.7" y="1107.0" width="68.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="753.7" y="1118.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (287 samples, 5.82%)</title><rect x="750.7" y="1091.0" width="68.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="753.7" y="1102.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (37 samples, 0.75%)</title><rect x="750.7" y="1075.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (37 samples, 0.75%)</title><rect x="750.7" y="1059.0" width="8.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (37 samples, 0.75%)</title><rect x="750.7" y="1043.0" width="8.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (37 samples, 0.75%)</title><rect x="750.7" y="1027.0" width="8.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (6 samples, 0.12%)</title><rect x="750.7" y="1011.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (4 samples, 0.08%)</title><rect x="750.7" y="995.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="753.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (4 samples, 0.08%)</title><rect x="750.7" y="979.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (4 samples, 0.08%)</title><rect x="750.7" y="963.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (4 samples, 0.08%)</title><rect x="750.7" y="947.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown (3 samples, 0.06%)</title><rect x="750.7" y="931.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (2 samples, 0.04%)</title><rect x="751.6" y="995.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (31 samples, 0.63%)</title><rect x="752.1" y="1011.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (23 samples, 0.47%)</title><rect x="752.3" y="995.0" width="5.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (23 samples, 0.47%)</title><rect x="752.3" y="979.0" width="5.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="755.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (23 samples, 0.47%)</title><rect x="752.3" y="963.0" width="5.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (23 samples, 0.47%)</title><rect x="752.3" y="947.0" width="5.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="755.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (23 samples, 0.47%)</title><rect x="752.3" y="931.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="755.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (23 samples, 0.47%)</title><rect x="752.3" y="915.0" width="5.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="755.3" y="926.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.10%)</title><rect x="752.3" y="899.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="755.3" y="910.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.06%)</title><rect x="752.8" y="883.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="755.8" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (18 samples, 0.36%)</title><rect x="753.5" y="899.0" width="4.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="756.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.36%)</title><rect x="753.5" y="883.0" width="4.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="756.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.36%)</title><rect x="753.5" y="867.0" width="4.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="756.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.34%)</title><rect x="753.8" y="851.0" width="4.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="756.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.34%)</title><rect x="753.8" y="835.0" width="4.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="756.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.34%)</title><rect x="753.8" y="819.0" width="4.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="756.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.30%)</title><rect x="754.3" y="803.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="757.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.28%)</title><rect x="754.5" y="787.0" width="3.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="757.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.28%)</title><rect x="754.5" y="771.0" width="3.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="757.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.14%)</title><rect x="757.8" y="995.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="760.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.14%)</title><rect x="757.8" y="979.0" width="1.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="760.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.10%)</title><rect x="758.3" y="963.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="761.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.10%)</title><rect x="758.3" y="947.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="761.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.10%)</title><rect x="758.3" y="931.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="761.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.10%)</title><rect x="758.3" y="915.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="761.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.10%)</title><rect x="758.3" y="899.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (5 samples, 0.10%)</title><rect x="758.3" y="883.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="761.3" y="894.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="758.8" y="867.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="761.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (250 samples, 5.07%)</title><rect x="759.5" y="1075.0" width="59.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="762.5" y="1086.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (17 samples, 0.34%)</title><rect x="759.5" y="1059.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="762.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (16 samples, 0.32%)</title><rect x="759.8" y="1043.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.32%)</title><rect x="759.8" y="1027.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="762.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.32%)</title><rect x="759.8" y="1011.0" width="3.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (16 samples, 0.32%)</title><rect x="759.8" y="995.0" width="3.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (16 samples, 0.32%)</title><rect x="759.8" y="979.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (16 samples, 0.32%)</title><rect x="759.8" y="963.0" width="3.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (16 samples, 0.32%)</title><rect x="759.8" y="947.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="762.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (16 samples, 0.32%)</title><rect x="759.8" y="931.0" width="3.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.8" y="942.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.10%)</title><rect x="760.2" y="915.0" width="1.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="763.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (2 samples, 0.04%)</title><rect x="761.4" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="764.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils$$Lambda$143/512638028.accept (3 samples, 0.06%)</title><rect x="762.4" y="915.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="765.4" y="926.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="763.1" y="915.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="766.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$149/1865620627.accept (220 samples, 4.46%)</title><rect x="763.6" y="1059.0" width="52.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.6" y="1070.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$get$0 (219 samples, 4.44%)</title><rect x="763.8" y="1043.0" width="52.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="766.8" y="1054.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.sendResponse (181 samples, 3.67%)</title><rect x="764.8" y="1027.0" width="43.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="767.8" y="1038.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (181 samples, 3.67%)</title><rect x="764.8" y="1011.0" width="43.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="767.8" y="1022.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.04%)</title><rect x="765.0" y="995.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="768.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="765.0" y="979.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.0" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="765.0" y="963.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="768.0" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (175 samples, 3.55%)</title><rect x="765.5" y="995.0" width="41.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.5" y="1006.0">one..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="765.5" y="979.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.5" y="990.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.04%)</title><rect x="765.5" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.5" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (173 samples, 3.51%)</title><rect x="766.0" y="979.0" width="41.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.0" y="990.0">one..</text>
</g>
<g>
<title>one/nio/net/Session.write (173 samples, 3.51%)</title><rect x="766.0" y="963.0" width="41.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="769.0" y="974.0">one..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="766.0" y="947.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="769.0" y="958.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="766.0" y="931.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="769.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (170 samples, 3.45%)</title><rect x="766.7" y="947.0" width="40.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="769.7" y="958.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (170 samples, 3.45%)</title><rect x="766.7" y="931.0" width="40.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="769.7" y="942.0">one..</text>
</g>
<g>
<title>[unknown] (9 samples, 0.18%)</title><rect x="767.2" y="915.0" width="2.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="770.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.18%)</title><rect x="767.2" y="899.0" width="2.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="770.2" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.12%)</title><rect x="767.2" y="883.0" width="1.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="770.2" y="894.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="768.1" y="867.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="771.1" y="878.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="768.1" y="851.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="771.1" y="862.0"></text>
</g>
<g>
<title>__send (159 samples, 3.22%)</title><rect x="769.3" y="915.0" width="38.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="772.3" y="926.0">__s..</text>
</g>
<g>
<title>[unknown] (158 samples, 3.20%)</title><rect x="769.6" y="899.0" width="37.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="772.6" y="910.0">[un..</text>
</g>
<g>
<title>[unknown] (158 samples, 3.20%)</title><rect x="769.6" y="883.0" width="37.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="772.6" y="894.0">[un..</text>
</g>
<g>
<title>[unknown] (157 samples, 3.18%)</title><rect x="769.8" y="867.0" width="37.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="772.8" y="878.0">[un..</text>
</g>
<g>
<title>[unknown] (157 samples, 3.18%)</title><rect x="769.8" y="851.0" width="37.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="772.8" y="862.0">[un..</text>
</g>
<g>
<title>[unknown] (155 samples, 3.14%)</title><rect x="770.3" y="835.0" width="37.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="773.3" y="846.0">[un..</text>
</g>
<g>
<title>[unknown] (155 samples, 3.14%)</title><rect x="770.3" y="819.0" width="37.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="773.3" y="830.0">[un..</text>
</g>
<g>
<title>[unknown] (154 samples, 3.12%)</title><rect x="770.5" y="803.0" width="36.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="773.5" y="814.0">[un..</text>
</g>
<g>
<title>[unknown] (153 samples, 3.10%)</title><rect x="770.8" y="787.0" width="36.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="773.8" y="798.0">[un..</text>
</g>
<g>
<title>[unknown] (147 samples, 2.98%)</title><rect x="772.2" y="771.0" width="35.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="775.2" y="782.0">[un..</text>
</g>
<g>
<title>[unknown] (142 samples, 2.88%)</title><rect x="773.4" y="755.0" width="33.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="776.4" y="766.0">[u..</text>
</g>
<g>
<title>[unknown] (133 samples, 2.70%)</title><rect x="775.5" y="739.0" width="31.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="778.5" y="750.0">[u..</text>
</g>
<g>
<title>[unknown] (123 samples, 2.49%)</title><rect x="777.9" y="723.0" width="29.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="780.9" y="734.0">[u..</text>
</g>
<g>
<title>[unknown] (116 samples, 2.35%)</title><rect x="779.6" y="707.0" width="27.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="782.6" y="718.0">[..</text>
</g>
<g>
<title>[unknown] (115 samples, 2.33%)</title><rect x="779.8" y="691.0" width="27.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="782.8" y="702.0">[..</text>
</g>
<g>
<title>[unknown] (111 samples, 2.25%)</title><rect x="780.8" y="675.0" width="26.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="783.8" y="686.0">[..</text>
</g>
<g>
<title>[unknown] (110 samples, 2.23%)</title><rect x="781.0" y="659.0" width="26.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="784.0" y="670.0">[..</text>
</g>
<g>
<title>[unknown] (110 samples, 2.23%)</title><rect x="781.0" y="643.0" width="26.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="784.0" y="654.0">[..</text>
</g>
<g>
<title>[unknown] (107 samples, 2.17%)</title><rect x="781.8" y="627.0" width="25.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="784.8" y="638.0">[..</text>
</g>
<g>
<title>[unknown] (107 samples, 2.17%)</title><rect x="781.8" y="611.0" width="25.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="784.8" y="622.0">[..</text>
</g>
<g>
<title>[unknown] (100 samples, 2.03%)</title><rect x="783.4" y="595.0" width="23.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="786.4" y="606.0">[..</text>
</g>
<g>
<title>[unknown] (85 samples, 1.72%)</title><rect x="787.0" y="579.0" width="20.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="790.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 1.56%)</title><rect x="788.9" y="563.0" width="18.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="791.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (72 samples, 1.46%)</title><rect x="790.1" y="547.0" width="17.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="793.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 1.38%)</title><rect x="791.1" y="531.0" width="16.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="794.1" y="542.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 1.32%)</title><rect x="791.8" y="515.0" width="15.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="794.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 1.32%)</title><rect x="791.8" y="499.0" width="15.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="794.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 1.32%)</title><rect x="791.8" y="483.0" width="15.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="794.8" y="494.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 1.30%)</title><rect x="792.0" y="467.0" width="15.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="795.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 1.24%)</title><rect x="792.8" y="451.0" width="14.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="795.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 1.24%)</title><rect x="792.8" y="435.0" width="14.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="795.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 1.24%)</title><rect x="792.8" y="419.0" width="14.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="795.8" y="430.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 1.22%)</title><rect x="793.0" y="403.0" width="14.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="796.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 1.13%)</title><rect x="794.0" y="387.0" width="13.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="797.0" y="398.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.09%)</title><rect x="794.4" y="371.0" width="12.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="797.4" y="382.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.99%)</title><rect x="795.6" y="355.0" width="11.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="798.6" y="366.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.83%)</title><rect x="797.5" y="339.0" width="9.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="800.5" y="350.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.75%)</title><rect x="798.5" y="323.0" width="8.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="801.5" y="334.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.69%)</title><rect x="799.2" y="307.0" width="8.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="802.2" y="318.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.63%)</title><rect x="799.9" y="291.0" width="7.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="802.9" y="302.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="806.2" y="275.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="809.2" y="286.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="806.2" y="259.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="809.2" y="270.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="806.9" y="243.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="809.9" y="254.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="807.3" y="995.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="810.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (24 samples, 0.49%)</title><rect x="808.1" y="1027.0" width="5.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="811.1" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.08%)</title><rect x="808.5" y="1011.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="811.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (4 samples, 0.08%)</title><rect x="808.5" y="995.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="811.5" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (4 samples, 0.08%)</title><rect x="808.5" y="979.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="811.5" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (18 samples, 0.36%)</title><rect x="809.5" y="1011.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="812.5" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.10%)</title><rect x="810.7" y="995.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="813.7" y="1006.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.08%)</title><rect x="810.9" y="979.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.9" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.08%)</title><rect x="810.9" y="963.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.9" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.08%)</title><rect x="810.9" y="947.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="813.9" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.08%)</title><rect x="810.9" y="931.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="813.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.08%)</title><rect x="810.9" y="915.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.9" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="811.4" y="899.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="814.4" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="811.4" y="883.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="814.4" y="894.0"></text>
</g>
<g>
<title>java/util/Collection.stream (6 samples, 0.12%)</title><rect x="811.9" y="995.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="814.9" y="1006.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.06%)</title><rect x="811.9" y="979.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="814.9" y="990.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.06%)</title><rect x="812.6" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="815.6" y="990.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (2 samples, 0.04%)</title><rect x="812.8" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="815.8" y="974.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.04%)</title><rect x="813.3" y="995.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="816.3" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.04%)</title><rect x="813.3" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="816.3" y="990.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.04%)</title><rect x="813.3" y="963.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="816.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.merge (6 samples, 0.12%)</title><rect x="813.8" y="1027.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="816.8" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (5 samples, 0.10%)</title><rect x="814.0" y="1011.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.0" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (5 samples, 0.10%)</title><rect x="814.0" y="995.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="817.0" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.10%)</title><rect x="814.0" y="979.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="817.0" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (5 samples, 0.10%)</title><rect x="814.0" y="963.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="817.0" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.06%)</title><rect x="814.5" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="817.5" y="958.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.04%)</title><rect x="814.8" y="931.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="817.8" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (4 samples, 0.08%)</title><rect x="815.2" y="1027.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="818.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="815.5" y="1011.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.5" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils$$Lambda$143/512638028.accept (13 samples, 0.26%)</title><rect x="816.2" y="1059.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.2" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.lambda$getFirstResponses$0 (13 samples, 0.26%)</title><rect x="816.2" y="1043.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="819.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.10%)</title><rect x="816.9" y="1027.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="819.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.10%)</title><rect x="816.9" y="1011.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.08%)</title><rect x="817.2" y="995.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="820.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.08%)</title><rect x="817.2" y="979.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="820.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.08%)</title><rect x="817.2" y="963.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.06%)</title><rect x="817.4" y="947.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="820.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.06%)</title><rect x="817.4" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="820.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (3 samples, 0.06%)</title><rect x="817.4" y="915.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="820.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.06%)</title><rect x="817.4" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="820.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="817.4" y="883.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="820.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.06%)</title><rect x="817.4" y="867.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="820.4" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="817.4" y="851.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="820.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="817.6" y="835.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="820.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="817.6" y="819.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="820.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="817.6" y="803.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="820.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="817.6" y="787.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="820.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="817.6" y="771.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="820.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="817.6" y="755.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="820.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="817.6" y="739.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="820.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="817.6" y="723.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="820.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (4 samples, 0.08%)</title><rect x="818.1" y="1027.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="821.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.14%)</title><rect x="819.3" y="1139.0" width="1.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.14%)</title><rect x="819.3" y="1123.0" width="1.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.14%)</title><rect x="819.3" y="1107.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.3" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.12%)</title><rect x="819.5" y="1091.0" width="1.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="822.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="819.5" y="1075.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="822.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="819.5" y="1059.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="822.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="819.5" y="1043.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="822.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="819.5" y="1027.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="822.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="819.5" y="1011.0" width="1.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="822.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="819.8" y="995.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="822.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="819.8" y="979.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="822.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="819.8" y="963.0" width="1.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="822.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (62 samples, 1.26%)</title><rect x="821.0" y="1155.0" width="14.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="824.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (4 samples, 0.08%)</title><rect x="821.0" y="1139.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="824.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="821.5" y="1123.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (58 samples, 1.18%)</title><rect x="821.9" y="1139.0" width="13.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.9" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Park (17 samples, 0.34%)</title><rect x="822.2" y="1123.0" width="4.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="825.2" y="1134.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.06%)</title><rect x="822.9" y="1107.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="825.9" y="1118.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="823.1" y="1091.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="826.1" y="1102.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.16%)</title><rect x="823.6" y="1107.0" width="1.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="826.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="824.1" y="1091.0" width="1.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="827.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="824.1" y="1075.0" width="1.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="827.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="824.6" y="1059.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="827.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="824.6" y="1043.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="827.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="825.0" y="1027.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="828.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.81%)</title><rect x="826.2" y="1123.0" width="9.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="829.2" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_wait (35 samples, 0.71%)</title><rect x="826.5" y="1107.0" width="8.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="829.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.61%)</title><rect x="827.7" y="1091.0" width="7.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="830.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.61%)</title><rect x="827.7" y="1075.0" width="7.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="830.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.51%)</title><rect x="828.9" y="1059.0" width="6.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="831.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.49%)</title><rect x="829.1" y="1043.0" width="5.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="832.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.43%)</title><rect x="829.8" y="1027.0" width="5.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="832.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.36%)</title><rect x="830.5" y="1011.0" width="4.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="833.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.26%)</title><rect x="831.7" y="995.0" width="3.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="834.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.20%)</title><rect x="832.5" y="979.0" width="2.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="835.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.20%)</title><rect x="832.5" y="963.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="835.5" y="974.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.06%)</title><rect x="835.1" y="1107.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="838.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (41 samples, 0.83%)</title><rect x="835.8" y="1155.0" width="9.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="838.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (41 samples, 0.83%)</title><rect x="835.8" y="1139.0" width="9.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="838.8" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Park (14 samples, 0.28%)</title><rect x="836.0" y="1123.0" width="3.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="839.0" y="1134.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="836.0" y="1107.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="839.0" y="1118.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="836.5" y="1107.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="839.5" y="1118.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.08%)</title><rect x="837.0" y="1107.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="840.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="837.0" y="1091.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="840.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="837.0" y="1075.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="840.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="837.0" y="1059.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="840.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="837.0" y="1043.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="840.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="837.5" y="1027.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="840.5" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.04%)</title><rect x="838.0" y="1107.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="841.0" y="1118.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="838.9" y="1107.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="841.9" y="1118.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (25 samples, 0.51%)</title><rect x="839.6" y="1123.0" width="6.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="842.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.49%)</title><rect x="839.9" y="1107.0" width="5.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="842.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.49%)</title><rect x="839.9" y="1091.0" width="5.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="842.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.49%)</title><rect x="839.9" y="1075.0" width="5.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="842.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.49%)</title><rect x="839.9" y="1059.0" width="5.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="842.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.47%)</title><rect x="840.1" y="1043.0" width="5.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="843.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.43%)</title><rect x="840.6" y="1027.0" width="5.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="843.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.41%)</title><rect x="840.8" y="1011.0" width="4.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="843.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.34%)</title><rect x="841.5" y="995.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="844.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.24%)</title><rect x="842.7" y="979.0" width="2.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="845.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (436 samples, 8.84%)</title><rect x="845.6" y="1187.0" width="104.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="848.6" y="1198.0">jdk/internal..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.10%)</title><rect x="846.8" y="1171.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="849.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="847.5" y="1155.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$247/1732387286.get$Lambda (2 samples, 0.04%)</title><rect x="847.5" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="850.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (2 samples, 0.04%)</title><rect x="847.5" y="1123.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="850.5" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (20 samples, 0.41%)</title><rect x="848.0" y="1171.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="851.0" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (10 samples, 0.20%)</title><rect x="850.4" y="1155.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.4" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.16%)</title><rect x="850.6" y="1139.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="853.6" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (8 samples, 0.16%)</title><rect x="850.6" y="1123.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="853.6" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.04%)</title><rect x="851.6" y="1107.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="854.6" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="852.1" y="1107.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="855.1" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (5 samples, 0.10%)</title><rect x="852.8" y="1171.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.8" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (108 samples, 2.19%)</title><rect x="854.0" y="1171.0" width="25.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.0" y="1182.0">j..</text>
</g>
<g>
<title>java/util/ArrayList.elementAt (2 samples, 0.04%)</title><rect x="854.2" y="1155.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (2 samples, 0.04%)</title><rect x="854.2" y="1139.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="857.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/1428665908.accept (100 samples, 2.03%)</title><rect x="854.9" y="1155.0" width="24.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="857.9" y="1166.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (100 samples, 2.03%)</title><rect x="854.9" y="1139.0" width="24.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.9" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (100 samples, 2.03%)</title><rect x="854.9" y="1123.0" width="24.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="857.9" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (100 samples, 2.03%)</title><rect x="854.9" y="1107.0" width="24.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="857.9" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (100 samples, 2.03%)</title><rect x="854.9" y="1091.0" width="24.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="857.9" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (99 samples, 2.01%)</title><rect x="855.2" y="1075.0" width="23.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="858.2" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (99 samples, 2.01%)</title><rect x="855.2" y="1059.0" width="23.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.2" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (99 samples, 2.01%)</title><rect x="855.2" y="1043.0" width="23.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="858.2" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (99 samples, 2.01%)</title><rect x="855.2" y="1027.0" width="23.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="858.2" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (99 samples, 2.01%)</title><rect x="855.2" y="1011.0" width="23.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="858.2" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$179/877950871.run (98 samples, 1.99%)</title><rect x="855.4" y="995.0" width="23.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="858.4" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (98 samples, 1.99%)</title><rect x="855.4" y="979.0" width="23.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="858.4" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (25 samples, 0.51%)</title><rect x="855.4" y="963.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="858.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (25 samples, 0.51%)</title><rect x="855.4" y="947.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="858.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (22 samples, 0.45%)</title><rect x="856.1" y="931.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="859.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.45%)</title><rect x="856.1" y="915.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="859.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.45%)</title><rect x="856.1" y="899.0" width="5.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="859.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (21 samples, 0.43%)</title><rect x="856.4" y="883.0" width="5.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (21 samples, 0.43%)</title><rect x="856.4" y="867.0" width="5.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="859.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (20 samples, 0.41%)</title><rect x="856.6" y="851.0" width="4.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="859.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (17 samples, 0.34%)</title><rect x="857.1" y="835.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (17 samples, 0.34%)</title><rect x="857.1" y="819.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="860.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (17 samples, 0.34%)</title><rect x="857.1" y="803.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="860.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (17 samples, 0.34%)</title><rect x="857.1" y="787.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="860.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (17 samples, 0.34%)</title><rect x="857.1" y="771.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="860.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (17 samples, 0.34%)</title><rect x="857.1" y="755.0" width="4.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.1" y="766.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.06%)</title><rect x="857.3" y="739.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="860.3" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (12 samples, 0.24%)</title><rect x="858.3" y="739.0" width="2.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="861.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="858.5" y="723.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="861.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="858.5" y="707.0" width="2.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="861.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="858.5" y="691.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="861.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="858.5" y="675.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="861.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="858.5" y="659.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="861.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="859.2" y="643.0" width="2.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="862.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="859.2" y="627.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="862.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="859.2" y="611.0" width="2.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="862.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (4 samples, 0.08%)</title><rect x="861.6" y="963.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="864.6" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="862.1" y="947.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="865.1" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="862.1" y="931.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$260/530077054.get$Lambda (2 samples, 0.04%)</title><rect x="862.1" y="915.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (68 samples, 1.38%)</title><rect x="862.6" y="963.0" width="16.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="865.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (6 samples, 0.12%)</title><rect x="862.8" y="947.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="865.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection$$Lambda$173/771250673.get (6 samples, 0.12%)</title><rect x="862.8" y="931.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="865.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getBuffer (6 samples, 0.12%)</title><rect x="862.8" y="915.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="865.8" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (6 samples, 0.12%)</title><rect x="862.8" y="899.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="865.8" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.12%)</title><rect x="862.8" y="883.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="865.8" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="863.6" y="867.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="866.6" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (61 samples, 1.24%)</title><rect x="864.3" y="947.0" width="14.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="867.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="864.3" y="931.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="867.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="864.3" y="915.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="867.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.04%)</title><rect x="864.3" y="899.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="867.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.04%)</title><rect x="864.3" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="867.3" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (58 samples, 1.18%)</title><rect x="865.0" y="931.0" width="13.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (58 samples, 1.18%)</title><rect x="865.0" y="915.0" width="13.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="868.0" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (52 samples, 1.05%)</title><rect x="865.7" y="899.0" width="12.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.7" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (51 samples, 1.03%)</title><rect x="865.9" y="883.0" width="12.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="868.9" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (51 samples, 1.03%)</title><rect x="865.9" y="867.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="868.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.99%)</title><rect x="866.2" y="851.0" width="11.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="869.2" y="862.0"></text>
</g>
<g>
<title>read (48 samples, 0.97%)</title><rect x="866.4" y="835.0" width="11.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="869.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.91%)</title><rect x="867.1" y="819.0" width="10.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="870.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.91%)</title><rect x="867.1" y="803.0" width="10.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="870.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.85%)</title><rect x="867.9" y="787.0" width="10.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="870.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.85%)</title><rect x="867.9" y="771.0" width="10.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="870.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.83%)</title><rect x="868.1" y="755.0" width="9.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="871.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.77%)</title><rect x="868.8" y="739.0" width="9.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="871.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.67%)</title><rect x="870.0" y="723.0" width="7.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="873.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.65%)</title><rect x="870.2" y="707.0" width="7.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="873.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.55%)</title><rect x="871.4" y="691.0" width="6.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="874.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.49%)</title><rect x="872.2" y="675.0" width="5.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="875.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.41%)</title><rect x="873.1" y="659.0" width="4.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="876.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.28%)</title><rect x="874.6" y="643.0" width="3.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="877.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.18%)</title><rect x="875.7" y="627.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="878.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.18%)</title><rect x="875.7" y="611.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="878.7" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="876.7" y="595.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="879.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="877.4" y="579.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="880.4" y="590.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (3 samples, 0.06%)</title><rect x="878.1" y="899.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.1" y="910.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="878.1" y="883.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="881.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$254/905390100.accept (4 samples, 0.08%)</title><rect x="878.9" y="1155.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="881.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (4 samples, 0.08%)</title><rect x="878.9" y="1139.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$248/1217883835.run (4 samples, 0.08%)</title><rect x="878.9" y="1123.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="881.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (4 samples, 0.08%)</title><rect x="878.9" y="1107.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (4 samples, 0.08%)</title><rect x="878.9" y="1091.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="881.9" y="1102.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (4 samples, 0.08%)</title><rect x="878.9" y="1075.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="881.9" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (4 samples, 0.08%)</title><rect x="878.9" y="1059.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.9" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (9 samples, 0.18%)</title><rect x="879.8" y="1171.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="882.8" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.16%)</title><rect x="880.1" y="1155.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="883.1" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (7 samples, 0.14%)</title><rect x="880.3" y="1139.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="883.3" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (7 samples, 0.14%)</title><rect x="880.3" y="1123.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="883.3" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (7 samples, 0.14%)</title><rect x="880.3" y="1107.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="883.3" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.08%)</title><rect x="880.5" y="1091.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="883.5" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3 samples, 0.06%)</title><rect x="880.5" y="1075.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="883.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$247/1732387286.accept (2 samples, 0.04%)</title><rect x="880.8" y="1059.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="883.8" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/Sink.end (2 samples, 0.04%)</title><rect x="881.5" y="1091.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="884.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (55 samples, 1.11%)</title><rect x="882.0" y="1171.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="885.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$186/606969358.run (47 samples, 0.95%)</title><rect x="882.0" y="1155.0" width="11.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="885.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (47 samples, 0.95%)</title><rect x="882.0" y="1139.0" width="11.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="885.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (43 samples, 0.87%)</title><rect x="882.9" y="1123.0" width="10.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="885.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (43 samples, 0.87%)</title><rect x="882.9" y="1107.0" width="10.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="885.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (41 samples, 0.83%)</title><rect x="883.4" y="1091.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="886.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (40 samples, 0.81%)</title><rect x="883.6" y="1075.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="886.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$179/877950871.run (38 samples, 0.77%)</title><rect x="883.9" y="1059.0" width="9.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="886.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (38 samples, 0.77%)</title><rect x="883.9" y="1043.0" width="9.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="886.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (36 samples, 0.73%)</title><rect x="883.9" y="1027.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="886.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (24 samples, 0.49%)</title><rect x="886.5" y="1011.0" width="5.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="889.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (14 samples, 0.28%)</title><rect x="886.5" y="995.0" width="3.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="889.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (14 samples, 0.28%)</title><rect x="886.5" y="979.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="889.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (13 samples, 0.26%)</title><rect x="886.7" y="963.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="889.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/604125138.linkToTargetMethod (3 samples, 0.06%)</title><rect x="886.7" y="947.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="889.7" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/741669172.invoke (3 samples, 0.06%)</title><rect x="886.7" y="931.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="889.7" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/306123060.invokeStatic (3 samples, 0.06%)</title><rect x="886.7" y="915.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.7" y="926.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (3 samples, 0.06%)</title><rect x="886.7" y="899.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="889.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.04%)</title><rect x="887.0" y="883.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="890.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (10 samples, 0.20%)</title><rect x="887.5" y="947.0" width="2.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (8 samples, 0.16%)</title><rect x="887.9" y="931.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="890.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.10%)</title><rect x="888.2" y="915.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (5 samples, 0.10%)</title><rect x="888.2" y="899.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="891.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (4 samples, 0.08%)</title><rect x="888.4" y="883.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="891.4" y="894.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.06%)</title><rect x="888.4" y="867.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="891.4" y="878.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.06%)</title><rect x="888.4" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="891.4" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.06%)</title><rect x="888.4" y="835.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="891.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.registered (2 samples, 0.04%)</title><rect x="889.4" y="915.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (10 samples, 0.20%)</title><rect x="889.9" y="995.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.20%)</title><rect x="889.9" y="979.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="892.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.20%)</title><rect x="889.9" y="963.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="892.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.18%)</title><rect x="890.1" y="947.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="893.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.18%)</title><rect x="890.1" y="931.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.18%)</title><rect x="890.1" y="915.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="893.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (2 samples, 0.04%)</title><rect x="890.1" y="899.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="893.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.10%)</title><rect x="890.6" y="899.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.10%)</title><rect x="890.6" y="883.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="893.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.10%)</title><rect x="890.6" y="867.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="893.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.10%)</title><rect x="890.6" y="851.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="893.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.10%)</title><rect x="890.6" y="835.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="893.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.10%)</title><rect x="890.6" y="819.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="893.6" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="890.6" y="803.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="893.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.04%)</title><rect x="891.8" y="899.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="894.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.04%)</title><rect x="891.8" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$195/874054338.run (8 samples, 0.16%)</title><rect x="893.2" y="1155.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="896.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (8 samples, 0.16%)</title><rect x="893.2" y="1139.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="896.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.12%)</title><rect x="893.4" y="1123.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.12%)</title><rect x="893.4" y="1107.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="896.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.12%)</title><rect x="893.4" y="1091.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="896.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.10%)</title><rect x="893.7" y="1075.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="896.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.10%)</title><rect x="893.7" y="1059.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="896.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.10%)</title><rect x="893.7" y="1043.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="896.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.10%)</title><rect x="893.7" y="1027.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="896.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.10%)</title><rect x="893.7" y="1011.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="896.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.10%)</title><rect x="893.7" y="995.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="896.7" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="893.9" y="979.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="896.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="893.9" y="963.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="896.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="893.9" y="947.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="896.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="893.9" y="931.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="896.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="893.9" y="915.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="896.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="893.9" y="899.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="896.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="893.9" y="883.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="896.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="893.9" y="867.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="896.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="893.9" y="851.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="896.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (25 samples, 0.51%)</title><rect x="895.1" y="1171.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="898.1" y="1182.0"></text>
</g>
<g>
<title>java/time/Instant.now (9 samples, 0.18%)</title><rect x="895.4" y="1155.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="898.4" y="1166.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (9 samples, 0.18%)</title><rect x="895.4" y="1139.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="898.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (7 samples, 0.14%)</title><rect x="895.8" y="1123.0" width="1.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="898.8" y="1134.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (4 samples, 0.08%)</title><rect x="896.6" y="1107.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="899.6" y="1118.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (2 samples, 0.04%)</title><rect x="897.0" y="1091.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="900.0" y="1102.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="897.0" y="1075.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="900.0" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.04%)</title><rect x="897.5" y="1155.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="900.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (13 samples, 0.26%)</title><rect x="898.0" y="1155.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="901.0" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (4 samples, 0.08%)</title><rect x="899.2" y="1139.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="902.2" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.04%)</title><rect x="900.1" y="1139.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="903.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (2 samples, 0.04%)</title><rect x="900.6" y="1139.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="903.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (5 samples, 0.10%)</title><rect x="901.1" y="1171.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="904.1" y="1182.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.04%)</title><rect x="901.1" y="1155.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="904.1" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (3 samples, 0.06%)</title><rect x="901.6" y="1155.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="904.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.purgeTimeoutsAndReturnNextDeadline (8 samples, 0.16%)</title><rect x="902.5" y="1171.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="905.5" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeSet.isEmpty (5 samples, 0.10%)</title><rect x="903.3" y="1155.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="906.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (2 samples, 0.04%)</title><rect x="904.4" y="1171.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.4" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (168 samples, 3.40%)</title><rect x="905.2" y="1171.0" width="40.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="908.2" y="1182.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (167 samples, 3.38%)</title><rect x="905.4" y="1155.0" width="39.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.4" y="1166.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (166 samples, 3.36%)</title><rect x="905.4" y="1139.0" width="39.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="908.4" y="1150.0">sun..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (91 samples, 1.84%)</title><rect x="906.1" y="1123.0" width="21.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="909.1" y="1134.0">s..</text>
</g>
<g>
<title>[unknown] (84 samples, 1.70%)</title><rect x="907.6" y="1107.0" width="20.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="910.6" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (84 samples, 1.70%)</title><rect x="907.6" y="1091.0" width="20.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="910.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.64%)</title><rect x="908.3" y="1075.0" width="19.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="911.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.64%)</title><rect x="908.3" y="1059.0" width="19.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="911.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.58%)</title><rect x="909.0" y="1043.0" width="18.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="912.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 1.56%)</title><rect x="909.2" y="1027.0" width="18.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="912.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 1.52%)</title><rect x="909.7" y="1011.0" width="17.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="912.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.26%)</title><rect x="912.8" y="995.0" width="14.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="915.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.91%)</title><rect x="916.9" y="979.0" width="10.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="919.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.71%)</title><rect x="919.3" y="963.0" width="8.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="922.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.57%)</title><rect x="920.9" y="947.0" width="6.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="923.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.26%)</title><rect x="924.5" y="931.0" width="3.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="927.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="927.2" y="915.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="930.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="927.2" y="899.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="930.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="927.2" y="883.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="930.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="927.2" y="867.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="930.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="927.2" y="851.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="930.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="927.2" y="835.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="930.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="927.2" y="819.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="930.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (57 samples, 1.16%)</title><rect x="927.9" y="1123.0" width="13.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.06%)</title><rect x="928.6" y="1107.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="931.6" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.06%)</title><rect x="928.6" y="1091.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="931.6" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.06%)</title><rect x="929.3" y="1107.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="929.3" y="1091.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="932.3" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (43 samples, 0.87%)</title><rect x="930.0" y="1107.0" width="10.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="933.0" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (40 samples, 0.81%)</title><rect x="930.8" y="1091.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="933.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.22%)</title><rect x="931.2" y="1075.0" width="2.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="934.2" y="1086.0"></text>
</g>
<g>
<title>JavaThread::~JavaThread() (2 samples, 0.04%)</title><rect x="931.2" y="1059.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="934.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.2" y="1043.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="934.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.2" y="1027.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="934.2" y="1038.0"></text>
</g>
<g>
<title>read (2 samples, 0.04%)</title><rect x="931.2" y="1011.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="934.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.2" y="995.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="934.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.2" y="979.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="934.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.2" y="963.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="934.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.2" y="947.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="934.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.2" y="931.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="934.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.2" y="915.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="934.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.2" y="899.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="934.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.2" y="883.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="934.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.7" y="1059.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="934.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.7" y="1043.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="934.7" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="931.7" y="1027.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="934.7" y="1038.0"></text>
</g>
<g>
<title>read (2 samples, 0.04%)</title><rect x="931.7" y="1011.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="934.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.7" y="995.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="934.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.7" y="979.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="934.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.7" y="963.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="934.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.7" y="947.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="934.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.7" y="931.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="934.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.7" y="915.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="934.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.7" y="899.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="934.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="931.7" y="883.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="934.7" y="894.0"></text>
</g>
<g>
<title>read (7 samples, 0.14%)</title><rect x="932.2" y="1059.0" width="1.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="935.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.14%)</title><rect x="932.2" y="1043.0" width="1.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="935.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.14%)</title><rect x="932.2" y="1027.0" width="1.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="935.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.14%)</title><rect x="932.2" y="1011.0" width="1.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="935.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.14%)</title><rect x="932.2" y="995.0" width="1.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="935.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.14%)</title><rect x="932.2" y="979.0" width="1.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="935.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.14%)</title><rect x="932.2" y="963.0" width="1.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="935.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="932.4" y="947.0" width="1.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="935.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="932.4" y="931.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="935.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="932.9" y="915.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="935.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="933.1" y="899.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="936.1" y="910.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.04%)</title><rect x="934.1" y="1075.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="937.1" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="934.1" y="1059.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="937.1" y="1070.0"></text>
</g>
<g>
<title>read (2 samples, 0.04%)</title><rect x="934.1" y="1043.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="937.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="934.1" y="1027.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="937.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="934.1" y="1011.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="937.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="934.1" y="995.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="937.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="934.1" y="979.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="937.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="934.1" y="963.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="937.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="934.1" y="947.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="937.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="934.1" y="931.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="937.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="934.1" y="915.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="937.1" y="926.0"></text>
</g>
<g>
<title>read (24 samples, 0.49%)</title><rect x="934.6" y="1075.0" width="5.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="937.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.45%)</title><rect x="935.1" y="1059.0" width="5.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="938.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.45%)</title><rect x="935.1" y="1043.0" width="5.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="938.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.41%)</title><rect x="935.5" y="1027.0" width="4.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="938.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.41%)</title><rect x="935.5" y="1011.0" width="4.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="938.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.41%)</title><rect x="935.5" y="995.0" width="4.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="938.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.36%)</title><rect x="936.0" y="979.0" width="4.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="939.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.34%)</title><rect x="936.3" y="963.0" width="4.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="939.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.28%)</title><rect x="937.0" y="947.0" width="3.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="940.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.14%)</title><rect x="938.6" y="931.0" width="1.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="941.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="938.9" y="915.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="941.9" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.10%)</title><rect x="940.3" y="1107.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="943.3" y="1118.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 0.06%)</title><rect x="940.3" y="1091.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="943.3" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 0.06%)</title><rect x="940.3" y="1075.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="943.3" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 0.06%)</title><rect x="940.3" y="1059.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="943.3" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (11 samples, 0.22%)</title><rect x="941.5" y="1123.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="944.5" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (8 samples, 0.16%)</title><rect x="942.0" y="1107.0" width="1.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="945.0" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.04%)</title><rect x="944.1" y="1123.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="947.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.04%)</title><rect x="944.1" y="1107.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="947.1" y="1118.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="944.1" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="947.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="944.1" y="1075.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="947.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="944.1" y="1059.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="947.1" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.04%)</title><rect x="944.6" y="1123.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="947.6" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (17 samples, 0.34%)</title><rect x="945.3" y="1171.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.3" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (17 samples, 0.34%)</title><rect x="945.3" y="1155.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.3" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (15 samples, 0.30%)</title><rect x="945.8" y="1139.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="948.8" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (9 samples, 0.18%)</title><rect x="946.3" y="1123.0" width="2.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="949.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="946.5" y="1107.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="949.5" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 0.16%)</title><rect x="946.5" y="1091.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="949.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="946.5" y="1075.0" width="2.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="949.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="946.5" y="1059.0" width="2.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="949.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="946.5" y="1043.0" width="2.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="949.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="946.5" y="1027.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="949.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="946.5" y="1011.0" width="2.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="949.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.14%)</title><rect x="946.8" y="995.0" width="1.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="949.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="947.3" y="979.0" width="1.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="950.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="947.7" y="963.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="950.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="947.7" y="947.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="950.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="948.0" y="931.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="951.0" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (3 samples, 0.06%)</title><rect x="948.5" y="1123.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="951.5" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (2 samples, 0.04%)</title><rect x="948.7" y="1107.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="951.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (533 samples, 10.80%)</title><rect x="949.9" y="1187.0" width="127.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="952.9" y="1198.0">one/nio/server/S..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.04%)</title><rect x="950.8" y="1171.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="953.8" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.04%)</title><rect x="950.8" y="1155.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="953.8" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (113 samples, 2.29%)</title><rect x="951.3" y="1171.0" width="27.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="954.3" y="1182.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (7 samples, 0.14%)</title><rect x="953.0" y="1155.0" width="1.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="956.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (7 samples, 0.14%)</title><rect x="953.0" y="1139.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.0" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (99 samples, 2.01%)</title><rect x="954.7" y="1155.0" width="23.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="957.7" y="1166.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.04%)</title><rect x="956.8" y="1139.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="959.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 1.48%)</title><rect x="957.3" y="1139.0" width="17.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="960.3" y="1150.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="957.3" y="1123.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="960.3" y="1134.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="958.0" y="1123.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="961.0" y="1134.0"></text>
</g>
<g>
<title>epoll_wait (68 samples, 1.38%)</title><rect x="958.5" y="1123.0" width="16.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="961.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 1.34%)</title><rect x="959.0" y="1107.0" width="15.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="962.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 1.34%)</title><rect x="959.0" y="1091.0" width="15.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="962.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.26%)</title><rect x="959.9" y="1075.0" width="14.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="962.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.26%)</title><rect x="959.9" y="1059.0" width="14.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="962.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 1.16%)</title><rect x="961.1" y="1043.0" width="13.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="964.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.97%)</title><rect x="963.3" y="1027.0" width="11.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="966.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.87%)</title><rect x="964.5" y="1011.0" width="10.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="967.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.65%)</title><rect x="967.1" y="995.0" width="7.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="970.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.55%)</title><rect x="968.3" y="979.0" width="6.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="971.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.45%)</title><rect x="969.5" y="963.0" width="5.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="972.5" y="974.0"></text>
</g>
<g>
<title>_init (7 samples, 0.14%)</title><rect x="974.8" y="1139.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="977.8" y="1150.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="976.4" y="1139.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="979.4" y="1150.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.12%)</title><rect x="976.9" y="1139.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="979.9" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (414 samples, 8.39%)</title><rect x="978.3" y="1171.0" width="99.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="981.3" y="1182.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (408 samples, 8.27%)</title><rect x="979.3" y="1155.0" width="97.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="982.3" y="1166.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (291 samples, 5.90%)</title><rect x="979.5" y="1139.0" width="69.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="982.5" y="1150.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (236 samples, 4.78%)</title><rect x="985.0" y="1123.0" width="56.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="988.0" y="1134.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (231 samples, 4.68%)</title><rect x="986.0" y="1107.0" width="55.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="989.0" y="1118.0">one/n..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (211 samples, 4.28%)</title><rect x="986.0" y="1091.0" width="50.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="989.0" y="1102.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (25 samples, 0.51%)</title><rect x="986.5" y="1075.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="989.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (13 samples, 0.26%)</title><rect x="986.7" y="1059.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="989.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (13 samples, 0.26%)</title><rect x="986.7" y="1043.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="989.7" y="1054.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="988.4" y="1027.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="991.4" y="1038.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.08%)</title><rect x="988.9" y="1027.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="991.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.06%)</title><rect x="989.8" y="1059.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="992.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.08%)</title><rect x="990.5" y="1059.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="993.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="991.0" y="1043.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="994.0" y="1054.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="991.0" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="994.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.08%)</title><rect x="991.5" y="1059.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="994.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="991.7" y="1043.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="994.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="991.7" y="1027.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="994.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.06%)</title><rect x="991.7" y="1011.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="994.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (184 samples, 3.73%)</title><rect x="992.5" y="1075.0" width="44.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="995.5" y="1086.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.08%)</title><rect x="992.9" y="1059.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="995.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="993.2" y="1043.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="996.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="993.4" y="1027.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="996.4" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (44 samples, 0.89%)</title><rect x="993.9" y="1059.0" width="10.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="996.9" y="1070.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (44 samples, 0.89%)</title><rect x="993.9" y="1043.0" width="10.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="996.9" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (16 samples, 0.32%)</title><rect x="993.9" y="1027.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="996.9" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (4 samples, 0.08%)</title><rect x="994.8" y="1011.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="997.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (4 samples, 0.08%)</title><rect x="994.8" y="995.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="997.8" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.06%)</title><rect x="995.8" y="1011.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="998.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="995.8" y="995.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="998.8" y="1006.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (5 samples, 0.10%)</title><rect x="996.5" y="1011.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="999.5" y="1022.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (5 samples, 0.10%)</title><rect x="996.5" y="995.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="999.5" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (24 samples, 0.49%)</title><rect x="997.7" y="1027.0" width="5.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1000.7" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (21 samples, 0.43%)</title><rect x="998.4" y="1011.0" width="5.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1001.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.18%)</title><rect x="998.4" y="995.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.4" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (9 samples, 0.18%)</title><rect x="998.4" y="979.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1001.4" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="998.4" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1001.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="998.4" y="947.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1001.4" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.14%)</title><rect x="998.9" y="963.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1001.9" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (3 samples, 0.06%)</title><rect x="999.9" y="947.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1002.9" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (3 samples, 0.06%)</title><rect x="1000.6" y="995.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1003.6" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (3 samples, 0.06%)</title><rect x="1000.6" y="979.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1003.6" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.04%)</title><rect x="1000.8" y="963.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1003.8" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="1001.3" y="995.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1004.3" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (7 samples, 0.14%)</title><rect x="1001.8" y="995.0" width="1.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1004.8" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.04%)</title><rect x="1002.7" y="979.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1005.7" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.04%)</title><rect x="1002.7" y="963.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1005.7" y="974.0"></text>
</g>
<g>
<title>java/util/Set.of (4 samples, 0.08%)</title><rect x="1003.5" y="1027.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1006.5" y="1038.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (3 samples, 0.06%)</title><rect x="1003.7" y="1011.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1006.7" y="1022.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (2 samples, 0.04%)</title><rect x="1003.9" y="995.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1006.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (48 samples, 0.97%)</title><rect x="1004.4" y="1059.0" width="11.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1007.4" y="1070.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (5 samples, 0.10%)</title><rect x="1005.1" y="1043.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1008.1" y="1054.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (3 samples, 0.06%)</title><rect x="1005.1" y="1027.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1008.1" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (2 samples, 0.04%)</title><rect x="1005.8" y="1027.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1008.8" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (23 samples, 0.47%)</title><rect x="1006.3" y="1043.0" width="5.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1009.3" y="1054.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (13 samples, 0.26%)</title><rect x="1006.8" y="1027.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1009.8" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (7 samples, 0.14%)</title><rect x="1008.2" y="1011.0" width="1.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1011.2" y="1022.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (4 samples, 0.08%)</title><rect x="1008.7" y="995.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1011.7" y="1006.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (4 samples, 0.08%)</title><rect x="1008.7" y="979.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1011.7" y="990.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (2 samples, 0.04%)</title><rect x="1009.9" y="1027.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1012.9" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (4 samples, 0.08%)</title><rect x="1010.4" y="1027.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1013.4" y="1038.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (2 samples, 0.04%)</title><rect x="1011.3" y="1027.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1014.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (15 samples, 0.30%)</title><rect x="1011.8" y="1043.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1014.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (15 samples, 0.30%)</title><rect x="1011.8" y="1027.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1014.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/Character.digit (5 samples, 0.10%)</title><rect x="1011.8" y="1011.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/Character.digit (5 samples, 0.10%)</title><rect x="1011.8" y="995.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1014.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (5 samples, 0.10%)</title><rect x="1011.8" y="979.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1014.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 0.08%)</title><rect x="1013.0" y="1011.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1016.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.06%)</title><rect x="1013.0" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1016.0" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.04%)</title><rect x="1013.3" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1016.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.length (5 samples, 0.10%)</title><rect x="1014.0" y="1011.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1017.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.04%)</title><rect x="1014.0" y="995.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1017.0" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (2 samples, 0.04%)</title><rect x="1014.0" y="979.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1017.0" y="990.0"></text>
</g>
<g>
<title>java/util/Set.of (3 samples, 0.06%)</title><rect x="1014.5" y="995.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1017.5" y="1006.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.get (2 samples, 0.04%)</title><rect x="1015.4" y="1043.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1018.4" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (2 samples, 0.04%)</title><rect x="1015.4" y="1027.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1018.4" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementData (2 samples, 0.04%)</title><rect x="1015.4" y="1011.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1018.4" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (86 samples, 1.74%)</title><rect x="1015.9" y="1059.0" width="20.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1018.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (86 samples, 1.74%)</title><rect x="1015.9" y="1043.0" width="20.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1018.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (85 samples, 1.72%)</title><rect x="1016.1" y="1027.0" width="20.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1019.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (2 samples, 0.04%)</title><rect x="1016.9" y="1011.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1019.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (71 samples, 1.44%)</title><rect x="1017.3" y="1011.0" width="17.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1020.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (71 samples, 1.44%)</title><rect x="1017.3" y="995.0" width="17.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1020.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (71 samples, 1.44%)</title><rect x="1017.3" y="979.0" width="17.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1020.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (71 samples, 1.44%)</title><rect x="1017.3" y="963.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1020.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (71 samples, 1.44%)</title><rect x="1017.3" y="947.0" width="17.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1020.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (71 samples, 1.44%)</title><rect x="1017.3" y="931.0" width="17.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1020.3" y="942.0"></text>
</g>
<g>
<title>Unsafe_Unpark (19 samples, 0.39%)</title><rect x="1018.0" y="915.0" width="4.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1021.0" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="1019.0" y="899.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1022.0" y="910.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (5 samples, 0.10%)</title><rect x="1019.5" y="899.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1022.5" y="910.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="1020.7" y="899.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1023.7" y="910.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.04%)</title><rect x="1021.2" y="899.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1024.2" y="910.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="1021.6" y="899.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1024.6" y="910.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="1022.1" y="899.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1025.1" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="1022.6" y="915.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1025.6" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (46 samples, 0.93%)</title><rect x="1023.3" y="915.0" width="11.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1026.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.93%)</title><rect x="1023.3" y="899.0" width="11.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1026.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.93%)</title><rect x="1023.3" y="883.0" width="11.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1026.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.89%)</title><rect x="1023.8" y="867.0" width="10.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1026.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.87%)</title><rect x="1024.0" y="851.0" width="10.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1027.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.87%)</title><rect x="1024.0" y="835.0" width="10.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1027.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.65%)</title><rect x="1026.7" y="819.0" width="7.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1029.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.59%)</title><rect x="1027.4" y="803.0" width="6.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1030.4" y="814.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.57%)</title><rect x="1027.6" y="787.0" width="6.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1030.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (6 samples, 0.12%)</title><rect x="1034.3" y="1011.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1037.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (5 samples, 0.10%)</title><rect x="1034.3" y="995.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1037.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.04%)</title><rect x="1035.0" y="979.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1038.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.04%)</title><rect x="1035.0" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1038.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="1035.7" y="1011.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1038.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.04%)</title><rect x="1036.5" y="1091.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1039.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.14%)</title><rect x="1036.9" y="1091.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1039.9" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.12%)</title><rect x="1037.2" y="1075.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1040.2" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="1037.4" y="1059.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1040.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.06%)</title><rect x="1037.4" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.4" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="1038.1" y="1059.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1041.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="1038.1" y="1043.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1041.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="1038.1" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1041.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (11 samples, 0.22%)</title><rect x="1038.6" y="1091.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1041.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.substring (11 samples, 0.22%)</title><rect x="1038.6" y="1075.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1041.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (11 samples, 0.22%)</title><rect x="1038.6" y="1059.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1041.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (10 samples, 0.20%)</title><rect x="1038.9" y="1043.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1041.9" y="1054.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2 samples, 0.04%)</title><rect x="1039.1" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1042.1" y="1038.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.12%)</title><rect x="1039.6" y="1027.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1042.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (17 samples, 0.34%)</title><rect x="1041.5" y="1123.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1044.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1042.4" y="1107.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1045.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1042.4" y="1091.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1045.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="1042.4" y="1075.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1045.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="1042.4" y="1059.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1045.4" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.18%)</title><rect x="1042.9" y="1107.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1045.9" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.18%)</title><rect x="1042.9" y="1091.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.04%)</title><rect x="1045.1" y="1107.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1048.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.14%)</title><rect x="1045.8" y="1123.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1048.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="1047.0" y="1107.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1050.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="1047.0" y="1091.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1050.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.14%)</title><rect x="1047.5" y="1123.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1050.5" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.14%)</title><rect x="1047.5" y="1107.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1050.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (116 samples, 2.35%)</title><rect x="1049.1" y="1139.0" width="27.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1052.1" y="1150.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (115 samples, 2.33%)</title><rect x="1049.1" y="1123.0" width="27.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1052.1" y="1134.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.08%)</title><rect x="1050.8" y="1107.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1053.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.73%)</title><rect x="1051.8" y="1107.0" width="8.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1054.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.73%)</title><rect x="1051.8" y="1091.0" width="8.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1054.8" y="1102.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (33 samples, 0.67%)</title><rect x="1051.8" y="1075.0" width="7.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1054.8" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.06%)</title><rect x="1053.0" y="1059.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1056.0" y="1070.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (4 samples, 0.08%)</title><rect x="1053.9" y="1059.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1056.9" y="1070.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="1054.9" y="1059.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1057.9" y="1070.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (16 samples, 0.32%)</title><rect x="1055.6" y="1059.0" width="3.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1058.6" y="1070.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.06%)</title><rect x="1056.8" y="1043.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1059.8" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.04%)</title><rect x="1057.5" y="1043.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1060.5" y="1054.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.12%)</title><rect x="1058.0" y="1043.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1061.0" y="1054.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (3 samples, 0.06%)</title><rect x="1058.7" y="1027.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1061.7" y="1038.0"></text>
</g>
<g>
<title>__GI___recv (2 samples, 0.04%)</title><rect x="1059.7" y="1075.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1062.7" y="1086.0"></text>
</g>
<g>
<title>__GI___recv (68 samples, 1.38%)</title><rect x="1060.4" y="1107.0" width="16.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1063.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 1.38%)</title><rect x="1060.4" y="1091.0" width="16.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1063.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 1.38%)</title><rect x="1060.4" y="1075.0" width="16.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1063.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 1.30%)</title><rect x="1061.3" y="1059.0" width="15.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1064.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 1.28%)</title><rect x="1061.6" y="1043.0" width="15.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1064.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 1.13%)</title><rect x="1063.2" y="1027.0" width="13.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1066.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.11%)</title><rect x="1063.5" y="1011.0" width="13.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1066.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.93%)</title><rect x="1065.6" y="995.0" width="11.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1068.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.75%)</title><rect x="1067.8" y="979.0" width="8.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1070.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.61%)</title><rect x="1069.5" y="963.0" width="7.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1072.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.43%)</title><rect x="1071.6" y="947.0" width="5.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1074.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.26%)</title><rect x="1073.5" y="931.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1076.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1076.2" y="915.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1079.2" y="926.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="1076.9" y="1155.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1079.9" y="1166.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="1076.9" y="1139.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1079.9" y="1150.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="1076.9" y="1123.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1079.9" y="1134.0"></text>
</g>
<g>
<title>start_thread (470 samples, 9.53%)</title><rect x="1077.6" y="1187.0" width="112.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1080.6" y="1198.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (470 samples, 9.53%)</title><rect x="1077.6" y="1171.0" width="112.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1080.6" y="1182.0">thread_native_..</text>
</g>
<g>
<title>Thread::call_run() (470 samples, 9.53%)</title><rect x="1077.6" y="1155.0" width="112.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1080.6" y="1166.0">Thread::call_r..</text>
</g>
<g>
<title>GangWorker::loop() (29 samples, 0.59%)</title><rect x="1077.6" y="1139.0" width="6.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1080.6" y="1150.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (28 samples, 0.57%)</title><rect x="1077.6" y="1123.0" width="6.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1080.6" y="1134.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (14 samples, 0.28%)</title><rect x="1077.6" y="1107.0" width="3.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1080.6" y="1118.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (3 samples, 0.06%)</title><rect x="1077.8" y="1091.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1080.8" y="1102.0"></text>
</g>
<g>
<title>SpinPause (10 samples, 0.20%)</title><rect x="1078.6" y="1091.0" width="2.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1081.6" y="1102.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (9 samples, 0.18%)</title><rect x="1080.9" y="1107.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1083.9" y="1118.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (9 samples, 0.18%)</title><rect x="1080.9" y="1091.0" width="2.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1083.9" y="1102.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (9 samples, 0.18%)</title><rect x="1080.9" y="1075.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1083.9" y="1086.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (9 samples, 0.18%)</title><rect x="1080.9" y="1059.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1083.9" y="1070.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (9 samples, 0.18%)</title><rect x="1080.9" y="1043.0" width="2.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1083.9" y="1054.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (9 samples, 0.18%)</title><rect x="1080.9" y="1027.0" width="2.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1083.9" y="1038.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (8 samples, 0.16%)</title><rect x="1081.2" y="1011.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1084.2" y="1022.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.04%)</title><rect x="1082.6" y="995.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1085.6" y="1006.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (4 samples, 0.08%)</title><rect x="1083.1" y="1107.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1086.1" y="1118.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (2 samples, 0.04%)</title><rect x="1083.6" y="1091.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1086.6" y="1102.0"></text>
</g>
<g>
<title>JavaThread::run() (436 samples, 8.84%)</title><rect x="1084.5" y="1139.0" width="104.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1087.5" y="1150.0">JavaThread::..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (436 samples, 8.84%)</title><rect x="1084.5" y="1123.0" width="104.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1087.5" y="1134.0">JavaThread::..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (433 samples, 8.78%)</title><rect x="1084.5" y="1107.0" width="103.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1087.5" y="1118.0">CompileBroke..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (432 samples, 8.76%)</title><rect x="1084.5" y="1091.0" width="103.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1087.5" y="1102.0">CompileBroke..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (423 samples, 8.57%)</title><rect x="1084.5" y="1075.0" width="101.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1087.5" y="1086.0">C2Compiler::..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (423 samples, 8.57%)</title><rect x="1084.5" y="1059.0" width="101.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1087.5" y="1070.0">Compile::Com..</text>
</g>
<g>
<title>Compile::Code_Gen() (242 samples, 4.90%)</title><rect x="1084.8" y="1043.0" width="57.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1087.8" y="1054.0">Compil..</text>
</g>
<g>
<title>Compile::Output() (17 samples, 0.34%)</title><rect x="1084.8" y="1027.0" width="4.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1087.8" y="1038.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (10 samples, 0.20%)</title><rect x="1084.8" y="1011.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1087.8" y="1022.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (7 samples, 0.14%)</title><rect x="1087.2" y="1011.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1090.2" y="1022.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (7 samples, 0.14%)</title><rect x="1087.2" y="995.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1090.2" y="1006.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (4 samples, 0.08%)</title><rect x="1087.9" y="979.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1090.9" y="990.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (2 samples, 0.04%)</title><rect x="1088.4" y="963.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1091.4" y="974.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (4 samples, 0.08%)</title><rect x="1088.8" y="1027.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1091.8" y="1038.0"></text>
</g>
<g>
<title>Matcher::match() (22 samples, 0.45%)</title><rect x="1090.0" y="1027.0" width="5.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1093.0" y="1038.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (3 samples, 0.06%)</title><rect x="1090.5" y="1011.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1093.5" y="1022.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (15 samples, 0.30%)</title><rect x="1091.2" y="1011.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1094.2" y="1022.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (4 samples, 0.08%)</title><rect x="1092.2" y="995.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1095.2" y="1006.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (4 samples, 0.08%)</title><rect x="1093.6" y="995.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1096.6" y="1006.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.04%)</title><rect x="1094.1" y="979.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1097.1" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (25 samples, 0.51%)</title><rect x="1095.5" y="1027.0" width="6.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1098.5" y="1038.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (25 samples, 0.51%)</title><rect x="1095.5" y="1011.0" width="6.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1098.5" y="1022.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (5 samples, 0.10%)</title><rect x="1095.5" y="995.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1098.5" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (3 samples, 0.06%)</title><rect x="1095.8" y="979.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1098.8" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (4 samples, 0.08%)</title><rect x="1096.7" y="995.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1099.7" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (2 samples, 0.04%)</title><rect x="1096.7" y="979.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1099.7" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::select(Block*, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, unsigned int, long*) (2 samples, 0.04%)</title><rect x="1097.2" y="979.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1100.2" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (7 samples, 0.14%)</title><rect x="1097.7" y="995.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1100.7" y="1006.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.06%)</title><rect x="1098.4" y="979.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1101.4" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (4 samples, 0.08%)</title><rect x="1099.4" y="995.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1102.4" y="1006.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (4 samples, 0.08%)</title><rect x="1100.3" y="995.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1103.3" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (171 samples, 3.47%)</title><rect x="1101.8" y="1027.0" width="40.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1104.8" y="1038.0">Pha..</text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (3 samples, 0.06%)</title><rect x="1102.2" y="1011.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1105.2" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (5 samples, 0.10%)</title><rect x="1102.9" y="1011.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1105.9" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (10 samples, 0.20%)</title><rect x="1104.1" y="1011.0" width="2.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1107.1" y="1022.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (4 samples, 0.08%)</title><rect x="1105.6" y="995.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1108.6" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (18 samples, 0.36%)</title><rect x="1106.5" y="1011.0" width="4.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1109.5" y="1022.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.04%)</title><rect x="1109.2" y="995.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1112.2" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (37 samples, 0.75%)</title><rect x="1110.8" y="1011.0" width="8.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1113.8" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (3 samples, 0.06%)</title><rect x="1113.5" y="995.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1116.5" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (9 samples, 0.18%)</title><rect x="1114.2" y="995.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1117.2" y="1006.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.04%)</title><rect x="1115.9" y="979.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1118.9" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (13 samples, 0.26%)</title><rect x="1116.3" y="995.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1119.3" y="1006.0"></text>
</g>
<g>
<title>RegMask::Size() const (5 samples, 0.10%)</title><rect x="1116.3" y="979.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1119.3" y="990.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (8 samples, 0.16%)</title><rect x="1117.5" y="979.0" width="1.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1120.5" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (4 samples, 0.08%)</title><rect x="1119.7" y="1011.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1122.7" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.04%)</title><rect x="1120.2" y="995.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1123.2" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (3 samples, 0.06%)</title><rect x="1120.9" y="1011.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1123.9" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (21 samples, 0.43%)</title><rect x="1121.6" y="1011.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1124.6" y="1022.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.08%)</title><rect x="1124.9" y="995.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1127.9" y="1006.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (2 samples, 0.04%)</title><rect x="1125.9" y="995.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1128.9" y="1006.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (2 samples, 0.04%)</title><rect x="1126.6" y="1011.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1129.6" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (3 samples, 0.06%)</title><rect x="1127.1" y="1011.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1130.1" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (29 samples, 0.59%)</title><rect x="1127.8" y="1011.0" width="7.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1130.8" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (12 samples, 0.24%)</title><rect x="1130.9" y="995.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1133.9" y="1006.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (3 samples, 0.06%)</title><rect x="1134.0" y="995.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1137.0" y="1006.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (5 samples, 0.10%)</title><rect x="1135.0" y="1011.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.0" y="1022.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (3 samples, 0.06%)</title><rect x="1135.5" y="995.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1138.5" y="1006.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (6 samples, 0.12%)</title><rect x="1136.2" y="1011.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1139.2" y="1022.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.08%)</title><rect x="1136.7" y="995.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1139.7" y="1006.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (3 samples, 0.06%)</title><rect x="1137.6" y="1011.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1140.6" y="1022.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (13 samples, 0.26%)</title><rect x="1138.3" y="1011.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1141.3" y="1022.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (3 samples, 0.06%)</title><rect x="1140.7" y="995.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1143.7" y="1006.0"></text>
</g>
<g>
<title>Compile::Optimize() (121 samples, 2.45%)</title><rect x="1142.6" y="1043.0" width="29.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1145.6" y="1054.0">Co..</text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.256] (3 samples, 0.06%)</title><rect x="1142.6" y="1027.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1145.6" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (6 samples, 0.12%)</title><rect x="1143.4" y="1027.0" width="1.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1146.4" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (6 samples, 0.12%)</title><rect x="1143.4" y="1011.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.4" y="1022.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (4 samples, 0.08%)</title><rect x="1144.8" y="1027.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1147.8" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (81 samples, 1.64%)</title><rect x="1146.0" y="1027.0" width="19.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.0" y="1038.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.04%)</title><rect x="1146.0" y="1011.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.0" y="1022.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.04%)</title><rect x="1146.0" y="995.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.0" y="1006.0"></text>
</g>
<g>
<title>Node::pinned() const (2 samples, 0.04%)</title><rect x="1146.7" y="1011.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1149.7" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (4 samples, 0.08%)</title><rect x="1147.2" y="1011.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1150.2" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (14 samples, 0.28%)</title><rect x="1148.1" y="1011.0" width="3.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1151.1" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (5 samples, 0.10%)</title><rect x="1150.1" y="995.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.1" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (34 samples, 0.69%)</title><rect x="1151.5" y="1011.0" width="8.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.5" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (27 samples, 0.55%)</title><rect x="1153.2" y="995.0" width="6.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.2" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (21 samples, 0.43%)</title><rect x="1154.1" y="979.0" width="5.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.1" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (18 samples, 0.36%)</title><rect x="1154.8" y="963.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1157.8" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (6 samples, 0.12%)</title><rect x="1159.6" y="1011.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.6" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (4 samples, 0.08%)</title><rect x="1160.1" y="995.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1163.1" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (10 samples, 0.20%)</title><rect x="1161.3" y="1011.0" width="2.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1164.3" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (3 samples, 0.06%)</title><rect x="1163.0" y="995.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.0" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.08%)</title><rect x="1163.9" y="1011.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.9" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.06%)</title><rect x="1163.9" y="995.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.9" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (3 samples, 0.06%)</title><rect x="1165.4" y="1027.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1168.4" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (3 samples, 0.06%)</title><rect x="1165.4" y="1011.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1168.4" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (15 samples, 0.30%)</title><rect x="1166.1" y="1027.0" width="3.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.1" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (13 samples, 0.26%)</title><rect x="1166.6" y="1011.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1169.6" y="1022.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (3 samples, 0.06%)</title><rect x="1167.3" y="995.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1170.3" y="1006.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (2 samples, 0.04%)</title><rect x="1167.5" y="979.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1170.5" y="990.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.04%)</title><rect x="1168.2" y="995.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.2" y="1006.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (2 samples, 0.04%)</title><rect x="1168.7" y="995.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1171.7" y="1006.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (5 samples, 0.10%)</title><rect x="1169.9" y="1027.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1172.9" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (4 samples, 0.08%)</title><rect x="1169.9" y="1011.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1172.9" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.06%)</title><rect x="1170.1" y="995.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1173.1" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (56 samples, 1.13%)</title><rect x="1171.8" y="1043.0" width="13.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.8" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (56 samples, 1.13%)</title><rect x="1171.8" y="1027.0" width="13.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1174.8" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (56 samples, 1.13%)</title><rect x="1171.8" y="1011.0" width="13.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.8" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (56 samples, 1.13%)</title><rect x="1171.8" y="995.0" width="13.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.8" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (56 samples, 1.13%)</title><rect x="1171.8" y="979.0" width="13.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.8" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (55 samples, 1.11%)</title><rect x="1172.1" y="963.0" width="13.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.1" y="974.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (4 samples, 0.08%)</title><rect x="1172.1" y="947.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.1" y="958.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.04%)</title><rect x="1172.3" y="931.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1175.3" y="942.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.04%)</title><rect x="1172.3" y="915.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.3" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.04%)</title><rect x="1172.3" y="899.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.3" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.04%)</title><rect x="1172.3" y="883.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.3" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.04%)</title><rect x="1172.3" y="867.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.3" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.04%)</title><rect x="1172.3" y="851.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1175.3" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.04%)</title><rect x="1172.3" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1175.3" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (2 samples, 0.04%)</title><rect x="1172.3" y="819.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.3" y="830.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.04%)</title><rect x="1172.3" y="803.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1175.3" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.04%)</title><rect x="1172.3" y="787.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.3" y="798.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.04%)</title><rect x="1172.3" y="771.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.3" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (35 samples, 0.71%)</title><rect x="1173.0" y="947.0" width="8.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.0" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (34 samples, 0.69%)</title><rect x="1173.3" y="931.0" width="8.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (32 samples, 0.65%)</title><rect x="1173.7" y="915.0" width="7.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.7" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (32 samples, 0.65%)</title><rect x="1173.7" y="899.0" width="7.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (32 samples, 0.65%)</title><rect x="1173.7" y="883.0" width="7.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.7" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (31 samples, 0.63%)</title><rect x="1173.7" y="867.0" width="7.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1176.7" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (21 samples, 0.43%)</title><rect x="1173.7" y="851.0" width="5.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.7" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (20 samples, 0.41%)</title><rect x="1173.7" y="835.0" width="4.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1176.7" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (18 samples, 0.36%)</title><rect x="1174.0" y="819.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1177.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (18 samples, 0.36%)</title><rect x="1174.0" y="803.0" width="4.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1177.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (18 samples, 0.36%)</title><rect x="1174.0" y="787.0" width="4.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (18 samples, 0.36%)</title><rect x="1174.0" y="771.0" width="4.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.0" y="782.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.04%)</title><rect x="1174.0" y="755.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1177.0" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.24%)</title><rect x="1174.5" y="755.0" width="2.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.5" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.24%)</title><rect x="1174.5" y="739.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1177.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.22%)</title><rect x="1174.7" y="723.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.7" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.22%)</title><rect x="1174.7" y="707.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.7" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.20%)</title><rect x="1174.9" y="691.0" width="2.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1177.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (10 samples, 0.20%)</title><rect x="1174.9" y="675.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1177.9" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.20%)</title><rect x="1174.9" y="659.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.9" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.20%)</title><rect x="1174.9" y="643.0" width="2.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1177.9" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (10 samples, 0.20%)</title><rect x="1174.9" y="627.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1177.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (10 samples, 0.20%)</title><rect x="1174.9" y="611.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1177.9" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.20%)</title><rect x="1174.9" y="595.0" width="2.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.18%)</title><rect x="1175.2" y="579.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.2" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.18%)</title><rect x="1175.2" y="563.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.2" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.18%)</title><rect x="1175.2" y="547.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.18%)</title><rect x="1175.2" y="531.0" width="2.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.18%)</title><rect x="1175.2" y="515.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.2" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.18%)</title><rect x="1175.2" y="499.0" width="2.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.2" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.10%)</title><rect x="1175.2" y="483.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.2" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.08%)</title><rect x="1175.2" y="467.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.2" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.08%)</title><rect x="1175.2" y="451.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.2" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.08%)</title><rect x="1175.2" y="435.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.2" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.08%)</title><rect x="1175.2" y="419.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.2" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.08%)</title><rect x="1175.2" y="403.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.2" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.08%)</title><rect x="1175.2" y="387.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.2" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1175.4" y="371.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.4" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1175.4" y="355.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.4" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1175.4" y="339.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.4" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1175.4" y="323.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.4" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1175.4" y="307.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.4" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1175.4" y="291.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.4" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1175.7" y="275.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.7" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1175.7" y="259.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.7" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1175.7" y="243.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.7" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1175.7" y="227.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.7" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1175.7" y="211.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.7" y="222.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1175.7" y="195.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.7" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1175.7" y="179.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1178.7" y="190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1175.7" y="163.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.7" y="174.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1175.7" y="147.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.7" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1175.7" y="131.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.7" y="142.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1175.7" y="115.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.7" y="126.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.06%)</title><rect x="1176.4" y="483.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.04%)</title><rect x="1176.6" y="467.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.6" y="478.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.04%)</title><rect x="1176.6" y="451.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.6" y="462.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.04%)</title><rect x="1176.6" y="435.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.6" y="446.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.04%)</title><rect x="1176.6" y="419.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.6" y="430.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.04%)</title><rect x="1176.6" y="403.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.6" y="414.0"></text>
</g>
<g>
<title>GraphKit::store_to_memory(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool, bool) (2 samples, 0.04%)</title><rect x="1176.6" y="387.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.6" y="398.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1177.3" y="755.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.3" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1177.3" y="739.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.3" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1177.3" y="723.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.3" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1177.3" y="707.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1177.3" y="691.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1177.3" y="675.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1177.3" y="659.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.3" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1177.3" y="643.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.3" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1177.3" y="627.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.3" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1177.3" y="611.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.3" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1177.3" y="595.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1177.3" y="579.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1177.3" y="563.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.3" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1177.3" y="547.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.3" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1177.3" y="531.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.3" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1177.3" y="515.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.3" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1177.3" y="499.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.3" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1177.3" y="483.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.3" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1177.3" y="467.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.3" y="478.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (10 samples, 0.20%)</title><rect x="1178.8" y="851.0" width="2.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.8" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.12%)</title><rect x="1178.8" y="835.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.8" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.12%)</title><rect x="1178.8" y="819.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.12%)</title><rect x="1178.8" y="803.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.8" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.12%)</title><rect x="1178.8" y="787.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1181.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.12%)</title><rect x="1178.8" y="771.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.10%)</title><rect x="1178.8" y="755.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.8" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.10%)</title><rect x="1178.8" y="739.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.8" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.10%)</title><rect x="1178.8" y="723.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.10%)</title><rect x="1178.8" y="707.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.10%)</title><rect x="1178.8" y="691.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.8" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.10%)</title><rect x="1178.8" y="675.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.10%)</title><rect x="1178.8" y="659.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.8" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.10%)</title><rect x="1178.8" y="643.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.8" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.10%)</title><rect x="1178.8" y="627.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.8" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.10%)</title><rect x="1178.8" y="611.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.8" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.08%)</title><rect x="1179.0" y="595.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.0" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.08%)</title><rect x="1179.0" y="579.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1179.0" y="563.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.0" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1179.0" y="547.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.0" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1179.0" y="531.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.0" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1179.0" y="515.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.0" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1179.0" y="499.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.0" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1179.0" y="483.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1179.0" y="467.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.0" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1179.0" y="451.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.0" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1179.0" y="435.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.0" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1179.0" y="419.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.0" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1179.0" y="403.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1182.0" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1179.0" y="387.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.0" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1179.0" y="371.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.0" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1179.0" y="355.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.0" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1179.0" y="339.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.0" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1179.0" y="323.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.0" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1179.0" y="307.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.0" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1179.0" y="291.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.0" y="302.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.08%)</title><rect x="1180.2" y="835.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.2" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.08%)</title><rect x="1180.2" y="819.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.2" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.08%)</title><rect x="1180.2" y="803.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1183.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.08%)</title><rect x="1180.2" y="787.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.08%)</title><rect x="1180.2" y="771.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.08%)</title><rect x="1180.2" y="755.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.08%)</title><rect x="1180.2" y="739.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.2" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1180.2" y="723.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.2" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1180.2" y="707.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1183.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1180.2" y="691.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1180.2" y="675.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1180.2" y="659.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1180.2" y="643.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1183.2" y="654.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1180.7" y="723.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.7" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1180.7" y="707.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.7" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1180.7" y="691.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.7" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1180.7" y="675.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.7" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1180.7" y="659.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.7" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1180.7" y="643.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.7" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1180.7" y="627.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.7" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1180.7" y="611.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.7" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1180.7" y="595.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.7" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1180.7" y="579.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.7" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1180.7" y="563.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.7" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1180.7" y="547.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.7" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1180.7" y="531.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.7" y="542.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1180.7" y="515.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.7" y="526.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1180.7" y="499.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.7" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1180.7" y="483.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.7" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1180.7" y="467.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.7" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1180.7" y="451.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.7" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1180.7" y="435.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.7" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1180.7" y="419.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.7" y="430.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (15 samples, 0.30%)</title><rect x="1181.4" y="947.0" width="3.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.4" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.18%)</title><rect x="1181.6" y="931.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.6" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.18%)</title><rect x="1181.6" y="915.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.18%)</title><rect x="1181.6" y="899.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.18%)</title><rect x="1181.6" y="883.0" width="2.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.18%)</title><rect x="1181.6" y="867.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.16%)</title><rect x="1181.6" y="851.0" width="1.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.6" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.12%)</title><rect x="1181.9" y="835.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.9" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.12%)</title><rect x="1181.9" y="819.0" width="1.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.9" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.12%)</title><rect x="1181.9" y="803.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.12%)</title><rect x="1181.9" y="787.0" width="1.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.9" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.12%)</title><rect x="1181.9" y="771.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.9" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.12%)</title><rect x="1181.9" y="755.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.9" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.10%)</title><rect x="1181.9" y="739.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.9" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.10%)</title><rect x="1181.9" y="723.0" width="1.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.10%)</title><rect x="1181.9" y="707.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.10%)</title><rect x="1181.9" y="691.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.10%)</title><rect x="1181.9" y="675.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.10%)</title><rect x="1181.9" y="659.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.9" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.10%)</title><rect x="1181.9" y="643.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.9" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.10%)</title><rect x="1181.9" y="627.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.08%)</title><rect x="1181.9" y="611.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.9" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.08%)</title><rect x="1181.9" y="595.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1181.9" y="579.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1181.9" y="563.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.9" y="574.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.04%)</title><rect x="1181.9" y="547.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.9" y="558.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.10%)</title><rect x="1183.8" y="931.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.8" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.10%)</title><rect x="1183.8" y="915.0" width="1.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.8" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.10%)</title><rect x="1183.8" y="899.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.10%)</title><rect x="1183.8" y="883.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.10%)</title><rect x="1183.8" y="867.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.10%)</title><rect x="1183.8" y="851.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.10%)</title><rect x="1183.8" y="835.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.8" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.08%)</title><rect x="1184.0" y="819.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.0" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.08%)</title><rect x="1184.0" y="803.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.08%)</title><rect x="1184.0" y="787.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.08%)</title><rect x="1184.0" y="771.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.08%)</title><rect x="1184.0" y="755.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.0" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.08%)</title><rect x="1184.0" y="739.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.0" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1184.3" y="723.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.3" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1184.3" y="707.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1184.3" y="691.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1184.3" y="675.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1184.5" y="659.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1184.5" y="643.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.5" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1184.5" y="627.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.5" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1184.5" y="611.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1184.5" y="595.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1184.5" y="579.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1184.5" y="563.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1184.5" y="547.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.5" y="558.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.04%)</title><rect x="1185.2" y="1043.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.2" y="1054.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (9 samples, 0.18%)</title><rect x="1185.7" y="1075.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.7" y="1086.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (9 samples, 0.18%)</title><rect x="1185.7" y="1059.0" width="2.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.7" y="1070.0"></text>
</g>
<g>
<title>Compilation::compile_method() (8 samples, 0.16%)</title><rect x="1185.7" y="1043.0" width="1.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.7" y="1054.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (7 samples, 0.14%)</title><rect x="1185.7" y="1027.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.7" y="1038.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (4 samples, 0.08%)</title><rect x="1185.7" y="1011.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.7" y="1022.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (3 samples, 0.06%)</title><rect x="1185.7" y="995.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.7" y="1006.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (3 samples, 0.06%)</title><rect x="1185.7" y="979.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.7" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (3 samples, 0.06%)</title><rect x="1185.7" y="963.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.7" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.06%)</title><rect x="1185.7" y="947.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.7" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 0.06%)</title><rect x="1185.7" y="931.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.7" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.04%)</title><rect x="1185.7" y="915.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.7" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1185.7" y="899.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.7" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1185.7" y="883.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.7" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.04%)</title><rect x="1185.7" y="867.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.7" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.04%)</title><rect x="1185.7" y="851.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.7" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.04%)</title><rect x="1185.7" y="835.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.7" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1185.7" y="819.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.7" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1185.7" y="803.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.7" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.04%)</title><rect x="1185.7" y="787.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.7" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.04%)</title><rect x="1185.7" y="771.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.7" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.04%)</title><rect x="1185.7" y="755.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.7" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1185.7" y="739.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.7" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1185.7" y="723.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.7" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.04%)</title><rect x="1185.7" y="707.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.7" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.04%)</title><rect x="1185.7" y="691.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.7" y="702.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (2 samples, 0.04%)</title><rect x="1186.9" y="1011.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.9" y="1022.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 0.04%)</title><rect x="1186.9" y="995.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.9" y="1006.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (2 samples, 0.04%)</title><rect x="1186.9" y="979.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.9" y="990.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (2 samples, 0.04%)</title><rect x="1186.9" y="963.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.9" y="974.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (2 samples, 0.04%)</title><rect x="1186.9" y="947.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.9" y="958.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (2 samples, 0.04%)</title><rect x="1186.9" y="931.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.9" y="942.0"></text>
</g>
<g>
<title>LinearScanWalker::free_collect_inactive_fixed(Interval*) (2 samples, 0.04%)</title><rect x="1186.9" y="915.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.9" y="926.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (3 samples, 0.06%)</title><rect x="1188.1" y="1107.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.1" y="1118.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (3 samples, 0.06%)</title><rect x="1188.1" y="1091.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.1" y="1102.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (3 samples, 0.06%)</title><rect x="1188.1" y="1075.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.1" y="1086.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (2 samples, 0.04%)</title><rect x="1188.3" y="1059.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1191.3" y="1070.0"></text>
</g>
<g>
<title>VMThread::run() (4 samples, 0.08%)</title><rect x="1188.8" y="1139.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.8" y="1150.0"></text>
</g>
<g>
<title>VMThread::loop() (4 samples, 0.08%)</title><rect x="1188.8" y="1123.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.8" y="1134.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.04%)</title><rect x="1189.0" y="1107.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.0" y="1118.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.04%)</title><rect x="1189.0" y="1091.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.0" y="1102.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.04%)</title><rect x="1189.0" y="1075.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.0" y="1086.0"></text>
</g>
</g>
</svg>
