<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1238" onload="init(evt)" viewBox="0 0 1200 1238" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1221"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1221"> </text>
<g id="frames">
<g>
<title>all (5,259 samples, 100.00%)</title><rect x="10.0" y="1187.0" width="1180.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="13.0" y="1198.0">all</text>
</g>
<g>
<title>[AsyncWorker-0 tid=7922] (112 samples, 2.13%)</title><rect x="10.0" y="1171.0" width="25.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="13.0" y="1182.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (109 samples, 2.07%)</title><rect x="10.4" y="1155.0" width="24.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.4" y="1166.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (109 samples, 2.07%)</title><rect x="10.4" y="1139.0" width="24.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.4" y="1150.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (109 samples, 2.07%)</title><rect x="10.4" y="1123.0" width="24.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.4" y="1134.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.21%)</title><rect x="10.7" y="1107.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="13.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (9 samples, 0.17%)</title><rect x="11.1" y="1091.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="14.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.11%)</title><rect x="11.1" y="1075.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="14.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.11%)</title><rect x="11.1" y="1059.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.11%)</title><rect x="11.1" y="1043.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="14.1" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.04%)</title><rect x="11.1" y="1027.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="14.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="11.6" y="1027.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="14.6" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.08%)</title><rect x="11.6" y="1011.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="14.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="11.8" y="995.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="14.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="11.8" y="979.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="14.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="11.8" y="963.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="14.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="11.8" y="947.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="14.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="11.8" y="931.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="14.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="11.8" y="915.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="14.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="11.8" y="899.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="14.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="11.8" y="883.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="14.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="11.8" y="867.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="14.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.04%)</title><rect x="12.5" y="1075.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.04%)</title><rect x="12.5" y="1059.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="15.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.04%)</title><rect x="12.5" y="1043.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="15.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.04%)</title><rect x="12.5" y="1027.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.04%)</title><rect x="12.5" y="1011.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.5" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.run (97 samples, 1.84%)</title><rect x="13.1" y="1107.0" width="21.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="16.1" y="1118.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$326/1879935589.run (96 samples, 1.83%)</title><rect x="13.4" y="1091.0" width="21.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.4" y="1102.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (95 samples, 1.81%)</title><rect x="13.6" y="1075.0" width="21.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="16.6" y="1086.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (93 samples, 1.77%)</title><rect x="13.6" y="1059.0" width="20.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.6" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (15 samples, 0.29%)</title><rect x="15.6" y="1043.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="18.6" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.06%)</title><rect x="15.6" y="1027.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="18.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (11 samples, 0.21%)</title><rect x="16.3" y="1027.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="19.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (8 samples, 0.15%)</title><rect x="16.5" y="1011.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="19.5" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (8 samples, 0.15%)</title><rect x="16.5" y="995.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="19.5" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (6 samples, 0.11%)</title><rect x="17.0" y="979.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="20.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (5 samples, 0.10%)</title><rect x="17.2" y="963.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="20.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (5 samples, 0.10%)</title><rect x="17.2" y="947.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.08%)</title><rect x="17.4" y="931.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.08%)</title><rect x="17.4" y="915.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="20.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (4 samples, 0.08%)</title><rect x="17.4" y="899.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="20.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (4 samples, 0.08%)</title><rect x="17.4" y="883.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="20.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.06%)</title><rect x="17.6" y="867.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="20.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.06%)</title><rect x="17.6" y="851.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="20.6" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="17.9" y="835.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="20.9" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (2 samples, 0.04%)</title><rect x="18.3" y="1011.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="21.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.04%)</title><rect x="18.3" y="995.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="21.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="18.3" y="979.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="21.3" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.04%)</title><rect x="18.3" y="963.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="21.3" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.04%)</title><rect x="18.3" y="947.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="21.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.04%)</title><rect x="18.3" y="931.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="21.3" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (8 samples, 0.15%)</title><rect x="19.0" y="1043.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.0" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="19.0" y="1027.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="22.0" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="19.0" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="22.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (4 samples, 0.08%)</title><rect x="19.9" y="1027.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.9" y="1038.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (4 samples, 0.08%)</title><rect x="19.9" y="1011.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="22.9" y="1022.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (2 samples, 0.04%)</title><rect x="19.9" y="995.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="22.9" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (2 samples, 0.04%)</title><rect x="19.9" y="979.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="22.9" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (2 samples, 0.04%)</title><rect x="19.9" y="963.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="22.9" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.04%)</title><rect x="19.9" y="947.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.9" y="958.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.04%)</title><rect x="19.9" y="931.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="22.9" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="19.9" y="915.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="22.9" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="19.9" y="899.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="22.9" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getResponsesFromReplicas (59 samples, 1.12%)</title><rect x="21.0" y="1043.0" width="13.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.0" y="1054.0"></text>
</g>
<g>
<title>java/net/URI.create (5 samples, 0.10%)</title><rect x="21.2" y="1027.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="24.2" y="1038.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (5 samples, 0.10%)</title><rect x="21.2" y="1011.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="24.2" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (5 samples, 0.10%)</title><rect x="21.2" y="995.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="24.2" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (3 samples, 0.06%)</title><rect x="21.4" y="979.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="24.4" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (2 samples, 0.04%)</title><rect x="21.4" y="963.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="24.4" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2 samples, 0.04%)</title><rect x="21.4" y="947.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="24.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (43 samples, 0.82%)</title><rect x="22.8" y="1027.0" width="9.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="25.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (43 samples, 0.82%)</title><rect x="22.8" y="1011.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="25.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (43 samples, 0.82%)</title><rect x="22.8" y="995.0" width="9.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="25.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (43 samples, 0.82%)</title><rect x="22.8" y="979.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="25.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (36 samples, 0.68%)</title><rect x="23.0" y="963.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="26.0" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.10%)</title><rect x="23.7" y="947.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="26.7" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.04%)</title><rect x="23.7" y="931.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="26.7" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.04%)</title><rect x="23.7" y="915.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="26.7" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.04%)</title><rect x="23.7" y="899.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="26.7" y="910.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="23.7" y="883.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="26.7" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.04%)</title><rect x="23.7" y="867.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="26.7" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (3 samples, 0.06%)</title><rect x="24.1" y="931.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="27.1" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.06%)</title><rect x="24.1" y="915.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.1" y="926.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.04%)</title><rect x="24.4" y="899.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="27.4" y="910.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.04%)</title><rect x="24.4" y="883.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="27.4" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (3 samples, 0.06%)</title><rect x="24.8" y="947.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="27.8" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.04%)</title><rect x="25.0" y="931.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.0" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (2 samples, 0.04%)</title><rect x="25.0" y="915.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="28.0" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.04%)</title><rect x="25.0" y="899.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.0" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (2 samples, 0.04%)</title><rect x="25.0" y="883.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="28.0" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.04%)</title><rect x="25.0" y="867.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="28.0" y="878.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.04%)</title><rect x="25.0" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="28.0" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.accept (2 samples, 0.04%)</title><rect x="25.0" y="835.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="28.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (25 samples, 0.48%)</title><rect x="25.5" y="947.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.5" y="958.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (25 samples, 0.48%)</title><rect x="25.5" y="931.0" width="5.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="28.5" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (24 samples, 0.46%)</title><rect x="25.7" y="915.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="28.7" y="926.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (13 samples, 0.25%)</title><rect x="26.4" y="899.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="29.4" y="910.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (5 samples, 0.10%)</title><rect x="27.7" y="883.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="30.7" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.04%)</title><rect x="28.2" y="867.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="31.2" y="878.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.04%)</title><rect x="28.2" y="851.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="31.2" y="862.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.04%)</title><rect x="28.8" y="883.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="31.8" y="894.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (4 samples, 0.08%)</title><rect x="30.2" y="899.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="33.2" y="910.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (3 samples, 0.06%)</title><rect x="30.4" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="33.4" y="894.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (2 samples, 0.04%)</title><rect x="30.6" y="867.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="33.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (5 samples, 0.10%)</title><rect x="31.3" y="963.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="34.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (5 samples, 0.10%)</title><rect x="31.3" y="947.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="34.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.10%)</title><rect x="31.3" y="931.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.10%)</title><rect x="31.3" y="915.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="34.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.06%)</title><rect x="31.5" y="899.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="34.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.06%)</title><rect x="31.5" y="883.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="34.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="31.5" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="34.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="31.5" y="851.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="34.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="31.5" y="835.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="34.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.06%)</title><rect x="31.5" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="34.5" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="31.5" y="803.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="34.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="31.5" y="787.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="34.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="31.5" y="771.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="34.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="31.5" y="755.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="34.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="31.5" y="739.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="34.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="31.5" y="723.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="34.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="31.5" y="707.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="34.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="31.8" y="691.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="34.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="31.8" y="675.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="34.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (2 samples, 0.04%)</title><rect x="32.4" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="35.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (2 samples, 0.04%)</title><rect x="32.4" y="1011.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="35.4" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.04%)</title><rect x="32.4" y="995.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.4" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.04%)</title><rect x="32.4" y="979.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="35.4" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="32.4" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="35.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (3 samples, 0.06%)</title><rect x="32.9" y="1027.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="35.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (3 samples, 0.06%)</title><rect x="32.9" y="1011.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="35.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getFirstResponses (3 samples, 0.06%)</title><rect x="33.6" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="36.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (2 samples, 0.04%)</title><rect x="34.5" y="1059.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="37.5" y="1070.0"></text>
</g>
<g>
<title>[AsyncWorker-0 tid=7932] (18 samples, 0.34%)</title><rect x="35.1" y="1171.0" width="4.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="38.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.run (18 samples, 0.34%)</title><rect x="35.1" y="1155.0" width="4.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="38.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18 samples, 0.34%)</title><rect x="35.1" y="1139.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="38.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (18 samples, 0.34%)</title><rect x="35.1" y="1123.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="38.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.17%)</title><rect x="35.4" y="1107.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="38.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (9 samples, 0.17%)</title><rect x="35.4" y="1091.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="38.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.15%)</title><rect x="35.6" y="1075.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="38.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.15%)</title><rect x="35.6" y="1059.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="38.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.15%)</title><rect x="35.6" y="1043.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="38.6" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.08%)</title><rect x="35.6" y="1027.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="38.6" y="1038.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.04%)</title><rect x="36.0" y="1011.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="39.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="36.0" y="995.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="39.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="36.0" y="979.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="39.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="36.5" y="1027.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="39.5" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.08%)</title><rect x="36.5" y="1011.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="39.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="36.5" y="995.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="39.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="36.5" y="979.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="39.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="36.5" y="963.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="39.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="36.5" y="947.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="39.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="36.5" y="931.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="39.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="36.5" y="915.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="39.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="36.7" y="899.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="39.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="36.9" y="883.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="39.9" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.run (8 samples, 0.15%)</title><rect x="37.4" y="1107.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="40.4" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$326/1879935589.run (7 samples, 0.13%)</title><rect x="37.6" y="1091.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="40.6" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (7 samples, 0.13%)</title><rect x="37.6" y="1075.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="40.6" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (4 samples, 0.08%)</title><rect x="37.6" y="1059.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="40.6" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.executeIfProxied (4 samples, 0.08%)</title><rect x="37.6" y="1043.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="40.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (3 samples, 0.06%)</title><rect x="37.8" y="1027.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="40.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (3 samples, 0.06%)</title><rect x="37.8" y="1011.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="40.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.06%)</title><rect x="37.8" y="995.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="40.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.06%)</title><rect x="37.8" y="979.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="40.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.04%)</title><rect x="38.0" y="963.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="41.0" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (3 samples, 0.06%)</title><rect x="38.5" y="1059.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="41.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.04%)</title><rect x="38.7" y="1043.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="41.7" y="1054.0"></text>
</g>
<g>
<title>[AsyncWorker-0 tid=7940] (17 samples, 0.32%)</title><rect x="39.2" y="1171.0" width="3.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="42.2" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="39.2" y="1155.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="42.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.run (14 samples, 0.27%)</title><rect x="39.8" y="1155.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="42.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (14 samples, 0.27%)</title><rect x="39.8" y="1139.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="42.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (14 samples, 0.27%)</title><rect x="39.8" y="1123.0" width="3.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.21%)</title><rect x="39.8" y="1107.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="42.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (11 samples, 0.21%)</title><rect x="39.8" y="1091.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="42.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.17%)</title><rect x="39.8" y="1075.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="42.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.15%)</title><rect x="40.1" y="1059.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="43.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.13%)</title><rect x="40.3" y="1043.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="43.3" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.04%)</title><rect x="40.3" y="1027.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="43.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="40.7" y="1027.0" width="1.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="43.7" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.08%)</title><rect x="40.7" y="1011.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="43.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="41.0" y="995.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="44.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="41.0" y="979.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="44.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="41.0" y="963.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="44.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="41.0" y="947.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="44.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="41.0" y="931.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="44.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="41.0" y="915.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="44.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="41.0" y="899.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="44.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="41.0" y="883.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="44.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="41.0" y="867.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="44.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="41.9" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="41.9" y="1059.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="41.9" y="1043.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="44.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="41.9" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="44.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="41.9" y="1011.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="44.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.run (3 samples, 0.06%)</title><rect x="42.3" y="1107.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$326/1879935589.run (3 samples, 0.06%)</title><rect x="42.3" y="1091.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="45.3" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (3 samples, 0.06%)</title><rect x="42.3" y="1075.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="45.3" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (3 samples, 0.06%)</title><rect x="42.3" y="1059.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.3" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.executeIfProxied (3 samples, 0.06%)</title><rect x="42.3" y="1043.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (3 samples, 0.06%)</title><rect x="42.3" y="1027.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="45.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (3 samples, 0.06%)</title><rect x="42.3" y="1011.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="45.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.06%)</title><rect x="42.3" y="995.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="45.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.06%)</title><rect x="42.3" y="979.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="45.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.06%)</title><rect x="42.3" y="963.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="45.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.04%)</title><rect x="42.5" y="947.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="45.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="42.5" y="931.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="42.5" y="915.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="45.5" y="926.0"></text>
</g>
<g>
<title>[AsyncWorker-1 tid=7924] (111 samples, 2.11%)</title><rect x="43.0" y="1171.0" width="24.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="46.0" y="1182.0">[..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="43.2" y="1155.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="46.2" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="43.2" y="1139.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="46.2" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="43.2" y="1123.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="46.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.run (108 samples, 2.05%)</title><rect x="43.7" y="1155.0" width="24.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="46.7" y="1166.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (108 samples, 2.05%)</title><rect x="43.7" y="1139.0" width="24.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.7" y="1150.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (108 samples, 2.05%)</title><rect x="43.7" y="1123.0" width="24.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="46.7" y="1134.0">j..</text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="43.7" y="1107.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="46.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (13 samples, 0.25%)</title><rect x="44.1" y="1107.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="47.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (13 samples, 0.25%)</title><rect x="44.1" y="1091.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.15%)</title><rect x="44.6" y="1075.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="47.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.13%)</title><rect x="44.8" y="1059.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.13%)</title><rect x="44.8" y="1043.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.8" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.10%)</title><rect x="44.8" y="1027.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="47.8" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.06%)</title><rect x="45.0" y="1011.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="48.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="45.9" y="1027.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="48.9" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="45.9" y="1011.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="48.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="45.9" y="995.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="48.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="45.9" y="979.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="48.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="45.9" y="963.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="48.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="45.9" y="947.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="48.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="45.9" y="931.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="48.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="45.9" y="915.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="48.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="46.6" y="1075.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="46.6" y="1059.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="49.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="46.6" y="1043.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="46.6" y="1027.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="49.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="46.6" y="1011.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.6" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="46.6" y="995.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="49.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="46.6" y="979.0" width="0.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="49.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="46.6" y="963.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="49.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="46.6" y="947.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="49.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="46.6" y="931.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="49.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="46.6" y="915.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="49.6" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.run (93 samples, 1.77%)</title><rect x="47.0" y="1107.0" width="20.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="50.0" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$326/1879935589.run (92 samples, 1.75%)</title><rect x="47.2" y="1091.0" width="20.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (92 samples, 1.75%)</title><rect x="47.2" y="1075.0" width="20.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.2" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (89 samples, 1.69%)</title><rect x="47.2" y="1059.0" width="20.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="50.2" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (15 samples, 0.29%)</title><rect x="48.8" y="1043.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.8" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.04%)</title><rect x="48.8" y="1027.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.8" y="1038.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.04%)</title><rect x="48.8" y="1011.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.8" y="1022.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.04%)</title><rect x="48.8" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.04%)</title><rect x="48.8" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="51.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (13 samples, 0.25%)</title><rect x="49.3" y="1027.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (11 samples, 0.21%)</title><rect x="49.3" y="1011.0" width="2.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="52.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (11 samples, 0.21%)</title><rect x="49.3" y="995.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (5 samples, 0.10%)</title><rect x="49.7" y="979.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="52.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (4 samples, 0.08%)</title><rect x="49.9" y="963.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (3 samples, 0.06%)</title><rect x="49.9" y="947.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="49.9" y="931.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="52.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (3 samples, 0.06%)</title><rect x="49.9" y="915.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.06%)</title><rect x="49.9" y="899.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="52.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.06%)</title><rect x="49.9" y="883.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="52.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (3 samples, 0.06%)</title><rect x="49.9" y="867.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="52.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (2 samples, 0.04%)</title><rect x="50.2" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="53.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (4 samples, 0.08%)</title><rect x="50.8" y="979.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.8" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.06%)</title><rect x="50.8" y="963.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="53.8" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="50.8" y="947.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.8" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (2 samples, 0.04%)</title><rect x="51.7" y="1011.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="54.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.04%)</title><rect x="51.7" y="995.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="51.7" y="979.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.7" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.04%)</title><rect x="51.7" y="963.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="54.7" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.04%)</title><rect x="51.7" y="947.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="54.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (8 samples, 0.15%)</title><rect x="52.2" y="1043.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="55.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (6 samples, 0.11%)</title><rect x="52.6" y="1027.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="55.6" y="1038.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (6 samples, 0.11%)</title><rect x="52.6" y="1011.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="55.6" y="1022.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (2 samples, 0.04%)</title><rect x="52.6" y="995.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="55.6" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (2 samples, 0.04%)</title><rect x="52.6" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="55.6" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (4 samples, 0.08%)</title><rect x="53.1" y="995.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="56.1" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.processRemaining (2 samples, 0.04%)</title><rect x="53.5" y="979.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="56.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getResponsesFromReplicas (59 samples, 1.12%)</title><rect x="54.0" y="1043.0" width="13.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="57.0" y="1054.0"></text>
</g>
<g>
<title>java/net/URI.create (6 samples, 0.11%)</title><rect x="54.2" y="1027.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="57.2" y="1038.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (6 samples, 0.11%)</title><rect x="54.2" y="1011.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.2" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (5 samples, 0.10%)</title><rect x="54.4" y="995.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.4" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (5 samples, 0.10%)</title><rect x="54.4" y="979.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.4" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (3 samples, 0.06%)</title><rect x="54.7" y="963.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.7" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2 samples, 0.04%)</title><rect x="54.7" y="947.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="57.7" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (2 samples, 0.04%)</title><rect x="55.5" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="58.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (38 samples, 0.72%)</title><rect x="56.2" y="1027.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="59.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (38 samples, 0.72%)</title><rect x="56.2" y="1011.0" width="8.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (38 samples, 0.72%)</title><rect x="56.2" y="995.0" width="8.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="59.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (38 samples, 0.72%)</title><rect x="56.2" y="979.0" width="8.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="59.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (26 samples, 0.49%)</title><rect x="56.7" y="963.0" width="5.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="59.7" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (4 samples, 0.08%)</title><rect x="56.9" y="947.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="59.9" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.04%)</title><rect x="56.9" y="931.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="59.9" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.04%)</title><rect x="56.9" y="915.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="59.9" y="926.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.04%)</title><rect x="57.3" y="931.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="60.3" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (2 samples, 0.04%)</title><rect x="57.8" y="947.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="60.8" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (2 samples, 0.04%)</title><rect x="57.8" y="931.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="60.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (17 samples, 0.32%)</title><rect x="58.7" y="947.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.7" y="958.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (17 samples, 0.32%)</title><rect x="58.7" y="931.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="61.7" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (17 samples, 0.32%)</title><rect x="58.7" y="915.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="61.7" y="926.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (11 samples, 0.21%)</title><rect x="58.7" y="899.0" width="2.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="61.7" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (2 samples, 0.04%)</title><rect x="59.1" y="883.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="62.1" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (2 samples, 0.04%)</title><rect x="59.1" y="867.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="62.1" y="878.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.08%)</title><rect x="60.0" y="883.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="63.0" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.08%)</title><rect x="60.0" y="867.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="63.0" y="878.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="60.3" y="851.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="63.3" y="862.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (4 samples, 0.08%)</title><rect x="61.6" y="899.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.6" y="910.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (4 samples, 0.08%)</title><rect x="61.6" y="883.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="64.6" y="894.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (2 samples, 0.04%)</title><rect x="62.1" y="867.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="65.1" y="878.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.04%)</title><rect x="62.1" y="851.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="65.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (4 samples, 0.08%)</title><rect x="62.5" y="963.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="65.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (3 samples, 0.06%)</title><rect x="62.7" y="947.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="65.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (3 samples, 0.06%)</title><rect x="62.7" y="931.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="65.7" y="942.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (2 samples, 0.04%)</title><rect x="63.0" y="915.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.0" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.04%)</title><rect x="63.0" y="899.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.0" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.04%)</title><rect x="63.0" y="883.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.0" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.04%)</title><rect x="63.0" y="867.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="66.0" y="878.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (2 samples, 0.04%)</title><rect x="63.0" y="851.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (6 samples, 0.11%)</title><rect x="63.4" y="963.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="66.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (4 samples, 0.08%)</title><rect x="63.4" y="947.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="66.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.08%)</title><rect x="63.4" y="931.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="66.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.08%)</title><rect x="63.4" y="915.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="66.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (2 samples, 0.04%)</title><rect x="64.3" y="947.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="67.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="64.3" y="931.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="64.3" y="915.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (2 samples, 0.04%)</title><rect x="64.3" y="899.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="67.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.04%)</title><rect x="64.3" y="883.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="67.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (5 samples, 0.10%)</title><rect x="64.7" y="1027.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="67.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (5 samples, 0.10%)</title><rect x="64.7" y="1011.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.7" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5 samples, 0.10%)</title><rect x="64.7" y="995.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="67.7" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5 samples, 0.10%)</title><rect x="64.7" y="979.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="67.7" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="65.0" y="963.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="68.0" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.04%)</title><rect x="65.4" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.4" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (2 samples, 0.04%)</title><rect x="65.4" y="947.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="68.4" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.04%)</title><rect x="65.4" y="931.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (3 samples, 0.06%)</title><rect x="65.9" y="1027.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (3 samples, 0.06%)</title><rect x="65.9" y="1011.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="68.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (3 samples, 0.06%)</title><rect x="65.9" y="995.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="68.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1473611564.test (2 samples, 0.04%)</title><rect x="65.9" y="979.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="68.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.04%)</title><rect x="65.9" y="963.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="68.9" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (2 samples, 0.04%)</title><rect x="65.9" y="947.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.9" y="958.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (2 samples, 0.04%)</title><rect x="65.9" y="931.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getFirstResponses (3 samples, 0.06%)</title><rect x="66.5" y="1027.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (3 samples, 0.06%)</title><rect x="66.5" y="1011.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (3 samples, 0.06%)</title><rect x="66.5" y="995.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (3 samples, 0.06%)</title><rect x="66.5" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="69.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (3 samples, 0.06%)</title><rect x="67.2" y="1059.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.04%)</title><rect x="67.4" y="1043.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="70.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.04%)</title><rect x="67.4" y="1027.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.4" y="1038.0"></text>
</g>
<g>
<title>[AsyncWorker-1 tid=7933] (20 samples, 0.38%)</title><rect x="67.9" y="1171.0" width="4.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="70.9" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="67.9" y="1155.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="70.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.run (18 samples, 0.34%)</title><rect x="68.3" y="1155.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18 samples, 0.34%)</title><rect x="68.3" y="1139.0" width="4.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (18 samples, 0.34%)</title><rect x="68.3" y="1123.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="71.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.06%)</title><rect x="68.8" y="1107.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.06%)</title><rect x="68.8" y="1091.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.8" y="1102.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.04%)</title><rect x="68.8" y="1075.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="71.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.17%)</title><rect x="69.5" y="1107.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (7 samples, 0.13%)</title><rect x="69.9" y="1091.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (6 samples, 0.11%)</title><rect x="69.9" y="1075.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.11%)</title><rect x="69.9" y="1059.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="72.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.11%)</title><rect x="69.9" y="1043.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="72.9" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.04%)</title><rect x="69.9" y="1027.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="72.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="70.4" y="1027.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="73.4" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.08%)</title><rect x="70.4" y="1011.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="73.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="70.4" y="995.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="73.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="70.4" y="979.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="73.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="70.6" y="963.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="73.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="70.6" y="947.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="73.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="70.6" y="931.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="73.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="70.6" y="915.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="73.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="70.6" y="899.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="73.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="70.6" y="883.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="73.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="70.6" y="867.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="73.6" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.run (3 samples, 0.06%)</title><rect x="71.7" y="1107.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$326/1879935589.run (3 samples, 0.06%)</title><rect x="71.7" y="1091.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="74.7" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (3 samples, 0.06%)</title><rect x="71.7" y="1075.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (2 samples, 0.04%)</title><rect x="71.7" y="1059.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.7" y="1070.0"></text>
</g>
<g>
<title>[AsyncWorker-1 tid=7939] (20 samples, 0.38%)</title><rect x="72.4" y="1171.0" width="4.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="75.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.run (20 samples, 0.38%)</title><rect x="72.4" y="1155.0" width="4.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (20 samples, 0.38%)</title><rect x="72.4" y="1139.0" width="4.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="75.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (20 samples, 0.38%)</title><rect x="72.4" y="1123.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="75.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.17%)</title><rect x="73.3" y="1107.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (9 samples, 0.17%)</title><rect x="73.3" y="1091.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.15%)</title><rect x="73.3" y="1075.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="76.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 0.15%)</title><rect x="73.3" y="1059.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 0.15%)</title><rect x="73.3" y="1043.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.3" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.08%)</title><rect x="73.5" y="1027.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="76.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="74.4" y="1027.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="77.4" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.06%)</title><rect x="74.4" y="1011.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="77.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="74.6" y="995.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="77.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="74.6" y="979.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="77.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="74.6" y="963.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="77.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="74.6" y="947.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="77.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="74.6" y="931.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="77.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="74.6" y="915.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="77.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="74.6" y="899.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="77.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="74.6" y="883.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="77.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="74.6" y="867.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="77.6" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.run (7 samples, 0.13%)</title><rect x="75.3" y="1107.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$326/1879935589.run (6 samples, 0.11%)</title><rect x="75.5" y="1091.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.5" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (6 samples, 0.11%)</title><rect x="75.5" y="1075.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (5 samples, 0.10%)</title><rect x="75.5" y="1059.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="78.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.executeIfProxied (4 samples, 0.08%)</title><rect x="75.7" y="1043.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="78.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (4 samples, 0.08%)</title><rect x="75.7" y="1027.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (4 samples, 0.08%)</title><rect x="75.7" y="1011.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="78.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.08%)</title><rect x="75.7" y="995.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.08%)</title><rect x="75.7" y="979.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (4 samples, 0.08%)</title><rect x="75.7" y="963.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="78.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.06%)</title><rect x="76.0" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="79.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="76.0" y="931.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.06%)</title><rect x="76.0" y="915.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.0" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="76.0" y="899.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="79.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="76.0" y="883.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="79.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="76.0" y="867.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="79.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="76.0" y="851.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="79.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="76.0" y="835.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="79.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="76.0" y="819.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="79.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="76.2" y="803.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="79.2" y="814.0"></text>
</g>
<g>
<title>[AsyncWorker-2 tid=7923] (106 samples, 2.02%)</title><rect x="76.9" y="1171.0" width="23.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="79.9" y="1182.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (103 samples, 1.96%)</title><rect x="77.3" y="1155.0" width="23.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.3" y="1166.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (103 samples, 1.96%)</title><rect x="77.3" y="1139.0" width="23.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.3" y="1150.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (103 samples, 1.96%)</title><rect x="77.3" y="1123.0" width="23.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.3" y="1134.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (9 samples, 0.17%)</title><rect x="77.3" y="1107.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="80.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (9 samples, 0.17%)</title><rect x="77.3" y="1091.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="80.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.13%)</title><rect x="77.3" y="1075.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.13%)</title><rect x="77.3" y="1059.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="80.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.13%)</title><rect x="77.3" y="1043.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.3" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.06%)</title><rect x="77.3" y="1027.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="80.3" y="1038.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.04%)</title><rect x="77.5" y="1011.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="80.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="78.0" y="1027.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="81.0" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.08%)</title><rect x="78.0" y="1011.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="81.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="78.0" y="995.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="81.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="78.0" y="979.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="81.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="78.0" y="963.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="81.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="78.0" y="947.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="81.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="78.2" y="931.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="81.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="78.2" y="915.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="81.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="78.2" y="899.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="81.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="78.2" y="883.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="81.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="78.2" y="867.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="81.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.run (94 samples, 1.79%)</title><rect x="79.3" y="1107.0" width="21.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="82.3" y="1118.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$326/1879935589.run (94 samples, 1.79%)</title><rect x="79.3" y="1091.0" width="21.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="82.3" y="1102.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (93 samples, 1.77%)</title><rect x="79.6" y="1075.0" width="20.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="82.6" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (91 samples, 1.73%)</title><rect x="79.6" y="1059.0" width="20.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="82.6" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (21 samples, 0.40%)</title><rect x="80.5" y="1043.0" width="4.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.5" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (21 samples, 0.40%)</title><rect x="80.5" y="1027.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.5" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (18 samples, 0.34%)</title><rect x="80.5" y="1011.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="83.5" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (18 samples, 0.34%)</title><rect x="80.5" y="995.0" width="4.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.04%)</title><rect x="80.5" y="979.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="83.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.04%)</title><rect x="80.5" y="963.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="83.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (2 samples, 0.04%)</title><rect x="80.5" y="947.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="83.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.04%)</title><rect x="80.9" y="979.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.04%)</title><rect x="80.9" y="963.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.04%)</title><rect x="80.9" y="947.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="83.9" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (12 samples, 0.23%)</title><rect x="81.4" y="979.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (12 samples, 0.23%)</title><rect x="81.4" y="963.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="84.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.19%)</title><rect x="81.4" y="947.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (10 samples, 0.19%)</title><rect x="81.4" y="931.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="84.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 0.19%)</title><rect x="81.4" y="915.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="84.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (2 samples, 0.04%)</title><rect x="81.8" y="899.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (6 samples, 0.11%)</title><rect x="82.2" y="899.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="85.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (6 samples, 0.11%)</title><rect x="82.2" y="883.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (4 samples, 0.08%)</title><rect x="82.7" y="867.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="85.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.06%)</title><rect x="82.9" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="85.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="83.6" y="947.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.6" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (2 samples, 0.04%)</title><rect x="84.0" y="979.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="87.0" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (3 samples, 0.06%)</title><rect x="84.5" y="1011.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.5" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.04%)</title><rect x="84.7" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.7" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="84.7" y="979.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="87.7" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.04%)</title><rect x="84.7" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.7" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.04%)</title><rect x="84.7" y="947.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="87.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (11 samples, 0.21%)</title><rect x="85.2" y="1043.0" width="2.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="88.2" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.04%)</title><rect x="85.4" y="1027.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="88.4" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (2 samples, 0.04%)</title><rect x="85.4" y="1011.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="88.4" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2 samples, 0.04%)</title><rect x="85.4" y="995.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="88.4" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="85.4" y="979.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.4" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="85.8" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="88.8" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="85.8" y="1011.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="88.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (6 samples, 0.11%)</title><rect x="86.3" y="1027.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="89.3" y="1038.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (6 samples, 0.11%)</title><rect x="86.3" y="1011.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="89.3" y="1022.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (2 samples, 0.04%)</title><rect x="86.3" y="995.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.3" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (2 samples, 0.04%)</title><rect x="86.3" y="979.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.3" y="990.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (2 samples, 0.04%)</title><rect x="86.3" y="963.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="89.3" y="974.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.04%)</title><rect x="86.3" y="947.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="89.3" y="958.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (2 samples, 0.04%)</title><rect x="86.3" y="931.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="89.3" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="86.3" y="915.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.3" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="86.3" y="899.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="89.3" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="86.3" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="89.3" y="894.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (3 samples, 0.06%)</title><rect x="86.7" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="89.7" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (2 samples, 0.04%)</title><rect x="86.7" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="89.7" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="86.7" y="963.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="89.7" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="86.7" y="947.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.7" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="86.7" y="931.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.7" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="86.7" y="915.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.7" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="86.7" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="89.7" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getResponsesFromReplicas (54 samples, 1.03%)</title><rect x="87.6" y="1043.0" width="12.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.6" y="1054.0"></text>
</g>
<g>
<title>java/net/URI.create (9 samples, 0.17%)</title><rect x="88.1" y="1027.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.1" y="1038.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (9 samples, 0.17%)</title><rect x="88.1" y="1011.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.1" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.&lt;init&gt; (3 samples, 0.06%)</title><rect x="88.1" y="995.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.1" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (6 samples, 0.11%)</title><rect x="88.8" y="995.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.8" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (6 samples, 0.11%)</title><rect x="88.8" y="979.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="91.8" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (2 samples, 0.04%)</title><rect x="89.0" y="963.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.0" y="974.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (2 samples, 0.04%)</title><rect x="89.0" y="947.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="92.0" y="958.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (2 samples, 0.04%)</title><rect x="89.0" y="931.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="92.0" y="942.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.06%)</title><rect x="89.4" y="963.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="89.7" y="947.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="92.7" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="89.7" y="931.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="92.7" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="89.7" y="915.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (35 samples, 0.67%)</title><rect x="90.1" y="1027.0" width="7.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="93.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (35 samples, 0.67%)</title><rect x="90.1" y="1011.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (34 samples, 0.65%)</title><rect x="90.3" y="995.0" width="7.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="93.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (34 samples, 0.65%)</title><rect x="90.3" y="979.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (24 samples, 0.46%)</title><rect x="90.6" y="963.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="93.6" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.04%)</title><rect x="90.8" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.8" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.04%)</title><rect x="90.8" y="931.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="93.8" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.04%)</title><rect x="90.8" y="915.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.8" y="926.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.04%)</title><rect x="90.8" y="899.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="93.8" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (7 samples, 0.13%)</title><rect x="91.2" y="947.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="94.2" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (7 samples, 0.13%)</title><rect x="91.2" y="931.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.2" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (6 samples, 0.11%)</title><rect x="91.4" y="915.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.4" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (6 samples, 0.11%)</title><rect x="91.4" y="899.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="94.4" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (6 samples, 0.11%)</title><rect x="91.4" y="883.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="94.4" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (6 samples, 0.11%)</title><rect x="91.4" y="867.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.4" y="878.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.04%)</title><rect x="91.7" y="851.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.7" y="862.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.accept (2 samples, 0.04%)</title><rect x="91.7" y="835.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="94.7" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.04%)</title><rect x="91.7" y="819.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="94.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.04%)</title><rect x="92.8" y="947.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.04%)</title><rect x="92.8" y="931.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="95.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (12 samples, 0.23%)</title><rect x="93.2" y="947.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.2" y="958.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (12 samples, 0.23%)</title><rect x="93.2" y="931.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.2" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (12 samples, 0.23%)</title><rect x="93.2" y="915.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="96.2" y="926.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (10 samples, 0.19%)</title><rect x="93.2" y="899.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="96.2" y="910.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.08%)</title><rect x="94.4" y="883.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="97.4" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.08%)</title><rect x="94.4" y="867.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="97.4" y="878.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.06%)</title><rect x="94.6" y="851.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="97.6" y="862.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.04%)</title><rect x="95.5" y="899.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="98.5" y="910.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.04%)</title><rect x="95.5" y="883.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="98.5" y="894.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (2 samples, 0.04%)</title><rect x="95.5" y="867.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="98.5" y="878.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (2 samples, 0.04%)</title><rect x="95.5" y="851.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="98.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (3 samples, 0.06%)</title><rect x="96.2" y="963.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="99.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (2 samples, 0.04%)</title><rect x="96.4" y="947.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="99.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2 samples, 0.04%)</title><rect x="96.4" y="931.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="99.4" y="942.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.04%)</title><rect x="96.4" y="915.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="99.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (5 samples, 0.10%)</title><rect x="96.8" y="963.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (5 samples, 0.10%)</title><rect x="96.8" y="947.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="99.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.08%)</title><rect x="97.1" y="931.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="100.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.08%)</title><rect x="97.1" y="915.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="100.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.08%)</title><rect x="97.1" y="899.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="100.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.08%)</title><rect x="97.1" y="883.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="100.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.08%)</title><rect x="97.1" y="867.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="100.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.08%)</title><rect x="97.1" y="851.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.08%)</title><rect x="97.1" y="835.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="100.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.08%)</title><rect x="97.1" y="819.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.1" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="97.1" y="803.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="100.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="97.3" y="787.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="100.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="97.3" y="771.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="100.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="97.3" y="755.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="100.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="97.3" y="739.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="100.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="97.3" y="723.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="100.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="97.3" y="707.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="100.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="97.3" y="691.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="100.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="97.3" y="675.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="100.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (6 samples, 0.11%)</title><rect x="98.0" y="1027.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="101.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (6 samples, 0.11%)</title><rect x="98.0" y="1011.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="101.0" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.11%)</title><rect x="98.0" y="995.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.0" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.11%)</title><rect x="98.0" y="979.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.0" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.06%)</title><rect x="98.6" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.6" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (3 samples, 0.06%)</title><rect x="98.6" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.6" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.06%)</title><rect x="98.6" y="931.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="101.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.04%)</title><rect x="98.6" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="101.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.04%)</title><rect x="98.6" y="899.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="101.6" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="98.6" y="883.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="101.6" y="894.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="98.6" y="867.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.6" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (2 samples, 0.04%)</title><rect x="100.0" y="1059.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="103.0" y="1070.0"></text>
</g>
<g>
<title>[AsyncWorker-2 tid=7934] (18 samples, 0.34%)</title><rect x="100.6" y="1171.0" width="4.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="103.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.run (15 samples, 0.29%)</title><rect x="101.3" y="1155.0" width="3.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (15 samples, 0.29%)</title><rect x="101.3" y="1139.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="104.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (15 samples, 0.29%)</title><rect x="101.3" y="1123.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="104.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 0.15%)</title><rect x="101.3" y="1107.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="104.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (7 samples, 0.13%)</title><rect x="101.5" y="1091.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.13%)</title><rect x="101.5" y="1075.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.13%)</title><rect x="101.5" y="1059.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.13%)</title><rect x="101.5" y="1043.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="101.8" y="1027.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="104.8" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.10%)</title><rect x="101.8" y="1011.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="104.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="102.2" y="995.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="105.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="102.2" y="979.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="105.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="102.2" y="963.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="105.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="102.2" y="947.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="105.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="102.2" y="931.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="105.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="102.2" y="915.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="105.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="102.2" y="899.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="105.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="102.2" y="883.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="105.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="102.2" y="867.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="105.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.run (7 samples, 0.13%)</title><rect x="103.1" y="1107.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$326/1879935589.run (7 samples, 0.13%)</title><rect x="103.1" y="1091.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="106.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (7 samples, 0.13%)</title><rect x="103.1" y="1075.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.1" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (4 samples, 0.08%)</title><rect x="103.3" y="1059.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.3" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.executeIfProxied (3 samples, 0.06%)</title><rect x="103.6" y="1043.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="106.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (3 samples, 0.06%)</title><rect x="103.6" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="106.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (3 samples, 0.06%)</title><rect x="103.6" y="1011.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.06%)</title><rect x="103.6" y="995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.06%)</title><rect x="103.6" y="979.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.06%)</title><rect x="103.6" y="963.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="106.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.06%)</title><rect x="103.6" y="947.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="106.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="103.6" y="931.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.06%)</title><rect x="103.6" y="915.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="106.6" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (2 samples, 0.04%)</title><rect x="104.2" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.2" y="1070.0"></text>
</g>
<g>
<title>[AsyncWorker-2 tid=7938] (18 samples, 0.34%)</title><rect x="104.7" y="1171.0" width="4.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="107.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.run (18 samples, 0.34%)</title><rect x="104.7" y="1155.0" width="4.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="107.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18 samples, 0.34%)</title><rect x="104.7" y="1139.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="107.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (18 samples, 0.34%)</title><rect x="104.7" y="1123.0" width="4.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="107.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.06%)</title><rect x="104.7" y="1107.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="107.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.06%)</title><rect x="104.7" y="1091.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="107.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (11 samples, 0.21%)</title><rect x="105.6" y="1107.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (11 samples, 0.21%)</title><rect x="105.6" y="1091.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (9 samples, 0.17%)</title><rect x="105.6" y="1075.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="108.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.17%)</title><rect x="105.6" y="1059.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (9 samples, 0.17%)</title><rect x="105.6" y="1043.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="108.6" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.06%)</title><rect x="105.6" y="1027.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="108.6" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="105.6" y="1011.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="108.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="106.3" y="1027.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="109.3" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.11%)</title><rect x="106.3" y="1011.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="109.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="106.7" y="995.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="109.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="106.7" y="979.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="109.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="106.9" y="963.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="109.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="106.9" y="947.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="109.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="106.9" y="931.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="109.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="107.2" y="915.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="110.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="107.2" y="899.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="110.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="107.2" y="883.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="110.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="107.2" y="867.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="110.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.04%)</title><rect x="107.6" y="1075.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.04%)</title><rect x="107.6" y="1059.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="110.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.04%)</title><rect x="107.6" y="1043.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.6" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.run (3 samples, 0.06%)</title><rect x="108.1" y="1107.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="111.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$326/1879935589.run (3 samples, 0.06%)</title><rect x="108.1" y="1091.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (2 samples, 0.04%)</title><rect x="108.3" y="1075.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="111.3" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (2 samples, 0.04%)</title><rect x="108.3" y="1059.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="111.3" y="1070.0"></text>
</g>
<g>
<title>[AsyncWorker-3 tid=7925] (112 samples, 2.13%)</title><rect x="108.7" y="1171.0" width="25.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="111.7" y="1182.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (109 samples, 2.07%)</title><rect x="109.2" y="1155.0" width="24.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.2" y="1166.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (109 samples, 2.07%)</title><rect x="109.2" y="1139.0" width="24.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.2" y="1150.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (109 samples, 2.07%)</title><rect x="109.2" y="1123.0" width="24.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.2" y="1134.0">j..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.04%)</title><rect x="109.6" y="1107.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="112.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="109.6" y="1091.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="112.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 0.19%)</title><rect x="110.1" y="1107.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (10 samples, 0.19%)</title><rect x="110.1" y="1091.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="113.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (7 samples, 0.13%)</title><rect x="110.1" y="1075.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.13%)</title><rect x="110.1" y="1059.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.13%)</title><rect x="110.1" y="1043.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="113.1" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (3 samples, 0.06%)</title><rect x="110.3" y="1027.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="113.3" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.06%)</title><rect x="110.3" y="1011.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="113.3" y="1022.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="110.5" y="995.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="113.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="111.0" y="1027.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="114.0" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="111.0" y="1011.0" width="0.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="114.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="111.9" y="1075.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="114.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="111.9" y="1059.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="114.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="111.9" y="1043.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="114.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="111.9" y="1027.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="111.9" y="1011.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.run (95 samples, 1.81%)</title><rect x="112.3" y="1107.0" width="21.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.3" y="1118.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$326/1879935589.run (95 samples, 1.81%)</title><rect x="112.3" y="1091.0" width="21.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.3" y="1102.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (95 samples, 1.81%)</title><rect x="112.3" y="1075.0" width="21.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.3" y="1086.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (91 samples, 1.73%)</title><rect x="112.5" y="1059.0" width="20.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="115.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (2 samples, 0.04%)</title><rect x="112.5" y="1043.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="115.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (2 samples, 0.04%)</title><rect x="112.5" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="115.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.&lt;init&gt; (2 samples, 0.04%)</title><rect x="112.5" y="1011.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.5" y="1022.0"></text>
</g>
<g>
<title>oop_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="113.0" y="1043.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="116.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (16 samples, 0.30%)</title><rect x="113.4" y="1043.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="116.4" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.06%)</title><rect x="113.4" y="1027.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="116.4" y="1038.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.04%)</title><rect x="113.4" y="1011.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.4" y="1022.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.04%)</title><rect x="113.4" y="995.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="116.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.04%)</title><rect x="113.4" y="979.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (13 samples, 0.25%)</title><rect x="114.1" y="1027.0" width="2.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (11 samples, 0.21%)</title><rect x="114.1" y="1011.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.1" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (11 samples, 0.21%)</title><rect x="114.1" y="995.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (2 samples, 0.04%)</title><rect x="114.3" y="979.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.04%)</title><rect x="114.3" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryReleaseShared (2 samples, 0.04%)</title><rect x="114.3" y="947.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="117.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (7 samples, 0.13%)</title><rect x="114.8" y="979.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="117.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (5 samples, 0.10%)</title><rect x="115.2" y="963.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="118.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (4 samples, 0.08%)</title><rect x="115.2" y="947.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="118.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (4 samples, 0.08%)</title><rect x="115.2" y="931.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="118.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (4 samples, 0.08%)</title><rect x="115.2" y="915.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="118.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (3 samples, 0.06%)</title><rect x="115.5" y="899.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="118.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (3 samples, 0.06%)</title><rect x="115.5" y="883.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="118.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (2 samples, 0.04%)</title><rect x="115.7" y="867.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="118.7" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (2 samples, 0.04%)</title><rect x="116.6" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.6" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.04%)</title><rect x="116.6" y="995.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="116.6" y="979.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="119.6" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.04%)</title><rect x="116.6" y="963.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="119.6" y="974.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.04%)</title><rect x="116.6" y="947.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="119.6" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (2 samples, 0.04%)</title><rect x="116.6" y="931.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="119.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (11 samples, 0.21%)</title><rect x="117.0" y="1043.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.0" y="1054.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3 samples, 0.06%)</title><rect x="117.3" y="1027.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="120.3" y="1038.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (3 samples, 0.06%)</title><rect x="117.3" y="1011.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="120.3" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2 samples, 0.04%)</title><rect x="117.3" y="995.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="120.3" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (2 samples, 0.04%)</title><rect x="117.3" y="979.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.3" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (2 samples, 0.04%)</title><rect x="117.3" y="963.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="120.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (6 samples, 0.11%)</title><rect x="118.1" y="1027.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.1" y="1038.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (6 samples, 0.11%)</title><rect x="118.1" y="1011.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.1" y="1022.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (4 samples, 0.08%)</title><rect x="118.4" y="995.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="121.4" y="1006.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (2 samples, 0.04%)</title><rect x="118.8" y="979.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.8" y="990.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="118.8" y="963.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="121.8" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="118.8" y="947.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="121.8" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="118.8" y="931.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.8" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="118.8" y="915.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.8" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="118.8" y="899.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="121.8" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getResponsesFromReplicas (59 samples, 1.12%)</title><rect x="119.7" y="1043.0" width="13.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.7" y="1054.0"></text>
</g>
<g>
<title>java/net/URI.create (6 samples, 0.11%)</title><rect x="119.9" y="1027.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.9" y="1038.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (6 samples, 0.11%)</title><rect x="119.9" y="1011.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.9" y="1022.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (6 samples, 0.11%)</title><rect x="119.9" y="995.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="122.9" y="1006.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (5 samples, 0.10%)</title><rect x="120.2" y="979.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="123.2" y="990.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.08%)</title><rect x="120.4" y="963.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="123.4" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="120.8" y="947.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="123.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="120.8" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="123.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (36 samples, 0.68%)</title><rect x="122.0" y="1027.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="125.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (36 samples, 0.68%)</title><rect x="122.0" y="1011.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="125.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (36 samples, 0.68%)</title><rect x="122.0" y="995.0" width="8.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="125.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (36 samples, 0.68%)</title><rect x="122.0" y="979.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (23 samples, 0.44%)</title><rect x="122.6" y="963.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="125.6" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.04%)</title><rect x="122.6" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="125.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (16 samples, 0.30%)</title><rect x="123.5" y="947.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="126.5" y="958.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (16 samples, 0.30%)</title><rect x="123.5" y="931.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.5" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (15 samples, 0.29%)</title><rect x="123.8" y="915.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.8" y="926.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (11 samples, 0.21%)</title><rect x="123.8" y="899.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="126.8" y="910.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (4 samples, 0.08%)</title><rect x="125.1" y="883.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="128.1" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (4 samples, 0.08%)</title><rect x="125.1" y="867.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="128.1" y="878.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="125.1" y="851.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="128.1" y="862.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.04%)</title><rect x="125.6" y="851.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="128.6" y="862.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.04%)</title><rect x="126.5" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="129.5" y="910.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (2 samples, 0.04%)</title><rect x="126.5" y="883.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.5" y="894.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (2 samples, 0.04%)</title><rect x="126.5" y="867.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="129.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.04%)</title><rect x="127.1" y="947.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="130.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (5 samples, 0.10%)</title><rect x="127.8" y="963.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (5 samples, 0.10%)</title><rect x="127.8" y="947.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (5 samples, 0.10%)</title><rect x="127.8" y="931.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="130.8" y="942.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (2 samples, 0.04%)</title><rect x="128.2" y="915.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (5 samples, 0.10%)</title><rect x="128.9" y="963.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="131.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (4 samples, 0.08%)</title><rect x="128.9" y="947.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.06%)</title><rect x="129.1" y="931.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.06%)</title><rect x="129.1" y="915.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="132.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.04%)</title><rect x="129.1" y="899.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="132.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="129.1" y="883.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="129.1" y="867.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="129.1" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="132.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="129.1" y="835.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="129.1" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="132.1" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="129.1" y="803.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="132.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="129.1" y="787.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="132.1" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="129.1" y="771.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="132.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="129.1" y="755.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="132.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="129.1" y="739.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="132.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="129.1" y="723.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="132.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="129.1" y="707.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="132.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="129.1" y="691.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="132.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (6 samples, 0.11%)</title><rect x="130.0" y="1027.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="133.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (6 samples, 0.11%)</title><rect x="130.0" y="1011.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="133.0" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5 samples, 0.10%)</title><rect x="130.3" y="995.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.3" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4 samples, 0.08%)</title><rect x="130.3" y="979.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="133.3" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.06%)</title><rect x="130.5" y="963.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="133.5" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (3 samples, 0.06%)</title><rect x="130.5" y="947.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="133.5" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.06%)</title><rect x="130.5" y="931.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (3 samples, 0.06%)</title><rect x="131.4" y="1027.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="134.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (3 samples, 0.06%)</title><rect x="131.4" y="1011.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="134.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (2 samples, 0.04%)</title><rect x="131.4" y="995.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="134.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getFirstResponses (4 samples, 0.08%)</title><rect x="132.1" y="1027.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="135.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (3 samples, 0.06%)</title><rect x="132.3" y="1011.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="135.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (2 samples, 0.04%)</title><rect x="132.3" y="995.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="135.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (2 samples, 0.04%)</title><rect x="132.3" y="979.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="135.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (3 samples, 0.06%)</title><rect x="133.0" y="1059.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.0" y="1070.0"></text>
</g>
<g>
<title>[AsyncWorker-3 tid=7941] (20 samples, 0.38%)</title><rect x="133.9" y="1171.0" width="4.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="136.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.run (18 samples, 0.34%)</title><rect x="134.3" y="1155.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="137.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (18 samples, 0.34%)</title><rect x="134.3" y="1139.0" width="4.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="137.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (18 samples, 0.34%)</title><rect x="134.3" y="1123.0" width="4.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="137.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (10 samples, 0.19%)</title><rect x="135.0" y="1107.0" width="2.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="138.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (10 samples, 0.19%)</title><rect x="135.0" y="1091.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="138.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 0.15%)</title><rect x="135.0" y="1075.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="138.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 0.13%)</title><rect x="135.2" y="1059.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="138.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 0.13%)</title><rect x="135.2" y="1043.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="138.2" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.04%)</title><rect x="135.2" y="1027.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="138.2" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="135.2" y="1011.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="138.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="135.7" y="1027.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="138.7" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.10%)</title><rect x="135.7" y="1011.0" width="1.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="138.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="136.1" y="995.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="139.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="136.1" y="979.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="139.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="136.1" y="963.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="139.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="136.1" y="947.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="139.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="136.1" y="931.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="139.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="136.1" y="915.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="139.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="136.3" y="899.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="139.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="136.3" y="883.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="139.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="136.3" y="867.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="139.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="136.8" y="1075.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="136.8" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="139.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="136.8" y="1043.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="136.8" y="1027.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="139.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="136.8" y="1011.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="139.8" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="136.8" y="995.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="139.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.run (5 samples, 0.10%)</title><rect x="137.2" y="1107.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="140.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$326/1879935589.run (5 samples, 0.10%)</title><rect x="137.2" y="1091.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="140.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (5 samples, 0.10%)</title><rect x="137.2" y="1075.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="140.2" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (3 samples, 0.06%)</title><rect x="137.2" y="1059.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="140.2" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.executeIfProxied (2 samples, 0.04%)</title><rect x="137.4" y="1043.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="140.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (2 samples, 0.04%)</title><rect x="137.4" y="1027.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="140.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (2 samples, 0.04%)</title><rect x="137.4" y="1011.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="140.4" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (2 samples, 0.04%)</title><rect x="137.9" y="1059.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="140.9" y="1070.0"></text>
</g>
<g>
<title>[AsyncWorker-3 tid=7942] (20 samples, 0.38%)</title><rect x="138.3" y="1171.0" width="4.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="141.3" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.06%)</title><rect x="138.3" y="1155.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="141.3" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="138.6" y="1139.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="141.6" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="138.6" y="1123.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="141.6" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="138.6" y="1107.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="141.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/Thread.run (17 samples, 0.32%)</title><rect x="139.0" y="1155.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="142.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (17 samples, 0.32%)</title><rect x="139.0" y="1139.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="142.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (17 samples, 0.32%)</title><rect x="139.0" y="1123.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="142.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.04%)</title><rect x="139.5" y="1107.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="142.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="139.5" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="142.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 0.11%)</title><rect x="139.9" y="1107.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="142.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (6 samples, 0.11%)</title><rect x="139.9" y="1091.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="142.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.06%)</title><rect x="140.1" y="1075.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="143.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.06%)</title><rect x="140.1" y="1059.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="143.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="140.1" y="1043.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="143.1" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.04%)</title><rect x="140.1" y="1027.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="143.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.run (7 samples, 0.13%)</title><rect x="141.3" y="1107.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$326/1879935589.run (7 samples, 0.13%)</title><rect x="141.3" y="1091.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.3" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$0 (7 samples, 0.13%)</title><rect x="141.3" y="1075.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="144.3" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.get (6 samples, 0.11%)</title><rect x="141.5" y="1059.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="144.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.executeIfProxied (5 samples, 0.10%)</title><rect x="141.7" y="1043.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="144.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (4 samples, 0.08%)</title><rect x="141.9" y="1027.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="144.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (4 samples, 0.08%)</title><rect x="141.9" y="1011.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="144.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.08%)</title><rect x="141.9" y="995.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="144.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.08%)</title><rect x="141.9" y="979.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="144.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (4 samples, 0.08%)</title><rect x="141.9" y="963.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="144.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.08%)</title><rect x="141.9" y="947.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="144.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.08%)</title><rect x="141.9" y="931.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="144.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.08%)</title><rect x="141.9" y="915.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="144.9" y="926.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="142.2" y="899.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="145.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="142.2" y="883.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="145.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="142.2" y="867.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="145.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="142.2" y="851.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="145.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="142.2" y="835.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="145.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="142.2" y="819.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="145.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="142.2" y="803.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="145.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="142.2" y="787.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="145.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="142.2" y="771.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="145.2" y="782.0"></text>
</g>
<g>
<title>[CompletableFutureDelayScheduler tid=7931] (4 samples, 0.08%)</title><rect x="142.8" y="1171.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="145.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 0.08%)</title><rect x="142.8" y="1155.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="145.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 0.08%)</title><rect x="142.8" y="1139.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="145.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 0.08%)</title><rect x="142.8" y="1123.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="145.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.08%)</title><rect x="142.8" y="1107.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="145.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (4 samples, 0.08%)</title><rect x="142.8" y="1091.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (4 samples, 0.08%)</title><rect x="142.8" y="1075.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (4 samples, 0.08%)</title><rect x="142.8" y="1059.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="145.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (3 samples, 0.06%)</title><rect x="143.1" y="1043.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="146.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.06%)</title><rect x="143.1" y="1027.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="146.1" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.04%)</title><rect x="143.3" y="1011.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="146.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="143.3" y="995.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="146.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="143.3" y="979.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="146.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="143.3" y="963.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="146.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="143.3" y="947.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="146.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="143.3" y="931.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="146.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="143.3" y="915.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="146.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="143.3" y="899.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="146.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="143.3" y="883.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="146.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="143.3" y="867.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="146.3" y="878.0"></text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-3 tid=7937] (334 samples, 6.35%)</title><rect x="143.7" y="1171.0" width="75.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="146.7" y="1182.0">[ForkJoi..</text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (2 samples, 0.04%)</title><rect x="143.7" y="1155.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="146.7" y="1166.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.04%)</title><rect x="143.7" y="1139.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="146.7" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="143.7" y="1123.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="146.7" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="143.7" y="1107.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="146.7" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="144.4" y="1155.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="147.4" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.04%)</title><rect x="144.4" y="1139.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="147.4" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="144.4" y="1123.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="147.4" y="1134.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.06%)</title><rect x="145.1" y="1155.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="148.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (324 samples, 6.16%)</title><rect x="145.7" y="1155.0" width="72.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="148.7" y="1166.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (324 samples, 6.16%)</title><rect x="145.7" y="1139.0" width="72.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.7" y="1150.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (288 samples, 5.48%)</title><rect x="145.7" y="1123.0" width="64.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="148.7" y="1134.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (285 samples, 5.42%)</title><rect x="146.4" y="1107.0" width="64.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.4" y="1118.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (3 samples, 0.06%)</title><rect x="146.4" y="1091.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (2 samples, 0.04%)</title><rect x="146.6" y="1075.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAndSet (2 samples, 0.04%)</title><rect x="146.6" y="1059.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="149.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.runtimeTypeCheck (2 samples, 0.04%)</title><rect x="146.6" y="1043.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (282 samples, 5.36%)</title><rect x="147.1" y="1091.0" width="63.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.1" y="1102.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (123 samples, 2.34%)</title><rect x="147.1" y="1075.0" width="27.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.1" y="1086.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (123 samples, 2.34%)</title><rect x="147.1" y="1059.0" width="27.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="150.1" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="147.3" y="1043.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="150.3" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$276/573076665.run (120 samples, 2.28%)</title><rect x="147.8" y="1043.0" width="26.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="150.8" y="1054.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$executeIfProxied$10 (120 samples, 2.28%)</title><rect x="147.8" y="1027.0" width="26.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="150.8" y="1038.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (38 samples, 0.72%)</title><rect x="148.2" y="1011.0" width="8.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.06%)</title><rect x="148.4" y="995.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.4" y="1006.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.06%)</title><rect x="148.4" y="979.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="151.4" y="990.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.06%)</title><rect x="148.4" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.4" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.06%)</title><rect x="148.4" y="947.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.4" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.04%)</title><rect x="148.4" y="931.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="151.4" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.04%)</title><rect x="148.4" y="915.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (34 samples, 0.65%)</title><rect x="149.1" y="995.0" width="7.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.1" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (26 samples, 0.49%)</title><rect x="149.1" y="979.0" width="5.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (25 samples, 0.48%)</title><rect x="149.3" y="963.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="152.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.08%)</title><rect x="149.8" y="947.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.08%)</title><rect x="149.8" y="931.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="152.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.08%)</title><rect x="149.8" y="915.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="152.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (3 samples, 0.06%)</title><rect x="150.0" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (14 samples, 0.27%)</title><rect x="150.7" y="947.0" width="3.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="153.7" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (12 samples, 0.23%)</title><rect x="151.1" y="931.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="154.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (10 samples, 0.19%)</title><rect x="151.1" y="915.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (10 samples, 0.19%)</title><rect x="151.1" y="899.0" width="2.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 0.19%)</title><rect x="151.1" y="883.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="154.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (9 samples, 0.17%)</title><rect x="151.4" y="867.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (8 samples, 0.15%)</title><rect x="151.6" y="851.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="154.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (7 samples, 0.13%)</title><rect x="151.8" y="835.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.13%)</title><rect x="151.8" y="819.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.8" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.10%)</title><rect x="152.3" y="803.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.3" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.10%)</title><rect x="152.3" y="787.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="155.3" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.08%)</title><rect x="152.3" y="771.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="155.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="153.4" y="915.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="156.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="153.4" y="899.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="156.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.tailMap (2 samples, 0.04%)</title><rect x="153.4" y="883.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.4" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (5 samples, 0.10%)</title><rect x="153.8" y="947.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.8" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.06%)</title><rect x="153.8" y="931.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="156.8" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="153.8" y="915.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="156.8" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (2 samples, 0.04%)</title><rect x="154.5" y="931.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="157.5" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="154.5" y="915.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.5" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.04%)</title><rect x="154.5" y="899.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="157.5" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (8 samples, 0.15%)</title><rect x="154.9" y="979.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="157.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (7 samples, 0.13%)</title><rect x="155.2" y="963.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="158.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (7 samples, 0.13%)</title><rect x="155.2" y="947.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.2" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (7 samples, 0.13%)</title><rect x="155.2" y="931.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="158.2" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (7 samples, 0.13%)</title><rect x="155.2" y="915.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="158.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (7 samples, 0.13%)</title><rect x="155.2" y="899.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.2" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.08%)</title><rect x="155.2" y="883.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="158.2" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.04%)</title><rect x="155.2" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.2" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.04%)</title><rect x="155.6" y="867.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="158.6" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="155.6" y="851.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="158.6" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table$$Lambda$330/1708482040.apply (3 samples, 0.06%)</title><rect x="156.1" y="883.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.1" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Row.getKey (3 samples, 0.06%)</title><rect x="156.1" y="867.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.1" y="878.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (3 samples, 0.06%)</title><rect x="156.1" y="851.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="159.1" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (3 samples, 0.06%)</title><rect x="156.1" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="159.1" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="156.1" y="819.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="159.1" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="156.1" y="803.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="159.1" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.06%)</title><rect x="156.1" y="787.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="159.1" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.06%)</title><rect x="156.1" y="771.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="159.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="156.1" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="159.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.sendResponse (69 samples, 1.31%)</title><rect x="156.7" y="1011.0" width="15.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="159.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (69 samples, 1.31%)</title><rect x="156.7" y="995.0" width="15.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="159.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (64 samples, 1.22%)</title><rect x="157.2" y="979.0" width="14.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="157.2" y="963.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="160.2" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.04%)</title><rect x="157.2" y="947.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (62 samples, 1.18%)</title><rect x="157.6" y="963.0" width="14.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="160.6" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (62 samples, 1.18%)</title><rect x="157.6" y="947.0" width="14.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="160.6" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (61 samples, 1.16%)</title><rect x="157.9" y="931.0" width="13.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="160.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (61 samples, 1.16%)</title><rect x="157.9" y="915.0" width="13.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="160.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="158.1" y="899.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="161.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="158.1" y="883.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="161.1" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.04%)</title><rect x="158.1" y="867.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="161.1" y="878.0"></text>
</g>
<g>
<title>__send (58 samples, 1.10%)</title><rect x="158.5" y="899.0" width="13.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="161.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 1.10%)</title><rect x="158.5" y="883.0" width="13.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="161.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 1.10%)</title><rect x="158.5" y="867.0" width="13.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="161.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.05%)</title><rect x="159.2" y="851.0" width="12.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="162.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.05%)</title><rect x="159.2" y="835.0" width="12.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="162.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.05%)</title><rect x="159.2" y="819.0" width="12.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="162.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.05%)</title><rect x="159.2" y="803.0" width="12.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="162.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.03%)</title><rect x="159.4" y="787.0" width="12.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="162.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.03%)</title><rect x="159.4" y="771.0" width="12.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="162.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.01%)</title><rect x="159.7" y="755.0" width="11.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="162.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.01%)</title><rect x="159.7" y="739.0" width="11.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="162.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.01%)</title><rect x="159.7" y="723.0" width="11.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="162.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="160.3" y="707.0" width="11.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="163.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.91%)</title><rect x="160.8" y="691.0" width="10.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="163.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.89%)</title><rect x="161.0" y="675.0" width="10.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="164.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.89%)</title><rect x="161.0" y="659.0" width="10.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="164.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.87%)</title><rect x="161.2" y="643.0" width="10.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="164.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.84%)</title><rect x="161.7" y="627.0" width="9.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="164.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.76%)</title><rect x="162.6" y="611.0" width="9.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="165.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.74%)</title><rect x="162.8" y="595.0" width="8.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="165.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="163.5" y="579.0" width="8.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="166.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="164.1" y="563.0" width="7.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="167.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.59%)</title><rect x="164.6" y="547.0" width="7.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="167.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.59%)</title><rect x="164.6" y="531.0" width="7.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="167.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.57%)</title><rect x="164.8" y="515.0" width="6.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="167.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.55%)</title><rect x="165.0" y="499.0" width="6.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="168.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.55%)</title><rect x="165.0" y="483.0" width="6.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="168.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.53%)</title><rect x="165.3" y="467.0" width="6.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="168.3" y="478.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.51%)</title><rect x="165.5" y="451.0" width="6.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="168.5" y="462.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.51%)</title><rect x="165.5" y="435.0" width="6.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="168.5" y="446.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.51%)</title><rect x="165.5" y="419.0" width="6.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="168.5" y="430.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.51%)</title><rect x="165.5" y="403.0" width="6.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="168.5" y="414.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.51%)</title><rect x="165.5" y="387.0" width="6.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="168.5" y="398.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.44%)</title><rect x="166.4" y="371.0" width="5.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="169.4" y="382.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.42%)</title><rect x="166.6" y="355.0" width="5.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="169.6" y="366.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.38%)</title><rect x="167.1" y="339.0" width="4.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="170.1" y="350.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.32%)</title><rect x="167.7" y="323.0" width="3.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="170.7" y="334.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="168.9" y="307.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="171.9" y="318.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="169.1" y="291.0" width="2.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="172.1" y="302.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="169.1" y="275.0" width="2.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="172.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="171.6" y="979.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="174.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (4 samples, 0.08%)</title><rect x="172.2" y="1011.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="175.2" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.duplicate (2 samples, 0.04%)</title><rect x="172.2" y="995.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="175.2" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (7 samples, 0.13%)</title><rect x="173.1" y="1011.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/604125138.linkToTargetMethod (4 samples, 0.08%)</title><rect x="173.3" y="995.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="176.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2083261454.invoke (4 samples, 0.08%)</title><rect x="173.3" y="979.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="176.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/306123060.invokeStatic (2 samples, 0.04%)</title><rect x="173.3" y="963.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="176.3" y="974.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.04%)</title><rect x="173.3" y="947.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="176.3" y="958.0"></text>
</g>
<g>
<title>java/lang/Long.getChars (2 samples, 0.04%)</title><rect x="173.3" y="931.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="176.3" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="174.2" y="995.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="177.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (159 samples, 3.02%)</title><rect x="174.7" y="1075.0" width="35.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="177.7" y="1086.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (159 samples, 3.02%)</title><rect x="174.7" y="1059.0" width="35.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="177.7" y="1070.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (19 samples, 0.36%)</title><rect x="174.9" y="1043.0" width="4.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="177.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (18 samples, 0.34%)</title><rect x="175.1" y="1027.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="178.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (14 samples, 0.27%)</title><rect x="176.0" y="1011.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (14 samples, 0.27%)</title><rect x="176.0" y="995.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="179.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (6 samples, 0.11%)</title><rect x="176.0" y="979.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="179.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (4 samples, 0.08%)</title><rect x="176.0" y="963.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="179.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (3 samples, 0.06%)</title><rect x="176.3" y="947.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="179.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (3 samples, 0.06%)</title><rect x="176.3" y="931.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (3 samples, 0.06%)</title><rect x="176.3" y="915.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="179.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.tryTerminate (2 samples, 0.04%)</title><rect x="176.9" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="179.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.15%)</title><rect x="177.4" y="979.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="180.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.10%)</title><rect x="177.4" y="963.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.10%)</title><rect x="177.4" y="947.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (5 samples, 0.10%)</title><rect x="177.4" y="931.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="180.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.08%)</title><rect x="177.6" y="915.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.08%)</title><rect x="177.6" y="899.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="180.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.08%)</title><rect x="177.6" y="883.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="180.6" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="177.6" y="867.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="180.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="177.8" y="851.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="180.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="177.8" y="835.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="180.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="177.8" y="819.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="180.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="177.8" y="803.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="180.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="177.8" y="787.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="180.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="178.1" y="771.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="181.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="178.1" y="755.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="181.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="178.1" y="739.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="181.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.06%)</title><rect x="178.5" y="963.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (139 samples, 2.64%)</title><rect x="179.2" y="1043.0" width="31.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.2" y="1054.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="179.4" y="1027.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="179.4" y="1011.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="182.4" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$331/661785033.accept (65 samples, 1.24%)</title><rect x="179.9" y="1027.0" width="14.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="182.9" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$get$0 (65 samples, 1.24%)</title><rect x="179.9" y="1011.0" width="14.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.9" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="179.9" y="995.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="182.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.sendResponse (49 samples, 0.93%)</title><rect x="180.5" y="995.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (49 samples, 0.93%)</title><rect x="180.5" y="979.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="183.5" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (46 samples, 0.87%)</title><rect x="180.8" y="963.0" width="10.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="183.8" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (46 samples, 0.87%)</title><rect x="180.8" y="947.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.8" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (46 samples, 0.87%)</title><rect x="180.8" y="931.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="183.8" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (46 samples, 0.87%)</title><rect x="180.8" y="915.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.8" y="926.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (45 samples, 0.86%)</title><rect x="181.0" y="899.0" width="10.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.0" y="910.0"></text>
</g>
<g>
<title>__send (43 samples, 0.82%)</title><rect x="181.4" y="883.0" width="9.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="184.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.82%)</title><rect x="181.4" y="867.0" width="9.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="184.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.82%)</title><rect x="181.4" y="851.0" width="9.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="184.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.82%)</title><rect x="181.4" y="835.0" width="9.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="184.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.82%)</title><rect x="181.4" y="819.0" width="9.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="184.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.80%)</title><rect x="181.6" y="803.0" width="9.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="184.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.80%)</title><rect x="181.6" y="787.0" width="9.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="184.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.80%)</title><rect x="181.6" y="771.0" width="9.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="184.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.80%)</title><rect x="181.6" y="755.0" width="9.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="184.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.76%)</title><rect x="182.1" y="739.0" width="9.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="185.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.74%)</title><rect x="182.3" y="723.0" width="8.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="185.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.72%)</title><rect x="182.5" y="707.0" width="8.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="185.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.65%)</title><rect x="183.4" y="691.0" width="7.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="186.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.65%)</title><rect x="183.4" y="675.0" width="7.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="186.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="183.7" y="659.0" width="7.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="186.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="183.7" y="643.0" width="7.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="186.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.61%)</title><rect x="183.9" y="627.0" width="7.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="186.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.59%)</title><rect x="184.1" y="611.0" width="7.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="187.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.59%)</title><rect x="184.1" y="595.0" width="7.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="187.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.59%)</title><rect x="184.1" y="579.0" width="7.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="187.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.53%)</title><rect x="184.8" y="563.0" width="6.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="187.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.51%)</title><rect x="185.0" y="547.0" width="6.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="188.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.49%)</title><rect x="185.2" y="531.0" width="5.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="188.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="185.7" y="515.0" width="5.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="188.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="185.7" y="499.0" width="5.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="188.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="185.7" y="483.0" width="5.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="188.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="185.7" y="467.0" width="5.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="188.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="185.7" y="451.0" width="5.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="188.7" y="462.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="185.7" y="435.0" width="5.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="188.7" y="446.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="185.7" y="419.0" width="5.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="188.7" y="430.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.42%)</title><rect x="186.1" y="403.0" width="5.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="189.1" y="414.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.40%)</title><rect x="186.4" y="387.0" width="4.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="189.4" y="398.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.38%)</title><rect x="186.6" y="371.0" width="4.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="189.6" y="382.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.30%)</title><rect x="187.5" y="355.0" width="3.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="190.5" y="366.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.25%)</title><rect x="188.2" y="339.0" width="2.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="191.2" y="350.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="188.6" y="323.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="191.6" y="334.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="188.8" y="307.0" width="2.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="191.8" y="318.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="189.3" y="291.0" width="1.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="192.3" y="302.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="189.5" y="275.0" width="1.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="192.5" y="286.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="189.5" y="259.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="192.5" y="270.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="190.6" y="243.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="193.6" y="254.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="190.6" y="227.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="193.6" y="238.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="191.1" y="963.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (7 samples, 0.13%)</title><rect x="191.7" y="995.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="194.7" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (6 samples, 0.11%)</title><rect x="191.7" y="979.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="194.7" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (4 samples, 0.08%)</title><rect x="191.7" y="963.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="194.7" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (4 samples, 0.08%)</title><rect x="191.7" y="947.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="194.7" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.04%)</title><rect x="192.0" y="931.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="195.0" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="192.0" y="915.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="195.0" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.04%)</title><rect x="192.0" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.0" y="910.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.04%)</title><rect x="192.6" y="963.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="195.6" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.merge (4 samples, 0.08%)</title><rect x="193.3" y="995.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="196.3" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (2 samples, 0.04%)</title><rect x="193.5" y="979.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils$$Lambda$139/1298738395.accept (71 samples, 1.35%)</title><rect x="194.4" y="1027.0" width="16.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="197.4" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.lambda$getFirstResponses$0 (71 samples, 1.35%)</title><rect x="194.4" y="1011.0" width="16.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="197.4" y="1022.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (66 samples, 1.25%)</title><rect x="194.9" y="995.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="197.9" y="1006.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (66 samples, 1.25%)</title><rect x="194.9" y="979.0" width="14.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.9" y="990.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (64 samples, 1.22%)</title><rect x="194.9" y="963.0" width="14.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="197.9" y="974.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (61 samples, 1.16%)</title><rect x="195.1" y="947.0" width="13.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="198.1" y="958.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (61 samples, 1.16%)</title><rect x="195.1" y="931.0" width="13.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="198.1" y="942.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (61 samples, 1.16%)</title><rect x="195.1" y="915.0" width="13.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="198.1" y="926.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (59 samples, 1.12%)</title><rect x="195.1" y="899.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.1" y="910.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (53 samples, 1.01%)</title><rect x="195.1" y="883.0" width="11.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.1" y="894.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (53 samples, 1.01%)</title><rect x="195.1" y="867.0" width="11.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.1" y="878.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (6 samples, 0.11%)</title><rect x="195.1" y="851.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="198.1" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (4 samples, 0.08%)</title><rect x="195.1" y="835.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="198.1" y="846.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.08%)</title><rect x="195.1" y="819.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="198.1" y="830.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (4 samples, 0.08%)</title><rect x="195.1" y="803.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="198.1" y="814.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (3 samples, 0.06%)</title><rect x="195.3" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.3" y="798.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (3 samples, 0.06%)</title><rect x="195.3" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.toString (2 samples, 0.04%)</title><rect x="195.6" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.6" y="766.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getThreadName (2 samples, 0.04%)</title><rect x="196.0" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="199.0" y="846.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (2 samples, 0.04%)</title><rect x="196.0" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.0" y="830.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (22 samples, 0.42%)</title><rect x="196.5" y="851.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.5" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (18 samples, 0.34%)</title><rect x="196.7" y="835.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.7" y="846.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (18 samples, 0.34%)</title><rect x="196.7" y="819.0" width="4.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="199.7" y="830.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (18 samples, 0.34%)</title><rect x="196.7" y="803.0" width="4.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="199.7" y="814.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (2 samples, 0.04%)</title><rect x="196.7" y="787.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="199.7" y="798.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (16 samples, 0.30%)</title><rect x="197.1" y="787.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.1" y="798.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (15 samples, 0.29%)</title><rect x="197.4" y="771.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="200.4" y="782.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (15 samples, 0.29%)</title><rect x="197.4" y="755.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.4" y="766.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (7 samples, 0.13%)</title><rect x="197.4" y="739.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="200.4" y="750.0"></text>
</g>
<g>
<title>writeBytes (5 samples, 0.10%)</title><rect x="197.8" y="723.0" width="1.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="200.8" y="734.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.04%)</title><rect x="198.3" y="707.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="201.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="198.9" y="739.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="201.9" y="750.0"></text>
</g>
<g>
<title>write (8 samples, 0.15%)</title><rect x="198.9" y="723.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="201.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="198.9" y="707.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="201.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="198.9" y="691.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="201.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="199.2" y="675.0" width="1.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="202.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="199.2" y="659.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="202.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="199.2" y="643.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="202.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="199.8" y="627.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="202.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="199.8" y="611.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="202.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="200.0" y="595.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="203.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="200.0" y="579.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="203.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="200.0" y="563.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="203.0" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.06%)</title><rect x="200.7" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="203.7" y="846.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (25 samples, 0.48%)</title><rect x="201.4" y="851.0" width="5.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.4" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (24 samples, 0.46%)</title><rect x="201.4" y="835.0" width="5.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="204.4" y="846.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (24 samples, 0.46%)</title><rect x="201.4" y="819.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="204.4" y="830.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (14 samples, 0.27%)</title><rect x="201.8" y="803.0" width="3.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="204.8" y="814.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (14 samples, 0.27%)</title><rect x="201.8" y="787.0" width="3.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="204.8" y="798.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (14 samples, 0.27%)</title><rect x="201.8" y="771.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.8" y="782.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (14 samples, 0.27%)</title><rect x="201.8" y="755.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="204.8" y="766.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (9 samples, 0.17%)</title><rect x="202.3" y="739.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="205.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.length (2 samples, 0.04%)</title><rect x="202.3" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="205.3" y="734.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (7 samples, 0.13%)</title><rect x="202.7" y="723.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="205.7" y="734.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (5 samples, 0.10%)</title><rect x="203.2" y="707.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.2" y="718.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (5 samples, 0.10%)</title><rect x="203.2" y="691.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.2" y="702.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (3 samples, 0.06%)</title><rect x="203.4" y="675.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.4" y="686.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (3 samples, 0.06%)</title><rect x="204.3" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.3" y="750.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (3 samples, 0.06%)</title><rect x="204.3" y="723.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="207.3" y="734.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (3 samples, 0.06%)</title><rect x="204.3" y="707.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="207.3" y="718.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (3 samples, 0.06%)</title><rect x="204.3" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="207.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.15%)</title><rect x="205.0" y="803.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.0" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (8 samples, 0.15%)</title><rect x="205.0" y="787.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.0" y="798.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.10%)</title><rect x="205.0" y="771.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="208.0" y="782.0"></text>
</g>
<g>
<title>java/lang/Boolean.equals (2 samples, 0.04%)</title><rect x="207.2" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="210.2" y="894.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="207.7" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="210.7" y="894.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/COWArrayList.asTypedArray (2 samples, 0.04%)</title><rect x="208.3" y="899.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="211.3" y="910.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/COWArrayList.refreshCopyIfNecessary (2 samples, 0.04%)</title><rect x="208.3" y="883.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.3" y="894.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/COWArrayList.isFresh (2 samples, 0.04%)</title><rect x="208.3" y="867.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.3" y="878.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (2 samples, 0.04%)</title><rect x="208.8" y="947.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.8" y="958.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/LoggerContext.getTurboFilterChainDecision_1 (2 samples, 0.04%)</title><rect x="209.2" y="963.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="212.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (3 samples, 0.06%)</title><rect x="209.7" y="995.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (19 samples, 0.36%)</title><rect x="210.4" y="1123.0" width="4.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (19 samples, 0.36%)</title><rect x="210.4" y="1107.0" width="4.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="213.4" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.15%)</title><rect x="210.4" y="1091.0" width="1.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="213.4" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="211.5" y="1075.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="214.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="212.2" y="1091.0" width="2.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="215.2" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (11 samples, 0.21%)</title><rect x="212.2" y="1075.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="215.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="212.8" y="1059.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="215.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="212.8" y="1043.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="215.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="213.1" y="1027.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="216.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="213.1" y="1011.0" width="1.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="216.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="213.5" y="995.0" width="1.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="216.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="213.5" y="979.0" width="1.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="216.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="214.0" y="963.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="217.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="214.0" y="947.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="217.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="214.0" y="931.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="217.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (17 samples, 0.32%)</title><rect x="214.6" y="1123.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="217.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (17 samples, 0.32%)</title><rect x="214.6" y="1107.0" width="3.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="217.6" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Park (8 samples, 0.15%)</title><rect x="215.3" y="1091.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="218.3" y="1102.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="215.5" y="1075.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="218.5" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.11%)</title><rect x="217.1" y="1091.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="220.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="217.5" y="1075.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="220.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="217.5" y="1059.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="220.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="217.5" y="1043.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="220.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="217.5" y="1027.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="220.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="217.8" y="1011.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="220.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="217.8" y="995.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="220.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="217.8" y="979.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="220.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="218.0" y="963.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="221.0" y="974.0"></text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-5 tid=7935] (335 samples, 6.37%)</title><rect x="218.7" y="1171.0" width="75.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="221.7" y="1182.0">[ForkJoi..</text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.06%)</title><rect x="219.1" y="1155.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="222.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (329 samples, 6.26%)</title><rect x="219.8" y="1155.0" width="73.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="222.8" y="1166.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (329 samples, 6.26%)</title><rect x="219.8" y="1139.0" width="73.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="222.8" y="1150.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (295 samples, 5.61%)</title><rect x="220.0" y="1123.0" width="66.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="223.0" y="1134.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (292 samples, 5.55%)</title><rect x="220.5" y="1107.0" width="65.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="223.5" y="1118.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (4 samples, 0.08%)</title><rect x="220.5" y="1091.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="223.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (2 samples, 0.04%)</title><rect x="220.9" y="1075.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="223.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAndSet (2 samples, 0.04%)</title><rect x="220.9" y="1059.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="223.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.runtimeTypeCheck (2 samples, 0.04%)</title><rect x="220.9" y="1043.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="223.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (287 samples, 5.46%)</title><rect x="221.6" y="1091.0" width="64.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="224.6" y="1102.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (134 samples, 2.55%)</title><rect x="221.6" y="1075.0" width="30.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="224.6" y="1086.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (134 samples, 2.55%)</title><rect x="221.6" y="1059.0" width="30.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.6" y="1070.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="222.3" y="1043.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="225.3" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$276/573076665.run (129 samples, 2.45%)</title><rect x="222.7" y="1043.0" width="29.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="225.7" y="1054.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$executeIfProxied$10 (128 samples, 2.43%)</title><rect x="222.9" y="1027.0" width="28.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="225.9" y="1038.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (44 samples, 0.84%)</title><rect x="223.2" y="1011.0" width="9.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="226.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (39 samples, 0.74%)</title><rect x="223.8" y="995.0" width="8.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="226.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (33 samples, 0.63%)</title><rect x="224.1" y="979.0" width="7.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="227.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (33 samples, 0.63%)</title><rect x="224.1" y="963.0" width="7.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="227.1" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (25 samples, 0.48%)</title><rect x="224.5" y="947.0" width="5.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.5" y="958.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (2 samples, 0.04%)</title><rect x="224.5" y="931.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.5" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="225.2" y="931.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="228.2" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="225.2" y="915.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="228.2" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="225.2" y="899.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="228.2" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="225.2" y="883.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.2" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (20 samples, 0.38%)</title><rect x="225.6" y="931.0" width="4.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="228.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (17 samples, 0.32%)</title><rect x="226.1" y="915.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (17 samples, 0.32%)</title><rect x="226.1" y="899.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="229.1" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (17 samples, 0.32%)</title><rect x="226.1" y="883.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="229.1" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (3 samples, 0.06%)</title><rect x="226.3" y="867.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="229.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (3 samples, 0.06%)</title><rect x="226.3" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="229.3" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.06%)</title><rect x="226.3" y="835.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="229.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (13 samples, 0.25%)</title><rect x="227.0" y="867.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="230.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (13 samples, 0.25%)</title><rect x="227.0" y="851.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (3 samples, 0.06%)</title><rect x="227.0" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="230.0" y="846.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.06%)</title><rect x="227.0" y="819.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.0" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (3 samples, 0.06%)</title><rect x="227.0" y="803.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="230.0" y="814.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.06%)</title><rect x="227.0" y="787.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="230.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (10 samples, 0.19%)</title><rect x="227.6" y="835.0" width="2.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="230.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (7 samples, 0.13%)</title><rect x="228.3" y="819.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="231.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (5 samples, 0.10%)</title><rect x="228.8" y="803.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.8" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (4 samples, 0.08%)</title><rect x="229.0" y="787.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="232.0" y="798.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (4 samples, 0.08%)</title><rect x="229.0" y="771.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="232.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (6 samples, 0.11%)</title><rect x="230.1" y="947.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="233.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.10%)</title><rect x="230.3" y="931.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="233.3" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.10%)</title><rect x="230.3" y="915.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="233.3" y="926.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.06%)</title><rect x="230.8" y="899.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="233.8" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.06%)</title><rect x="230.8" y="883.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="233.8" y="894.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (5 samples, 0.10%)</title><rect x="231.5" y="979.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.10%)</title><rect x="231.5" y="963.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="234.5" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.10%)</title><rect x="231.5" y="947.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="234.5" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.10%)</title><rect x="231.5" y="931.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.5" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5 samples, 0.10%)</title><rect x="231.5" y="915.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="234.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.10%)</title><rect x="231.5" y="899.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="234.5" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (3 samples, 0.06%)</title><rect x="231.7" y="883.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="234.7" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (3 samples, 0.06%)</title><rect x="231.7" y="867.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="234.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.next (3 samples, 0.06%)</title><rect x="231.7" y="851.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.advance (3 samples, 0.06%)</title><rect x="231.7" y="835.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="234.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.ascend (3 samples, 0.06%)</title><rect x="231.7" y="819.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="234.7" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Row.getKey (2 samples, 0.04%)</title><rect x="232.6" y="995.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="235.6" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.sendResponse (71 samples, 1.35%)</title><rect x="233.0" y="1011.0" width="16.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="236.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (71 samples, 1.35%)</title><rect x="233.0" y="995.0" width="16.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (68 samples, 1.29%)</title><rect x="233.3" y="979.0" width="15.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.3" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="233.3" y="963.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="236.3" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (66 samples, 1.25%)</title><rect x="233.7" y="963.0" width="14.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.7" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (66 samples, 1.25%)</title><rect x="233.7" y="947.0" width="14.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="236.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (66 samples, 1.25%)</title><rect x="233.7" y="931.0" width="14.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="236.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (66 samples, 1.25%)</title><rect x="233.7" y="915.0" width="14.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="236.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="233.9" y="899.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="236.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="233.9" y="883.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="236.9" y="894.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.04%)</title><rect x="233.9" y="867.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="236.9" y="878.0"></text>
</g>
<g>
<title>__send (63 samples, 1.20%)</title><rect x="234.4" y="899.0" width="14.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="237.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 1.20%)</title><rect x="234.4" y="883.0" width="14.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="237.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 1.20%)</title><rect x="234.4" y="867.0" width="14.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="237.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 1.20%)</title><rect x="234.4" y="851.0" width="14.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="237.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 1.20%)</title><rect x="234.4" y="835.0" width="14.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="237.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 1.20%)</title><rect x="234.4" y="819.0" width="14.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="237.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.18%)</title><rect x="234.6" y="803.0" width="13.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="237.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.18%)</title><rect x="234.6" y="787.0" width="13.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="237.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 1.16%)</title><rect x="234.8" y="771.0" width="13.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="237.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.05%)</title><rect x="236.2" y="755.0" width="12.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="239.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.99%)</title><rect x="236.8" y="739.0" width="11.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="239.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="237.3" y="723.0" width="11.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="240.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.91%)</title><rect x="237.7" y="707.0" width="10.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="240.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.87%)</title><rect x="238.2" y="691.0" width="10.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="241.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.82%)</title><rect x="238.9" y="675.0" width="9.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="241.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.80%)</title><rect x="239.1" y="659.0" width="9.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="242.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.80%)</title><rect x="239.1" y="643.0" width="9.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="242.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.78%)</title><rect x="239.3" y="627.0" width="9.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="242.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.74%)</title><rect x="239.8" y="611.0" width="8.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="242.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.67%)</title><rect x="240.7" y="595.0" width="7.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="243.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.65%)</title><rect x="240.9" y="579.0" width="7.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="243.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.61%)</title><rect x="241.3" y="563.0" width="7.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="244.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.57%)</title><rect x="241.8" y="547.0" width="6.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="244.8" y="558.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.55%)</title><rect x="242.0" y="531.0" width="6.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="245.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.51%)</title><rect x="242.5" y="515.0" width="6.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="245.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.51%)</title><rect x="242.5" y="499.0" width="6.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="245.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.49%)</title><rect x="242.7" y="483.0" width="5.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="245.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.48%)</title><rect x="242.9" y="467.0" width="5.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="245.9" y="478.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.48%)</title><rect x="242.9" y="451.0" width="5.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="245.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.44%)</title><rect x="243.4" y="435.0" width="5.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="246.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.40%)</title><rect x="243.8" y="419.0" width="4.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="246.8" y="430.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.38%)</title><rect x="244.0" y="403.0" width="4.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="247.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.36%)</title><rect x="244.2" y="387.0" width="4.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="247.2" y="398.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.30%)</title><rect x="244.9" y="371.0" width="3.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="247.9" y="382.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.29%)</title><rect x="245.1" y="355.0" width="3.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="248.1" y="366.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="245.4" y="339.0" width="3.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="248.4" y="350.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="246.3" y="323.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="249.3" y="334.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="246.9" y="307.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="249.9" y="318.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="246.9" y="291.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="249.9" y="302.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="247.2" y="275.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="250.2" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="248.5" y="979.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="251.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (4 samples, 0.08%)</title><rect x="249.0" y="1011.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="252.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (8 samples, 0.15%)</title><rect x="249.9" y="1011.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/604125138.linkToTargetMethod (3 samples, 0.06%)</title><rect x="249.9" y="995.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2083261454.invoke (3 samples, 0.06%)</title><rect x="249.9" y="979.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="252.9" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/726950788.invokeStatic (2 samples, 0.04%)</title><rect x="250.1" y="963.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="253.1" y="974.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (2 samples, 0.04%)</title><rect x="250.1" y="947.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.1" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="250.8" y="995.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="253.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.getData (2 samples, 0.04%)</title><rect x="251.2" y="995.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.2" y="1006.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="251.2" y="979.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (153 samples, 2.91%)</title><rect x="251.7" y="1075.0" width="34.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.7" y="1086.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (152 samples, 2.89%)</title><rect x="251.9" y="1059.0" width="34.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.9" y="1070.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (19 samples, 0.36%)</title><rect x="251.9" y="1043.0" width="4.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19 samples, 0.36%)</title><rect x="251.9" y="1027.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="254.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (16 samples, 0.30%)</title><rect x="252.6" y="1011.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="255.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (14 samples, 0.27%)</title><rect x="253.0" y="995.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (3 samples, 0.06%)</title><rect x="253.2" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="256.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (3 samples, 0.06%)</title><rect x="253.2" y="963.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (3 samples, 0.06%)</title><rect x="253.2" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (2 samples, 0.04%)</title><rect x="253.4" y="931.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="256.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (2 samples, 0.04%)</title><rect x="253.4" y="915.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (10 samples, 0.19%)</title><rect x="253.9" y="979.0" width="2.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="256.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (9 samples, 0.17%)</title><rect x="253.9" y="963.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="256.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.17%)</title><rect x="253.9" y="947.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="256.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (9 samples, 0.17%)</title><rect x="253.9" y="931.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.15%)</title><rect x="254.1" y="915.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="257.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.15%)</title><rect x="254.1" y="899.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="257.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.15%)</title><rect x="254.1" y="883.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="257.1" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.11%)</title><rect x="254.6" y="867.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="257.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="254.6" y="851.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="257.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="254.6" y="835.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="257.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="254.6" y="819.0" width="1.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="257.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="254.6" y="803.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="257.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="254.6" y="787.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="257.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="254.6" y="771.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="257.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="254.6" y="755.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="257.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="254.6" y="739.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="257.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (133 samples, 2.53%)</title><rect x="256.1" y="1043.0" width="29.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="259.1" y="1054.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.06%)</title><rect x="256.4" y="1027.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.06%)</title><rect x="256.4" y="1011.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="259.4" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$331/661785033.accept (65 samples, 1.24%)</title><rect x="257.0" y="1027.0" width="14.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="260.0" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$get$0 (64 samples, 1.22%)</title><rect x="257.3" y="1011.0" width="14.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.sendResponse (49 samples, 0.93%)</title><rect x="257.7" y="995.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="260.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (49 samples, 0.93%)</title><rect x="257.7" y="979.0" width="11.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.7" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (49 samples, 0.93%)</title><rect x="257.7" y="963.0" width="11.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="260.7" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (48 samples, 0.91%)</title><rect x="257.9" y="947.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="260.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (48 samples, 0.91%)</title><rect x="257.9" y="931.0" width="10.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="260.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (48 samples, 0.91%)</title><rect x="257.9" y="915.0" width="10.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="260.9" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="257.9" y="899.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="260.9" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (46 samples, 0.87%)</title><rect x="258.4" y="899.0" width="10.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="261.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="258.6" y="883.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="261.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="258.6" y="867.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="261.6" y="878.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.04%)</title><rect x="258.6" y="851.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="261.6" y="862.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="258.6" y="835.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="261.6" y="846.0"></text>
</g>
<g>
<title>__send (43 samples, 0.82%)</title><rect x="259.1" y="883.0" width="9.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="262.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.82%)</title><rect x="259.1" y="867.0" width="9.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="262.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.82%)</title><rect x="259.1" y="851.0" width="9.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="262.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.82%)</title><rect x="259.1" y="835.0" width="9.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="262.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.80%)</title><rect x="259.3" y="819.0" width="9.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="262.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.78%)</title><rect x="259.5" y="803.0" width="9.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="262.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.76%)</title><rect x="259.7" y="787.0" width="9.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="262.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.76%)</title><rect x="259.7" y="771.0" width="9.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="262.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.76%)</title><rect x="259.7" y="755.0" width="9.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="262.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.72%)</title><rect x="260.2" y="739.0" width="8.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="263.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.70%)</title><rect x="260.4" y="723.0" width="8.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="263.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="260.6" y="707.0" width="8.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="263.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.65%)</title><rect x="261.1" y="691.0" width="7.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="264.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.55%)</title><rect x="262.2" y="675.0" width="6.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="265.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.55%)</title><rect x="262.2" y="659.0" width="6.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="265.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.55%)</title><rect x="262.2" y="643.0" width="6.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="265.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.51%)</title><rect x="262.6" y="627.0" width="6.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="265.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.51%)</title><rect x="262.6" y="611.0" width="6.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="265.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.51%)</title><rect x="262.6" y="595.0" width="6.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="265.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.48%)</title><rect x="263.1" y="579.0" width="5.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="266.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.48%)</title><rect x="263.1" y="563.0" width="5.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="266.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.40%)</title><rect x="264.0" y="547.0" width="4.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="267.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.36%)</title><rect x="264.4" y="531.0" width="4.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="267.4" y="542.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.36%)</title><rect x="264.4" y="515.0" width="4.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="267.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.36%)</title><rect x="264.4" y="499.0" width="4.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="267.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.34%)</title><rect x="264.7" y="483.0" width="4.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="267.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.34%)</title><rect x="264.7" y="467.0" width="4.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="267.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.34%)</title><rect x="264.7" y="451.0" width="4.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="267.7" y="462.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.32%)</title><rect x="264.9" y="435.0" width="3.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="267.9" y="446.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="265.6" y="419.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="268.6" y="430.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="265.6" y="403.0" width="3.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="268.6" y="414.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="265.6" y="387.0" width="3.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="268.6" y="398.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="265.6" y="371.0" width="3.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="268.6" y="382.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="266.0" y="355.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="269.0" y="366.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="266.2" y="339.0" width="2.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="269.2" y="350.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="266.2" y="323.0" width="2.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="269.2" y="334.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="266.5" y="307.0" width="2.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="269.5" y="318.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="266.9" y="291.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="269.9" y="302.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="267.1" y="275.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="270.1" y="286.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="267.1" y="259.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="270.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (5 samples, 0.10%)</title><rect x="268.7" y="995.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.7" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.04%)</title><rect x="269.2" y="979.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="272.2" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.merge (5 samples, 0.10%)</title><rect x="269.8" y="995.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="272.8" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (5 samples, 0.10%)</title><rect x="269.8" y="979.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="272.8" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (5 samples, 0.10%)</title><rect x="269.8" y="963.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="272.8" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.08%)</title><rect x="270.1" y="947.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="273.1" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (3 samples, 0.06%)</title><rect x="270.3" y="931.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="273.3" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (3 samples, 0.06%)</title><rect x="270.3" y="915.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.3" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.06%)</title><rect x="270.3" y="899.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.3" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (3 samples, 0.06%)</title><rect x="270.3" y="883.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="273.3" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.04%)</title><rect x="270.5" y="867.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="273.5" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (3 samples, 0.06%)</title><rect x="271.0" y="995.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="274.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="271.2" y="979.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="274.2" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils$$Lambda$139/1298738395.accept (64 samples, 1.22%)</title><rect x="271.6" y="1027.0" width="14.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="274.6" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.lambda$getFirstResponses$0 (64 samples, 1.22%)</title><rect x="271.6" y="1011.0" width="14.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="274.6" y="1022.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (59 samples, 1.12%)</title><rect x="271.6" y="995.0" width="13.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="274.6" y="1006.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (58 samples, 1.10%)</title><rect x="271.8" y="979.0" width="13.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="274.8" y="990.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (56 samples, 1.06%)</title><rect x="272.1" y="963.0" width="12.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="275.1" y="974.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (54 samples, 1.03%)</title><rect x="272.5" y="947.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="275.5" y="958.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (54 samples, 1.03%)</title><rect x="272.5" y="931.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="275.5" y="942.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (53 samples, 1.01%)</title><rect x="272.7" y="915.0" width="11.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="275.7" y="926.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (52 samples, 0.99%)</title><rect x="273.0" y="899.0" width="11.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.0" y="910.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (51 samples, 0.97%)</title><rect x="273.0" y="883.0" width="11.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.0" y="894.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (51 samples, 0.97%)</title><rect x="273.0" y="867.0" width="11.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.0" y="878.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (18 samples, 0.34%)</title><rect x="273.0" y="851.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.0" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (17 samples, 0.32%)</title><rect x="273.0" y="835.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="276.0" y="846.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (17 samples, 0.32%)</title><rect x="273.0" y="819.0" width="3.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="276.0" y="830.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (17 samples, 0.32%)</title><rect x="273.0" y="803.0" width="3.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="273.2" y="787.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="276.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.06%)</title><rect x="273.2" y="771.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="276.2" y="782.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (12 samples, 0.23%)</title><rect x="274.1" y="787.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="277.1" y="798.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (11 samples, 0.21%)</title><rect x="274.3" y="771.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="277.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.toString (9 samples, 0.17%)</title><rect x="274.8" y="755.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="277.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (8 samples, 0.15%)</title><rect x="274.8" y="739.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="277.8" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (7 samples, 0.13%)</title><rect x="275.0" y="723.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.0" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (3 samples, 0.06%)</title><rect x="275.0" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="278.0" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (4 samples, 0.08%)</title><rect x="275.7" y="707.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="278.7" y="718.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (22 samples, 0.42%)</title><rect x="277.0" y="851.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.0" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (18 samples, 0.34%)</title><rect x="277.5" y="835.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.5" y="846.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (18 samples, 0.34%)</title><rect x="277.5" y="819.0" width="4.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="280.5" y="830.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (18 samples, 0.34%)</title><rect x="277.5" y="803.0" width="4.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="280.5" y="814.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (18 samples, 0.34%)</title><rect x="277.5" y="787.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="280.5" y="798.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (17 samples, 0.32%)</title><rect x="277.7" y="771.0" width="3.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="280.7" y="782.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (17 samples, 0.32%)</title><rect x="277.7" y="755.0" width="3.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="280.7" y="766.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (9 samples, 0.17%)</title><rect x="277.7" y="739.0" width="2.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="280.7" y="750.0"></text>
</g>
<g>
<title>writeBytes (5 samples, 0.10%)</title><rect x="278.6" y="723.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="281.6" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="279.0" y="707.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="282.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="279.7" y="739.0" width="1.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="282.7" y="750.0"></text>
</g>
<g>
<title>write (8 samples, 0.15%)</title><rect x="279.7" y="723.0" width="1.8" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="282.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="279.7" y="707.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="282.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="279.7" y="691.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="282.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="280.4" y="675.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="283.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="280.4" y="659.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="283.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="280.4" y="643.0" width="1.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="283.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="280.4" y="627.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="283.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="280.6" y="611.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="283.6" y="622.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="280.8" y="595.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="283.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="281.0" y="579.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="284.0" y="590.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (11 samples, 0.21%)</title><rect x="281.9" y="851.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="284.9" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (10 samples, 0.19%)</title><rect x="282.2" y="835.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.2" y="846.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (10 samples, 0.19%)</title><rect x="282.2" y="819.0" width="2.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="285.2" y="830.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (7 samples, 0.13%)</title><rect x="282.2" y="803.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.2" y="814.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (7 samples, 0.13%)</title><rect x="282.2" y="787.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.2" y="798.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (7 samples, 0.13%)</title><rect x="282.2" y="771.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="285.2" y="782.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (7 samples, 0.13%)</title><rect x="282.2" y="755.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.2" y="766.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (2 samples, 0.04%)</title><rect x="282.2" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.2" y="750.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (2 samples, 0.04%)</title><rect x="282.2" y="723.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="285.2" y="734.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (5 samples, 0.10%)</title><rect x="282.6" y="739.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.6" y="750.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (5 samples, 0.10%)</title><rect x="282.6" y="723.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="285.6" y="734.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (5 samples, 0.10%)</title><rect x="282.6" y="707.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.6" y="718.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (5 samples, 0.10%)</title><rect x="282.6" y="691.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.6" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.06%)</title><rect x="283.7" y="803.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="286.7" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.06%)</title><rect x="283.7" y="787.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.7" y="798.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 0.06%)</title><rect x="283.7" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.08%)</title><rect x="284.9" y="995.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (4 samples, 0.08%)</title><rect x="284.9" y="979.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (3 samples, 0.06%)</title><rect x="285.1" y="963.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="288.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.04%)</title><rect x="285.3" y="947.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="285.3" y="931.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (21 samples, 0.40%)</title><rect x="286.2" y="1123.0" width="4.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="289.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (21 samples, 0.40%)</title><rect x="286.2" y="1107.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="289.2" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.08%)</title><rect x="287.1" y="1091.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="290.1" y="1102.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.06%)</title><rect x="287.3" y="1075.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="290.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="287.3" y="1059.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="290.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="287.3" y="1043.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="290.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.25%)</title><rect x="288.0" y="1091.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="291.0" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (12 samples, 0.23%)</title><rect x="288.0" y="1075.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="291.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="288.9" y="1059.0" width="1.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="291.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="288.9" y="1043.0" width="1.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="291.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="288.9" y="1027.0" width="1.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="291.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="288.9" y="1011.0" width="1.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="291.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="289.1" y="995.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="292.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="289.6" y="979.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="292.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="289.6" y="963.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="292.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="289.8" y="947.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="292.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="290.0" y="931.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="293.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (12 samples, 0.23%)</title><rect x="290.9" y="1123.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="293.9" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (12 samples, 0.23%)</title><rect x="290.9" y="1107.0" width="2.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.9" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.08%)</title><rect x="290.9" y="1091.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="293.9" y="1102.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.06%)</title><rect x="290.9" y="1075.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="293.9" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (7 samples, 0.13%)</title><rect x="291.8" y="1091.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="294.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="292.0" y="1075.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="295.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="292.0" y="1059.0" width="1.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="295.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="292.0" y="1043.0" width="1.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="295.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="292.0" y="1027.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="295.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="292.0" y="1011.0" width="1.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="295.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="292.0" y="995.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="295.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="292.5" y="979.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="295.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="292.5" y="963.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="295.5" y="974.0"></text>
</g>
<g>
<title>[ForkJoinPool.commonPool-worker-7 tid=7936] (332 samples, 6.31%)</title><rect x="293.8" y="1171.0" width="74.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="296.8" y="1182.0">[ForkJoi..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.04%)</title><rect x="294.5" y="1155.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="297.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (327 samples, 6.22%)</title><rect x="295.0" y="1155.0" width="73.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="298.0" y="1166.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (327 samples, 6.22%)</title><rect x="295.0" y="1139.0" width="73.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.0" y="1150.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (290 samples, 5.51%)</title><rect x="295.0" y="1123.0" width="65.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.0" y="1134.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (287 samples, 5.46%)</title><rect x="295.6" y="1107.0" width="64.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.6" y="1118.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (287 samples, 5.46%)</title><rect x="295.6" y="1091.0" width="64.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="298.6" y="1102.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (129 samples, 2.45%)</title><rect x="295.6" y="1075.0" width="29.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="298.6" y="1086.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (129 samples, 2.45%)</title><rect x="295.6" y="1059.0" width="29.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.6" y="1070.0">ja..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$276/573076665.run (126 samples, 2.40%)</title><rect x="296.3" y="1043.0" width="28.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.3" y="1054.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$executeIfProxied$10 (125 samples, 2.38%)</title><rect x="296.5" y="1027.0" width="28.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="299.5" y="1038.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.getValue (31 samples, 0.59%)</title><rect x="296.8" y="1011.0" width="6.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="299.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (3 samples, 0.06%)</title><rect x="297.2" y="995.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="300.2" y="1006.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (2 samples, 0.04%)</title><rect x="297.2" y="979.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="300.2" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.rowsIterator (26 samples, 0.49%)</title><rect x="297.9" y="995.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (21 samples, 0.40%)</title><rect x="297.9" y="979.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="300.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.iterator (21 samples, 0.40%)</title><rect x="297.9" y="963.0" width="4.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (2 samples, 0.04%)</title><rect x="297.9" y="947.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="300.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (2 samples, 0.04%)</title><rect x="297.9" y="931.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="300.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.combineTables (14 samples, 0.27%)</title><rect x="298.5" y="947.0" width="3.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="301.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.iterator (12 samples, 0.23%)</title><rect x="299.0" y="931.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="302.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Values.iterator (11 samples, 0.21%)</title><rect x="299.0" y="915.0" width="2.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="302.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapValueIterator.&lt;init&gt; (10 samples, 0.19%)</title><rect x="299.2" y="899.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="302.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap$SubMapIter.&lt;init&gt; (10 samples, 0.19%)</title><rect x="299.2" y="883.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.hiNode (2 samples, 0.04%)</title><rect x="299.2" y="867.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findLast (2 samples, 0.04%)</title><rect x="299.2" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="302.2" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$SubMap.loNode (8 samples, 0.15%)</title><rect x="299.7" y="867.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="302.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findNear (8 samples, 0.15%)</title><rect x="299.7" y="851.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="302.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.findPredecessor (8 samples, 0.15%)</title><rect x="299.7" y="835.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="302.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (6 samples, 0.11%)</title><rect x="300.1" y="819.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="303.1" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (2 samples, 0.04%)</title><rect x="301.0" y="803.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="304.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (4 samples, 0.08%)</title><rect x="301.7" y="947.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="304.7" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators.mergeSorted (3 samples, 0.06%)</title><rect x="301.7" y="931.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="304.7" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="301.7" y="915.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.7" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Table.transformRows (5 samples, 0.10%)</title><rect x="302.6" y="979.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="305.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters.collapseEquals (5 samples, 0.10%)</title><rect x="302.6" y="963.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.6" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.&lt;init&gt; (5 samples, 0.10%)</title><rect x="302.6" y="947.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="305.6" y="958.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (5 samples, 0.10%)</title><rect x="302.6" y="931.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="305.6" y="942.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (5 samples, 0.10%)</title><rect x="302.6" y="915.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="305.6" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/Iters$CollapseEqualsIterator.next (5 samples, 0.10%)</title><rect x="302.6" y="899.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="305.6" y="910.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$MergingIterator.next (4 samples, 0.08%)</title><rect x="302.6" y="883.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="305.6" y="894.0"></text>
</g>
<g>
<title>com/google/common/collect/Iterators$PeekingImpl.next (2 samples, 0.04%)</title><rect x="302.6" y="867.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="305.6" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractQueue.remove (2 samples, 0.04%)</title><rect x="303.0" y="867.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.0" y="878.0"></text>
</g>
<g>
<title>java/util/PriorityQueue.poll (2 samples, 0.04%)</title><rect x="303.0" y="851.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="306.0" y="862.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.04%)</title><rect x="303.0" y="835.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.sendResponse (83 samples, 1.58%)</title><rect x="303.7" y="1011.0" width="18.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="306.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (83 samples, 1.58%)</title><rect x="303.7" y="995.0" width="18.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (78 samples, 1.48%)</title><rect x="303.9" y="979.0" width="17.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.9" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="303.9" y="963.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.9" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.04%)</title><rect x="303.9" y="947.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="306.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (76 samples, 1.45%)</title><rect x="304.4" y="963.0" width="17.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.4" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (76 samples, 1.45%)</title><rect x="304.4" y="947.0" width="17.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="307.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (75 samples, 1.43%)</title><rect x="304.4" y="931.0" width="16.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="307.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (75 samples, 1.43%)</title><rect x="304.4" y="915.0" width="16.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="307.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="304.6" y="899.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="307.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="304.6" y="883.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="307.6" y="894.0"></text>
</g>
<g>
<title>__send (72 samples, 1.37%)</title><rect x="305.1" y="899.0" width="16.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="308.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 1.35%)</title><rect x="305.3" y="883.0" width="15.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="308.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 1.35%)</title><rect x="305.3" y="867.0" width="15.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="308.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 1.33%)</title><rect x="305.5" y="851.0" width="15.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="308.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 1.33%)</title><rect x="305.5" y="835.0" width="15.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="308.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 1.33%)</title><rect x="305.5" y="819.0" width="15.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="308.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 1.31%)</title><rect x="305.7" y="803.0" width="15.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="308.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 1.31%)</title><rect x="305.7" y="787.0" width="15.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="308.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 1.31%)</title><rect x="305.7" y="771.0" width="15.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="308.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 1.24%)</title><rect x="306.6" y="755.0" width="14.6" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="309.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 1.14%)</title><rect x="307.7" y="739.0" width="13.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="310.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 1.08%)</title><rect x="308.4" y="723.0" width="12.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="311.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.03%)</title><rect x="309.1" y="707.0" width="12.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="312.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.97%)</title><rect x="309.8" y="691.0" width="11.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="312.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.91%)</title><rect x="310.4" y="675.0" width="10.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="313.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.91%)</title><rect x="310.4" y="659.0" width="10.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="313.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.89%)</title><rect x="310.7" y="643.0" width="10.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="313.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.87%)</title><rect x="310.9" y="627.0" width="10.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="313.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.84%)</title><rect x="311.3" y="611.0" width="9.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="314.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.84%)</title><rect x="311.3" y="595.0" width="9.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="314.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.80%)</title><rect x="311.8" y="579.0" width="9.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="314.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.67%)</title><rect x="313.4" y="563.0" width="7.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="316.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="313.8" y="547.0" width="7.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="316.8" y="558.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.59%)</title><rect x="314.3" y="531.0" width="6.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="317.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.59%)</title><rect x="314.3" y="515.0" width="6.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="317.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.57%)</title><rect x="314.5" y="499.0" width="6.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="317.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.55%)</title><rect x="314.7" y="483.0" width="6.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="317.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.55%)</title><rect x="314.7" y="467.0" width="6.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="317.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.53%)</title><rect x="314.9" y="451.0" width="6.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="317.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.53%)</title><rect x="314.9" y="435.0" width="6.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="317.9" y="446.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.53%)</title><rect x="314.9" y="419.0" width="6.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="317.9" y="430.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.53%)</title><rect x="314.9" y="403.0" width="6.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="317.9" y="414.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.53%)</title><rect x="314.9" y="387.0" width="6.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="317.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.49%)</title><rect x="315.4" y="371.0" width="5.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="318.4" y="382.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.42%)</title><rect x="316.3" y="355.0" width="4.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="319.3" y="366.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.30%)</title><rect x="317.6" y="339.0" width="3.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="320.6" y="350.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="319.2" y="323.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="322.2" y="334.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="319.6" y="307.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="322.6" y="318.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="320.1" y="291.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="323.1" y="302.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="320.1" y="275.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="323.1" y="286.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="321.4" y="979.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="324.4" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.04%)</title><rect x="321.9" y="979.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="324.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.transform (10 samples, 0.19%)</title><rect x="322.3" y="1011.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="325.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/604125138.linkToTargetMethod (2 samples, 0.04%)</title><rect x="322.8" y="995.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="325.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/2083261454.invoke (2 samples, 0.04%)</title><rect x="322.8" y="979.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="325.8" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (5 samples, 0.10%)</title><rect x="323.2" y="995.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="326.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.04%)</title><rect x="323.9" y="979.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="326.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (158 samples, 3.00%)</title><rect x="324.6" y="1075.0" width="35.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="327.6" y="1086.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (158 samples, 3.00%)</title><rect x="324.6" y="1059.0" width="35.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="327.6" y="1070.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (18 samples, 0.34%)</title><rect x="324.8" y="1043.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="327.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16 samples, 0.30%)</title><rect x="325.3" y="1027.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="328.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (15 samples, 0.29%)</title><rect x="325.5" y="1011.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="328.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (13 samples, 0.25%)</title><rect x="325.9" y="995.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="328.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (7 samples, 0.13%)</title><rect x="325.9" y="979.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="328.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (6 samples, 0.11%)</title><rect x="325.9" y="963.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (6 samples, 0.11%)</title><rect x="325.9" y="947.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="328.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (5 samples, 0.10%)</title><rect x="326.1" y="931.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (3 samples, 0.06%)</title><rect x="326.1" y="915.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="329.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.tryTerminate (2 samples, 0.04%)</title><rect x="326.8" y="915.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="329.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.11%)</title><rect x="327.5" y="979.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="330.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (4 samples, 0.08%)</title><rect x="327.5" y="963.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="330.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (4 samples, 0.08%)</title><rect x="327.5" y="947.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="330.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (4 samples, 0.08%)</title><rect x="327.5" y="931.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.06%)</title><rect x="327.7" y="915.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="330.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="327.9" y="899.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="330.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="327.9" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="330.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (139 samples, 2.64%)</title><rect x="328.8" y="1043.0" width="31.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="331.8" y="1054.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.06%)</title><rect x="329.3" y="1027.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="332.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (3 samples, 0.06%)</title><rect x="329.3" y="1011.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="332.3" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$331/661785033.accept (72 samples, 1.37%)</title><rect x="330.0" y="1027.0" width="16.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="333.0" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$get$0 (72 samples, 1.37%)</title><rect x="330.0" y="1011.0" width="16.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="333.0" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.sendResponse (52 samples, 0.99%)</title><rect x="330.2" y="995.0" width="11.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (51 samples, 0.97%)</title><rect x="330.4" y="979.0" width="11.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="333.4" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (50 samples, 0.95%)</title><rect x="330.4" y="963.0" width="11.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.4" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="330.4" y="947.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="333.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (48 samples, 0.91%)</title><rect x="330.9" y="947.0" width="10.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="333.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (48 samples, 0.91%)</title><rect x="330.9" y="931.0" width="10.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="333.9" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (47 samples, 0.89%)</title><rect x="331.1" y="915.0" width="10.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="334.1" y="926.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="331.1" y="899.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="334.1" y="910.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.04%)</title><rect x="331.3" y="883.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="334.3" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (44 samples, 0.84%)</title><rect x="331.8" y="899.0" width="9.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.8" y="910.0"></text>
</g>
<g>
<title>__send (42 samples, 0.80%)</title><rect x="332.2" y="883.0" width="9.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="335.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.80%)</title><rect x="332.2" y="867.0" width="9.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="335.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.80%)</title><rect x="332.2" y="851.0" width="9.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="335.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.80%)</title><rect x="332.2" y="835.0" width="9.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="335.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.80%)</title><rect x="332.2" y="819.0" width="9.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="335.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.80%)</title><rect x="332.2" y="803.0" width="9.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="335.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.78%)</title><rect x="332.4" y="787.0" width="9.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="335.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.78%)</title><rect x="332.4" y="771.0" width="9.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="335.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.78%)</title><rect x="332.4" y="755.0" width="9.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="335.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.72%)</title><rect x="333.1" y="739.0" width="8.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="336.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.70%)</title><rect x="333.3" y="723.0" width="8.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="336.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="333.6" y="707.0" width="8.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="336.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="334.2" y="691.0" width="7.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="337.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.57%)</title><rect x="334.9" y="675.0" width="6.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="337.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.55%)</title><rect x="335.1" y="659.0" width="6.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="338.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.53%)</title><rect x="335.3" y="643.0" width="6.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="338.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.51%)</title><rect x="335.6" y="627.0" width="6.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="338.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.48%)</title><rect x="336.0" y="611.0" width="5.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="339.0" y="622.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.42%)</title><rect x="336.7" y="595.0" width="4.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="339.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.38%)</title><rect x="337.1" y="579.0" width="4.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="340.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.36%)</title><rect x="337.4" y="563.0" width="4.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="340.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.30%)</title><rect x="338.0" y="547.0" width="3.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="341.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="338.5" y="531.0" width="3.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="341.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="338.9" y="515.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="341.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="338.9" y="499.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="341.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="338.9" y="483.0" width="2.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="341.9" y="494.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="338.9" y="467.0" width="2.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="341.9" y="478.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="338.9" y="451.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="341.9" y="462.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="338.9" y="435.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="341.9" y="446.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="338.9" y="419.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="341.9" y="430.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="338.9" y="403.0" width="2.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="341.9" y="414.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="338.9" y="387.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="341.9" y="398.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="338.9" y="371.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="341.9" y="382.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="338.9" y="355.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="341.9" y="366.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="338.9" y="339.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="341.9" y="350.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="339.2" y="323.0" width="2.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="342.2" y="334.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="339.4" y="307.0" width="2.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="342.4" y="318.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="339.8" y="291.0" width="1.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="342.8" y="302.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="340.3" y="275.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="343.3" y="286.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="340.3" y="259.0" width="1.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="343.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.from (10 samples, 0.19%)</title><rect x="341.9" y="995.0" width="2.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="344.9" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (5 samples, 0.10%)</title><rect x="342.8" y="979.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="345.8" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.06%)</title><rect x="342.8" y="963.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="345.8" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.04%)</title><rect x="343.0" y="947.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="346.0" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.04%)</title><rect x="343.0" y="931.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="346.0" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="343.0" y="915.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="346.0" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.04%)</title><rect x="343.0" y="899.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="346.0" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ServiceValue.merge (8 samples, 0.15%)</title><rect x="344.1" y="995.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="347.1" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.max (7 samples, 0.13%)</title><rect x="344.3" y="979.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="347.3" y="990.0"></text>
</g>
<g>
<title>java/util/function/BinaryOperator.maxBy (3 samples, 0.06%)</title><rect x="344.3" y="963.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="347.3" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="344.5" y="947.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="347.5" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.reduce (4 samples, 0.08%)</title><rect x="345.0" y="963.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="348.0" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (4 samples, 0.08%)</title><rect x="345.0" y="947.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="348.0" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReduceOps$ReduceOp.evaluateSequential (4 samples, 0.08%)</title><rect x="345.0" y="931.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="348.0" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.08%)</title><rect x="345.0" y="915.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.0" y="926.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (3 samples, 0.06%)</title><rect x="345.0" y="899.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="348.0" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.04%)</title><rect x="345.2" y="883.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="348.2" y="894.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (2 samples, 0.04%)</title><rect x="345.2" y="867.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="348.2" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils$$Lambda$139/1298738395.accept (62 samples, 1.18%)</title><rect x="346.1" y="1027.0" width="13.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="349.1" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.lambda$getFirstResponses$0 (62 samples, 1.18%)</title><rect x="346.1" y="1011.0" width="13.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="349.1" y="1022.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (56 samples, 1.06%)</title><rect x="346.8" y="995.0" width="12.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.8" y="1006.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (56 samples, 1.06%)</title><rect x="346.8" y="979.0" width="12.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="349.8" y="990.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (56 samples, 1.06%)</title><rect x="346.8" y="963.0" width="12.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="349.8" y="974.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (54 samples, 1.03%)</title><rect x="347.0" y="947.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.0" y="958.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (54 samples, 1.03%)</title><rect x="347.0" y="931.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.0" y="942.0"></text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (54 samples, 1.03%)</title><rect x="347.0" y="915.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="350.0" y="926.0"></text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (54 samples, 1.03%)</title><rect x="347.0" y="899.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="350.0" y="910.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (54 samples, 1.03%)</title><rect x="347.0" y="883.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.0" y="894.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (54 samples, 1.03%)</title><rect x="347.0" y="867.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="350.0" y="878.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (13 samples, 0.25%)</title><rect x="347.0" y="851.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.0" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (9 samples, 0.17%)</title><rect x="347.0" y="835.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.0" y="846.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (8 samples, 0.15%)</title><rect x="347.2" y="819.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.2" y="830.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (7 samples, 0.13%)</title><rect x="347.2" y="803.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="350.2" y="814.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (6 samples, 0.11%)</title><rect x="347.5" y="787.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.5" y="798.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (6 samples, 0.11%)</title><rect x="347.5" y="771.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="350.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.toString (6 samples, 0.11%)</title><rect x="347.5" y="755.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.08%)</title><rect x="347.5" y="739.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="350.5" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.08%)</title><rect x="347.5" y="723.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.5" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.04%)</title><rect x="347.5" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="350.5" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.04%)</title><rect x="347.9" y="707.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="350.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.04%)</title><rect x="347.9" y="691.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="350.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.04%)</title><rect x="347.9" y="675.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="350.9" y="686.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.04%)</title><rect x="348.4" y="739.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="351.4" y="750.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (3 samples, 0.06%)</title><rect x="349.0" y="835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="352.0" y="846.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (24 samples, 0.46%)</title><rect x="349.9" y="851.0" width="5.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="352.9" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (21 samples, 0.40%)</title><rect x="349.9" y="835.0" width="4.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="352.9" y="846.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (21 samples, 0.40%)</title><rect x="349.9" y="819.0" width="4.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="352.9" y="830.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (21 samples, 0.40%)</title><rect x="349.9" y="803.0" width="4.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="352.9" y="814.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (19 samples, 0.36%)</title><rect x="350.4" y="787.0" width="4.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="353.4" y="798.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (19 samples, 0.36%)</title><rect x="350.4" y="771.0" width="4.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="353.4" y="782.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (19 samples, 0.36%)</title><rect x="350.4" y="755.0" width="4.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="353.4" y="766.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (8 samples, 0.15%)</title><rect x="350.4" y="739.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="353.4" y="750.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.04%)</title><rect x="350.6" y="723.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="353.6" y="734.0"></text>
</g>
<g>
<title>writeBytes (5 samples, 0.10%)</title><rect x="351.1" y="723.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="354.1" y="734.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.04%)</title><rect x="351.7" y="707.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="354.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="352.2" y="739.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="355.2" y="750.0"></text>
</g>
<g>
<title>write (11 samples, 0.21%)</title><rect x="352.2" y="723.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="355.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="352.2" y="707.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="355.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="352.2" y="691.0" width="2.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="355.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="352.2" y="675.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="355.2" y="686.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="352.4" y="659.0" width="2.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="355.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="352.4" y="643.0" width="2.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="355.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="352.4" y="627.0" width="2.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="355.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="352.8" y="611.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="355.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="353.3" y="595.0" width="1.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="356.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="353.5" y="579.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="356.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="354.0" y="563.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="357.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="354.2" y="547.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="357.2" y="558.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.04%)</title><rect x="354.9" y="835.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="354.9" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="357.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.04%)</title><rect x="354.9" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="357.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="354.9" y="787.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="357.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="354.9" y="771.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.9" y="782.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (17 samples, 0.32%)</title><rect x="355.3" y="851.0" width="3.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="358.3" y="862.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (16 samples, 0.30%)</title><rect x="355.5" y="835.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="358.5" y="846.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (16 samples, 0.30%)</title><rect x="355.5" y="819.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="358.5" y="830.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (10 samples, 0.19%)</title><rect x="356.2" y="803.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="359.2" y="814.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (9 samples, 0.17%)</title><rect x="356.4" y="787.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="359.4" y="798.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (9 samples, 0.17%)</title><rect x="356.4" y="771.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.4" y="782.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (9 samples, 0.17%)</title><rect x="356.4" y="755.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="359.4" y="766.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (4 samples, 0.08%)</title><rect x="356.4" y="739.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="359.4" y="750.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (4 samples, 0.08%)</title><rect x="356.4" y="723.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="359.4" y="734.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (3 samples, 0.06%)</title><rect x="356.7" y="707.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="359.7" y="718.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (3 samples, 0.06%)</title><rect x="356.7" y="691.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="359.7" y="702.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (3 samples, 0.06%)</title><rect x="356.7" y="675.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="359.7" y="686.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (5 samples, 0.10%)</title><rect x="357.3" y="739.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="360.3" y="750.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (5 samples, 0.10%)</title><rect x="357.3" y="723.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="360.3" y="734.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (5 samples, 0.10%)</title><rect x="357.3" y="707.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="360.3" y="718.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (5 samples, 0.10%)</title><rect x="357.3" y="691.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="360.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.06%)</title><rect x="358.5" y="803.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.5" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.06%)</title><rect x="358.5" y="787.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="361.5" y="798.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.04%)</title><rect x="358.5" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="361.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="359.4" y="995.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="362.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="359.4" y="979.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (22 samples, 0.42%)</title><rect x="360.0" y="1123.0" width="5.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="363.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (21 samples, 0.40%)</title><rect x="360.3" y="1107.0" width="4.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="363.3" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Park (12 samples, 0.23%)</title><rect x="360.5" y="1091.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="363.5" y="1102.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.04%)</title><rect x="360.7" y="1075.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="363.7" y="1086.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="361.6" y="1075.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="364.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="363.2" y="1091.0" width="1.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="366.2" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.13%)</title><rect x="363.4" y="1075.0" width="1.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="366.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="363.6" y="1059.0" width="1.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="366.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="363.6" y="1043.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="366.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="363.8" y="1027.0" width="1.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="366.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="363.8" y="1011.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="366.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="364.1" y="995.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="367.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="364.1" y="979.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="367.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="364.1" y="963.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="367.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="364.5" y="947.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="367.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="364.5" y="931.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="367.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (14 samples, 0.27%)</title><rect x="365.0" y="1123.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="368.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 0.27%)</title><rect x="365.0" y="1107.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="368.0" y="1118.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="365.0" y="1091.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="368.0" y="1102.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.08%)</title><rect x="365.4" y="1091.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="368.4" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (8 samples, 0.15%)</title><rect x="366.3" y="1091.0" width="1.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="369.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="366.8" y="1075.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="369.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="366.8" y="1059.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="369.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="366.8" y="1043.0" width="1.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="369.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="366.8" y="1027.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="369.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="367.0" y="1011.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="370.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="367.0" y="995.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="370.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="367.0" y="979.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="370.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="367.4" y="963.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="370.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="367.4" y="947.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="370.4" y="958.0"></text>
</g>
<g>
<title>[HttpClient-1-SelectorManager tid=7861] (386 samples, 7.34%)</title><rect x="368.3" y="1171.0" width="86.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="371.3" y="1182.0">[HttpClien..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (14 samples, 0.27%)</title><rect x="368.8" y="1155.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="371.8" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (14 samples, 0.27%)</title><rect x="368.8" y="1139.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="371.8" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (10 samples, 0.19%)</title><rect x="368.8" y="1123.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="371.8" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (8 samples, 0.15%)</title><rect x="369.0" y="1107.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="372.0" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (4 samples, 0.08%)</title><rect x="371.0" y="1123.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="374.0" y="1134.0"></text>
</g>
<g>
<title>[not_walkable] (3 samples, 0.06%)</title><rect x="371.9" y="1155.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="374.9" y="1166.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.04%)</title><rect x="372.6" y="1155.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="375.6" y="1166.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.06%)</title><rect x="373.0" y="1155.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="376.0" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.04%)</title><rect x="373.7" y="1155.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="376.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="373.7" y="1139.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="376.7" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="373.7" y="1123.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="376.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (360 samples, 6.85%)</title><rect x="374.2" y="1155.0" width="80.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="377.2" y="1166.0">jdk/inter..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (6 samples, 0.11%)</title><rect x="376.9" y="1139.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="379.9" y="1150.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (6 samples, 0.11%)</title><rect x="376.9" y="1123.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.9" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.04%)</title><rect x="377.8" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="380.8" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.15%)</title><rect x="378.2" y="1139.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="381.2" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (8 samples, 0.15%)</title><rect x="378.2" y="1123.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="381.2" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (6 samples, 0.11%)</title><rect x="378.7" y="1107.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.7" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.10%)</title><rect x="378.9" y="1091.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="381.9" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (4 samples, 0.08%)</title><rect x="379.1" y="1075.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="382.1" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (114 samples, 2.17%)</title><rect x="380.2" y="1139.0" width="25.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="383.2" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$250/1207502110.accept (110 samples, 2.09%)</title><rect x="380.4" y="1123.0" width="24.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="383.4" y="1134.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (110 samples, 2.09%)</title><rect x="380.4" y="1107.0" width="24.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="383.4" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (110 samples, 2.09%)</title><rect x="380.4" y="1091.0" width="24.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="383.4" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (110 samples, 2.09%)</title><rect x="380.4" y="1075.0" width="24.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="383.4" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (110 samples, 2.09%)</title><rect x="380.4" y="1059.0" width="24.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="383.4" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.06%)</title><rect x="380.9" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="383.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (105 samples, 2.00%)</title><rect x="381.6" y="1043.0" width="23.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="384.6" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (105 samples, 2.00%)</title><rect x="381.6" y="1027.0" width="23.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.6" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (105 samples, 2.00%)</title><rect x="381.6" y="1011.0" width="23.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.6" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (4 samples, 0.08%)</title><rect x="381.6" y="995.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="384.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (4 samples, 0.08%)</title><rect x="381.6" y="979.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.08%)</title><rect x="381.6" y="963.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.06%)</title><rect x="381.6" y="947.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.06%)</title><rect x="381.6" y="931.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="384.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.06%)</title><rect x="381.6" y="915.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="384.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.06%)</title><rect x="381.6" y="899.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="384.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.06%)</title><rect x="381.6" y="883.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="384.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.06%)</title><rect x="381.6" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="384.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.06%)</title><rect x="381.6" y="851.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="384.6" y="862.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="381.6" y="835.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="384.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (101 samples, 1.92%)</title><rect x="382.5" y="995.0" width="22.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="385.5" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (101 samples, 1.92%)</title><rect x="382.5" y="979.0" width="22.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="385.5" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/2053696460.run (99 samples, 1.88%)</title><rect x="382.9" y="963.0" width="22.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="385.9" y="974.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (99 samples, 1.88%)</title><rect x="382.9" y="947.0" width="22.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="385.9" y="958.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (19 samples, 0.36%)</title><rect x="383.6" y="931.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (19 samples, 0.36%)</title><rect x="383.6" y="915.0" width="4.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="386.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (18 samples, 0.34%)</title><rect x="383.8" y="899.0" width="4.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="386.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.25%)</title><rect x="384.9" y="883.0" width="3.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="387.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (13 samples, 0.25%)</title><rect x="384.9" y="867.0" width="3.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="387.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.25%)</title><rect x="384.9" y="851.0" width="3.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="387.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 0.25%)</title><rect x="384.9" y="835.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="387.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.25%)</title><rect x="384.9" y="819.0" width="3.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="387.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.21%)</title><rect x="385.2" y="803.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="388.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (4 samples, 0.08%)</title><rect x="385.2" y="787.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="388.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.08%)</title><rect x="385.2" y="771.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="388.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (4 samples, 0.08%)</title><rect x="385.2" y="755.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="388.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (4 samples, 0.08%)</title><rect x="385.2" y="739.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="388.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (4 samples, 0.08%)</title><rect x="385.2" y="723.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="388.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (4 samples, 0.08%)</title><rect x="385.2" y="707.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.2" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.13%)</title><rect x="386.1" y="787.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.13%)</title><rect x="386.1" y="771.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="389.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.13%)</title><rect x="386.1" y="755.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.13%)</title><rect x="386.1" y="739.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="389.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.13%)</title><rect x="386.1" y="723.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.1" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.13%)</title><rect x="386.1" y="707.0" width="1.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="389.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="386.3" y="691.0" width="1.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="389.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="386.3" y="675.0" width="1.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="389.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="386.3" y="659.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="389.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="386.3" y="643.0" width="1.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="389.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="386.3" y="627.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="389.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="386.3" y="611.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="389.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="386.3" y="595.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="389.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="386.3" y="579.0" width="1.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="389.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (3 samples, 0.06%)</title><rect x="387.9" y="931.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="390.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (72 samples, 1.37%)</title><rect x="388.7" y="931.0" width="16.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="391.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (4 samples, 0.08%)</title><rect x="389.0" y="915.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="392.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (2 samples, 0.04%)</title><rect x="389.4" y="899.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="392.4" y="910.0"></text>
</g>
<g>
<title>java/util/List.of (2 samples, 0.04%)</title><rect x="389.4" y="883.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="392.4" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (66 samples, 1.25%)</title><rect x="390.1" y="915.0" width="14.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="393.1" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (59 samples, 1.12%)</title><rect x="391.2" y="899.0" width="13.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="394.2" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (58 samples, 1.10%)</title><rect x="391.4" y="883.0" width="13.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.4" y="894.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.06%)</title><rect x="392.1" y="867.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="395.1" y="878.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (2 samples, 0.04%)</title><rect x="392.3" y="851.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (2 samples, 0.04%)</title><rect x="392.3" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="395.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (42 samples, 0.80%)</title><rect x="393.0" y="867.0" width="9.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="396.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (41 samples, 0.78%)</title><rect x="393.2" y="851.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (41 samples, 0.78%)</title><rect x="393.2" y="835.0" width="9.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="396.2" y="846.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_read0 (2 samples, 0.04%)</title><rect x="393.2" y="819.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="396.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.72%)</title><rect x="393.7" y="819.0" width="8.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="396.7" y="830.0"></text>
</g>
<g>
<title>read (38 samples, 0.72%)</title><rect x="393.7" y="803.0" width="8.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="396.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.67%)</title><rect x="394.4" y="787.0" width="7.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="397.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.67%)</title><rect x="394.4" y="771.0" width="7.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="397.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.61%)</title><rect x="395.0" y="755.0" width="7.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="398.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.61%)</title><rect x="395.0" y="739.0" width="7.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="398.0" y="750.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.61%)</title><rect x="395.0" y="723.0" width="7.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="398.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.61%)</title><rect x="395.0" y="707.0" width="7.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="398.0" y="718.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.57%)</title><rect x="395.5" y="691.0" width="6.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="398.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.49%)</title><rect x="396.4" y="675.0" width="5.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="399.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="396.8" y="659.0" width="5.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="399.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.42%)</title><rect x="397.3" y="643.0" width="4.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="400.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.36%)</title><rect x="397.9" y="627.0" width="4.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="400.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="399.1" y="611.0" width="3.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="402.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="399.7" y="595.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="402.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="399.7" y="579.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="402.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="400.4" y="563.0" width="1.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="403.4" y="574.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="401.1" y="547.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="404.1" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (7 samples, 0.13%)</title><rect x="402.4" y="867.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="405.4" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (7 samples, 0.13%)</title><rect x="402.4" y="851.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (2 samples, 0.04%)</title><rect x="402.9" y="835.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="405.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (2 samples, 0.04%)</title><rect x="403.6" y="835.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="406.6" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="404.0" y="867.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="407.0" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.beginRead (2 samples, 0.04%)</title><rect x="404.5" y="899.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="407.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$255/1881289294.accept (3 samples, 0.06%)</title><rect x="405.1" y="1123.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="408.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (3 samples, 0.06%)</title><rect x="405.1" y="1107.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="408.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/797003816.run (3 samples, 0.06%)</title><rect x="405.1" y="1091.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="408.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (3 samples, 0.06%)</title><rect x="405.1" y="1075.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="408.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (3 samples, 0.06%)</title><rect x="405.1" y="1059.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.1" y="1070.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (2 samples, 0.04%)</title><rect x="405.1" y="1043.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="408.1" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (15 samples, 0.29%)</title><rect x="406.0" y="1139.0" width="3.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.0" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (15 samples, 0.29%)</title><rect x="406.0" y="1123.0" width="3.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="409.0" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (2 samples, 0.04%)</title><rect x="406.3" y="1107.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="409.3" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (11 samples, 0.21%)</title><rect x="406.7" y="1107.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="409.7" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (11 samples, 0.21%)</title><rect x="406.7" y="1091.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="409.7" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (11 samples, 0.21%)</title><rect x="406.7" y="1075.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.7" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (8 samples, 0.15%)</title><rect x="407.4" y="1059.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="410.4" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (6 samples, 0.11%)</title><rect x="407.6" y="1043.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="410.6" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (3 samples, 0.06%)</title><rect x="408.0" y="1027.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="411.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$247/1268019334.test (3 samples, 0.06%)</title><rect x="408.0" y="1011.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="411.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (44 samples, 0.84%)</title><rect x="409.4" y="1139.0" width="9.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$186/1814106346.run (34 samples, 0.65%)</title><rect x="409.4" y="1123.0" width="7.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="412.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (34 samples, 0.65%)</title><rect x="409.4" y="1107.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="412.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 0.65%)</title><rect x="409.4" y="1091.0" width="7.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (34 samples, 0.65%)</title><rect x="409.4" y="1075.0" width="7.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="412.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (33 samples, 0.63%)</title><rect x="409.6" y="1059.0" width="7.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="412.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (33 samples, 0.63%)</title><rect x="409.6" y="1043.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="412.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/2053696460.run (32 samples, 0.61%)</title><rect x="409.8" y="1027.0" width="7.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="412.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (32 samples, 0.61%)</title><rect x="409.8" y="1011.0" width="7.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="412.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (2 samples, 0.04%)</title><rect x="409.8" y="995.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (2 samples, 0.04%)</title><rect x="409.8" y="979.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="412.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (2 samples, 0.04%)</title><rect x="409.8" y="963.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="412.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="409.8" y="947.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="412.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (23 samples, 0.44%)</title><rect x="410.3" y="995.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="413.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (2 samples, 0.04%)</title><rect x="411.4" y="979.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="414.4" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="411.4" y="963.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="414.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (15 samples, 0.29%)</title><rect x="412.1" y="979.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (6 samples, 0.11%)</title><rect x="412.3" y="963.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="415.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (6 samples, 0.11%)</title><rect x="412.3" y="947.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (6 samples, 0.11%)</title><rect x="412.3" y="931.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="415.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (6 samples, 0.11%)</title><rect x="412.3" y="915.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="415.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (6 samples, 0.11%)</title><rect x="412.3" y="899.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (5 samples, 0.10%)</title><rect x="412.5" y="883.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (5 samples, 0.10%)</title><rect x="412.5" y="867.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.06%)</title><rect x="413.0" y="851.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="416.0" y="862.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.04%)</title><rect x="413.2" y="835.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="416.2" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.04%)</title><rect x="413.2" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="416.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.04%)</title><rect x="413.2" y="803.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="416.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (8 samples, 0.15%)</title><rect x="413.7" y="963.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="416.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.13%)</title><rect x="413.9" y="947.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="416.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.13%)</title><rect x="413.9" y="931.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="416.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.13%)</title><rect x="413.9" y="915.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.13%)</title><rect x="413.9" y="899.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="416.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.13%)</title><rect x="413.9" y="883.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="416.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.11%)</title><rect x="413.9" y="867.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="416.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.10%)</title><rect x="414.1" y="851.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="417.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.10%)</title><rect x="414.1" y="835.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.10%)</title><rect x="414.1" y="819.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="417.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.10%)</title><rect x="414.1" y="803.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="417.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.10%)</title><rect x="414.1" y="787.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.1" y="798.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="414.3" y="771.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="417.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="414.8" y="755.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="417.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="414.8" y="739.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="417.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="414.8" y="723.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="417.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="414.8" y="707.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="417.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="414.8" y="691.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="417.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (7 samples, 0.13%)</title><rect x="415.4" y="995.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.4" y="1006.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (7 samples, 0.13%)</title><rect x="415.4" y="979.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="418.4" y="990.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.13%)</title><rect x="415.4" y="963.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="418.4" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.13%)</title><rect x="415.4" y="947.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="418.4" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (6 samples, 0.11%)</title><rect x="415.7" y="931.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="418.7" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (5 samples, 0.10%)</title><rect x="415.9" y="915.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="418.9" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (5 samples, 0.10%)</title><rect x="415.9" y="899.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="418.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="415.9" y="883.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="418.9" y="894.0"></text>
</g>
<g>
<title>read (4 samples, 0.08%)</title><rect x="415.9" y="867.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="418.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="415.9" y="851.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="418.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="415.9" y="835.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="418.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="415.9" y="819.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="418.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="415.9" y="803.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="418.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="415.9" y="787.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="418.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="415.9" y="771.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="418.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="415.9" y="755.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="418.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="416.1" y="739.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="419.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="416.1" y="723.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="419.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="416.3" y="707.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="419.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="416.3" y="691.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="419.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="416.3" y="675.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="419.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="416.3" y="659.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="419.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="416.3" y="643.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="419.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="416.3" y="627.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="419.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$191/880351495.run (9 samples, 0.17%)</title><rect x="417.0" y="1123.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (9 samples, 0.17%)</title><rect x="417.0" y="1107.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.0" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.until (3 samples, 0.06%)</title><rect x="417.0" y="1091.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="420.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.11%)</title><rect x="417.7" y="1091.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="420.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.11%)</title><rect x="417.7" y="1075.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="420.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.11%)</title><rect x="417.7" y="1059.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.06%)</title><rect x="417.9" y="1043.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="420.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.06%)</title><rect x="417.9" y="1027.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="420.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="417.9" y="1011.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="420.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="417.9" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="420.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="417.9" y="979.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.06%)</title><rect x="417.9" y="963.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.9" y="974.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="417.9" y="947.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="420.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="417.9" y="931.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="420.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="417.9" y="915.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="420.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="417.9" y="899.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="420.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="417.9" y="883.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="420.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="417.9" y="867.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="420.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="418.1" y="851.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="421.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (13 samples, 0.25%)</title><rect x="419.3" y="1139.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="422.3" y="1150.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.04%)</title><rect x="419.3" y="1123.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="422.3" y="1134.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.04%)</title><rect x="419.3" y="1107.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="422.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="419.3" y="1091.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="422.3" y="1102.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="419.3" y="1075.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="422.3" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="419.3" y="1059.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="422.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (11 samples, 0.21%)</title><rect x="419.7" y="1123.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.7" y="1134.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="419.7" y="1107.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="422.7" y="1118.0"></text>
</g>
<g>
<title>java/time/Instant.until (2 samples, 0.04%)</title><rect x="420.2" y="1107.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="423.2" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (5 samples, 0.10%)</title><rect x="420.6" y="1107.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="423.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (2 samples, 0.04%)</title><rect x="421.7" y="1107.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (16 samples, 0.30%)</title><rect x="422.6" y="1139.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="425.6" y="1150.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (9 samples, 0.17%)</title><rect x="424.2" y="1123.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="427.2" y="1134.0"></text>
</g>
<g>
<title>java/nio/channels/SelectionKey.attach (6 samples, 0.11%)</title><rect x="424.9" y="1107.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet (6 samples, 0.11%)</title><rect x="424.9" y="1091.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck (2 samples, 0.04%)</title><rect x="425.8" y="1075.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.8" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (114 samples, 2.17%)</title><rect x="426.7" y="1139.0" width="25.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="429.7" y="1150.0">s..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (114 samples, 2.17%)</title><rect x="426.7" y="1123.0" width="25.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="429.7" y="1134.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (113 samples, 2.15%)</title><rect x="426.9" y="1107.0" width="25.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.9" y="1118.0">s..</text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (56 samples, 1.06%)</title><rect x="427.1" y="1091.0" width="12.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.99%)</title><rect x="427.6" y="1075.0" width="11.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="430.6" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (52 samples, 0.99%)</title><rect x="427.6" y="1059.0" width="11.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="430.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.87%)</title><rect x="428.9" y="1043.0" width="10.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="431.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.87%)</title><rect x="428.9" y="1027.0" width="10.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="431.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.87%)</title><rect x="428.9" y="1011.0" width="10.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="431.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.87%)</title><rect x="428.9" y="995.0" width="10.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="431.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.84%)</title><rect x="429.4" y="979.0" width="9.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="432.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.74%)</title><rect x="430.5" y="963.0" width="8.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="433.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.57%)</title><rect x="432.5" y="947.0" width="6.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="435.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.49%)</title><rect x="433.4" y="931.0" width="5.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="436.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.38%)</title><rect x="434.7" y="915.0" width="4.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="437.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="436.8" y="899.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="439.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="438.8" y="883.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="441.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="438.8" y="867.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="441.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="438.8" y="851.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="441.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="438.8" y="835.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="441.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (44 samples, 0.84%)</title><rect x="439.7" y="1091.0" width="9.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="442.7" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="439.9" y="1075.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="442.9" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="439.9" y="1059.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="442.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (33 samples, 0.63%)</title><rect x="440.4" y="1075.0" width="7.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="443.4" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (33 samples, 0.63%)</title><rect x="440.4" y="1059.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="443.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.44%)</title><rect x="441.3" y="1043.0" width="5.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="444.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="441.3" y="1027.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="444.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="441.3" y="1011.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="444.3" y="1022.0"></text>
</g>
<g>
<title>read (4 samples, 0.08%)</title><rect x="441.3" y="995.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="444.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="441.5" y="979.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="444.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="441.5" y="963.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="444.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="441.5" y="947.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="444.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="441.5" y="931.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="444.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="441.5" y="915.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="444.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="441.5" y="899.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="444.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="441.5" y="883.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="444.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="441.5" y="867.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="444.5" y="878.0"></text>
</g>
<g>
<title>read (10 samples, 0.19%)</title><rect x="442.2" y="1011.0" width="2.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="445.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="442.2" y="995.0" width="2.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="445.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="442.2" y="979.0" width="2.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="445.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="442.2" y="963.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="445.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="442.2" y="947.0" width="2.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="445.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="442.2" y="931.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="445.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="442.2" y="915.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="445.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="442.6" y="899.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="445.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="443.0" y="883.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="446.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="443.7" y="867.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="446.7" y="878.0"></text>
</g>
<g>
<title>read (9 samples, 0.17%)</title><rect x="444.4" y="1027.0" width="2.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="447.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="444.4" y="1011.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="447.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="444.4" y="995.0" width="2.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="447.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="444.6" y="979.0" width="1.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="447.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="444.6" y="963.0" width="1.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="447.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="444.6" y="947.0" width="1.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="447.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="444.6" y="931.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="447.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="444.6" y="915.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="447.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="444.8" y="899.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="447.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="445.3" y="883.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="448.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="446.0" y="867.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="449.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="446.0" y="851.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="449.0" y="862.0"></text>
</g>
<g>
<title>read (5 samples, 0.10%)</title><rect x="446.6" y="1043.0" width="1.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="449.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="447.1" y="1027.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="450.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="447.1" y="1011.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="450.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="447.1" y="995.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="450.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="447.1" y="979.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="450.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="447.1" y="963.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="450.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="447.1" y="947.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="450.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="447.1" y="931.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="450.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="447.1" y="915.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="450.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="447.1" y="899.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="450.1" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (8 samples, 0.15%)</title><rect x="447.8" y="1075.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="450.8" y="1086.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.10%)</title><rect x="447.8" y="1059.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.8" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.10%)</title><rect x="447.8" y="1043.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="450.8" y="1054.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.10%)</title><rect x="447.8" y="1027.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="450.8" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.04%)</title><rect x="448.4" y="1011.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.4" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.nioReadyOps (2 samples, 0.04%)</title><rect x="448.9" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="451.9" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (2 samples, 0.04%)</title><rect x="448.9" y="1043.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.9" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (4 samples, 0.08%)</title><rect x="449.6" y="1091.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="452.6" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (5 samples, 0.10%)</title><rect x="450.5" y="1091.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.5" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (5 samples, 0.10%)</title><rect x="450.5" y="1075.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="453.5" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (5 samples, 0.10%)</title><rect x="450.5" y="1059.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (5 samples, 0.10%)</title><rect x="450.5" y="1043.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (5 samples, 0.10%)</title><rect x="450.5" y="1027.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.5" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (2 samples, 0.04%)</title><rect x="451.6" y="1091.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.6" y="1102.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (2 samples, 0.04%)</title><rect x="451.6" y="1075.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="454.6" y="1086.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (2 samples, 0.04%)</title><rect x="451.6" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="454.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (2 samples, 0.04%)</title><rect x="451.6" y="1043.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="454.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (2 samples, 0.04%)</title><rect x="451.6" y="1027.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="454.6" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (10 samples, 0.19%)</title><rect x="452.2" y="1139.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="455.2" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (10 samples, 0.19%)</title><rect x="452.2" y="1123.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="455.2" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (10 samples, 0.19%)</title><rect x="452.2" y="1107.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="455.2" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (7 samples, 0.13%)</title><rect x="452.2" y="1091.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="455.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="452.7" y="1075.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="455.7" y="1086.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.08%)</title><rect x="452.7" y="1059.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="455.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="452.7" y="1043.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="455.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="452.7" y="1027.0" width="0.9" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="455.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="452.7" y="1011.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="455.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="452.7" y="995.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="455.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="452.9" y="979.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="455.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="452.9" y="963.0" width="0.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="455.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="453.1" y="947.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="456.1" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (2 samples, 0.04%)</title><rect x="453.8" y="1091.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.8" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (2 samples, 0.04%)</title><rect x="453.8" y="1075.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="456.8" y="1086.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=7862] (46 samples, 0.87%)</title><rect x="454.9" y="1171.0" width="10.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="457.9" y="1182.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.08%)</title><rect x="455.2" y="1155.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="458.2" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.08%)</title><rect x="455.2" y="1139.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="458.2" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (3 samples, 0.06%)</title><rect x="455.4" y="1123.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="458.4" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.04%)</title><rect x="455.6" y="1107.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="458.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (39 samples, 0.74%)</title><rect x="456.5" y="1155.0" width="8.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="459.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 0.10%)</title><rect x="456.7" y="1139.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="459.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.10%)</title><rect x="456.7" y="1123.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="459.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="457.0" y="1107.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="460.0" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.08%)</title><rect x="457.0" y="1091.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="460.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="457.0" y="1075.0" width="0.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="460.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="457.0" y="1059.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="460.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="457.0" y="1043.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="460.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="457.0" y="1027.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="460.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="457.0" y="1011.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="460.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="457.2" y="995.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="460.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="457.4" y="979.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="460.4" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (33 samples, 0.63%)</title><rect x="457.9" y="1139.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="460.9" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (32 samples, 0.61%)</title><rect x="458.1" y="1123.0" width="7.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (26 samples, 0.49%)</title><rect x="458.1" y="1107.0" width="5.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="461.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24 samples, 0.46%)</title><rect x="458.1" y="1091.0" width="5.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="461.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (24 samples, 0.46%)</title><rect x="458.1" y="1075.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.1" y="1086.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (24 samples, 0.46%)</title><rect x="458.1" y="1059.0" width="5.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="461.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.08%)</title><rect x="458.3" y="1043.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="461.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.06%)</title><rect x="458.3" y="1027.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (19 samples, 0.36%)</title><rect x="459.2" y="1043.0" width="4.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="462.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (5 samples, 0.10%)</title><rect x="459.2" y="1027.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="462.2" y="1038.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (5 samples, 0.10%)</title><rect x="459.2" y="1011.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="462.2" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.04%)</title><rect x="459.2" y="995.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="462.2" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.04%)</title><rect x="459.7" y="995.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="462.7" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (2 samples, 0.04%)</title><rect x="459.7" y="979.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="462.7" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.04%)</title><rect x="459.7" y="963.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="462.7" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.04%)</title><rect x="459.7" y="947.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="462.7" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.04%)</title><rect x="459.7" y="931.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="462.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (5 samples, 0.10%)</title><rect x="460.3" y="1027.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="463.3" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (5 samples, 0.10%)</title><rect x="460.3" y="1011.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="463.3" y="1022.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (2 samples, 0.04%)</title><rect x="460.3" y="995.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="463.3" y="1006.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (2 samples, 0.04%)</title><rect x="460.8" y="995.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="463.8" y="1006.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (2 samples, 0.04%)</title><rect x="460.8" y="979.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="463.8" y="990.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (2 samples, 0.04%)</title><rect x="460.8" y="963.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.8" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (9 samples, 0.17%)</title><rect x="461.4" y="1027.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="464.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.17%)</title><rect x="461.4" y="1011.0" width="2.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="464.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.17%)</title><rect x="461.4" y="995.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="464.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.17%)</title><rect x="461.4" y="979.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="464.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.17%)</title><rect x="461.4" y="963.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="464.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.17%)</title><rect x="461.4" y="947.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="464.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.17%)</title><rect x="461.4" y="931.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="464.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.17%)</title><rect x="461.4" y="915.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="464.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.17%)</title><rect x="461.4" y="899.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.4" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.06%)</title><rect x="461.4" y="883.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="464.4" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.04%)</title><rect x="461.4" y="867.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="464.4" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.11%)</title><rect x="462.1" y="883.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="465.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="462.3" y="867.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="465.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="462.3" y="851.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="465.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="462.6" y="835.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="465.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="462.6" y="819.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="465.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="462.6" y="803.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="465.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="462.6" y="787.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="465.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="462.6" y="771.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="465.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="462.6" y="755.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="465.6" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.11%)</title><rect x="463.9" y="1107.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="466.9" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.11%)</title><rect x="463.9" y="1091.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="463.9" y="1075.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="466.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="463.9" y="1059.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="466.9" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="463.9" y="1043.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="466.9" y="1054.0"></text>
</g>
<g>
<title>__GI___recv (4 samples, 0.08%)</title><rect x="464.4" y="1075.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="467.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="464.4" y="1059.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="467.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="464.4" y="1043.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="467.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="464.4" y="1027.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="467.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="464.4" y="1011.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="467.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="464.6" y="995.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="467.6" y="1006.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=7869] (78 samples, 1.48%)</title><rect x="465.3" y="1171.0" width="17.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="468.3" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="465.3" y="1155.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="468.3" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="465.3" y="1139.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="468.3" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="465.3" y="1123.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="468.3" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="465.3" y="1107.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="468.3" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="465.3" y="1091.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="468.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (76 samples, 1.45%)</title><rect x="465.7" y="1155.0" width="17.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (18 samples, 0.34%)</title><rect x="465.7" y="1139.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (18 samples, 0.34%)</title><rect x="465.7" y="1123.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="468.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.25%)</title><rect x="466.4" y="1107.0" width="2.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="469.4" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (13 samples, 0.25%)</title><rect x="466.4" y="1091.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="469.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.25%)</title><rect x="466.4" y="1075.0" width="2.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="469.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.25%)</title><rect x="466.4" y="1059.0" width="2.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="469.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.25%)</title><rect x="466.4" y="1043.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="469.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.25%)</title><rect x="466.4" y="1027.0" width="2.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="469.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.25%)</title><rect x="466.4" y="1011.0" width="2.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="469.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="466.6" y="995.0" width="2.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="469.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="467.1" y="979.0" width="2.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="470.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="467.3" y="963.0" width="2.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="470.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="467.3" y="947.0" width="2.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="470.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="468.0" y="931.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="471.0" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (58 samples, 1.10%)</title><rect x="469.7" y="1139.0" width="13.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="472.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (58 samples, 1.10%)</title><rect x="469.7" y="1123.0" width="13.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="472.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (43 samples, 0.82%)</title><rect x="469.7" y="1107.0" width="9.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (37 samples, 0.70%)</title><rect x="470.0" y="1091.0" width="8.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (36 samples, 0.68%)</title><rect x="470.2" y="1075.0" width="8.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="473.2" y="1086.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (33 samples, 0.63%)</title><rect x="470.2" y="1059.0" width="7.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.06%)</title><rect x="470.2" y="1043.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="473.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (30 samples, 0.57%)</title><rect x="470.9" y="1043.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.9" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (6 samples, 0.11%)</title><rect x="471.5" y="1027.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="474.5" y="1038.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (5 samples, 0.10%)</title><rect x="471.8" y="1011.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.8" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (3 samples, 0.06%)</title><rect x="472.2" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.2" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (3 samples, 0.06%)</title><rect x="472.2" y="979.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="475.2" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.04%)</title><rect x="472.2" y="963.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="475.2" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.04%)</title><rect x="472.2" y="947.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="475.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (4 samples, 0.08%)</title><rect x="472.9" y="1027.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.9" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (3 samples, 0.06%)</title><rect x="473.1" y="1011.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.1" y="1022.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (2 samples, 0.04%)</title><rect x="473.3" y="995.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="476.3" y="1006.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (2 samples, 0.04%)</title><rect x="473.3" y="979.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.3" y="990.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (2 samples, 0.04%)</title><rect x="473.3" y="963.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="476.3" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (17 samples, 0.32%)</title><rect x="473.8" y="1027.0" width="3.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="476.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (17 samples, 0.32%)</title><rect x="473.8" y="1011.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="476.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (17 samples, 0.32%)</title><rect x="473.8" y="995.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (15 samples, 0.29%)</title><rect x="474.0" y="979.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (15 samples, 0.29%)</title><rect x="474.0" y="963.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="477.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (15 samples, 0.29%)</title><rect x="474.0" y="947.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="477.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (15 samples, 0.29%)</title><rect x="474.0" y="931.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (15 samples, 0.29%)</title><rect x="474.0" y="915.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="477.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (15 samples, 0.29%)</title><rect x="474.0" y="899.0" width="3.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="477.0" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.06%)</title><rect x="474.0" y="883.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="477.0" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.04%)</title><rect x="474.2" y="867.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="477.2" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (11 samples, 0.21%)</title><rect x="474.9" y="883.0" width="2.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="477.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="475.1" y="867.0" width="2.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="478.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="475.1" y="851.0" width="2.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="478.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="475.6" y="835.0" width="1.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="478.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="475.6" y="819.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="478.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="475.8" y="803.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="478.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="476.3" y="787.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="479.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="476.7" y="771.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="479.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="476.7" y="755.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="479.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.04%)</title><rect x="477.8" y="1059.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="480.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="477.8" y="1043.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="480.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="477.8" y="1027.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="480.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="477.8" y="1011.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="480.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.04%)</title><rect x="478.5" y="1091.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="481.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (2 samples, 0.04%)</title><rect x="478.5" y="1075.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="481.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="478.9" y="1091.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="478.9" y="1075.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="481.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (15 samples, 0.29%)</title><rect x="479.4" y="1107.0" width="3.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (15 samples, 0.29%)</title><rect x="479.4" y="1091.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="482.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="479.8" y="1075.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="482.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="479.8" y="1059.0" width="1.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="482.8" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (6 samples, 0.11%)</title><rect x="479.8" y="1043.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="482.8" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.06%)</title><rect x="480.3" y="1027.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="483.3" y="1038.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="480.5" y="1011.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="483.5" y="1022.0"></text>
</g>
<g>
<title>__GI___recv (7 samples, 0.13%)</title><rect x="481.2" y="1075.0" width="1.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="484.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="481.2" y="1059.0" width="1.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="484.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="481.2" y="1043.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="484.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="481.2" y="1027.0" width="1.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="484.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="481.2" y="1011.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="484.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="481.9" y="995.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="484.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="481.9" y="979.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="484.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="481.9" y="963.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="484.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="481.9" y="947.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="484.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="482.1" y="931.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="485.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="482.1" y="915.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="485.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="482.3" y="899.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="485.3" y="910.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=7876] (44 samples, 0.84%)</title><rect x="482.8" y="1171.0" width="9.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="485.8" y="1182.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (41 samples, 0.78%)</title><rect x="483.4" y="1155.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="486.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.08%)</title><rect x="483.7" y="1139.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.08%)</title><rect x="483.7" y="1123.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="483.7" y="1107.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="486.7" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.06%)</title><rect x="483.7" y="1091.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="486.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="483.7" y="1075.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="486.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="483.7" y="1059.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="486.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="483.7" y="1043.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="486.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="483.7" y="1027.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="486.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="483.7" y="1011.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="486.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="483.9" y="995.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="486.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (36 samples, 0.68%)</title><rect x="484.6" y="1139.0" width="8.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="487.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (35 samples, 0.67%)</title><rect x="484.8" y="1123.0" width="7.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="487.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29 samples, 0.55%)</title><rect x="484.8" y="1107.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="487.8" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (23 samples, 0.44%)</title><rect x="485.0" y="1091.0" width="5.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (23 samples, 0.44%)</title><rect x="485.0" y="1075.0" width="5.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="488.0" y="1086.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (23 samples, 0.44%)</title><rect x="485.0" y="1059.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="488.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (23 samples, 0.44%)</title><rect x="485.0" y="1043.0" width="5.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="488.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (4 samples, 0.08%)</title><rect x="485.7" y="1027.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="488.7" y="1038.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (4 samples, 0.08%)</title><rect x="485.7" y="1011.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.7" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (2 samples, 0.04%)</title><rect x="485.9" y="995.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="488.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (7 samples, 0.13%)</title><rect x="486.6" y="1027.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="489.6" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (5 samples, 0.10%)</title><rect x="486.6" y="1011.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.6" y="1022.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (2 samples, 0.04%)</title><rect x="486.6" y="995.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.6" y="1006.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (2 samples, 0.04%)</title><rect x="486.6" y="979.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="489.6" y="990.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (2 samples, 0.04%)</title><rect x="486.6" y="963.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="489.6" y="974.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (2 samples, 0.04%)</title><rect x="486.6" y="947.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="489.6" y="958.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.get (2 samples, 0.04%)</title><rect x="487.7" y="1011.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="490.7" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (9 samples, 0.17%)</title><rect x="488.1" y="1027.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="491.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.15%)</title><rect x="488.4" y="1011.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="491.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.15%)</title><rect x="488.4" y="995.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="491.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (5 samples, 0.10%)</title><rect x="488.6" y="979.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="491.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.10%)</title><rect x="488.6" y="963.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="491.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.10%)</title><rect x="488.6" y="947.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.10%)</title><rect x="488.6" y="931.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="491.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.10%)</title><rect x="488.6" y="915.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="491.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.10%)</title><rect x="488.6" y="899.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="491.6" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="488.8" y="883.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="491.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="488.8" y="867.0" width="0.9" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="491.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="488.8" y="851.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="491.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="488.8" y="835.0" width="0.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="491.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="488.8" y="819.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="491.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="488.8" y="803.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="491.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="488.8" y="787.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="491.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="488.8" y="771.0" width="0.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="491.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="488.8" y="755.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="491.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (4 samples, 0.08%)</title><rect x="490.2" y="1091.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="493.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.04%)</title><rect x="490.2" y="1075.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 0.11%)</title><rect x="491.3" y="1107.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.3" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.11%)</title><rect x="491.3" y="1091.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.3" y="1102.0"></text>
</g>
<g>
<title>__GI___recv (3 samples, 0.06%)</title><rect x="492.0" y="1075.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="495.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="492.0" y="1059.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="495.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="492.0" y="1043.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="495.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="492.0" y="1027.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="495.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="492.2" y="1011.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="495.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="492.2" y="995.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="495.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="492.2" y="979.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="495.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="492.2" y="963.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="495.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="492.2" y="947.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="495.2" y="958.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=7870] (40 samples, 0.76%)</title><rect x="492.6" y="1171.0" width="9.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="495.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (38 samples, 0.72%)</title><rect x="493.1" y="1155.0" width="8.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="496.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 0.13%)</title><rect x="493.1" y="1139.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.10%)</title><rect x="493.5" y="1123.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="496.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="493.5" y="1107.0" width="1.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="496.5" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.06%)</title><rect x="494.0" y="1091.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="497.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="494.0" y="1075.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="497.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="494.0" y="1059.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="497.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="494.0" y="1043.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="497.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="494.0" y="1027.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="497.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="494.0" y="1011.0" width="0.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="497.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="494.2" y="995.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="497.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (31 samples, 0.59%)</title><rect x="494.7" y="1139.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="497.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (31 samples, 0.59%)</title><rect x="494.7" y="1123.0" width="6.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (22 samples, 0.42%)</title><rect x="494.9" y="1107.0" width="4.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="497.9" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (16 samples, 0.30%)</title><rect x="495.1" y="1091.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="498.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (16 samples, 0.30%)</title><rect x="495.1" y="1075.0" width="3.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="498.1" y="1086.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (14 samples, 0.27%)</title><rect x="495.1" y="1059.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="498.1" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (13 samples, 0.25%)</title><rect x="495.3" y="1043.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="498.3" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (5 samples, 0.10%)</title><rect x="495.3" y="1027.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="498.3" y="1038.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (5 samples, 0.10%)</title><rect x="495.3" y="1011.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.3" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.08%)</title><rect x="495.3" y="995.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="498.3" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (2 samples, 0.04%)</title><rect x="495.6" y="979.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="498.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (7 samples, 0.13%)</title><rect x="496.7" y="1027.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="499.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (6 samples, 0.11%)</title><rect x="496.9" y="1011.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="499.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (6 samples, 0.11%)</title><rect x="496.9" y="995.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="499.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.08%)</title><rect x="497.1" y="979.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="500.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.08%)</title><rect x="497.1" y="963.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="500.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.08%)</title><rect x="497.1" y="947.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="500.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.08%)</title><rect x="497.1" y="931.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.08%)</title><rect x="497.1" y="915.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="500.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.08%)</title><rect x="497.1" y="899.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="500.1" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.06%)</title><rect x="497.1" y="883.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="500.1" y="894.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.04%)</title><rect x="498.2" y="1059.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="501.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="498.2" y="1043.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="501.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="498.2" y="1027.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="501.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="498.2" y="1011.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="501.2" y="1022.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="498.2" y="995.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="501.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.04%)</title><rect x="498.7" y="1091.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="501.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="499.4" y="1091.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="502.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="499.4" y="1075.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="502.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 0.15%)</title><rect x="499.8" y="1107.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="502.8" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 0.15%)</title><rect x="499.8" y="1091.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="502.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="499.8" y="1075.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="502.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="499.8" y="1059.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="502.8" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.06%)</title><rect x="499.8" y="1043.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="502.8" y="1054.0"></text>
</g>
<g>
<title>__GI___recv (5 samples, 0.10%)</title><rect x="500.5" y="1075.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="503.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="500.5" y="1059.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="503.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="500.5" y="1043.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="503.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="500.5" y="1027.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="503.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="500.5" y="1011.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="503.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="500.5" y="995.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="503.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="500.5" y="979.0" width="1.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="503.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="500.5" y="963.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="503.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="500.9" y="947.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="503.9" y="958.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=7864] (47 samples, 0.89%)</title><rect x="501.6" y="1171.0" width="10.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="504.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (43 samples, 0.82%)</title><rect x="502.5" y="1155.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="505.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 0.11%)</title><rect x="503.4" y="1139.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="506.4" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 0.10%)</title><rect x="503.6" y="1123.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="503.6" y="1107.0" width="0.9" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="506.6" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.08%)</title><rect x="503.6" y="1091.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="506.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="503.6" y="1075.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="506.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="503.6" y="1059.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="506.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="503.6" y="1043.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="506.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="503.6" y="1027.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="506.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="503.9" y="1011.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="506.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="503.9" y="995.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="506.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="503.9" y="979.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="506.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="503.9" y="963.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="506.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="503.9" y="947.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="506.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (33 samples, 0.63%)</title><rect x="504.8" y="1139.0" width="7.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="507.8" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (33 samples, 0.63%)</title><rect x="504.8" y="1123.0" width="7.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.8" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (27 samples, 0.51%)</title><rect x="505.0" y="1107.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (24 samples, 0.46%)</title><rect x="505.0" y="1091.0" width="5.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (24 samples, 0.46%)</title><rect x="505.0" y="1075.0" width="5.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="508.0" y="1086.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (21 samples, 0.40%)</title><rect x="505.0" y="1059.0" width="4.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="508.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (20 samples, 0.38%)</title><rect x="505.2" y="1043.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="508.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (6 samples, 0.11%)</title><rect x="505.4" y="1027.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="508.4" y="1038.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (6 samples, 0.11%)</title><rect x="505.4" y="1011.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="508.4" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.08%)</title><rect x="505.6" y="995.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="508.6" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (3 samples, 0.06%)</title><rect x="505.9" y="979.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="508.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (5 samples, 0.10%)</title><rect x="506.8" y="1027.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="509.8" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (5 samples, 0.10%)</title><rect x="506.8" y="1011.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="509.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (8 samples, 0.15%)</title><rect x="507.9" y="1027.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="510.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.15%)</title><rect x="507.9" y="1011.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="510.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.15%)</title><rect x="507.9" y="995.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="510.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.13%)</title><rect x="507.9" y="979.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="510.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.13%)</title><rect x="507.9" y="963.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.13%)</title><rect x="507.9" y="947.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="510.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.13%)</title><rect x="507.9" y="931.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.13%)</title><rect x="507.9" y="915.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="510.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.13%)</title><rect x="507.9" y="899.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="510.9" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="508.1" y="883.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="511.1" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="508.6" y="883.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="511.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="508.8" y="867.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="511.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="508.8" y="851.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="511.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="508.8" y="835.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="511.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="508.8" y="819.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="511.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="508.8" y="803.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="511.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="509.0" y="787.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="512.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="509.0" y="771.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="512.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="509.0" y="755.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="512.0" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.06%)</title><rect x="509.7" y="1059.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="512.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.06%)</title><rect x="509.7" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="512.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.06%)</title><rect x="509.7" y="1027.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="512.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="509.7" y="1011.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="512.7" y="1022.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (2 samples, 0.04%)</title><rect x="509.7" y="995.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="512.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.04%)</title><rect x="510.4" y="1091.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 0.10%)</title><rect x="511.0" y="1107.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="514.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 0.10%)</title><rect x="511.0" y="1091.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="514.0" y="1102.0"></text>
</g>
<g>
<title>__GI___recv (5 samples, 0.10%)</title><rect x="511.0" y="1075.0" width="1.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="514.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="511.0" y="1059.0" width="1.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="514.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="511.0" y="1043.0" width="1.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="514.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="511.0" y="1027.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="514.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="511.0" y="1011.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="514.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="511.3" y="995.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="514.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="511.3" y="979.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="514.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="511.3" y="963.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="514.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="511.5" y="947.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="514.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="511.5" y="931.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="514.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="511.5" y="915.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="514.5" y="926.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=7871] (44 samples, 0.84%)</title><rect x="512.2" y="1171.0" width="9.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="515.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (43 samples, 0.82%)</title><rect x="512.4" y="1155.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="515.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 0.19%)</title><rect x="513.5" y="1139.0" width="2.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="516.5" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (10 samples, 0.19%)</title><rect x="513.5" y="1123.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="514.2" y="1107.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="517.2" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 0.11%)</title><rect x="514.4" y="1091.0" width="1.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="517.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="514.4" y="1075.0" width="1.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="517.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="514.4" y="1059.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="517.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="514.4" y="1043.0" width="1.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="517.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="514.4" y="1027.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="517.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="514.4" y="1011.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="517.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="514.6" y="995.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="517.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="515.1" y="979.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="518.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="515.1" y="963.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="518.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="515.1" y="947.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="518.1" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (28 samples, 0.53%)</title><rect x="515.7" y="1139.0" width="6.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (28 samples, 0.53%)</title><rect x="515.7" y="1123.0" width="6.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="518.7" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (21 samples, 0.40%)</title><rect x="515.7" y="1107.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="518.7" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (17 samples, 0.32%)</title><rect x="515.7" y="1091.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (17 samples, 0.32%)</title><rect x="515.7" y="1075.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="518.7" y="1086.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (16 samples, 0.30%)</title><rect x="515.7" y="1059.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (15 samples, 0.29%)</title><rect x="516.0" y="1043.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="519.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (2 samples, 0.04%)</title><rect x="516.2" y="1027.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.2" y="1038.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (2 samples, 0.04%)</title><rect x="516.2" y="1011.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.2" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (5 samples, 0.10%)</title><rect x="516.6" y="1027.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="519.6" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (4 samples, 0.08%)</title><rect x="516.9" y="1011.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.9" y="1022.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (2 samples, 0.04%)</title><rect x="517.1" y="995.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.1" y="1006.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (2 samples, 0.04%)</title><rect x="517.1" y="979.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.1" y="990.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (2 samples, 0.04%)</title><rect x="517.1" y="963.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.1" y="974.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (2 samples, 0.04%)</title><rect x="517.1" y="947.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.1" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (7 samples, 0.13%)</title><rect x="517.8" y="1027.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.13%)</title><rect x="517.8" y="1011.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.13%)</title><rect x="517.8" y="995.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.13%)</title><rect x="517.8" y="979.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.13%)</title><rect x="517.8" y="963.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.13%)</title><rect x="517.8" y="947.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="520.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.13%)</title><rect x="517.8" y="931.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="520.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.13%)</title><rect x="517.8" y="915.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="520.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.13%)</title><rect x="517.8" y="899.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="520.8" y="910.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.13%)</title><rect x="517.8" y="883.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="520.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="517.8" y="867.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="520.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="517.8" y="851.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="520.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="517.8" y="835.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="520.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="517.8" y="819.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="520.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="518.0" y="803.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="521.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="518.2" y="787.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="521.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="518.4" y="771.0" width="0.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="521.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="518.4" y="755.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="521.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="520.0" y="1091.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="523.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="520.0" y="1075.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="523.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (7 samples, 0.13%)</title><rect x="520.5" y="1107.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="523.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 0.11%)</title><rect x="520.7" y="1091.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="523.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="520.7" y="1075.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="523.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="520.7" y="1059.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="523.7" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="520.7" y="1043.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="523.7" y="1054.0"></text>
</g>
<g>
<title>__GI___recv (3 samples, 0.06%)</title><rect x="521.4" y="1075.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="524.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="521.6" y="1059.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="524.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="521.6" y="1043.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="524.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="521.6" y="1027.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="524.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="521.6" y="1011.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="524.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="521.6" y="995.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="524.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="521.6" y="979.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="524.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="521.6" y="963.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="524.6" y="974.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=7878] (76 samples, 1.45%)</title><rect x="522.0" y="1171.0" width="17.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="525.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (76 samples, 1.45%)</title><rect x="522.0" y="1155.0" width="17.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="525.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (12 samples, 0.23%)</title><rect x="522.3" y="1139.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="525.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (12 samples, 0.23%)</title><rect x="522.3" y="1123.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="525.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="522.3" y="1107.0" width="2.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="525.3" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 0.19%)</title><rect x="522.5" y="1091.0" width="2.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="525.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="522.5" y="1075.0" width="2.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="525.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="522.5" y="1059.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="525.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="522.5" y="1043.0" width="2.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="525.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="522.5" y="1027.0" width="2.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="525.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="522.7" y="1011.0" width="2.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="525.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="522.9" y="995.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="525.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="522.9" y="979.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="525.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="522.9" y="963.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="525.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="523.2" y="947.0" width="1.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="526.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="523.2" y="931.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="526.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (63 samples, 1.20%)</title><rect x="524.9" y="1139.0" width="14.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="527.9" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (63 samples, 1.20%)</title><rect x="524.9" y="1123.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="527.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (40 samples, 0.76%)</title><rect x="525.2" y="1107.0" width="8.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="528.2" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (32 samples, 0.61%)</title><rect x="525.4" y="1091.0" width="7.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (31 samples, 0.59%)</title><rect x="525.6" y="1075.0" width="7.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="528.6" y="1086.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (29 samples, 0.55%)</title><rect x="525.6" y="1059.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="528.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.04%)</title><rect x="525.6" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="528.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="525.6" y="1027.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="528.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="525.6" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="528.6" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (27 samples, 0.51%)</title><rect x="526.1" y="1043.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="529.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (7 samples, 0.13%)</title><rect x="526.3" y="1027.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="529.3" y="1038.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (7 samples, 0.13%)</title><rect x="526.3" y="1011.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="529.3" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.04%)</title><rect x="526.3" y="995.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="529.3" y="1006.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (5 samples, 0.10%)</title><rect x="526.7" y="995.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="529.7" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (4 samples, 0.08%)</title><rect x="526.7" y="979.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.7" y="990.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.04%)</title><rect x="526.7" y="963.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="529.7" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.04%)</title><rect x="526.7" y="947.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="529.7" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.04%)</title><rect x="526.7" y="931.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="529.7" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (2 samples, 0.04%)</title><rect x="527.2" y="963.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.2" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (7 samples, 0.13%)</title><rect x="527.9" y="1027.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="530.9" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (7 samples, 0.13%)</title><rect x="527.9" y="1011.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="530.9" y="1022.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (3 samples, 0.06%)</title><rect x="527.9" y="995.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="530.9" y="1006.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (3 samples, 0.06%)</title><rect x="527.9" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="530.9" y="990.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3 samples, 0.06%)</title><rect x="527.9" y="963.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="530.9" y="974.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3 samples, 0.06%)</title><rect x="527.9" y="947.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (2 samples, 0.04%)</title><rect x="528.1" y="931.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="531.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="528.1" y="915.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="531.1" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="528.1" y="899.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="531.1" y="910.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (2 samples, 0.04%)</title><rect x="528.8" y="995.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="531.8" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (12 samples, 0.23%)</title><rect x="529.4" y="1027.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (12 samples, 0.23%)</title><rect x="529.4" y="1011.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="532.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.23%)</title><rect x="529.4" y="995.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="532.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (2 samples, 0.04%)</title><rect x="529.7" y="979.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (9 samples, 0.17%)</title><rect x="530.1" y="979.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="533.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.17%)</title><rect x="530.1" y="963.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="533.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.17%)</title><rect x="530.1" y="947.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="533.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.17%)</title><rect x="530.1" y="931.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="533.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.17%)</title><rect x="530.1" y="915.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="533.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.17%)</title><rect x="530.1" y="899.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="533.1" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="530.1" y="883.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="533.1" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.11%)</title><rect x="530.8" y="883.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="533.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="531.0" y="867.0" width="1.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="534.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="531.0" y="851.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="534.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="531.0" y="835.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="534.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="531.0" y="819.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="534.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="531.0" y="803.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="534.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="531.2" y="787.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="534.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="531.2" y="771.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="534.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="531.2" y="755.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="534.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.04%)</title><rect x="532.6" y="1091.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="535.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.06%)</title><rect x="533.0" y="1091.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="536.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.04%)</title><rect x="533.2" y="1075.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="536.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.04%)</title><rect x="533.2" y="1059.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="536.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (22 samples, 0.42%)</title><rect x="534.1" y="1107.0" width="5.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="537.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (22 samples, 0.42%)</title><rect x="534.1" y="1091.0" width="5.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="537.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="535.0" y="1075.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="538.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="535.0" y="1059.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="538.0" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.08%)</title><rect x="535.0" y="1043.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="538.0" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.04%)</title><rect x="535.0" y="1027.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="538.0" y="1038.0"></text>
</g>
<g>
<title>__GI___recv (14 samples, 0.27%)</title><rect x="535.9" y="1075.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="538.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="535.9" y="1059.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="538.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="535.9" y="1043.0" width="3.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="538.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="535.9" y="1027.0" width="3.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="538.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="535.9" y="1011.0" width="3.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="538.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="535.9" y="995.0" width="3.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="538.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.25%)</title><rect x="536.2" y="979.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="539.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.25%)</title><rect x="536.2" y="963.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="539.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="536.6" y="947.0" width="2.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="539.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="537.1" y="931.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="540.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="537.1" y="915.0" width="2.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="540.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="538.0" y="899.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="541.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="538.4" y="883.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="541.4" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=7865] (82 samples, 1.56%)</title><rect x="539.1" y="1171.0" width="18.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="542.1" y="1182.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="539.1" y="1155.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="542.1" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="539.1" y="1139.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="542.1" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="539.1" y="1123.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="542.1" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="539.1" y="1107.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="542.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (80 samples, 1.52%)</title><rect x="539.5" y="1155.0" width="18.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="542.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (13 samples, 0.25%)</title><rect x="540.0" y="1139.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.0" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.04%)</title><rect x="540.0" y="1123.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (11 samples, 0.21%)</title><rect x="540.4" y="1123.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="543.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="540.7" y="1107.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="543.7" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (9 samples, 0.17%)</title><rect x="540.9" y="1091.0" width="2.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="543.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="540.9" y="1075.0" width="2.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="543.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="540.9" y="1059.0" width="2.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="543.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="540.9" y="1043.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="543.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="540.9" y="1027.0" width="2.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="543.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="540.9" y="1011.0" width="2.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="543.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="541.3" y="995.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="544.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="541.5" y="979.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="544.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="541.5" y="963.0" width="1.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="544.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="541.5" y="947.0" width="1.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="544.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="541.8" y="931.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="544.8" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (65 samples, 1.24%)</title><rect x="542.9" y="1139.0" width="14.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="545.9" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (63 samples, 1.20%)</title><rect x="543.3" y="1123.0" width="14.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (52 samples, 0.99%)</title><rect x="543.3" y="1107.0" width="11.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="546.3" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (43 samples, 0.82%)</title><rect x="543.3" y="1091.0" width="9.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="546.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (42 samples, 0.80%)</title><rect x="543.6" y="1075.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.6" y="1086.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (38 samples, 0.72%)</title><rect x="543.6" y="1059.0" width="8.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.6" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (37 samples, 0.70%)</title><rect x="543.8" y="1043.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1065614321.linkToTargetMethod (2 samples, 0.04%)</title><rect x="543.8" y="1027.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="546.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/380062173.invokeStatic (2 samples, 0.04%)</title><rect x="543.8" y="1011.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="546.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (6 samples, 0.11%)</title><rect x="544.2" y="1027.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.2" y="1038.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (6 samples, 0.11%)</title><rect x="544.2" y="1011.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="547.2" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (4 samples, 0.08%)</title><rect x="544.5" y="995.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="547.5" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (4 samples, 0.08%)</title><rect x="544.5" y="979.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="547.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (14 samples, 0.27%)</title><rect x="545.6" y="1027.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="548.6" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (2 samples, 0.04%)</title><rect x="545.8" y="1011.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="548.8" y="1022.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (10 samples, 0.19%)</title><rect x="546.3" y="1011.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="549.3" y="1022.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (5 samples, 0.10%)</title><rect x="546.5" y="995.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="549.5" y="1006.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (4 samples, 0.08%)</title><rect x="546.7" y="979.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="549.7" y="990.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3 samples, 0.06%)</title><rect x="546.9" y="963.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.9" y="974.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (3 samples, 0.06%)</title><rect x="546.9" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="549.9" y="958.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.separatorStart (2 samples, 0.04%)</title><rect x="546.9" y="931.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.9" y="942.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.indexIn (2 samples, 0.04%)</title><rect x="546.9" y="915.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="549.9" y="926.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (2 samples, 0.04%)</title><rect x="547.6" y="995.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="550.6" y="1006.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (2 samples, 0.04%)</title><rect x="547.6" y="979.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="550.6" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (15 samples, 0.29%)</title><rect x="548.7" y="1027.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="551.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.29%)</title><rect x="548.7" y="1011.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="551.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.27%)</title><rect x="549.0" y="995.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="552.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (11 samples, 0.21%)</title><rect x="549.6" y="979.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 0.21%)</title><rect x="549.6" y="963.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="552.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.21%)</title><rect x="549.6" y="947.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="552.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.21%)</title><rect x="549.6" y="931.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="552.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.21%)</title><rect x="549.6" y="915.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.21%)</title><rect x="549.6" y="899.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.6" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.06%)</title><rect x="549.6" y="883.0" width="0.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="552.6" y="894.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.06%)</title><rect x="549.6" y="867.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="552.6" y="878.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (8 samples, 0.15%)</title><rect x="550.3" y="883.0" width="1.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="553.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="550.5" y="867.0" width="1.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="553.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="550.5" y="851.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="553.5" y="862.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="550.7" y="835.0" width="1.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="553.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="550.7" y="819.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="553.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="551.0" y="803.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="554.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="551.2" y="787.0" width="0.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="554.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="551.4" y="771.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="554.4" y="782.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="551.4" y="755.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="554.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.04%)</title><rect x="552.1" y="1059.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.1" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="552.1" y="1043.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="555.1" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.04%)</title><rect x="552.5" y="1059.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="552.5" y="1043.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="555.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="552.5" y="1027.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="552.5" y="1011.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.5" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.10%)</title><rect x="553.0" y="1091.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.06%)</title><rect x="553.2" y="1075.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.08%)</title><rect x="554.1" y="1091.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="557.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.08%)</title><rect x="554.1" y="1075.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="554.1" y="1059.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="557.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="554.6" y="1059.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (11 samples, 0.21%)</title><rect x="555.0" y="1107.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="558.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (11 samples, 0.21%)</title><rect x="555.0" y="1091.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="558.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="555.2" y="1075.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="558.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="555.2" y="1059.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="558.2" y="1070.0"></text>
</g>
<g>
<title>__GI___recv (8 samples, 0.15%)</title><rect x="555.7" y="1075.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="558.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="555.7" y="1059.0" width="1.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="558.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="555.7" y="1043.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="558.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="555.7" y="1027.0" width="1.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="558.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="555.7" y="1011.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="558.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="555.9" y="995.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="558.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="555.9" y="979.0" width="1.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="558.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="556.1" y="963.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="559.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="556.6" y="947.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="559.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="556.8" y="931.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="559.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="556.8" y="915.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="559.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="557.0" y="899.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="560.0" y="910.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=7879] (40 samples, 0.76%)</title><rect x="557.5" y="1171.0" width="9.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="560.5" y="1182.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (39 samples, 0.74%)</title><rect x="557.7" y="1155.0" width="8.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="560.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 0.08%)</title><rect x="557.9" y="1139.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="560.9" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 0.08%)</title><rect x="557.9" y="1123.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="560.9" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="558.2" y="1107.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="561.2" y="1118.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.06%)</title><rect x="558.2" y="1091.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="561.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="558.2" y="1075.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="561.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="558.2" y="1059.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="561.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="558.2" y="1043.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="561.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="558.2" y="1027.0" width="0.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="561.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="558.2" y="1011.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="561.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="558.2" y="995.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="561.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="558.2" y="979.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="561.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="558.2" y="963.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="561.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="558.4" y="947.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="561.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="558.4" y="931.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="561.4" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (34 samples, 0.65%)</title><rect x="558.8" y="1139.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="561.8" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (32 samples, 0.61%)</title><rect x="559.3" y="1123.0" width="7.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (29 samples, 0.55%)</title><rect x="559.3" y="1107.0" width="6.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.3" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (23 samples, 0.44%)</title><rect x="559.3" y="1091.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (22 samples, 0.42%)</title><rect x="559.5" y="1075.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.5" y="1086.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (22 samples, 0.42%)</title><rect x="559.5" y="1059.0" width="4.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="562.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.06%)</title><rect x="559.5" y="1043.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.5" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (19 samples, 0.36%)</title><rect x="560.2" y="1043.0" width="4.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="563.2" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (5 samples, 0.10%)</title><rect x="561.1" y="1027.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.1" y="1038.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (5 samples, 0.10%)</title><rect x="561.1" y="1011.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="564.1" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (3 samples, 0.06%)</title><rect x="561.3" y="995.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.3" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (3 samples, 0.06%)</title><rect x="561.3" y="979.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="564.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (2 samples, 0.04%)</title><rect x="562.2" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="565.2" y="1038.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (2 samples, 0.04%)</title><rect x="562.2" y="1011.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="565.2" y="1022.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (2 samples, 0.04%)</title><rect x="562.2" y="995.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.2" y="1006.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (2 samples, 0.04%)</title><rect x="562.2" y="979.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.2" y="990.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (2 samples, 0.04%)</title><rect x="562.2" y="963.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="565.2" y="974.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (2 samples, 0.04%)</title><rect x="562.2" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="565.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (8 samples, 0.15%)</title><rect x="562.6" y="1027.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.15%)</title><rect x="562.6" y="1011.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="565.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.15%)</title><rect x="562.6" y="995.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="565.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.15%)</title><rect x="562.6" y="979.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="565.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.15%)</title><rect x="562.6" y="963.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.15%)</title><rect x="562.6" y="947.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.6" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.15%)</title><rect x="562.6" y="931.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.15%)</title><rect x="562.6" y="915.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="565.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.15%)</title><rect x="562.6" y="899.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="565.6" y="910.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="562.9" y="883.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="565.9" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="563.8" y="883.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="566.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="563.8" y="867.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="566.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="563.8" y="851.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="566.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="563.8" y="835.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="566.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="563.8" y="819.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="566.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="563.8" y="803.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="566.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="564.0" y="787.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="567.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="564.0" y="771.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="567.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.08%)</title><rect x="564.9" y="1091.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="567.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.08%)</title><rect x="564.9" y="1075.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="567.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.06%)</title><rect x="565.8" y="1107.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="568.8" y="1118.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.06%)</title><rect x="565.8" y="1091.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="565.8" y="1075.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="568.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="565.8" y="1059.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="568.8" y="1070.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.06%)</title><rect x="565.8" y="1043.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="568.8" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.04%)</title><rect x="566.0" y="1027.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="569.0" y="1038.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="566.0" y="1011.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="569.0" y="1022.0"></text>
</g>
<g>
<title>[ProxyWorker-0 tid=7929] (309 samples, 5.88%)</title><rect x="566.5" y="1171.0" width="69.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="569.5" y="1182.0">[ProxyW..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (2 samples, 0.04%)</title><rect x="566.7" y="1155.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="569.7" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (2 samples, 0.04%)</title><rect x="566.7" y="1139.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="569.7" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (2 samples, 0.04%)</title><rect x="566.7" y="1123.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="569.7" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="566.7" y="1107.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="569.7" y="1118.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="566.7" y="1091.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="569.7" y="1102.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.08%)</title><rect x="567.1" y="1155.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="570.1" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.08%)</title><rect x="567.1" y="1139.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="570.1" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="567.1" y="1123.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="570.1" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (2 samples, 0.04%)</title><rect x="567.1" y="1107.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="570.1" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (2 samples, 0.04%)</title><rect x="567.6" y="1123.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="570.6" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.04%)</title><rect x="567.6" y="1107.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="570.6" y="1118.0"></text>
</g>
<g>
<title>[not_walkable_Java] (2 samples, 0.04%)</title><rect x="568.3" y="1155.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="571.3" y="1166.0"></text>
</g>
<g>
<title>[unknown_Java] (5 samples, 0.10%)</title><rect x="568.7" y="1155.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="571.7" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="568.9" y="1139.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="571.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="569.1" y="1123.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="572.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="569.1" y="1107.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="572.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="569.1" y="1091.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="572.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="569.1" y="1075.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="572.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="569.1" y="1059.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="572.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="569.1" y="1043.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="572.1" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="569.1" y="1027.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="572.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="569.1" y="1011.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="572.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/Thread.run (294 samples, 5.59%)</title><rect x="569.8" y="1155.0" width="66.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="572.8" y="1166.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (294 samples, 5.59%)</title><rect x="569.8" y="1139.0" width="66.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.8" y="1150.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (294 samples, 5.59%)</title><rect x="569.8" y="1123.0" width="66.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.8" y="1134.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (104 samples, 1.98%)</title><rect x="569.8" y="1107.0" width="23.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="572.8" y="1118.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (103 samples, 1.96%)</title><rect x="570.0" y="1091.0" width="23.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.0" y="1102.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (103 samples, 1.96%)</title><rect x="570.0" y="1075.0" width="23.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="573.0" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1181434552.apply (103 samples, 1.96%)</title><rect x="570.0" y="1059.0" width="23.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="573.0" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (103 samples, 1.96%)</title><rect x="570.0" y="1043.0" width="23.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.0" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (103 samples, 1.96%)</title><rect x="570.0" y="1027.0" width="23.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="573.0" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (102 samples, 1.94%)</title><rect x="570.0" y="1011.0" width="22.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="573.0" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (102 samples, 1.94%)</title><rect x="570.0" y="995.0" width="22.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.0" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (102 samples, 1.94%)</title><rect x="570.0" y="979.0" width="22.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="573.0" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (48 samples, 0.91%)</title><rect x="570.0" y="963.0" width="10.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="573.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (48 samples, 0.91%)</title><rect x="570.0" y="947.0" width="10.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (48 samples, 0.91%)</title><rect x="570.0" y="931.0" width="10.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="573.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="570.0" y="915.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="570.0" y="899.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/2067260339.apply (46 samples, 0.87%)</title><rect x="570.5" y="915.0" width="10.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="573.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (46 samples, 0.87%)</title><rect x="570.5" y="899.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="573.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (46 samples, 0.87%)</title><rect x="570.5" y="883.0" width="10.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="573.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/354122190.apply (46 samples, 0.87%)</title><rect x="570.5" y="867.0" width="10.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="573.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (46 samples, 0.87%)</title><rect x="570.5" y="851.0" width="10.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (45 samples, 0.86%)</title><rect x="570.7" y="835.0" width="10.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="573.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (36 samples, 0.68%)</title><rect x="570.9" y="819.0" width="8.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="573.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (36 samples, 0.68%)</title><rect x="570.9" y="803.0" width="8.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="573.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$237/1679310185.apply (34 samples, 0.65%)</title><rect x="571.2" y="787.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (34 samples, 0.65%)</title><rect x="571.2" y="771.0" width="7.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="574.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.04%)</title><rect x="571.6" y="755.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="574.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.04%)</title><rect x="571.6" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="574.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="571.6" y="723.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="574.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="571.6" y="707.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.04%)</title><rect x="571.6" y="691.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="574.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.04%)</title><rect x="571.6" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="574.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.04%)</title><rect x="571.6" y="659.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="574.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.04%)</title><rect x="571.6" y="643.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.04%)</title><rect x="571.6" y="627.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="574.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.04%)</title><rect x="571.6" y="611.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="574.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.04%)</title><rect x="571.6" y="595.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.04%)</title><rect x="571.6" y="579.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="574.6" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.04%)</title><rect x="571.6" y="563.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.6" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.04%)</title><rect x="571.6" y="547.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.6" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.04%)</title><rect x="571.6" y="531.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.6" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.04%)</title><rect x="571.6" y="515.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="574.6" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.04%)</title><rect x="571.6" y="499.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="574.6" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.04%)</title><rect x="571.6" y="483.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="574.6" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.04%)</title><rect x="571.6" y="467.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="571.6" y="451.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="574.6" y="462.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="571.6" y="435.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="574.6" y="446.0"></text>
</g>
<g>
<title>__GI___writev (2 samples, 0.04%)</title><rect x="571.6" y="419.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="574.6" y="430.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="571.6" y="403.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="574.6" y="414.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="571.6" y="387.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="574.6" y="398.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="571.6" y="371.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="574.6" y="382.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="571.6" y="355.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="574.6" y="366.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="571.6" y="339.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="574.6" y="350.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="571.6" y="323.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="574.6" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (10 samples, 0.19%)</title><rect x="572.1" y="755.0" width="2.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (10 samples, 0.19%)</title><rect x="572.1" y="739.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (9 samples, 0.17%)</title><rect x="572.3" y="723.0" width="2.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (9 samples, 0.17%)</title><rect x="572.3" y="707.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="575.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (9 samples, 0.17%)</title><rect x="572.3" y="691.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (8 samples, 0.15%)</title><rect x="572.5" y="675.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="575.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (8 samples, 0.15%)</title><rect x="572.5" y="659.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.5" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (8 samples, 0.15%)</title><rect x="572.5" y="643.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="575.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (8 samples, 0.15%)</title><rect x="572.5" y="627.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="575.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="573.0" y="611.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="576.0" y="622.0"></text>
</g>
<g>
<title>write (6 samples, 0.11%)</title><rect x="573.0" y="595.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="576.0" y="606.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="573.0" y="579.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="576.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="573.0" y="563.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="576.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="573.0" y="547.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="576.0" y="558.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="573.0" y="531.0" width="1.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="576.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="573.0" y="515.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="576.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="573.0" y="499.0" width="1.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="576.0" y="510.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="573.0" y="483.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="576.0" y="494.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="573.0" y="467.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="576.0" y="478.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="573.0" y="451.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="576.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="573.0" y="435.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="576.0" y="446.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="573.2" y="419.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="576.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (19 samples, 0.36%)</title><rect x="574.3" y="755.0" width="4.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="577.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (10 samples, 0.19%)</title><rect x="574.8" y="739.0" width="2.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="577.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (2 samples, 0.04%)</title><rect x="575.2" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="578.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (6 samples, 0.11%)</title><rect x="575.7" y="723.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="578.7" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (6 samples, 0.11%)</title><rect x="575.7" y="707.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="578.7" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (6 samples, 0.11%)</title><rect x="575.7" y="691.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="578.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (5 samples, 0.10%)</title><rect x="575.9" y="675.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="578.9" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (5 samples, 0.10%)</title><rect x="575.9" y="659.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="578.9" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.08%)</title><rect x="576.1" y="643.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="579.1" y="654.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.04%)</title><rect x="576.1" y="627.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="579.1" y="638.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.04%)</title><rect x="576.1" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.1" y="622.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="576.1" y="595.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="579.1" y="606.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.04%)</title><rect x="576.6" y="627.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="579.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (2 samples, 0.04%)</title><rect x="577.0" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="580.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (2 samples, 0.04%)</title><rect x="577.5" y="739.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="580.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.06%)</title><rect x="577.9" y="739.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="580.9" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.04%)</title><rect x="578.1" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="581.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (8 samples, 0.15%)</title><rect x="579.0" y="819.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="582.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (7 samples, 0.13%)</title><rect x="579.2" y="803.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="582.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.06%)</title><rect x="579.5" y="787.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="582.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.04%)</title><rect x="579.7" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.first (2 samples, 0.04%)</title><rect x="579.7" y="755.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="582.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.06%)</title><rect x="580.1" y="787.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="583.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.06%)</title><rect x="580.1" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.04%)</title><rect x="580.4" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="583.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.04%)</title><rect x="580.4" y="739.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="583.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.04%)</title><rect x="580.4" y="723.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="583.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (53 samples, 1.01%)</title><rect x="581.0" y="963.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="584.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (52 samples, 0.99%)</title><rect x="581.3" y="947.0" width="11.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="584.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (45 samples, 0.86%)</title><rect x="581.5" y="931.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (45 samples, 0.86%)</title><rect x="581.5" y="915.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="584.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (45 samples, 0.86%)</title><rect x="581.5" y="899.0" width="10.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="584.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$160/1778891811.apply (44 samples, 0.84%)</title><rect x="581.7" y="883.0" width="9.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (44 samples, 0.84%)</title><rect x="581.7" y="867.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (44 samples, 0.84%)</title><rect x="581.7" y="851.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (13 samples, 0.25%)</title><rect x="581.9" y="835.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="584.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (13 samples, 0.25%)</title><rect x="581.9" y="819.0" width="3.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (13 samples, 0.25%)</title><rect x="581.9" y="803.0" width="3.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="584.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/1774108670.apply (12 samples, 0.23%)</title><rect x="581.9" y="787.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="584.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (12 samples, 0.23%)</title><rect x="581.9" y="771.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (12 samples, 0.23%)</title><rect x="581.9" y="755.0" width="2.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="584.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (12 samples, 0.23%)</title><rect x="581.9" y="739.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="584.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (12 samples, 0.23%)</title><rect x="581.9" y="723.0" width="2.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="584.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (10 samples, 0.19%)</title><rect x="581.9" y="707.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="584.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (9 samples, 0.17%)</title><rect x="581.9" y="691.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (9 samples, 0.17%)</title><rect x="581.9" y="675.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="584.9" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 0.17%)</title><rect x="581.9" y="659.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="584.9" y="670.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (8 samples, 0.15%)</title><rect x="581.9" y="643.0" width="1.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="584.9" y="654.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.06%)</title><rect x="581.9" y="627.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="584.9" y="638.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.06%)</title><rect x="582.8" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="585.8" y="638.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.04%)</title><rect x="583.1" y="611.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="586.1" y="622.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="583.1" y="595.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="586.1" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (2 samples, 0.04%)</title><rect x="584.2" y="707.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="587.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="584.2" y="691.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="587.2" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="584.2" y="675.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.2" y="686.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="584.2" y="659.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="587.2" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="584.2" y="643.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="587.2" y="654.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="584.2" y="627.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="587.2" y="638.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="584.2" y="611.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="587.2" y="622.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="584.2" y="595.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="587.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (30 samples, 0.57%)</title><rect x="584.9" y="835.0" width="6.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="587.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (28 samples, 0.53%)</title><rect x="584.9" y="819.0" width="6.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="587.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (4 samples, 0.08%)</title><rect x="585.3" y="803.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="588.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.04%)</title><rect x="586.2" y="803.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="589.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (4 samples, 0.08%)</title><rect x="586.6" y="803.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="589.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (4 samples, 0.08%)</title><rect x="586.6" y="787.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (4 samples, 0.08%)</title><rect x="586.6" y="771.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="589.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (3 samples, 0.06%)</title><rect x="586.9" y="755.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="589.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (16 samples, 0.30%)</title><rect x="587.5" y="803.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="590.5" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (16 samples, 0.30%)</title><rect x="587.5" y="787.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="590.5" y="798.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (6 samples, 0.11%)</title><rect x="587.8" y="771.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="590.8" y="782.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="588.2" y="755.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="591.2" y="766.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.04%)</title><rect x="588.7" y="755.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="591.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$166/752533844.run (8 samples, 0.15%)</title><rect x="589.3" y="771.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="592.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (8 samples, 0.15%)</title><rect x="589.3" y="755.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.3" y="766.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (8 samples, 0.15%)</title><rect x="589.3" y="739.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="592.3" y="750.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (7 samples, 0.13%)</title><rect x="589.6" y="723.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="592.6" y="734.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.11%)</title><rect x="589.8" y="707.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.8" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.11%)</title><rect x="589.8" y="691.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="592.8" y="702.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (6 samples, 0.11%)</title><rect x="589.8" y="675.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="592.8" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (4 samples, 0.08%)</title><rect x="590.2" y="659.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.04%)</title><rect x="591.1" y="819.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="591.1" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.04%)</title><rect x="591.1" y="787.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="594.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="591.1" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="594.1" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="591.1" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="594.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (4 samples, 0.08%)</title><rect x="592.0" y="931.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.04%)</title><rect x="592.0" y="915.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="595.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="592.0" y="899.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="595.0" y="910.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="592.0" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (2 samples, 0.04%)</title><rect x="592.5" y="915.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (38 samples, 0.72%)</title><rect x="593.2" y="1107.0" width="8.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="596.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (36 samples, 0.68%)</title><rect x="593.6" y="1091.0" width="8.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (23 samples, 0.44%)</title><rect x="593.6" y="1075.0" width="5.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (5 samples, 0.10%)</title><rect x="593.6" y="1059.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (5 samples, 0.10%)</title><rect x="593.6" y="1043.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.10%)</title><rect x="593.6" y="1027.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.10%)</title><rect x="593.6" y="1011.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.10%)</title><rect x="593.6" y="995.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="596.6" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.10%)</title><rect x="593.6" y="979.0" width="1.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="596.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="593.6" y="963.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="596.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="593.6" y="947.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="596.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="593.6" y="931.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="596.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="593.6" y="915.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="596.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="593.6" y="899.0" width="1.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="596.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="593.6" y="883.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="596.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="593.6" y="867.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="596.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="593.8" y="851.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="596.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 0.34%)</title><rect x="594.7" y="1059.0" width="4.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="597.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.34%)</title><rect x="594.7" y="1043.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="597.7" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.11%)</title><rect x="594.7" y="1027.0" width="1.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="597.7" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="594.7" y="1011.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="597.7" y="1022.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.04%)</title><rect x="595.4" y="1011.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="598.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="595.4" y="995.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="598.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="595.4" y="979.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="598.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="596.1" y="1027.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="599.1" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (10 samples, 0.19%)</title><rect x="596.1" y="1011.0" width="2.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="599.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="596.3" y="995.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="599.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="596.3" y="979.0" width="2.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="599.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="596.3" y="963.0" width="2.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="599.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="596.3" y="947.0" width="2.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="599.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="596.3" y="931.0" width="2.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="599.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="596.7" y="915.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="599.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="596.7" y="899.0" width="1.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="599.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="597.0" y="883.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="600.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="597.2" y="867.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="600.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (4 samples, 0.08%)</title><rect x="598.8" y="1075.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="601.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.08%)</title><rect x="598.8" y="1059.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="601.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (4 samples, 0.08%)</title><rect x="598.8" y="1043.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="601.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.04%)</title><rect x="598.8" y="1027.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title><rect x="598.8" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="601.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.04%)</title><rect x="599.2" y="1027.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.04%)</title><rect x="599.2" y="1011.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (9 samples, 0.17%)</title><rect x="599.7" y="1075.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="602.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (9 samples, 0.17%)</title><rect x="599.7" y="1059.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="602.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (9 samples, 0.17%)</title><rect x="599.7" y="1043.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (9 samples, 0.17%)</title><rect x="599.7" y="1027.0" width="2.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (9 samples, 0.17%)</title><rect x="599.7" y="1011.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="602.7" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.08%)</title><rect x="599.7" y="995.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="602.7" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.04%)</title><rect x="599.9" y="979.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="602.9" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="600.8" y="995.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="603.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="600.8" y="979.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="603.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="600.8" y="963.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="603.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="600.8" y="947.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="603.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="600.8" y="931.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="603.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="600.8" y="915.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="603.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="600.8" y="899.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="603.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="600.8" y="883.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="603.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="601.0" y="867.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="604.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/808714778.run (63 samples, 1.20%)</title><rect x="601.7" y="1107.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (63 samples, 1.20%)</title><rect x="601.7" y="1091.0" width="14.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (63 samples, 1.20%)</title><rect x="601.7" y="1075.0" width="14.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (62 samples, 1.18%)</title><rect x="601.9" y="1059.0" width="13.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (62 samples, 1.18%)</title><rect x="601.9" y="1043.0" width="13.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="604.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (62 samples, 1.18%)</title><rect x="601.9" y="1027.0" width="13.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="604.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (62 samples, 1.18%)</title><rect x="601.9" y="1011.0" width="13.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="604.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (62 samples, 1.18%)</title><rect x="601.9" y="995.0" width="13.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (62 samples, 1.18%)</title><rect x="601.9" y="979.0" width="13.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="604.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (62 samples, 1.18%)</title><rect x="601.9" y="963.0" width="13.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (61 samples, 1.16%)</title><rect x="602.1" y="947.0" width="13.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (15 samples, 0.29%)</title><rect x="602.1" y="931.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="605.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (13 samples, 0.25%)</title><rect x="602.6" y="915.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (13 samples, 0.25%)</title><rect x="602.6" y="899.0" width="2.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="605.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (13 samples, 0.25%)</title><rect x="602.6" y="883.0" width="2.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="605.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.25%)</title><rect x="602.6" y="867.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8 samples, 0.15%)</title><rect x="602.8" y="851.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="605.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$269/19789958.apply (3 samples, 0.06%)</title><rect x="603.3" y="835.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (3 samples, 0.06%)</title><rect x="603.3" y="819.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (3 samples, 0.06%)</title><rect x="603.3" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="606.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (3 samples, 0.06%)</title><rect x="603.3" y="787.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.06%)</title><rect x="603.3" y="771.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.06%)</title><rect x="603.3" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.04%)</title><rect x="603.5" y="739.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="606.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/1774108670.apply (2 samples, 0.04%)</title><rect x="603.5" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="606.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/10694432.apply (3 samples, 0.06%)</title><rect x="603.9" y="835.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="606.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (3 samples, 0.06%)</title><rect x="603.9" y="819.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (3 samples, 0.06%)</title><rect x="603.9" y="803.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="606.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (3 samples, 0.06%)</title><rect x="603.9" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="606.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (3 samples, 0.06%)</title><rect x="603.9" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.06%)</title><rect x="603.9" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/102085371.run (3 samples, 0.06%)</title><rect x="603.9" y="739.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3 samples, 0.06%)</title><rect x="603.9" y="723.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (2 samples, 0.04%)</title><rect x="604.2" y="707.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (2 samples, 0.04%)</title><rect x="604.2" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.2" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="604.2" y="675.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.2" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="604.2" y="659.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="607.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="604.2" y="643.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.2" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.04%)</title><rect x="604.2" y="627.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.2" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.04%)</title><rect x="604.2" y="611.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (2 samples, 0.04%)</title><rect x="604.2" y="595.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.2" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (2 samples, 0.04%)</title><rect x="604.2" y="579.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.2" y="590.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.04%)</title><rect x="604.2" y="563.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="607.2" y="574.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.04%)</title><rect x="604.2" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.2" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.04%)</title><rect x="604.2" y="531.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="607.2" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.04%)</title><rect x="604.2" y="515.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="607.2" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.04%)</title><rect x="604.2" y="499.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="607.2" y="510.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.04%)</title><rect x="604.2" y="483.0" width="0.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="607.2" y="494.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.04%)</title><rect x="604.2" y="467.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="607.2" y="478.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.04%)</title><rect x="604.2" y="451.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="607.2" y="462.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.04%)</title><rect x="604.2" y="435.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="607.2" y="446.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.04%)</title><rect x="604.2" y="419.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="607.2" y="430.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.04%)</title><rect x="604.2" y="403.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="607.2" y="414.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="604.2" y="387.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="607.2" y="398.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.04%)</title><rect x="604.2" y="371.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="607.2" y="382.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (3 samples, 0.06%)</title><rect x="604.6" y="851.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="607.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (3 samples, 0.06%)</title><rect x="604.6" y="835.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="607.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (2 samples, 0.04%)</title><rect x="605.5" y="931.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="608.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.04%)</title><rect x="605.5" y="915.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.04%)</title><rect x="605.5" y="899.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="608.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (44 samples, 0.84%)</title><rect x="605.9" y="931.0" width="9.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="608.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (44 samples, 0.84%)</title><rect x="605.9" y="915.0" width="9.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="608.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (44 samples, 0.84%)</title><rect x="605.9" y="899.0" width="9.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="608.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (44 samples, 0.84%)</title><rect x="605.9" y="883.0" width="9.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="608.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (43 samples, 0.82%)</title><rect x="606.2" y="867.0" width="9.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.2" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (43 samples, 0.82%)</title><rect x="606.2" y="851.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="609.2" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (43 samples, 0.82%)</title><rect x="606.2" y="835.0" width="9.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="609.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="606.2" y="819.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="609.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="606.2" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.04%)</title><rect x="606.2" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="609.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.04%)</title><rect x="606.2" y="771.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="609.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (2 samples, 0.04%)</title><rect x="606.2" y="755.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="609.2" y="766.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (41 samples, 0.78%)</title><rect x="606.6" y="819.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="609.6" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (41 samples, 0.78%)</title><rect x="606.6" y="803.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="609.6" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (39 samples, 0.74%)</title><rect x="607.1" y="787.0" width="8.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.1" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (39 samples, 0.74%)</title><rect x="607.1" y="771.0" width="8.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="610.1" y="782.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.74%)</title><rect x="607.1" y="755.0" width="8.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="610.1" y="766.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.74%)</title><rect x="607.1" y="739.0" width="8.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="610.1" y="750.0"></text>
</g>
<g>
<title>__GI___writev (39 samples, 0.74%)</title><rect x="607.1" y="723.0" width="8.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="610.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.72%)</title><rect x="607.3" y="707.0" width="8.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="610.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.72%)</title><rect x="607.3" y="691.0" width="8.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="610.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.72%)</title><rect x="607.3" y="675.0" width="8.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="610.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.72%)</title><rect x="607.3" y="659.0" width="8.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="610.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.72%)</title><rect x="607.3" y="643.0" width="8.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="610.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.72%)</title><rect x="607.3" y="627.0" width="8.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="610.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.72%)</title><rect x="607.3" y="611.0" width="8.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="610.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="607.7" y="595.0" width="8.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="610.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="607.7" y="579.0" width="8.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="610.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="607.7" y="563.0" width="8.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="610.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="607.7" y="547.0" width="8.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="610.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="607.7" y="531.0" width="8.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="610.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="607.7" y="515.0" width="8.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="610.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.65%)</title><rect x="608.2" y="499.0" width="7.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="611.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.65%)</title><rect x="608.2" y="483.0" width="7.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="611.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.61%)</title><rect x="608.6" y="467.0" width="7.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="611.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.61%)</title><rect x="608.6" y="451.0" width="7.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="611.6" y="462.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.61%)</title><rect x="608.6" y="435.0" width="7.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="611.6" y="446.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.59%)</title><rect x="608.9" y="419.0" width="6.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="611.9" y="430.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.59%)</title><rect x="608.9" y="403.0" width="6.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="611.9" y="414.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.57%)</title><rect x="609.1" y="387.0" width="6.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="612.1" y="398.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.55%)</title><rect x="609.3" y="371.0" width="6.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="612.3" y="382.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.53%)</title><rect x="609.5" y="355.0" width="6.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="612.5" y="366.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.49%)</title><rect x="610.0" y="339.0" width="5.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="613.0" y="350.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.42%)</title><rect x="610.9" y="323.0" width="4.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="613.9" y="334.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.38%)</title><rect x="611.3" y="307.0" width="4.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="614.3" y="318.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.36%)</title><rect x="611.6" y="291.0" width="4.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="614.6" y="302.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.34%)</title><rect x="611.8" y="275.0" width="4.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="614.8" y="286.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.34%)</title><rect x="611.8" y="259.0" width="4.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="614.8" y="270.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.34%)</title><rect x="611.8" y="243.0" width="4.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="614.8" y="254.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.34%)</title><rect x="611.8" y="227.0" width="4.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="614.8" y="238.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.32%)</title><rect x="612.0" y="211.0" width="3.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="615.0" y="222.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="612.7" y="195.0" width="3.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="615.7" y="206.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="612.7" y="179.0" width="3.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="615.7" y="190.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="612.7" y="163.0" width="3.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="615.7" y="174.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="612.7" y="147.0" width="3.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="615.7" y="158.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="613.4" y="131.0" width="2.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="616.4" y="142.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="613.4" y="115.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="616.4" y="126.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="613.6" y="99.0" width="2.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="616.6" y="110.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="613.8" y="83.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="616.8" y="94.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="614.5" y="67.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="617.5" y="78.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="614.5" y="51.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="617.5" y="62.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="614.5" y="35.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="617.5" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (89 samples, 1.69%)</title><rect x="615.8" y="1107.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (89 samples, 1.69%)</title><rect x="615.8" y="1091.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (50 samples, 0.95%)</title><rect x="615.8" y="1075.0" width="11.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="618.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (49 samples, 0.93%)</title><rect x="616.0" y="1059.0" width="11.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (49 samples, 0.93%)</title><rect x="616.0" y="1043.0" width="11.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="619.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (5 samples, 0.10%)</title><rect x="616.0" y="1027.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="619.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (5 samples, 0.10%)</title><rect x="616.0" y="1011.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="619.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5 samples, 0.10%)</title><rect x="616.0" y="995.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5 samples, 0.10%)</title><rect x="616.0" y="979.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.10%)</title><rect x="616.0" y="963.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="619.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (4 samples, 0.08%)</title><rect x="616.3" y="947.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="619.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.06%)</title><rect x="616.5" y="931.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="619.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.06%)</title><rect x="616.5" y="915.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="619.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.06%)</title><rect x="616.5" y="899.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.06%)</title><rect x="616.5" y="883.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="619.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.04%)</title><rect x="616.7" y="867.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="619.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="616.7" y="851.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="619.7" y="862.0"></text>
</g>
<g>
<title>write (2 samples, 0.04%)</title><rect x="616.7" y="835.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="619.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="616.7" y="819.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="619.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="616.7" y="803.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="619.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="616.7" y="787.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="619.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="616.7" y="771.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="619.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="616.7" y="755.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="619.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="616.7" y="739.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="619.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="616.7" y="723.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="619.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (44 samples, 0.84%)</title><rect x="617.2" y="1027.0" width="9.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="620.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (41 samples, 0.78%)</title><rect x="617.4" y="1011.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (41 samples, 0.78%)</title><rect x="617.4" y="995.0" width="9.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (41 samples, 0.78%)</title><rect x="617.4" y="979.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.4" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (25 samples, 0.48%)</title><rect x="617.4" y="963.0" width="5.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="620.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (25 samples, 0.48%)</title><rect x="617.4" y="947.0" width="5.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="620.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (24 samples, 0.46%)</title><rect x="617.6" y="931.0" width="5.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (23 samples, 0.44%)</title><rect x="617.6" y="915.0" width="5.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="620.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (23 samples, 0.44%)</title><rect x="617.6" y="899.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="620.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (23 samples, 0.44%)</title><rect x="617.6" y="883.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="620.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (23 samples, 0.44%)</title><rect x="617.6" y="867.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="620.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (19 samples, 0.36%)</title><rect x="617.6" y="851.0" width="4.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="620.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (19 samples, 0.36%)</title><rect x="617.6" y="835.0" width="4.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="620.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (19 samples, 0.36%)</title><rect x="617.6" y="819.0" width="4.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="620.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$270/1071768064.apply (2 samples, 0.04%)</title><rect x="618.1" y="803.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="621.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/10694432.apply (11 samples, 0.21%)</title><rect x="618.5" y="803.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (11 samples, 0.21%)</title><rect x="618.5" y="787.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="621.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (10 samples, 0.19%)</title><rect x="618.7" y="771.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="621.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (9 samples, 0.17%)</title><rect x="619.0" y="755.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (9 samples, 0.17%)</title><rect x="619.0" y="739.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="622.0" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (2 samples, 0.04%)</title><rect x="619.0" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="622.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (6 samples, 0.11%)</title><rect x="619.6" y="723.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="622.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/102085371.run (6 samples, 0.11%)</title><rect x="619.6" y="707.0" width="1.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="622.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (6 samples, 0.11%)</title><rect x="619.6" y="691.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (2 samples, 0.04%)</title><rect x="620.1" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (2 samples, 0.04%)</title><rect x="620.1" y="659.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="623.1" y="670.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (2 samples, 0.04%)</title><rect x="620.1" y="643.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="623.1" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (2 samples, 0.04%)</title><rect x="620.1" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.1" y="638.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.04%)</title><rect x="620.1" y="611.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="623.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.04%)</title><rect x="620.5" y="675.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.5" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="620.5" y="659.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="623.5" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/712256162.invoke (2 samples, 0.04%)</title><rect x="620.5" y="643.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="623.5" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="620.5" y="627.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="623.5" y="638.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.04%)</title><rect x="620.5" y="611.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="623.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/179650308.apply (4 samples, 0.08%)</title><rect x="621.0" y="803.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (3 samples, 0.06%)</title><rect x="621.2" y="787.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (3 samples, 0.06%)</title><rect x="621.2" y="771.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="624.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$275/352039824.apply (2 samples, 0.04%)</title><rect x="621.9" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="624.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (2 samples, 0.04%)</title><rect x="621.9" y="835.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="624.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$316/2105483381.apply (2 samples, 0.04%)</title><rect x="622.3" y="851.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.04%)</title><rect x="622.3" y="835.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (16 samples, 0.30%)</title><rect x="623.0" y="963.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (4 samples, 0.08%)</title><rect x="623.0" y="947.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="626.0" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.04%)</title><rect x="623.4" y="931.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (8 samples, 0.15%)</title><rect x="623.9" y="947.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="626.9" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.15%)</title><rect x="623.9" y="931.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="626.9" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.15%)</title><rect x="623.9" y="915.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.9" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="623.9" y="899.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="626.9" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="623.9" y="883.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="626.9" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.get$Lambda (2 samples, 0.04%)</title><rect x="623.9" y="867.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="626.9" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.&lt;init&gt; (2 samples, 0.04%)</title><rect x="623.9" y="851.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="626.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (4 samples, 0.08%)</title><rect x="624.8" y="899.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="627.8" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (4 samples, 0.08%)</title><rect x="624.8" y="883.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="627.8" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.08%)</title><rect x="624.8" y="867.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.8" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="625.0" y="851.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="628.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="625.0" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="628.0" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.get$Lambda (2 samples, 0.04%)</title><rect x="625.0" y="819.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="628.0" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.&lt;init&gt; (2 samples, 0.04%)</title><rect x="625.0" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="628.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (4 samples, 0.08%)</title><rect x="625.7" y="947.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="628.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (4 samples, 0.08%)</title><rect x="625.7" y="931.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="628.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (2 samples, 0.04%)</title><rect x="626.6" y="1011.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (2 samples, 0.04%)</title><rect x="626.6" y="995.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/Math.min (2 samples, 0.04%)</title><rect x="626.6" y="979.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.6" y="990.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="626.6" y="963.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="629.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (39 samples, 0.74%)</title><rect x="627.0" y="1075.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (39 samples, 0.74%)</title><rect x="627.0" y="1059.0" width="8.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (39 samples, 0.74%)</title><rect x="627.0" y="1043.0" width="8.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (39 samples, 0.74%)</title><rect x="627.0" y="1027.0" width="8.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (39 samples, 0.74%)</title><rect x="627.0" y="1011.0" width="8.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="630.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (8 samples, 0.15%)</title><rect x="627.0" y="995.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (2 samples, 0.04%)</title><rect x="627.0" y="979.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="630.0" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="627.0" y="963.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.0" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="627.0" y="947.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (6 samples, 0.11%)</title><rect x="627.5" y="979.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="630.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (6 samples, 0.11%)</title><rect x="627.5" y="963.0" width="1.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1531363542.run (4 samples, 0.08%)</title><rect x="627.7" y="947.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="630.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (4 samples, 0.08%)</title><rect x="627.7" y="931.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="630.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (4 samples, 0.08%)</title><rect x="627.7" y="915.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3 samples, 0.06%)</title><rect x="627.9" y="899.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="630.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.04%)</title><rect x="628.2" y="883.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="631.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (2 samples, 0.04%)</title><rect x="628.2" y="867.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.04%)</title><rect x="628.2" y="851.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.04%)</title><rect x="628.2" y="835.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="631.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.04%)</title><rect x="628.2" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2 samples, 0.04%)</title><rect x="628.2" y="803.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="631.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.04%)</title><rect x="628.2" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.04%)</title><rect x="628.2" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="631.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (31 samples, 0.59%)</title><rect x="628.8" y="995.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="631.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (31 samples, 0.59%)</title><rect x="628.8" y="979.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (31 samples, 0.59%)</title><rect x="628.8" y="963.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="631.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (31 samples, 0.59%)</title><rect x="628.8" y="947.0" width="7.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (31 samples, 0.59%)</title><rect x="628.8" y="931.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="631.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (31 samples, 0.59%)</title><rect x="628.8" y="915.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="631.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1531363542.run (15 samples, 0.29%)</title><rect x="628.8" y="899.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="631.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (15 samples, 0.29%)</title><rect x="628.8" y="883.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="631.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (15 samples, 0.29%)</title><rect x="628.8" y="867.0" width="3.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (12 samples, 0.23%)</title><rect x="629.1" y="851.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (11 samples, 0.21%)</title><rect x="629.3" y="835.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="632.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (2 samples, 0.04%)</title><rect x="629.3" y="819.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="632.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (9 samples, 0.17%)</title><rect x="629.7" y="819.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="632.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (9 samples, 0.17%)</title><rect x="629.7" y="803.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (2 samples, 0.04%)</title><rect x="629.7" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="632.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.04%)</title><rect x="629.7" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="632.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (2 samples, 0.04%)</title><rect x="629.7" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="632.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (7 samples, 0.13%)</title><rect x="630.2" y="787.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="633.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (7 samples, 0.13%)</title><rect x="630.2" y="771.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="633.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (6 samples, 0.11%)</title><rect x="630.4" y="755.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="633.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (6 samples, 0.11%)</title><rect x="630.4" y="739.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (6 samples, 0.11%)</title><rect x="630.4" y="723.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="633.4" y="734.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="630.4" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="633.4" y="718.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="630.4" y="691.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.4" y="702.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="630.4" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.4" y="686.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="630.4" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="633.4" y="670.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="630.4" y="643.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="633.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.08%)</title><rect x="630.9" y="707.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="633.9" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.08%)</title><rect x="630.9" y="691.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="633.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="630.9" y="675.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="633.9" y="686.0"></text>
</g>
<g>
<title>write (3 samples, 0.06%)</title><rect x="630.9" y="659.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="633.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="630.9" y="643.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="633.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="630.9" y="627.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="633.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="630.9" y="611.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="633.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="630.9" y="595.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="633.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="630.9" y="579.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="633.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="630.9" y="563.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="633.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="630.9" y="547.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="633.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="630.9" y="531.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="633.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="631.1" y="515.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="634.1" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="631.1" y="499.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="634.1" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="631.1" y="483.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="634.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (2 samples, 0.04%)</title><rect x="631.7" y="851.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="634.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (13 samples, 0.25%)</title><rect x="632.4" y="899.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="635.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (13 samples, 0.25%)</title><rect x="632.4" y="883.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (13 samples, 0.25%)</title><rect x="632.4" y="867.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="635.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 0.19%)</title><rect x="632.4" y="851.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="635.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.19%)</title><rect x="632.4" y="835.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="635.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 0.19%)</title><rect x="632.4" y="819.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="635.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.19%)</title><rect x="632.4" y="803.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="635.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$308/830188074.accept (10 samples, 0.19%)</title><rect x="632.4" y="787.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="635.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (10 samples, 0.19%)</title><rect x="632.4" y="771.0" width="2.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (10 samples, 0.19%)</title><rect x="632.4" y="755.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="635.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.19%)</title><rect x="632.4" y="739.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="635.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (9 samples, 0.17%)</title><rect x="632.6" y="723.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.6" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (9 samples, 0.17%)</title><rect x="632.6" y="707.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.6" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.15%)</title><rect x="632.6" y="691.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="635.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (8 samples, 0.15%)</title><rect x="632.6" y="675.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="635.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (8 samples, 0.15%)</title><rect x="632.6" y="659.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="635.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (8 samples, 0.15%)</title><rect x="632.6" y="643.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (8 samples, 0.15%)</title><rect x="632.6" y="627.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="635.6" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.15%)</title><rect x="632.6" y="611.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.6" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.15%)</title><rect x="632.6" y="595.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="635.6" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.11%)</title><rect x="633.1" y="579.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="636.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="633.1" y="563.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="636.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="633.1" y="547.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="636.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="633.3" y="531.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="636.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="633.3" y="515.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="636.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="633.3" y="499.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="636.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="633.3" y="483.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="636.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="633.3" y="467.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="636.3" y="478.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="633.3" y="451.0" width="1.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="636.3" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (3 samples, 0.06%)</title><rect x="634.7" y="851.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="637.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.04%)</title><rect x="635.3" y="899.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="638.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (2 samples, 0.04%)</title><rect x="635.3" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.04%)</title><rect x="635.3" y="867.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (2 samples, 0.04%)</title><rect x="635.3" y="851.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="638.3" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (2 samples, 0.04%)</title><rect x="635.3" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.3" y="846.0"></text>
</g>
<g>
<title>[ProxyWorker-1 tid=7926] (306 samples, 5.82%)</title><rect x="635.8" y="1171.0" width="68.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="638.8" y="1182.0">[ProxyW..</text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (5 samples, 0.10%)</title><rect x="635.8" y="1155.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="638.8" y="1166.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (4 samples, 0.08%)</title><rect x="636.0" y="1139.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="639.0" y="1150.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (3 samples, 0.06%)</title><rect x="636.0" y="1123.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="639.0" y="1134.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.04%)</title><rect x="636.0" y="1107.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="639.0" y="1118.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (8 samples, 0.15%)</title><rect x="636.9" y="1155.0" width="1.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="639.9" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (8 samples, 0.15%)</title><rect x="636.9" y="1139.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="639.9" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (5 samples, 0.10%)</title><rect x="636.9" y="1123.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="639.9" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (5 samples, 0.10%)</title><rect x="636.9" y="1107.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="639.9" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (3 samples, 0.06%)</title><rect x="638.0" y="1123.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="641.0" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.06%)</title><rect x="638.0" y="1107.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="641.0" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (2 samples, 0.04%)</title><rect x="638.0" y="1091.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="641.0" y="1102.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.06%)</title><rect x="638.7" y="1155.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="641.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.run (290 samples, 5.51%)</title><rect x="639.4" y="1155.0" width="65.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.4" y="1166.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (290 samples, 5.51%)</title><rect x="639.4" y="1139.0" width="65.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="642.4" y="1150.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (290 samples, 5.51%)</title><rect x="639.4" y="1123.0" width="65.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="642.4" y="1134.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (88 samples, 1.67%)</title><rect x="639.6" y="1107.0" width="19.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (88 samples, 1.67%)</title><rect x="639.6" y="1091.0" width="19.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="642.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (87 samples, 1.65%)</title><rect x="639.6" y="1075.0" width="19.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="642.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1181434552.apply (85 samples, 1.62%)</title><rect x="640.1" y="1059.0" width="19.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (85 samples, 1.62%)</title><rect x="640.1" y="1043.0" width="19.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="643.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (85 samples, 1.62%)</title><rect x="640.1" y="1027.0" width="19.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="643.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (85 samples, 1.62%)</title><rect x="640.1" y="1011.0" width="19.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="643.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (85 samples, 1.62%)</title><rect x="640.1" y="995.0" width="19.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="643.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (85 samples, 1.62%)</title><rect x="640.1" y="979.0" width="19.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (40 samples, 0.76%)</title><rect x="640.1" y="963.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (40 samples, 0.76%)</title><rect x="640.1" y="947.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (40 samples, 0.76%)</title><rect x="640.1" y="931.0" width="8.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="643.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/2067260339.apply (40 samples, 0.76%)</title><rect x="640.1" y="915.0" width="8.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="643.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (40 samples, 0.76%)</title><rect x="640.1" y="899.0" width="8.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="643.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (40 samples, 0.76%)</title><rect x="640.1" y="883.0" width="8.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/354122190.apply (40 samples, 0.76%)</title><rect x="640.1" y="867.0" width="8.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (40 samples, 0.76%)</title><rect x="640.1" y="851.0" width="8.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="643.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (40 samples, 0.76%)</title><rect x="640.1" y="835.0" width="8.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="643.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (38 samples, 0.72%)</title><rect x="640.1" y="819.0" width="8.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="643.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (38 samples, 0.72%)</title><rect x="640.1" y="803.0" width="8.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="643.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$237/1679310185.apply (34 samples, 0.65%)</title><rect x="640.3" y="787.0" width="7.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (34 samples, 0.65%)</title><rect x="640.3" y="771.0" width="7.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="643.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="640.5" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="643.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.04%)</title><rect x="640.5" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.04%)</title><rect x="641.2" y="755.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="644.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.04%)</title><rect x="641.2" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="644.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="641.2" y="723.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="644.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="641.2" y="707.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.04%)</title><rect x="641.2" y="691.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.04%)</title><rect x="641.2" y="675.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="644.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.04%)</title><rect x="641.2" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="644.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.04%)</title><rect x="641.2" y="643.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (7 samples, 0.13%)</title><rect x="641.6" y="755.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="644.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (7 samples, 0.13%)</title><rect x="641.6" y="739.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="644.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (7 samples, 0.13%)</title><rect x="641.6" y="723.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="644.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (7 samples, 0.13%)</title><rect x="641.6" y="707.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="644.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (7 samples, 0.13%)</title><rect x="641.6" y="691.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="644.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.13%)</title><rect x="641.6" y="675.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="644.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.13%)</title><rect x="641.6" y="659.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.6" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (6 samples, 0.11%)</title><rect x="641.8" y="643.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="644.8" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (6 samples, 0.11%)</title><rect x="641.8" y="627.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="644.8" y="638.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="641.8" y="611.0" width="1.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="644.8" y="622.0"></text>
</g>
<g>
<title>write (5 samples, 0.10%)</title><rect x="641.8" y="595.0" width="1.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="644.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="641.8" y="579.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="644.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="641.8" y="563.0" width="1.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="644.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="641.8" y="547.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="644.8" y="558.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="641.8" y="531.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="644.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="641.8" y="515.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="644.8" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="641.8" y="499.0" width="1.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="644.8" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="642.1" y="483.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="645.1" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="642.1" y="467.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="645.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="642.1" y="451.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="645.1" y="462.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="642.1" y="435.0" width="0.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="645.1" y="446.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="642.1" y="419.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="645.1" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (21 samples, 0.40%)</title><rect x="643.2" y="755.0" width="4.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.04%)</title><rect x="643.2" y="739.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="646.2" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="643.2" y="723.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="646.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (15 samples, 0.29%)</title><rect x="643.6" y="739.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="646.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (10 samples, 0.19%)</title><rect x="643.9" y="723.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.04%)</title><rect x="643.9" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="646.9" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="643.9" y="691.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="646.9" y="702.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.06%)</title><rect x="644.3" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="647.3" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (3 samples, 0.06%)</title><rect x="644.3" y="691.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.04%)</title><rect x="644.5" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="647.5" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.04%)</title><rect x="644.5" y="659.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.5" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.04%)</title><rect x="644.5" y="643.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="647.5" y="654.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (3 samples, 0.06%)</title><rect x="645.0" y="707.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.0" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (3 samples, 0.06%)</title><rect x="645.0" y="691.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="648.0" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (2 samples, 0.04%)</title><rect x="645.2" y="675.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="648.2" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="645.2" y="659.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.2" y="670.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="645.2" y="643.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="648.2" y="654.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$257/916024249.test (2 samples, 0.04%)</title><rect x="645.7" y="707.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="648.7" y="718.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (2 samples, 0.04%)</title><rect x="645.7" y="691.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="648.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (4 samples, 0.08%)</title><rect x="646.1" y="723.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.1" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4 samples, 0.08%)</title><rect x="646.1" y="707.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="649.1" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4 samples, 0.08%)</title><rect x="646.1" y="691.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="649.1" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.06%)</title><rect x="646.1" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="649.1" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (3 samples, 0.06%)</title><rect x="646.1" y="659.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="649.1" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.06%)</title><rect x="646.1" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="649.1" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.04%)</title><rect x="646.3" y="627.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="649.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.06%)</title><rect x="647.2" y="739.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="650.2" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.04%)</title><rect x="647.5" y="723.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="650.5" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.04%)</title><rect x="647.5" y="707.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="650.5" y="718.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (2 samples, 0.04%)</title><rect x="647.5" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="650.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$239/989844308.apply (3 samples, 0.06%)</title><rect x="647.9" y="787.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="650.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="648.6" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="651.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (45 samples, 0.86%)</title><rect x="649.0" y="963.0" width="10.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (43 samples, 0.82%)</title><rect x="649.5" y="947.0" width="9.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="652.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (38 samples, 0.72%)</title><rect x="649.7" y="931.0" width="8.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="652.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (38 samples, 0.72%)</title><rect x="649.7" y="915.0" width="8.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (37 samples, 0.70%)</title><rect x="649.9" y="899.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$160/1778891811.apply (36 samples, 0.68%)</title><rect x="650.1" y="883.0" width="8.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="653.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (36 samples, 0.68%)</title><rect x="650.1" y="867.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="653.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (36 samples, 0.68%)</title><rect x="650.1" y="851.0" width="8.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (18 samples, 0.34%)</title><rect x="650.1" y="835.0" width="4.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="653.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (18 samples, 0.34%)</title><rect x="650.1" y="819.0" width="4.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="653.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (18 samples, 0.34%)</title><rect x="650.1" y="803.0" width="4.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="653.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (3 samples, 0.06%)</title><rect x="650.4" y="787.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (3 samples, 0.06%)</title><rect x="650.4" y="771.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="653.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/1774108670.apply (14 samples, 0.27%)</title><rect x="651.0" y="787.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="654.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (14 samples, 0.27%)</title><rect x="651.0" y="771.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="654.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (14 samples, 0.27%)</title><rect x="651.0" y="755.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (14 samples, 0.27%)</title><rect x="651.0" y="739.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="654.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (14 samples, 0.27%)</title><rect x="651.0" y="723.0" width="3.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="654.0" y="734.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (2 samples, 0.04%)</title><rect x="651.0" y="707.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="654.0" y="718.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (2 samples, 0.04%)</title><rect x="651.0" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="654.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (11 samples, 0.21%)</title><rect x="651.5" y="707.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="654.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (11 samples, 0.21%)</title><rect x="651.5" y="691.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="654.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (11 samples, 0.21%)</title><rect x="651.5" y="675.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.5" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.19%)</title><rect x="651.7" y="659.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="654.7" y="670.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (5 samples, 0.10%)</title><rect x="651.7" y="643.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="654.7" y="654.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.04%)</title><rect x="652.4" y="627.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="655.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/146370526.run (2 samples, 0.04%)</title><rect x="653.1" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="656.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (2 samples, 0.04%)</title><rect x="653.1" y="627.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="656.1" y="638.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (2 samples, 0.04%)</title><rect x="653.1" y="611.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (18 samples, 0.34%)</title><rect x="654.2" y="835.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="657.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (16 samples, 0.30%)</title><rect x="654.2" y="819.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.2" y="830.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.04%)</title><rect x="654.4" y="803.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="657.4" y="814.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.04%)</title><rect x="654.4" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="657.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (10 samples, 0.19%)</title><rect x="655.3" y="803.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="658.3" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.19%)</title><rect x="655.3" y="787.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.3" y="798.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (6 samples, 0.11%)</title><rect x="655.8" y="771.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="658.8" y="782.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="656.4" y="755.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="659.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$166/752533844.run (2 samples, 0.04%)</title><rect x="657.1" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (2 samples, 0.04%)</title><rect x="657.1" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.1" y="766.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (2 samples, 0.04%)</title><rect x="657.1" y="739.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.1" y="750.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (2 samples, 0.04%)</title><rect x="657.1" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="660.1" y="734.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.04%)</title><rect x="657.1" y="707.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.1" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.04%)</title><rect x="657.1" y="691.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="660.1" y="702.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (2 samples, 0.04%)</title><rect x="657.1" y="675.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="660.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.04%)</title><rect x="657.8" y="819.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="657.8" y="803.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="660.8" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.04%)</title><rect x="657.8" y="787.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="657.8" y="771.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="660.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="657.8" y="755.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (2 samples, 0.04%)</title><rect x="658.5" y="931.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="661.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (33 samples, 0.63%)</title><rect x="659.3" y="1107.0" width="7.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="662.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (33 samples, 0.63%)</title><rect x="659.3" y="1091.0" width="7.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="662.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (21 samples, 0.40%)</title><rect x="659.3" y="1075.0" width="4.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="662.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (7 samples, 0.13%)</title><rect x="659.6" y="1059.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.13%)</title><rect x="659.6" y="1043.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.13%)</title><rect x="659.6" y="1027.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="662.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.13%)</title><rect x="659.6" y="1011.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.13%)</title><rect x="659.6" y="995.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="662.6" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="659.6" y="979.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="662.6" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="660.2" y="979.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="663.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="660.2" y="963.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="663.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="660.2" y="947.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="663.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="660.5" y="931.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="663.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="660.5" y="915.0" width="0.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="663.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="660.5" y="899.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="663.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="660.7" y="883.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="663.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="660.7" y="867.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="663.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="660.7" y="851.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="663.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (13 samples, 0.25%)</title><rect x="661.1" y="1059.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="664.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (13 samples, 0.25%)</title><rect x="661.1" y="1043.0" width="3.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="664.1" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (6 samples, 0.11%)</title><rect x="661.4" y="1027.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="664.4" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="662.3" y="1011.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="665.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="662.7" y="1027.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="665.7" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (6 samples, 0.11%)</title><rect x="662.7" y="1011.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="665.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="662.7" y="995.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="665.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="662.7" y="979.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="665.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="662.7" y="963.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="665.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="662.7" y="947.0" width="1.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="665.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="662.7" y="931.0" width="1.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="665.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="662.7" y="915.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="665.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="662.7" y="899.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="665.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="662.7" y="883.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="665.7" y="894.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="662.7" y="867.0" width="1.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="665.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (5 samples, 0.10%)</title><rect x="664.1" y="1075.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (4 samples, 0.08%)</title><rect x="664.3" y="1059.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="667.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.06%)</title><rect x="664.3" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="667.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.04%)</title><rect x="664.3" y="1027.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="667.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title><rect x="664.3" y="1011.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="667.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.13%)</title><rect x="665.2" y="1075.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.13%)</title><rect x="665.2" y="1059.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="668.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.13%)</title><rect x="665.2" y="1043.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="668.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.13%)</title><rect x="665.2" y="1027.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="668.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.13%)</title><rect x="665.2" y="1011.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="668.2" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.06%)</title><rect x="665.2" y="995.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="668.2" y="1006.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="665.4" y="979.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="668.4" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="665.9" y="995.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="668.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="665.9" y="979.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="668.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="665.9" y="963.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="668.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="666.1" y="947.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="669.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="666.1" y="931.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="669.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="666.1" y="915.0" width="0.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="669.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="666.3" y="899.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="669.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="666.3" y="883.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="669.3" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="666.3" y="867.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="669.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/808714778.run (74 samples, 1.41%)</title><rect x="666.8" y="1107.0" width="16.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="669.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (74 samples, 1.41%)</title><rect x="666.8" y="1091.0" width="16.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="669.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (74 samples, 1.41%)</title><rect x="666.8" y="1075.0" width="16.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="669.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (74 samples, 1.41%)</title><rect x="666.8" y="1059.0" width="16.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 1.41%)</title><rect x="666.8" y="1043.0" width="16.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="669.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (74 samples, 1.41%)</title><rect x="666.8" y="1027.0" width="16.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="669.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (74 samples, 1.41%)</title><rect x="666.8" y="1011.0" width="16.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="669.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (74 samples, 1.41%)</title><rect x="666.8" y="995.0" width="16.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="669.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (74 samples, 1.41%)</title><rect x="666.8" y="979.0" width="16.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="669.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (74 samples, 1.41%)</title><rect x="666.8" y="963.0" width="16.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (74 samples, 1.41%)</title><rect x="666.8" y="947.0" width="16.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="669.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (15 samples, 0.29%)</title><rect x="666.8" y="931.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="669.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (14 samples, 0.27%)</title><rect x="667.0" y="915.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="670.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14 samples, 0.27%)</title><rect x="667.0" y="899.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (13 samples, 0.25%)</title><rect x="667.2" y="883.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="670.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.25%)</title><rect x="667.2" y="867.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="670.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (9 samples, 0.17%)</title><rect x="667.6" y="851.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="670.6" y="862.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="667.6" y="835.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="670.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/10694432.apply (5 samples, 0.10%)</title><rect x="668.5" y="835.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="671.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (5 samples, 0.10%)</title><rect x="668.5" y="819.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (2 samples, 0.04%)</title><rect x="668.5" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="671.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (2 samples, 0.04%)</title><rect x="668.5" y="787.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="671.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (2 samples, 0.04%)</title><rect x="668.5" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="671.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$316/2105483381.apply (2 samples, 0.04%)</title><rect x="668.5" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="671.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (3 samples, 0.06%)</title><rect x="669.0" y="803.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="672.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (3 samples, 0.06%)</title><rect x="669.0" y="787.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (3 samples, 0.06%)</title><rect x="669.0" y="771.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="672.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.06%)</title><rect x="669.0" y="755.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="672.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/102085371.run (3 samples, 0.06%)</title><rect x="669.0" y="739.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="672.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (3 samples, 0.06%)</title><rect x="669.0" y="723.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="672.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.04%)</title><rect x="669.0" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="672.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="669.0" y="691.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="672.0" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="669.0" y="675.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.04%)</title><rect x="669.0" y="659.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="672.0" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.04%)</title><rect x="669.0" y="643.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="672.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.04%)</title><rect x="669.0" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="672.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (2 samples, 0.04%)</title><rect x="669.0" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="672.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.04%)</title><rect x="669.0" y="595.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="672.0" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (58 samples, 1.10%)</title><rect x="670.3" y="931.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (58 samples, 1.10%)</title><rect x="670.3" y="915.0" width="13.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="673.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (58 samples, 1.10%)</title><rect x="670.3" y="899.0" width="13.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (58 samples, 1.10%)</title><rect x="670.3" y="883.0" width="13.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="673.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (57 samples, 1.08%)</title><rect x="670.6" y="867.0" width="12.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.6" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (54 samples, 1.03%)</title><rect x="670.8" y="851.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="673.8" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (54 samples, 1.03%)</title><rect x="670.8" y="835.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="673.8" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (54 samples, 1.03%)</title><rect x="670.8" y="819.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="673.8" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (54 samples, 1.03%)</title><rect x="670.8" y="803.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="673.8" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (50 samples, 0.95%)</title><rect x="671.2" y="787.0" width="11.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="674.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (50 samples, 0.95%)</title><rect x="671.2" y="771.0" width="11.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="674.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="671.2" y="755.0" width="11.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="674.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="671.2" y="739.0" width="11.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="674.2" y="750.0"></text>
</g>
<g>
<title>__GI___writev (50 samples, 0.95%)</title><rect x="671.2" y="723.0" width="11.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="674.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="671.2" y="707.0" width="11.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="674.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="671.2" y="691.0" width="11.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="674.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.91%)</title><rect x="671.7" y="675.0" width="10.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="674.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.91%)</title><rect x="671.7" y="659.0" width="10.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="674.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.91%)</title><rect x="671.7" y="643.0" width="10.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="674.7" y="654.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.91%)</title><rect x="671.7" y="627.0" width="10.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="674.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.89%)</title><rect x="671.9" y="611.0" width="10.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="674.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.89%)</title><rect x="671.9" y="595.0" width="10.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="674.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.89%)</title><rect x="671.9" y="579.0" width="10.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="674.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.89%)</title><rect x="671.9" y="563.0" width="10.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="674.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.89%)</title><rect x="671.9" y="547.0" width="10.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="674.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.89%)</title><rect x="671.9" y="531.0" width="10.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="674.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.86%)</title><rect x="672.4" y="515.0" width="10.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="675.4" y="526.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.84%)</title><rect x="672.6" y="499.0" width="9.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="675.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.78%)</title><rect x="673.3" y="483.0" width="9.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="676.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.74%)</title><rect x="673.7" y="467.0" width="8.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="676.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.67%)</title><rect x="674.6" y="451.0" width="7.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="677.6" y="462.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.67%)</title><rect x="674.6" y="435.0" width="7.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="677.6" y="446.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.65%)</title><rect x="674.8" y="419.0" width="7.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="677.8" y="430.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.59%)</title><rect x="675.5" y="403.0" width="7.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="678.5" y="414.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.59%)</title><rect x="675.5" y="387.0" width="7.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="678.5" y="398.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.55%)</title><rect x="676.0" y="371.0" width="6.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="679.0" y="382.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.55%)</title><rect x="676.0" y="355.0" width="6.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="679.0" y="366.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.55%)</title><rect x="676.0" y="339.0" width="6.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="679.0" y="350.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.49%)</title><rect x="676.6" y="323.0" width="5.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="679.6" y="334.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="677.1" y="307.0" width="5.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="680.1" y="318.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.44%)</title><rect x="677.3" y="291.0" width="5.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="680.3" y="302.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.42%)</title><rect x="677.5" y="275.0" width="5.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="680.5" y="286.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.40%)</title><rect x="677.7" y="259.0" width="4.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="680.7" y="270.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.40%)</title><rect x="677.7" y="243.0" width="4.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="680.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.40%)</title><rect x="677.7" y="227.0" width="4.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="680.7" y="238.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.36%)</title><rect x="678.2" y="211.0" width="4.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="681.2" y="222.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.32%)</title><rect x="678.6" y="195.0" width="3.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="681.6" y="206.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.30%)</title><rect x="678.9" y="179.0" width="3.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="681.9" y="190.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.29%)</title><rect x="679.1" y="163.0" width="3.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="682.1" y="174.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.29%)</title><rect x="679.1" y="147.0" width="3.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="682.1" y="158.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="679.3" y="131.0" width="3.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="682.3" y="142.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="679.8" y="115.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="682.8" y="126.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="679.8" y="99.0" width="2.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="682.8" y="110.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="680.4" y="83.0" width="2.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="683.4" y="94.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="680.9" y="67.0" width="1.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="683.9" y="78.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="681.1" y="51.0" width="1.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="684.1" y="62.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="681.1" y="35.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="684.1" y="46.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (2 samples, 0.04%)</title><rect x="682.5" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="685.5" y="798.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.04%)</title><rect x="682.5" y="771.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="685.5" y="782.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (2 samples, 0.04%)</title><rect x="682.5" y="755.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="685.5" y="766.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.04%)</title><rect x="682.9" y="851.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="685.9" y="862.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (2 samples, 0.04%)</title><rect x="682.9" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="685.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (94 samples, 1.79%)</title><rect x="683.4" y="1107.0" width="21.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="686.4" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (93 samples, 1.77%)</title><rect x="683.6" y="1091.0" width="20.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (50 samples, 0.95%)</title><rect x="683.6" y="1075.0" width="11.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="686.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (49 samples, 0.93%)</title><rect x="683.8" y="1059.0" width="11.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="686.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (49 samples, 0.93%)</title><rect x="683.8" y="1043.0" width="11.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="686.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (4 samples, 0.08%)</title><rect x="684.0" y="1027.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (4 samples, 0.08%)</title><rect x="684.0" y="1011.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (4 samples, 0.08%)</title><rect x="684.0" y="995.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (4 samples, 0.08%)</title><rect x="684.0" y="979.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="687.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.06%)</title><rect x="684.3" y="963.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.06%)</title><rect x="684.3" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.06%)</title><rect x="684.3" y="931.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="687.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.06%)</title><rect x="684.3" y="915.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="687.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.04%)</title><rect x="684.5" y="899.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="687.5" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.04%)</title><rect x="684.5" y="883.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.5" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.04%)</title><rect x="684.5" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="687.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="684.5" y="851.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="687.5" y="862.0"></text>
</g>
<g>
<title>write (2 samples, 0.04%)</title><rect x="684.5" y="835.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="687.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="684.5" y="819.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="687.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="684.5" y="803.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="687.5" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="684.5" y="787.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="687.5" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="684.5" y="771.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="687.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="684.5" y="755.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="687.5" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="684.5" y="739.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="687.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="684.5" y="723.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="687.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="684.5" y="707.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="687.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="684.5" y="691.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="687.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (43 samples, 0.82%)</title><rect x="685.2" y="1027.0" width="9.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="688.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (43 samples, 0.82%)</title><rect x="685.2" y="1011.0" width="9.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="688.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (43 samples, 0.82%)</title><rect x="685.2" y="995.0" width="9.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="688.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (43 samples, 0.82%)</title><rect x="685.2" y="979.0" width="9.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (28 samples, 0.53%)</title><rect x="685.2" y="963.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="688.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (27 samples, 0.51%)</title><rect x="685.4" y="947.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="688.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (27 samples, 0.51%)</title><rect x="685.4" y="931.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (27 samples, 0.51%)</title><rect x="685.4" y="915.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (27 samples, 0.51%)</title><rect x="685.4" y="899.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="688.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (27 samples, 0.51%)</title><rect x="685.4" y="883.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.4" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (27 samples, 0.51%)</title><rect x="685.4" y="867.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="688.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (24 samples, 0.46%)</title><rect x="685.4" y="851.0" width="5.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="688.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24 samples, 0.46%)</title><rect x="685.4" y="835.0" width="5.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="688.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (22 samples, 0.42%)</title><rect x="685.4" y="819.0" width="4.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="688.4" y="830.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="685.4" y="803.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="688.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/10694432.apply (14 samples, 0.27%)</title><rect x="686.0" y="803.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (14 samples, 0.27%)</title><rect x="686.0" y="787.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="689.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (14 samples, 0.27%)</title><rect x="686.0" y="771.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (14 samples, 0.27%)</title><rect x="686.0" y="755.0" width="3.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="689.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (13 samples, 0.25%)</title><rect x="686.3" y="739.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="689.3" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (6 samples, 0.11%)</title><rect x="686.3" y="723.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="689.3" y="734.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (5 samples, 0.10%)</title><rect x="686.5" y="707.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="689.5" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (5 samples, 0.10%)</title><rect x="686.5" y="691.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="689.5" y="702.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (5 samples, 0.10%)</title><rect x="686.5" y="675.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="689.5" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.08%)</title><rect x="686.5" y="659.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="689.5" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.08%)</title><rect x="686.5" y="643.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.5" y="654.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.08%)</title><rect x="686.5" y="627.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="689.5" y="638.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.08%)</title><rect x="686.5" y="611.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="689.5" y="622.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (4 samples, 0.08%)</title><rect x="686.5" y="595.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="689.5" y="606.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (3 samples, 0.06%)</title><rect x="686.7" y="579.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="689.7" y="590.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$281/1029278491.applyAsLong (2 samples, 0.04%)</title><rect x="686.7" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="689.7" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.13%)</title><rect x="687.6" y="723.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="690.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/102085371.run (7 samples, 0.13%)</title><rect x="687.6" y="707.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="690.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (6 samples, 0.11%)</title><rect x="687.8" y="691.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="690.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.04%)</title><rect x="688.3" y="675.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="691.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2 samples, 0.04%)</title><rect x="688.7" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="691.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (2 samples, 0.04%)</title><rect x="688.7" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="691.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/179650308.apply (5 samples, 0.10%)</title><rect x="689.2" y="803.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="692.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (4 samples, 0.08%)</title><rect x="689.4" y="787.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="692.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (4 samples, 0.08%)</title><rect x="689.4" y="771.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.response (2 samples, 0.04%)</title><rect x="689.9" y="755.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="692.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.handleResponse (2 samples, 0.04%)</title><rect x="689.9" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.04%)</title><rect x="690.3" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="693.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$275/352039824.apply (3 samples, 0.06%)</title><rect x="690.8" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="693.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (3 samples, 0.06%)</title><rect x="690.8" y="835.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="693.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="691.0" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="694.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="691.0" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (15 samples, 0.29%)</title><rect x="691.4" y="963.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="694.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.04%)</title><rect x="691.4" y="947.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="694.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (8 samples, 0.15%)</title><rect x="692.1" y="947.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.1" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.15%)</title><rect x="692.1" y="931.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="695.1" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.15%)</title><rect x="692.1" y="915.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="695.1" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (6 samples, 0.11%)</title><rect x="692.1" y="899.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="695.1" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (4 samples, 0.08%)</title><rect x="692.6" y="883.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="695.6" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.08%)</title><rect x="692.6" y="867.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="695.6" y="878.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.04%)</title><rect x="692.6" y="851.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="695.6" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.04%)</title><rect x="692.6" y="835.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="695.6" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="693.5" y="899.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.5" y="910.0"></text>
</g>
<g>
<title>java/util/AbstractMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="693.5" y="883.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="696.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (4 samples, 0.08%)</title><rect x="693.9" y="947.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="696.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (4 samples, 0.08%)</title><rect x="693.9" y="931.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.9" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.04%)</title><rect x="694.4" y="915.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (43 samples, 0.82%)</title><rect x="694.8" y="1075.0" width="9.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (42 samples, 0.80%)</title><rect x="695.0" y="1059.0" width="9.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (42 samples, 0.80%)</title><rect x="695.0" y="1043.0" width="9.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (42 samples, 0.80%)</title><rect x="695.0" y="1027.0" width="9.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="698.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (42 samples, 0.80%)</title><rect x="695.0" y="1011.0" width="9.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.11%)</title><rect x="695.0" y="995.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="698.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (4 samples, 0.08%)</title><rect x="695.5" y="979.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (4 samples, 0.08%)</title><rect x="695.5" y="963.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="698.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1531363542.run (2 samples, 0.04%)</title><rect x="695.5" y="947.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="698.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2 samples, 0.04%)</title><rect x="695.5" y="931.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2 samples, 0.04%)</title><rect x="695.5" y="915.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (2 samples, 0.04%)</title><rect x="695.9" y="947.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (2 samples, 0.04%)</title><rect x="695.9" y="931.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (2 samples, 0.04%)</title><rect x="695.9" y="915.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="698.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="695.9" y="899.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="698.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="695.9" y="883.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="698.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.04%)</title><rect x="695.9" y="867.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.04%)</title><rect x="695.9" y="851.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="698.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$308/830188074.accept (2 samples, 0.04%)</title><rect x="695.9" y="835.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="698.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (2 samples, 0.04%)</title><rect x="695.9" y="819.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="698.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="695.9" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="698.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.04%)</title><rect x="695.9" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="698.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.04%)</title><rect x="695.9" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.04%)</title><rect x="695.9" y="755.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="698.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="695.9" y="739.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.04%)</title><rect x="695.9" y="723.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="698.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.04%)</title><rect x="695.9" y="707.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="698.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.04%)</title><rect x="695.9" y="691.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.04%)</title><rect x="695.9" y="675.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.04%)</title><rect x="695.9" y="659.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="695.9" y="643.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.9" y="654.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="695.9" y="627.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="698.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="695.9" y="611.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="698.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="695.9" y="595.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="698.9" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (35 samples, 0.67%)</title><rect x="696.4" y="995.0" width="7.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (35 samples, 0.67%)</title><rect x="696.4" y="979.0" width="7.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (35 samples, 0.67%)</title><rect x="696.4" y="963.0" width="7.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="699.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (35 samples, 0.67%)</title><rect x="696.4" y="947.0" width="7.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="699.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (35 samples, 0.67%)</title><rect x="696.4" y="931.0" width="7.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="699.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (35 samples, 0.67%)</title><rect x="696.4" y="915.0" width="7.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1531363542.run (15 samples, 0.29%)</title><rect x="696.6" y="899.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (15 samples, 0.29%)</title><rect x="696.6" y="883.0" width="3.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="699.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (15 samples, 0.29%)</title><rect x="696.6" y="867.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="699.6" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.04%)</title><rect x="696.8" y="851.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="699.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (12 samples, 0.23%)</title><rect x="697.3" y="851.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="700.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (11 samples, 0.21%)</title><rect x="697.5" y="835.0" width="2.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (2 samples, 0.04%)</title><rect x="697.5" y="819.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (9 samples, 0.17%)</title><rect x="697.9" y="819.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="700.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (9 samples, 0.17%)</title><rect x="697.9" y="803.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="700.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (8 samples, 0.15%)</title><rect x="698.2" y="787.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="701.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (8 samples, 0.15%)</title><rect x="698.2" y="771.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (6 samples, 0.11%)</title><rect x="698.4" y="755.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="701.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.08%)</title><rect x="698.6" y="739.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="701.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.08%)</title><rect x="698.6" y="723.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="701.6" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.04%)</title><rect x="699.1" y="707.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.04%)</title><rect x="699.1" y="691.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="702.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="699.1" y="675.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="702.1" y="686.0"></text>
</g>
<g>
<title>write (2 samples, 0.04%)</title><rect x="699.1" y="659.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="702.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="699.1" y="643.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="702.1" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="699.1" y="627.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="702.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="699.1" y="611.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="702.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="699.1" y="595.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="702.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="699.1" y="579.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="702.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="699.1" y="563.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="702.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="699.1" y="547.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="702.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="699.1" y="531.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="702.1" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (13 samples, 0.25%)</title><rect x="700.2" y="899.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="703.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (13 samples, 0.25%)</title><rect x="700.2" y="883.0" width="2.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (13 samples, 0.25%)</title><rect x="700.2" y="867.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="703.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (12 samples, 0.23%)</title><rect x="700.4" y="851.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="703.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.23%)</title><rect x="700.4" y="835.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="703.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12 samples, 0.23%)</title><rect x="700.4" y="819.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="703.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (11 samples, 0.21%)</title><rect x="700.6" y="803.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="703.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$308/830188074.accept (11 samples, 0.21%)</title><rect x="700.6" y="787.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="703.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (10 samples, 0.19%)</title><rect x="700.9" y="771.0" width="2.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="703.9" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 0.17%)</title><rect x="701.1" y="755.0" width="2.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="704.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.17%)</title><rect x="701.1" y="739.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="704.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (7 samples, 0.13%)</title><rect x="701.5" y="723.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="704.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (7 samples, 0.13%)</title><rect x="701.5" y="707.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="704.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.13%)</title><rect x="701.5" y="691.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="704.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.11%)</title><rect x="701.5" y="675.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.11%)</title><rect x="701.5" y="659.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="704.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (6 samples, 0.11%)</title><rect x="701.5" y="643.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="704.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.11%)</title><rect x="701.5" y="627.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="704.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.11%)</title><rect x="701.5" y="611.0" width="1.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="704.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.11%)</title><rect x="701.5" y="595.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="704.5" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.04%)</title><rect x="701.8" y="579.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="704.8" y="590.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="702.2" y="579.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="705.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="702.2" y="563.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="705.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="702.2" y="547.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="705.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="702.2" y="531.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="705.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="702.2" y="515.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="705.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="702.4" y="499.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="705.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="702.4" y="483.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="705.4" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="702.4" y="467.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="705.4" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="702.4" y="451.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="705.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (3 samples, 0.06%)</title><rect x="703.1" y="899.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="706.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (2 samples, 0.04%)</title><rect x="703.8" y="899.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.8" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.slice (2 samples, 0.04%)</title><rect x="703.8" y="883.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="706.8" y="894.0"></text>
</g>
<g>
<title>[ProxyWorker-2 tid=7928] (302 samples, 5.74%)</title><rect x="704.4" y="1171.0" width="67.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="707.4" y="1182.0">[ProxyW..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.06%)</title><rect x="704.7" y="1155.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="707.7" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.06%)</title><rect x="704.7" y="1139.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="707.7" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="704.7" y="1123.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="707.7" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (2 samples, 0.04%)</title><rect x="704.7" y="1107.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="707.7" y="1118.0"></text>
</g>
<g>
<title>[not_walkable_Java] (3 samples, 0.06%)</title><rect x="705.3" y="1155.0" width="0.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="708.3" y="1166.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.04%)</title><rect x="706.0" y="1155.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="709.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.run (293 samples, 5.57%)</title><rect x="706.5" y="1155.0" width="65.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="709.5" y="1166.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (293 samples, 5.57%)</title><rect x="706.5" y="1139.0" width="65.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="709.5" y="1150.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (293 samples, 5.57%)</title><rect x="706.5" y="1123.0" width="65.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="709.5" y="1134.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (106 samples, 2.02%)</title><rect x="706.5" y="1107.0" width="23.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="709.5" y="1118.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (104 samples, 1.98%)</title><rect x="706.9" y="1091.0" width="23.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="709.9" y="1102.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (104 samples, 1.98%)</title><rect x="706.9" y="1075.0" width="23.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="709.9" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1181434552.apply (104 samples, 1.98%)</title><rect x="706.9" y="1059.0" width="23.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.9" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (104 samples, 1.98%)</title><rect x="706.9" y="1043.0" width="23.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="709.9" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (104 samples, 1.98%)</title><rect x="706.9" y="1027.0" width="23.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.9" y="1038.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (101 samples, 1.92%)</title><rect x="706.9" y="1011.0" width="22.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="709.9" y="1022.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (101 samples, 1.92%)</title><rect x="706.9" y="995.0" width="22.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="709.9" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (101 samples, 1.92%)</title><rect x="706.9" y="979.0" width="22.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="709.9" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (55 samples, 1.05%)</title><rect x="707.1" y="963.0" width="12.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="710.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (55 samples, 1.05%)</title><rect x="707.1" y="947.0" width="12.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="710.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (54 samples, 1.03%)</title><rect x="707.1" y="931.0" width="12.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="710.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/2067260339.apply (54 samples, 1.03%)</title><rect x="707.1" y="915.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (54 samples, 1.03%)</title><rect x="707.1" y="899.0" width="12.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="710.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (54 samples, 1.03%)</title><rect x="707.1" y="883.0" width="12.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="710.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/354122190.apply (54 samples, 1.03%)</title><rect x="707.1" y="867.0" width="12.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="710.1" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (54 samples, 1.03%)</title><rect x="707.1" y="851.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="710.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (53 samples, 1.01%)</title><rect x="707.4" y="835.0" width="11.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="710.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (42 samples, 0.80%)</title><rect x="707.4" y="819.0" width="9.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="710.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (42 samples, 0.80%)</title><rect x="707.4" y="803.0" width="9.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="710.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$237/1679310185.apply (41 samples, 0.78%)</title><rect x="707.6" y="787.0" width="9.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (40 samples, 0.76%)</title><rect x="707.8" y="771.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="710.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.08%)</title><rect x="708.5" y="755.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.08%)</title><rect x="708.5" y="739.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="711.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.06%)</title><rect x="708.7" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="711.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.06%)</title><rect x="708.7" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.06%)</title><rect x="708.7" y="691.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.06%)</title><rect x="708.7" y="675.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="711.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.06%)</title><rect x="708.7" y="659.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="711.7" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (3 samples, 0.06%)</title><rect x="708.7" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.06%)</title><rect x="708.7" y="627.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (3 samples, 0.06%)</title><rect x="708.7" y="611.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="711.7" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (3 samples, 0.06%)</title><rect x="708.7" y="595.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="711.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (3 samples, 0.06%)</title><rect x="708.7" y="579.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="711.7" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (3 samples, 0.06%)</title><rect x="708.7" y="563.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="711.7" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (3 samples, 0.06%)</title><rect x="708.7" y="547.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="711.7" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (3 samples, 0.06%)</title><rect x="708.7" y="531.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.7" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.06%)</title><rect x="708.7" y="515.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="711.7" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.06%)</title><rect x="708.7" y="499.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="711.7" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (3 samples, 0.06%)</title><rect x="708.7" y="483.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="711.7" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (3 samples, 0.06%)</title><rect x="708.7" y="467.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.7" y="478.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="451.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="711.7" y="462.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="435.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="711.7" y="446.0"></text>
</g>
<g>
<title>__GI___writev (3 samples, 0.06%)</title><rect x="708.7" y="419.0" width="0.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="711.7" y="430.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="403.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="711.7" y="414.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="387.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="711.7" y="398.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="371.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="711.7" y="382.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="355.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="711.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="339.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="711.7" y="350.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="323.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="711.7" y="334.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="307.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="711.7" y="318.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="291.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="711.7" y="302.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="275.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="711.7" y="286.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="259.0" width="0.7" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="711.7" y="270.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="243.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="711.7" y="254.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="227.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="711.7" y="238.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="708.7" y="211.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="711.7" y="222.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="708.9" y="195.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="711.9" y="206.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (9 samples, 0.17%)</title><rect x="709.4" y="755.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="712.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (9 samples, 0.17%)</title><rect x="709.4" y="739.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (4 samples, 0.08%)</title><rect x="709.4" y="723.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (3 samples, 0.06%)</title><rect x="709.6" y="707.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="712.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.06%)</title><rect x="709.6" y="691.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="712.6" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (2 samples, 0.04%)</title><rect x="709.6" y="675.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="712.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (5 samples, 0.10%)</title><rect x="710.3" y="723.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (5 samples, 0.10%)</title><rect x="710.3" y="707.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (4 samples, 0.08%)</title><rect x="710.3" y="691.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.08%)</title><rect x="710.3" y="675.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="713.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.08%)</title><rect x="710.3" y="659.0" width="0.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="713.3" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.06%)</title><rect x="710.5" y="643.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="713.5" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.06%)</title><rect x="710.5" y="627.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="713.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="710.5" y="611.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="713.5" y="622.0"></text>
</g>
<g>
<title>write (3 samples, 0.06%)</title><rect x="710.5" y="595.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="713.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="710.5" y="579.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="713.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="710.5" y="563.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="713.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="710.5" y="547.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="713.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="710.5" y="531.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="713.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="710.5" y="515.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="713.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="710.5" y="499.0" width="0.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="713.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="710.5" y="483.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="713.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="710.5" y="467.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="713.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="710.5" y="451.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="713.5" y="462.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="710.7" y="435.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="713.7" y="446.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="710.7" y="419.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="713.7" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (24 samples, 0.46%)</title><rect x="711.4" y="755.0" width="5.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="714.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (13 samples, 0.25%)</title><rect x="711.6" y="739.0" width="2.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (8 samples, 0.15%)</title><rect x="711.6" y="723.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="714.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.04%)</title><rect x="711.6" y="707.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.6" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="711.6" y="691.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.6" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.04%)</title><rect x="711.6" y="675.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.6" y="686.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (4 samples, 0.08%)</title><rect x="712.3" y="707.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.3" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (4 samples, 0.08%)</title><rect x="712.3" y="691.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="715.3" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (3 samples, 0.06%)</title><rect x="712.5" y="675.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="715.5" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (3 samples, 0.06%)</title><rect x="712.5" y="659.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="715.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (5 samples, 0.10%)</title><rect x="713.4" y="723.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="716.4" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5 samples, 0.10%)</title><rect x="713.4" y="707.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="716.4" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5 samples, 0.10%)</title><rect x="713.4" y="691.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="716.4" y="702.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (2 samples, 0.04%)</title><rect x="713.4" y="675.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.4" y="686.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (2 samples, 0.04%)</title><rect x="713.4" y="659.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="716.4" y="670.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="713.4" y="643.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="716.4" y="654.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.06%)</title><rect x="713.9" y="675.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="716.9" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (3 samples, 0.06%)</title><rect x="713.9" y="659.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="716.9" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.06%)</title><rect x="713.9" y="643.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="716.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (4 samples, 0.08%)</title><rect x="714.5" y="739.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.5" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.06%)</title><rect x="714.5" y="723.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.5" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.06%)</title><rect x="714.5" y="707.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="717.5" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22429093.invoke (3 samples, 0.06%)</title><rect x="714.5" y="691.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="717.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.10%)</title><rect x="715.7" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="718.7" y="750.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.06%)</title><rect x="716.1" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="719.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (11 samples, 0.21%)</title><rect x="716.8" y="819.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.8" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (7 samples, 0.13%)</title><rect x="717.2" y="803.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.11%)</title><rect x="717.5" y="787.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="720.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.11%)</title><rect x="717.5" y="771.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.10%)</title><rect x="717.7" y="755.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="720.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.10%)</title><rect x="717.7" y="739.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="720.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.06%)</title><rect x="717.7" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="720.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (3 samples, 0.06%)</title><rect x="717.7" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="720.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.06%)</title><rect x="717.7" y="691.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="720.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.04%)</title><rect x="718.4" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="721.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (45 samples, 0.86%)</title><rect x="719.5" y="963.0" width="10.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="722.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (45 samples, 0.86%)</title><rect x="719.5" y="947.0" width="10.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (41 samples, 0.78%)</title><rect x="719.5" y="931.0" width="9.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="722.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (41 samples, 0.78%)</title><rect x="719.5" y="915.0" width="9.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="722.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (41 samples, 0.78%)</title><rect x="719.5" y="899.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="722.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$160/1778891811.apply (41 samples, 0.78%)</title><rect x="719.5" y="883.0" width="9.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="722.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (41 samples, 0.78%)</title><rect x="719.5" y="867.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (41 samples, 0.78%)</title><rect x="719.5" y="851.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (18 samples, 0.34%)</title><rect x="719.5" y="835.0" width="4.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.5" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (18 samples, 0.34%)</title><rect x="719.5" y="819.0" width="4.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (18 samples, 0.34%)</title><rect x="719.5" y="803.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="722.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/1774108670.apply (14 samples, 0.27%)</title><rect x="719.9" y="787.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="722.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (14 samples, 0.27%)</title><rect x="719.9" y="771.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (14 samples, 0.27%)</title><rect x="719.9" y="755.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (14 samples, 0.27%)</title><rect x="719.9" y="739.0" width="3.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (11 samples, 0.21%)</title><rect x="719.9" y="723.0" width="2.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (10 samples, 0.19%)</title><rect x="719.9" y="707.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="722.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (10 samples, 0.19%)</title><rect x="719.9" y="691.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (10 samples, 0.19%)</title><rect x="719.9" y="675.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.9" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (10 samples, 0.19%)</title><rect x="719.9" y="659.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.9" y="670.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (6 samples, 0.11%)</title><rect x="719.9" y="643.0" width="1.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="722.9" y="654.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (2 samples, 0.04%)</title><rect x="720.8" y="627.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="723.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/146370526.run (2 samples, 0.04%)</title><rect x="721.5" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="724.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (2 samples, 0.04%)</title><rect x="721.5" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="724.5" y="638.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (2 samples, 0.04%)</title><rect x="721.5" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="724.5" y="622.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (2 samples, 0.04%)</title><rect x="721.5" y="595.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="724.5" y="606.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.04%)</title><rect x="721.5" y="579.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="724.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.06%)</title><rect x="722.4" y="723.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="725.4" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.04%)</title><rect x="722.6" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="725.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$316/2105483381.apply (2 samples, 0.04%)</title><rect x="723.1" y="787.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="726.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.04%)</title><rect x="723.1" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (2 samples, 0.04%)</title><rect x="723.1" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (23 samples, 0.44%)</title><rect x="723.5" y="835.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="726.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (23 samples, 0.44%)</title><rect x="723.5" y="819.0" width="5.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="726.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (5 samples, 0.10%)</title><rect x="724.6" y="803.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (5 samples, 0.10%)</title><rect x="724.6" y="787.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="727.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (5 samples, 0.10%)</title><rect x="724.6" y="771.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="727.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.06%)</title><rect x="724.6" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.6" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="724.9" y="739.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="727.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.04%)</title><rect x="724.9" y="723.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.9" y="734.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.04%)</title><rect x="724.9" y="707.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="727.9" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.04%)</title><rect x="724.9" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="727.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (2 samples, 0.04%)</title><rect x="725.3" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="728.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (12 samples, 0.23%)</title><rect x="725.8" y="803.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="728.8" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (12 samples, 0.23%)</title><rect x="725.8" y="787.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.8" y="798.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (7 samples, 0.13%)</title><rect x="725.8" y="771.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="728.8" y="782.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="726.2" y="755.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="729.2" y="766.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.04%)</title><rect x="726.2" y="739.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="729.2" y="750.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (3 samples, 0.06%)</title><rect x="726.7" y="755.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="729.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$166/752533844.run (4 samples, 0.08%)</title><rect x="727.6" y="771.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="730.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (4 samples, 0.08%)</title><rect x="727.6" y="755.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.6" y="766.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (4 samples, 0.08%)</title><rect x="727.6" y="739.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="730.6" y="750.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (4 samples, 0.08%)</title><rect x="727.6" y="723.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="730.6" y="734.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.08%)</title><rect x="727.6" y="707.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="730.6" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (4 samples, 0.08%)</title><rect x="727.6" y="691.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="730.6" y="702.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (4 samples, 0.08%)</title><rect x="727.6" y="675.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="730.6" y="686.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.04%)</title><rect x="727.6" y="659.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="730.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (3 samples, 0.06%)</title><rect x="729.6" y="1011.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="732.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (3 samples, 0.06%)</title><rect x="729.6" y="995.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="732.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (30 samples, 0.57%)</title><rect x="730.3" y="1107.0" width="6.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (29 samples, 0.55%)</title><rect x="730.5" y="1091.0" width="6.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (23 samples, 0.44%)</title><rect x="730.5" y="1075.0" width="5.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="733.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (7 samples, 0.13%)</title><rect x="730.7" y="1059.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.13%)</title><rect x="730.7" y="1043.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="733.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.13%)</title><rect x="730.7" y="1027.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.13%)</title><rect x="730.7" y="1011.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="733.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.13%)</title><rect x="730.7" y="995.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="733.7" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.11%)</title><rect x="730.9" y="979.0" width="1.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="733.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="730.9" y="963.0" width="1.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="733.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="730.9" y="947.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="733.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="730.9" y="931.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="733.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="730.9" y="915.0" width="1.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="733.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="730.9" y="899.0" width="1.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="733.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="730.9" y="883.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="733.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="730.9" y="867.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="733.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="730.9" y="851.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="733.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (15 samples, 0.29%)</title><rect x="732.3" y="1059.0" width="3.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="735.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (15 samples, 0.29%)</title><rect x="732.3" y="1043.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="735.3" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (5 samples, 0.10%)</title><rect x="732.5" y="1027.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="735.5" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (4 samples, 0.08%)</title><rect x="732.7" y="1011.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="735.7" y="1022.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.04%)</title><rect x="732.9" y="995.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="735.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="733.6" y="1027.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="736.6" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.17%)</title><rect x="733.6" y="1011.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="736.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="733.8" y="995.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="736.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="733.8" y="979.0" width="1.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="736.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="733.8" y="963.0" width="1.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="736.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="733.8" y="947.0" width="1.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="736.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="733.8" y="931.0" width="1.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="736.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="733.8" y="915.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="736.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="733.8" y="899.0" width="1.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="736.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="734.1" y="883.0" width="1.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="737.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="734.3" y="867.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="737.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (3 samples, 0.06%)</title><rect x="735.6" y="1075.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="738.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (3 samples, 0.06%)</title><rect x="735.6" y="1059.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="738.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (3 samples, 0.06%)</title><rect x="735.6" y="1043.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="738.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.06%)</title><rect x="736.3" y="1075.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.06%)</title><rect x="736.3" y="1059.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="739.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.06%)</title><rect x="736.3" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.3" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="736.3" y="1027.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="739.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.06%)</title><rect x="736.3" y="1011.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.3" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="736.3" y="995.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="739.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="736.5" y="979.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="739.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="736.5" y="963.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="739.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="736.5" y="947.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="739.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="736.5" y="931.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="739.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="736.5" y="915.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="739.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="736.5" y="899.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="739.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="736.5" y="883.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="739.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="736.5" y="867.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="739.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/808714778.run (66 samples, 1.25%)</title><rect x="737.0" y="1107.0" width="14.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="740.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (66 samples, 1.25%)</title><rect x="737.0" y="1091.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (66 samples, 1.25%)</title><rect x="737.0" y="1075.0" width="14.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="740.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (66 samples, 1.25%)</title><rect x="737.0" y="1059.0" width="14.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="740.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (66 samples, 1.25%)</title><rect x="737.0" y="1043.0" width="14.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="740.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (66 samples, 1.25%)</title><rect x="737.0" y="1027.0" width="14.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (66 samples, 1.25%)</title><rect x="737.0" y="1011.0" width="14.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="740.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (66 samples, 1.25%)</title><rect x="737.0" y="995.0" width="14.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="740.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (66 samples, 1.25%)</title><rect x="737.0" y="979.0" width="14.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (66 samples, 1.25%)</title><rect x="737.0" y="963.0" width="14.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="740.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (66 samples, 1.25%)</title><rect x="737.0" y="947.0" width="14.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="740.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (11 samples, 0.21%)</title><rect x="737.0" y="931.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="740.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (9 samples, 0.17%)</title><rect x="737.2" y="915.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="740.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.17%)</title><rect x="737.2" y="899.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="740.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (9 samples, 0.17%)</title><rect x="737.2" y="883.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="740.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (8 samples, 0.15%)</title><rect x="737.4" y="867.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="740.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (3 samples, 0.06%)</title><rect x="737.4" y="851.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="740.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (4 samples, 0.08%)</title><rect x="738.1" y="851.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.1" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (4 samples, 0.08%)</title><rect x="738.1" y="835.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="741.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="738.1" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="741.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="738.1" y="803.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="741.1" y="814.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="738.1" y="787.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="741.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$241/435352876.apply (2 samples, 0.04%)</title><rect x="738.6" y="819.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="741.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2 samples, 0.04%)</title><rect x="738.6" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="741.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.04%)</title><rect x="738.6" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="741.6" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/1923243529.apply (2 samples, 0.04%)</title><rect x="738.6" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="741.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2 samples, 0.04%)</title><rect x="738.6" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="741.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (2 samples, 0.04%)</title><rect x="738.6" y="739.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="741.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (55 samples, 1.05%)</title><rect x="739.5" y="931.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="742.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (55 samples, 1.05%)</title><rect x="739.5" y="915.0" width="12.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="742.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (55 samples, 1.05%)</title><rect x="739.5" y="899.0" width="12.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="742.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (55 samples, 1.05%)</title><rect x="739.5" y="883.0" width="12.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="742.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (53 samples, 1.01%)</title><rect x="739.7" y="867.0" width="11.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.7" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (52 samples, 0.99%)</title><rect x="739.7" y="851.0" width="11.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="742.7" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (52 samples, 0.99%)</title><rect x="739.7" y="835.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (52 samples, 0.99%)</title><rect x="739.7" y="819.0" width="11.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="742.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (52 samples, 0.99%)</title><rect x="739.7" y="803.0" width="11.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="742.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (51 samples, 0.97%)</title><rect x="739.7" y="787.0" width="11.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="742.7" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (51 samples, 0.97%)</title><rect x="739.7" y="771.0" width="11.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="742.7" y="782.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="739.9" y="755.0" width="11.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="742.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="739.9" y="739.0" width="11.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="742.9" y="750.0"></text>
</g>
<g>
<title>__GI___writev (50 samples, 0.95%)</title><rect x="739.9" y="723.0" width="11.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="742.9" y="734.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="739.9" y="707.0" width="11.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="742.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="739.9" y="691.0" width="11.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="742.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="739.9" y="675.0" width="11.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="742.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="739.9" y="659.0" width="11.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="742.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="739.9" y="643.0" width="11.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="742.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="739.9" y="627.0" width="11.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="742.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="739.9" y="611.0" width="11.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="742.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.93%)</title><rect x="740.1" y="595.0" width="11.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="743.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.93%)</title><rect x="740.1" y="579.0" width="11.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="743.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.93%)</title><rect x="740.1" y="563.0" width="11.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="743.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.89%)</title><rect x="740.6" y="547.0" width="10.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="743.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.89%)</title><rect x="740.6" y="531.0" width="10.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="743.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.84%)</title><rect x="741.2" y="515.0" width="9.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="744.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.84%)</title><rect x="741.2" y="499.0" width="9.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="744.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.82%)</title><rect x="741.5" y="483.0" width="9.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="744.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.74%)</title><rect x="742.4" y="467.0" width="8.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="745.4" y="478.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.70%)</title><rect x="742.8" y="451.0" width="8.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="745.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.70%)</title><rect x="742.8" y="435.0" width="8.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="745.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="743.0" y="419.0" width="8.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="746.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="743.0" y="403.0" width="8.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="746.0" y="414.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.67%)</title><rect x="743.3" y="387.0" width="7.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="746.3" y="398.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="743.7" y="371.0" width="7.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="746.7" y="382.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="743.7" y="355.0" width="7.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="746.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.59%)</title><rect x="744.2" y="339.0" width="6.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="747.2" y="350.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.42%)</title><rect x="746.2" y="323.0" width="4.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="749.2" y="334.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.38%)</title><rect x="746.6" y="307.0" width="4.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="749.6" y="318.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.30%)</title><rect x="747.5" y="291.0" width="3.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="750.5" y="302.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.30%)</title><rect x="747.5" y="275.0" width="3.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="750.5" y="286.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.30%)</title><rect x="747.5" y="259.0" width="3.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="750.5" y="270.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.30%)</title><rect x="747.5" y="243.0" width="3.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="750.5" y="254.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.29%)</title><rect x="747.8" y="227.0" width="3.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="750.8" y="238.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.29%)</title><rect x="747.8" y="211.0" width="3.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="750.8" y="222.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="748.0" y="195.0" width="3.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="751.0" y="206.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="748.4" y="179.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="751.4" y="190.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="748.6" y="163.0" width="2.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="751.6" y="174.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="748.6" y="147.0" width="2.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="751.6" y="158.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="748.9" y="131.0" width="2.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="751.9" y="142.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="748.9" y="115.0" width="2.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="751.9" y="126.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="748.9" y="99.0" width="2.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="751.9" y="110.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="749.5" y="83.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="752.5" y="94.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="750.0" y="67.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="753.0" y="78.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="750.0" y="51.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="753.0" y="62.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="750.0" y="35.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="753.0" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (91 samples, 1.73%)</title><rect x="751.8" y="1107.0" width="20.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="754.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (91 samples, 1.73%)</title><rect x="751.8" y="1091.0" width="20.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="754.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (53 samples, 1.01%)</title><rect x="752.0" y="1075.0" width="11.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (53 samples, 1.01%)</title><rect x="752.0" y="1059.0" width="11.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (53 samples, 1.01%)</title><rect x="752.0" y="1043.0" width="11.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (5 samples, 0.10%)</title><rect x="752.2" y="1027.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="755.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (5 samples, 0.10%)</title><rect x="752.2" y="1011.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="755.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5 samples, 0.10%)</title><rect x="752.2" y="995.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="755.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5 samples, 0.10%)</title><rect x="752.2" y="979.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.06%)</title><rect x="752.5" y="963.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.06%)</title><rect x="752.5" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.06%)</title><rect x="752.5" y="931.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.06%)</title><rect x="752.5" y="915.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="755.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.04%)</title><rect x="752.7" y="899.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="755.7" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.04%)</title><rect x="752.7" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.7" y="894.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.04%)</title><rect x="752.7" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="755.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (46 samples, 0.87%)</title><rect x="753.6" y="1027.0" width="10.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (45 samples, 0.86%)</title><rect x="753.8" y="1011.0" width="10.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="756.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (45 samples, 0.86%)</title><rect x="753.8" y="995.0" width="10.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="756.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (45 samples, 0.86%)</title><rect x="753.8" y="979.0" width="10.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="756.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (24 samples, 0.46%)</title><rect x="753.8" y="963.0" width="5.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="756.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (24 samples, 0.46%)</title><rect x="753.8" y="947.0" width="5.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (23 samples, 0.44%)</title><rect x="754.0" y="931.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="757.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (23 samples, 0.44%)</title><rect x="754.0" y="915.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="757.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 0.42%)</title><rect x="754.3" y="899.0" width="4.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="757.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (21 samples, 0.40%)</title><rect x="754.5" y="883.0" width="4.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="757.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (20 samples, 0.38%)</title><rect x="754.7" y="867.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (16 samples, 0.30%)</title><rect x="754.9" y="851.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="757.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (16 samples, 0.30%)</title><rect x="754.9" y="835.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="757.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (14 samples, 0.27%)</title><rect x="754.9" y="819.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="757.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/10694432.apply (12 samples, 0.23%)</title><rect x="755.2" y="803.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (12 samples, 0.23%)</title><rect x="755.2" y="787.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (12 samples, 0.23%)</title><rect x="755.2" y="771.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="758.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (12 samples, 0.23%)</title><rect x="755.2" y="755.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (11 samples, 0.21%)</title><rect x="755.2" y="739.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="758.2" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (3 samples, 0.06%)</title><rect x="755.2" y="723.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="758.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.15%)</title><rect x="755.8" y="723.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/102085371.run (8 samples, 0.15%)</title><rect x="755.8" y="707.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="758.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (8 samples, 0.15%)</title><rect x="755.8" y="691.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="758.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (3 samples, 0.06%)</title><rect x="756.3" y="675.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="759.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (3 samples, 0.06%)</title><rect x="756.3" y="659.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="759.3" y="670.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (3 samples, 0.06%)</title><rect x="756.3" y="643.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="759.3" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (3 samples, 0.06%)</title><rect x="756.3" y="627.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="759.3" y="638.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (3 samples, 0.06%)</title><rect x="756.3" y="611.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="759.3" y="622.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.04%)</title><rect x="756.5" y="595.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="759.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (3 samples, 0.06%)</title><rect x="757.0" y="675.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="760.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$316/2105483381.apply (2 samples, 0.04%)</title><rect x="758.7" y="851.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="761.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.04%)</title><rect x="758.7" y="835.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="761.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (20 samples, 0.38%)</title><rect x="759.2" y="963.0" width="4.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="762.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (8 samples, 0.15%)</title><rect x="759.6" y="947.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.6" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (8 samples, 0.15%)</title><rect x="759.6" y="931.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="762.6" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (8 samples, 0.15%)</title><rect x="759.6" y="915.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="762.6" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="759.6" y="899.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="762.6" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="759.6" y="883.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="762.6" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.get$Lambda (2 samples, 0.04%)</title><rect x="759.6" y="867.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="762.6" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.&lt;init&gt; (2 samples, 0.04%)</title><rect x="759.6" y="851.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="762.6" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (2 samples, 0.04%)</title><rect x="760.5" y="899.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="763.5" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (2 samples, 0.04%)</title><rect x="760.5" y="883.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="763.5" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.04%)</title><rect x="760.5" y="867.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="763.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (10 samples, 0.19%)</title><rect x="761.4" y="947.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (8 samples, 0.15%)</title><rect x="761.9" y="931.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="764.9" y="942.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.04%)</title><rect x="763.0" y="915.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="766.0" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.04%)</title><rect x="763.0" y="899.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="766.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (37 samples, 0.70%)</title><rect x="763.9" y="1075.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="766.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (37 samples, 0.70%)</title><rect x="763.9" y="1059.0" width="8.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="766.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (37 samples, 0.70%)</title><rect x="763.9" y="1043.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="766.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (37 samples, 0.70%)</title><rect x="763.9" y="1027.0" width="8.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="766.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (37 samples, 0.70%)</title><rect x="763.9" y="1011.0" width="8.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="766.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.11%)</title><rect x="763.9" y="995.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="766.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (5 samples, 0.10%)</title><rect x="764.1" y="979.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (5 samples, 0.10%)</title><rect x="764.1" y="963.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="767.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1531363542.run (2 samples, 0.04%)</title><rect x="764.1" y="947.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="767.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2 samples, 0.04%)</title><rect x="764.1" y="931.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="767.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2 samples, 0.04%)</title><rect x="764.1" y="915.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="767.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (2 samples, 0.04%)</title><rect x="764.8" y="947.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="767.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (2 samples, 0.04%)</title><rect x="764.8" y="931.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="767.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.04%)</title><rect x="764.8" y="915.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="767.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (30 samples, 0.57%)</title><rect x="765.3" y="995.0" width="6.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="768.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (30 samples, 0.57%)</title><rect x="765.3" y="979.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="768.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (29 samples, 0.55%)</title><rect x="765.5" y="963.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="768.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (29 samples, 0.55%)</title><rect x="765.5" y="947.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (29 samples, 0.55%)</title><rect x="765.5" y="931.0" width="6.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="768.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (29 samples, 0.55%)</title><rect x="765.5" y="915.0" width="6.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1531363542.run (12 samples, 0.23%)</title><rect x="765.9" y="899.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="768.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (12 samples, 0.23%)</title><rect x="765.9" y="883.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="768.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (12 samples, 0.23%)</title><rect x="765.9" y="867.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.9" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.04%)</title><rect x="765.9" y="851.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="768.9" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (2 samples, 0.04%)</title><rect x="765.9" y="835.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="768.9" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.04%)</title><rect x="765.9" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="768.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (8 samples, 0.15%)</title><rect x="766.6" y="851.0" width="1.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="769.6" y="862.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.04%)</title><rect x="766.6" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="769.6" y="846.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.04%)</title><rect x="766.6" y="819.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (6 samples, 0.11%)</title><rect x="767.0" y="835.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="770.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (2 samples, 0.04%)</title><rect x="767.0" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (4 samples, 0.08%)</title><rect x="767.5" y="819.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="770.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (4 samples, 0.08%)</title><rect x="767.5" y="803.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="770.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (3 samples, 0.06%)</title><rect x="767.7" y="787.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (3 samples, 0.06%)</title><rect x="767.7" y="771.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="770.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (3 samples, 0.06%)</title><rect x="767.7" y="755.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="770.7" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (3 samples, 0.06%)</title><rect x="767.7" y="739.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.7" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.06%)</title><rect x="767.7" y="723.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="770.7" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.06%)</title><rect x="767.7" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="770.7" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.04%)</title><rect x="767.9" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="770.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="767.9" y="675.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="770.9" y="686.0"></text>
</g>
<g>
<title>write (2 samples, 0.04%)</title><rect x="767.9" y="659.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="770.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="767.9" y="643.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="770.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="767.9" y="627.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="770.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="767.9" y="611.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="770.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="767.9" y="595.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="770.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="767.9" y="579.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="770.9" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="767.9" y="563.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="770.9" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="767.9" y="547.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="770.9" y="558.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="767.9" y="531.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="770.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="767.9" y="515.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="770.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="767.9" y="499.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="770.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="767.9" y="483.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="770.9" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (13 samples, 0.25%)</title><rect x="768.6" y="899.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (13 samples, 0.25%)</title><rect x="768.6" y="883.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="771.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (13 samples, 0.25%)</title><rect x="768.6" y="867.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (13 samples, 0.25%)</title><rect x="768.6" y="851.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="771.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (12 samples, 0.23%)</title><rect x="768.8" y="835.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (12 samples, 0.23%)</title><rect x="768.8" y="819.0" width="2.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="771.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (12 samples, 0.23%)</title><rect x="768.8" y="803.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="771.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$308/830188074.accept (12 samples, 0.23%)</title><rect x="768.8" y="787.0" width="2.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="771.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (12 samples, 0.23%)</title><rect x="768.8" y="771.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="771.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (11 samples, 0.21%)</title><rect x="769.1" y="755.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="772.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11 samples, 0.21%)</title><rect x="769.1" y="739.0" width="2.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="772.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (10 samples, 0.19%)</title><rect x="769.3" y="723.0" width="2.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="772.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (10 samples, 0.19%)</title><rect x="769.3" y="707.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="772.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.17%)</title><rect x="769.5" y="691.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (7 samples, 0.13%)</title><rect x="769.5" y="675.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (7 samples, 0.13%)</title><rect x="769.5" y="659.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="772.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.13%)</title><rect x="769.5" y="643.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="772.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (7 samples, 0.13%)</title><rect x="769.5" y="627.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="772.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.13%)</title><rect x="769.5" y="611.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="772.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.13%)</title><rect x="769.5" y="595.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="772.5" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.10%)</title><rect x="770.0" y="579.0" width="1.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="773.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="770.2" y="563.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="773.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="770.2" y="547.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="773.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="770.2" y="531.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="773.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="770.2" y="515.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="773.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="770.4" y="499.0" width="0.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="773.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="770.6" y="483.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="773.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="770.6" y="467.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="773.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="770.6" y="451.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="773.6" y="462.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="771.1" y="675.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="774.1" y="686.0"></text>
</g>
<g>
<title>[ProxyWorker-3 tid=7927] (299 samples, 5.69%)</title><rect x="772.2" y="1171.0" width="67.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="775.2" y="1182.0">[ProxyW..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (6 samples, 0.11%)</title><rect x="772.4" y="1155.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="775.4" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (6 samples, 0.11%)</title><rect x="772.4" y="1139.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="775.4" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.06%)</title><rect x="772.4" y="1123.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="775.4" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (2 samples, 0.04%)</title><rect x="772.7" y="1107.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="775.7" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (3 samples, 0.06%)</title><rect x="773.1" y="1123.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="776.1" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (3 samples, 0.06%)</title><rect x="773.1" y="1107.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="776.1" y="1118.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (2 samples, 0.04%)</title><rect x="773.1" y="1091.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="776.1" y="1102.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.08%)</title><rect x="773.8" y="1155.0" width="0.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="776.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.run (288 samples, 5.48%)</title><rect x="774.7" y="1155.0" width="64.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.7" y="1166.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (288 samples, 5.48%)</title><rect x="774.7" y="1139.0" width="64.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.7" y="1150.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (288 samples, 5.48%)</title><rect x="774.7" y="1123.0" width="64.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.7" y="1134.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (78 samples, 1.48%)</title><rect x="774.7" y="1107.0" width="17.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="777.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (78 samples, 1.48%)</title><rect x="774.7" y="1091.0" width="17.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="777.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (78 samples, 1.48%)</title><rect x="774.7" y="1075.0" width="17.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="777.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1181434552.apply (77 samples, 1.46%)</title><rect x="774.9" y="1059.0" width="17.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (77 samples, 1.46%)</title><rect x="774.9" y="1043.0" width="17.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="777.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (77 samples, 1.46%)</title><rect x="774.9" y="1027.0" width="17.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="777.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (74 samples, 1.41%)</title><rect x="775.1" y="1011.0" width="16.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (74 samples, 1.41%)</title><rect x="775.1" y="995.0" width="16.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="778.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (74 samples, 1.41%)</title><rect x="775.1" y="979.0" width="16.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (43 samples, 0.82%)</title><rect x="775.1" y="963.0" width="9.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (43 samples, 0.82%)</title><rect x="775.1" y="947.0" width="9.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="778.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (43 samples, 0.82%)</title><rect x="775.1" y="931.0" width="9.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="778.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="775.1" y="915.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="778.1" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="775.1" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="778.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/2067260339.apply (41 samples, 0.78%)</title><rect x="775.6" y="915.0" width="9.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="778.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (41 samples, 0.78%)</title><rect x="775.6" y="899.0" width="9.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="778.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (41 samples, 0.78%)</title><rect x="775.6" y="883.0" width="9.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="778.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/354122190.apply (41 samples, 0.78%)</title><rect x="775.6" y="867.0" width="9.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="778.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (41 samples, 0.78%)</title><rect x="775.6" y="851.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="778.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (40 samples, 0.76%)</title><rect x="775.8" y="835.0" width="9.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (35 samples, 0.67%)</title><rect x="775.8" y="819.0" width="7.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="778.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (35 samples, 0.67%)</title><rect x="775.8" y="803.0" width="7.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="778.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$237/1679310185.apply (35 samples, 0.67%)</title><rect x="775.8" y="787.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="778.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (35 samples, 0.67%)</title><rect x="775.8" y="771.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.08%)</title><rect x="776.2" y="755.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="779.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (4 samples, 0.08%)</title><rect x="776.2" y="739.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="779.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.06%)</title><rect x="776.5" y="723.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="779.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.06%)</title><rect x="776.5" y="707.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.04%)</title><rect x="776.5" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="779.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.04%)</title><rect x="776.5" y="675.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.04%)</title><rect x="776.5" y="659.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="779.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.04%)</title><rect x="776.5" y="643.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="779.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="776.5" y="627.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="779.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="776.5" y="611.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="779.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title><rect x="776.5" y="595.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="779.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.04%)</title><rect x="776.5" y="579.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="779.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.04%)</title><rect x="776.5" y="563.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="779.5" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.04%)</title><rect x="776.5" y="547.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="779.5" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (8 samples, 0.15%)</title><rect x="777.1" y="755.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="780.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (7 samples, 0.13%)</title><rect x="777.4" y="739.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="780.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (6 samples, 0.11%)</title><rect x="777.6" y="723.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="780.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (6 samples, 0.11%)</title><rect x="777.6" y="707.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="780.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (5 samples, 0.10%)</title><rect x="777.8" y="691.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (4 samples, 0.08%)</title><rect x="778.0" y="675.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="781.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (4 samples, 0.08%)</title><rect x="778.0" y="659.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.0" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.06%)</title><rect x="778.3" y="643.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="781.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.06%)</title><rect x="778.3" y="627.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="781.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="778.3" y="611.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="781.3" y="622.0"></text>
</g>
<g>
<title>write (3 samples, 0.06%)</title><rect x="778.3" y="595.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="781.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="778.3" y="579.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="781.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="778.3" y="563.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="781.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="778.3" y="547.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="781.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="778.3" y="531.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="781.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="778.3" y="515.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="781.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="778.3" y="499.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="781.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="778.3" y="483.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="781.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="778.3" y="467.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="781.3" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="778.5" y="451.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="781.5" y="462.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="778.5" y="435.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="781.5" y="446.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="778.5" y="419.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="781.5" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (21 samples, 0.40%)</title><rect x="778.9" y="755.0" width="4.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="781.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (10 samples, 0.19%)</title><rect x="779.4" y="739.0" width="2.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="782.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (4 samples, 0.08%)</title><rect x="779.8" y="723.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="782.8" y="734.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (2 samples, 0.04%)</title><rect x="780.3" y="707.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="783.3" y="718.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (2 samples, 0.04%)</title><rect x="780.3" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="783.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (4 samples, 0.08%)</title><rect x="780.7" y="723.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.7" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4 samples, 0.08%)</title><rect x="780.7" y="707.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="783.7" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4 samples, 0.08%)</title><rect x="780.7" y="691.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="783.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.06%)</title><rect x="781.0" y="675.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="784.0" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (3 samples, 0.06%)</title><rect x="781.0" y="659.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.0" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (3 samples, 0.06%)</title><rect x="781.0" y="643.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="784.0" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="781.0" y="627.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="784.0" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (2 samples, 0.04%)</title><rect x="781.6" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="784.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="781.6" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="784.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 0.04%)</title><rect x="781.6" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="784.6" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22429093.invoke (2 samples, 0.04%)</title><rect x="781.6" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="784.6" y="702.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="781.6" y="675.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="784.6" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (5 samples, 0.10%)</title><rect x="782.1" y="739.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="785.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (4 samples, 0.08%)</title><rect x="782.3" y="723.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="785.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (2 samples, 0.04%)</title><rect x="782.8" y="707.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="785.8" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (2 samples, 0.04%)</title><rect x="783.2" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="786.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (5 samples, 0.10%)</title><rect x="783.7" y="819.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="786.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.04%)</title><rect x="784.3" y="803.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="787.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (31 samples, 0.59%)</title><rect x="784.8" y="963.0" width="6.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="787.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (31 samples, 0.59%)</title><rect x="784.8" y="947.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="787.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (30 samples, 0.57%)</title><rect x="784.8" y="931.0" width="6.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="787.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (30 samples, 0.57%)</title><rect x="784.8" y="915.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (30 samples, 0.57%)</title><rect x="784.8" y="899.0" width="6.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="787.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$160/1778891811.apply (29 samples, 0.55%)</title><rect x="785.0" y="883.0" width="6.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="788.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (29 samples, 0.55%)</title><rect x="785.0" y="867.0" width="6.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (29 samples, 0.55%)</title><rect x="785.0" y="851.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="788.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (13 samples, 0.25%)</title><rect x="785.0" y="835.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (13 samples, 0.25%)</title><rect x="785.0" y="819.0" width="2.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="788.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (13 samples, 0.25%)</title><rect x="785.0" y="803.0" width="2.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="788.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/1774108670.apply (13 samples, 0.25%)</title><rect x="785.0" y="787.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="788.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (13 samples, 0.25%)</title><rect x="785.0" y="771.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="788.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (13 samples, 0.25%)</title><rect x="785.0" y="755.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="788.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (13 samples, 0.25%)</title><rect x="785.0" y="739.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="788.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (10 samples, 0.19%)</title><rect x="785.0" y="723.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="788.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (8 samples, 0.15%)</title><rect x="785.2" y="707.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="788.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (8 samples, 0.15%)</title><rect x="785.2" y="691.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="788.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (8 samples, 0.15%)</title><rect x="785.2" y="675.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="788.2" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (8 samples, 0.15%)</title><rect x="785.2" y="659.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="788.2" y="670.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (6 samples, 0.11%)</title><rect x="785.2" y="643.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="788.2" y="654.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (4 samples, 0.08%)</title><rect x="785.7" y="627.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="788.7" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/146370526.run (2 samples, 0.04%)</title><rect x="786.6" y="643.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.06%)</title><rect x="787.2" y="723.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="790.2" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.06%)</title><rect x="787.2" y="707.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="790.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (16 samples, 0.30%)</title><rect x="787.9" y="835.0" width="3.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="790.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (16 samples, 0.30%)</title><rect x="787.9" y="819.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (2 samples, 0.04%)</title><rect x="787.9" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.04%)</title><rect x="788.4" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (3 samples, 0.06%)</title><rect x="788.8" y="803.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="791.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (3 samples, 0.06%)</title><rect x="788.8" y="787.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="791.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (3 samples, 0.06%)</title><rect x="788.8" y="771.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="791.8" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="788.8" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="791.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="788.8" y="739.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="791.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.04%)</title><rect x="788.8" y="723.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.8" y="734.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.04%)</title><rect x="788.8" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="791.8" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.04%)</title><rect x="788.8" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="791.8" y="702.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (2 samples, 0.04%)</title><rect x="788.8" y="675.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="791.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (9 samples, 0.17%)</title><rect x="789.5" y="803.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.5" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (9 samples, 0.17%)</title><rect x="789.5" y="787.0" width="2.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="792.5" y="798.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (7 samples, 0.13%)</title><rect x="789.5" y="771.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="792.5" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.04%)</title><rect x="789.9" y="755.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="792.9" y="766.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.06%)</title><rect x="790.4" y="755.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="793.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$166/752533844.run (2 samples, 0.04%)</title><rect x="791.1" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="794.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (2 samples, 0.04%)</title><rect x="791.1" y="755.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="794.1" y="766.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (2 samples, 0.04%)</title><rect x="791.1" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.1" y="750.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (2 samples, 0.04%)</title><rect x="791.1" y="723.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="794.1" y="734.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.04%)</title><rect x="791.1" y="707.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="794.1" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (2 samples, 0.04%)</title><rect x="791.1" y="691.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="794.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (2 samples, 0.04%)</title><rect x="791.7" y="1011.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (2 samples, 0.04%)</title><rect x="791.7" y="995.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="794.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (33 samples, 0.63%)</title><rect x="792.4" y="1107.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="795.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (30 samples, 0.57%)</title><rect x="792.6" y="1091.0" width="6.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="795.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (16 samples, 0.30%)</title><rect x="792.9" y="1075.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="795.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (14 samples, 0.27%)</title><rect x="793.3" y="1059.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="796.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (14 samples, 0.27%)</title><rect x="793.3" y="1043.0" width="3.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.3" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.08%)</title><rect x="793.5" y="1027.0" width="0.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="796.5" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="793.7" y="1011.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="796.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.17%)</title><rect x="794.4" y="1027.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="797.4" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (9 samples, 0.17%)</title><rect x="794.4" y="1011.0" width="2.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="797.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="794.6" y="995.0" width="1.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="797.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.15%)</title><rect x="794.6" y="979.0" width="1.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="797.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="795.1" y="963.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="798.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="795.1" y="947.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="798.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="795.3" y="931.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="798.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="795.3" y="915.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="798.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="795.5" y="899.0" width="0.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="798.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="796.0" y="883.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="799.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (6 samples, 0.11%)</title><rect x="796.4" y="1075.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="799.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (6 samples, 0.11%)</title><rect x="796.4" y="1059.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="799.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (6 samples, 0.11%)</title><rect x="796.4" y="1043.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (2 samples, 0.04%)</title><rect x="796.9" y="1027.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="799.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.04%)</title><rect x="796.9" y="1011.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="799.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.13%)</title><rect x="797.8" y="1075.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="800.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.13%)</title><rect x="797.8" y="1059.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="800.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.13%)</title><rect x="797.8" y="1043.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="800.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.13%)</title><rect x="797.8" y="1027.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="800.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.13%)</title><rect x="797.8" y="1011.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="800.8" y="1022.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="797.8" y="995.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="800.8" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (5 samples, 0.10%)</title><rect x="798.2" y="995.0" width="1.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="801.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="798.2" y="979.0" width="1.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="801.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="798.2" y="963.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="801.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="798.2" y="947.0" width="1.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="801.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="798.2" y="931.0" width="1.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="801.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="798.2" y="915.0" width="1.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="801.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="798.2" y="899.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="801.2" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="798.2" y="883.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="801.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="798.5" y="867.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="801.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/808714778.run (78 samples, 1.48%)</title><rect x="800.0" y="1107.0" width="17.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="803.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (77 samples, 1.46%)</title><rect x="800.3" y="1091.0" width="17.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="803.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (77 samples, 1.46%)</title><rect x="800.3" y="1075.0" width="17.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="803.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (77 samples, 1.46%)</title><rect x="800.3" y="1059.0" width="17.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="803.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (77 samples, 1.46%)</title><rect x="800.3" y="1043.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (77 samples, 1.46%)</title><rect x="800.3" y="1027.0" width="17.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="803.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (77 samples, 1.46%)</title><rect x="800.3" y="1011.0" width="17.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="803.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (77 samples, 1.46%)</title><rect x="800.3" y="995.0" width="17.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (77 samples, 1.46%)</title><rect x="800.3" y="979.0" width="17.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="803.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (77 samples, 1.46%)</title><rect x="800.3" y="963.0" width="17.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="803.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (77 samples, 1.46%)</title><rect x="800.3" y="947.0" width="17.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="803.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (17 samples, 0.32%)</title><rect x="800.5" y="931.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="803.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (12 samples, 0.23%)</title><rect x="800.7" y="915.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="803.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (12 samples, 0.23%)</title><rect x="800.7" y="899.0" width="2.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="803.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (12 samples, 0.23%)</title><rect x="800.7" y="883.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="803.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (11 samples, 0.21%)</title><rect x="800.9" y="867.0" width="2.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="803.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (9 samples, 0.17%)</title><rect x="800.9" y="851.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="803.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/10694432.apply (8 samples, 0.15%)</title><rect x="801.2" y="835.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (8 samples, 0.15%)</title><rect x="801.2" y="819.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (8 samples, 0.15%)</title><rect x="801.2" y="803.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (8 samples, 0.15%)</title><rect x="801.2" y="787.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (8 samples, 0.15%)</title><rect x="801.2" y="771.0" width="1.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="804.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.15%)</title><rect x="801.2" y="755.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/102085371.run (8 samples, 0.15%)</title><rect x="801.2" y="739.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="804.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (8 samples, 0.15%)</title><rect x="801.2" y="723.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (4 samples, 0.08%)</title><rect x="801.2" y="707.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.08%)</title><rect x="801.2" y="691.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.2" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (4 samples, 0.08%)</title><rect x="801.2" y="675.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="804.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (4 samples, 0.08%)</title><rect x="801.2" y="659.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="804.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (4 samples, 0.08%)</title><rect x="801.2" y="643.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.2" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (4 samples, 0.08%)</title><rect x="801.2" y="627.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="804.2" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (4 samples, 0.08%)</title><rect x="801.2" y="611.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.2" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (4 samples, 0.08%)</title><rect x="801.2" y="595.0" width="0.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="804.2" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (4 samples, 0.08%)</title><rect x="801.2" y="579.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="804.2" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (4 samples, 0.08%)</title><rect x="801.2" y="563.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.2" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (4 samples, 0.08%)</title><rect x="801.2" y="547.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.2" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (4 samples, 0.08%)</title><rect x="801.2" y="531.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.2" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (4 samples, 0.08%)</title><rect x="801.2" y="515.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.2" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (4 samples, 0.08%)</title><rect x="801.2" y="499.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.2" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1531363542.run (3 samples, 0.06%)</title><rect x="801.2" y="483.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="804.2" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (3 samples, 0.06%)</title><rect x="801.2" y="467.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="804.2" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (3 samples, 0.06%)</title><rect x="801.2" y="451.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.2" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3 samples, 0.06%)</title><rect x="801.2" y="435.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.2" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3 samples, 0.06%)</title><rect x="801.2" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="804.2" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (3 samples, 0.06%)</title><rect x="801.2" y="403.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="804.2" y="414.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (3 samples, 0.06%)</title><rect x="801.2" y="387.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="804.2" y="398.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (2 samples, 0.04%)</title><rect x="801.4" y="371.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="804.4" y="382.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (2 samples, 0.04%)</title><rect x="801.4" y="355.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="804.4" y="366.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (2 samples, 0.04%)</title><rect x="801.4" y="339.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="804.4" y="350.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.04%)</title><rect x="801.4" y="323.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="804.4" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.04%)</title><rect x="801.4" y="307.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="804.4" y="318.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.04%)</title><rect x="801.4" y="291.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="804.4" y="302.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (2 samples, 0.04%)</title><rect x="801.4" y="275.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="804.4" y="286.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (4 samples, 0.08%)</title><rect x="802.1" y="707.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.1" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (4 samples, 0.08%)</title><rect x="802.1" y="691.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.08%)</title><rect x="802.1" y="675.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="805.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.08%)</title><rect x="802.1" y="659.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.08%)</title><rect x="802.1" y="643.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.08%)</title><rect x="802.1" y="627.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="805.1" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (4 samples, 0.08%)</title><rect x="802.1" y="611.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="805.1" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (4 samples, 0.08%)</title><rect x="802.1" y="595.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.1" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (4 samples, 0.08%)</title><rect x="802.1" y="579.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.1" y="590.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (4 samples, 0.08%)</title><rect x="802.1" y="563.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="805.1" y="574.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (4 samples, 0.08%)</title><rect x="802.1" y="547.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="805.1" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (4 samples, 0.08%)</title><rect x="802.1" y="531.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.1" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.08%)</title><rect x="802.1" y="515.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.08%)</title><rect x="802.1" y="499.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.1" y="510.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (4 samples, 0.08%)</title><rect x="802.1" y="483.0" width="0.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="805.1" y="494.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (4 samples, 0.08%)</title><rect x="802.1" y="467.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="805.1" y="478.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (4 samples, 0.08%)</title><rect x="802.1" y="451.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="805.1" y="462.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (4 samples, 0.08%)</title><rect x="802.1" y="435.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="805.1" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (2 samples, 0.04%)</title><rect x="802.9" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.04%)</title><rect x="802.9" y="835.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="805.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (3 samples, 0.06%)</title><rect x="803.4" y="915.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="806.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (2 samples, 0.04%)</title><rect x="803.6" y="899.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (2 samples, 0.04%)</title><rect x="803.6" y="883.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="806.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (58 samples, 1.10%)</title><rect x="804.5" y="931.0" width="13.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="807.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (58 samples, 1.10%)</title><rect x="804.5" y="915.0" width="13.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="807.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (58 samples, 1.10%)</title><rect x="804.5" y="899.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="807.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (58 samples, 1.10%)</title><rect x="804.5" y="883.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="807.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (56 samples, 1.06%)</title><rect x="804.7" y="867.0" width="12.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="807.7" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (56 samples, 1.06%)</title><rect x="804.7" y="851.0" width="12.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="807.7" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (56 samples, 1.06%)</title><rect x="804.7" y="835.0" width="12.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="807.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (56 samples, 1.06%)</title><rect x="804.7" y="819.0" width="12.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="807.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (55 samples, 1.05%)</title><rect x="805.0" y="803.0" width="12.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.0" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (54 samples, 1.03%)</title><rect x="805.2" y="787.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (54 samples, 1.03%)</title><rect x="805.2" y="771.0" width="12.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="808.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.01%)</title><rect x="805.4" y="755.0" width="11.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="808.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.01%)</title><rect x="805.4" y="739.0" width="11.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="808.4" y="750.0"></text>
</g>
<g>
<title>__GI___writev (53 samples, 1.01%)</title><rect x="805.4" y="723.0" width="11.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="808.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.01%)</title><rect x="805.4" y="707.0" width="11.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="808.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.01%)</title><rect x="805.4" y="691.0" width="11.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="808.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.99%)</title><rect x="805.6" y="675.0" width="11.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="808.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.99%)</title><rect x="805.6" y="659.0" width="11.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="808.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.99%)</title><rect x="805.6" y="643.0" width="11.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="808.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.97%)</title><rect x="805.9" y="627.0" width="11.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="808.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 0.97%)</title><rect x="805.9" y="611.0" width="11.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="808.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.93%)</title><rect x="806.3" y="595.0" width="11.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="809.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.93%)</title><rect x="806.3" y="579.0" width="11.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="809.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.93%)</title><rect x="806.3" y="563.0" width="11.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="809.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.93%)</title><rect x="806.3" y="547.0" width="11.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="809.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.91%)</title><rect x="806.5" y="531.0" width="10.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="809.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.87%)</title><rect x="807.0" y="515.0" width="10.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="810.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.84%)</title><rect x="807.4" y="499.0" width="9.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="810.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.78%)</title><rect x="808.1" y="483.0" width="9.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="811.1" y="494.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.74%)</title><rect x="808.6" y="467.0" width="8.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="811.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="809.2" y="451.0" width="8.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="812.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="809.2" y="435.0" width="8.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="812.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="809.2" y="419.0" width="8.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="812.2" y="430.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="809.2" y="403.0" width="8.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="812.2" y="414.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.68%)</title><rect x="809.2" y="387.0" width="8.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="812.2" y="398.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.67%)</title><rect x="809.5" y="371.0" width="7.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="812.5" y="382.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.65%)</title><rect x="809.7" y="355.0" width="7.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="812.7" y="366.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="809.9" y="339.0" width="7.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="812.9" y="350.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.51%)</title><rect x="811.3" y="323.0" width="6.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="814.3" y="334.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.48%)</title><rect x="811.7" y="307.0" width="5.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="814.7" y="318.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.48%)</title><rect x="811.7" y="291.0" width="5.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="814.7" y="302.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="811.9" y="275.0" width="5.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="814.9" y="286.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="811.9" y="259.0" width="5.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="814.9" y="270.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="811.9" y="243.0" width="5.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="814.9" y="254.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="811.9" y="227.0" width="5.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="814.9" y="238.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.44%)</title><rect x="812.1" y="211.0" width="5.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="815.1" y="222.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.44%)</title><rect x="812.1" y="195.0" width="5.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="815.1" y="206.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.42%)</title><rect x="812.4" y="179.0" width="4.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="815.4" y="190.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.42%)</title><rect x="812.4" y="163.0" width="4.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="815.4" y="174.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.40%)</title><rect x="812.6" y="147.0" width="4.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="815.6" y="158.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.38%)</title><rect x="812.8" y="131.0" width="4.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="815.8" y="142.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.36%)</title><rect x="813.0" y="115.0" width="4.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="816.0" y="126.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.36%)</title><rect x="813.0" y="99.0" width="4.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="816.0" y="110.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.30%)</title><rect x="813.7" y="83.0" width="3.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="816.7" y="94.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="814.2" y="67.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="817.2" y="78.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.27%)</title><rect x="814.2" y="51.0" width="3.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="817.2" y="62.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.25%)</title><rect x="814.4" y="35.0" width="2.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="817.4" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (97 samples, 1.84%)</title><rect x="817.5" y="1107.0" width="21.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.5" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (97 samples, 1.84%)</title><rect x="817.5" y="1091.0" width="21.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="820.5" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (59 samples, 1.12%)</title><rect x="817.8" y="1075.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="820.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (58 samples, 1.10%)</title><rect x="818.0" y="1059.0" width="13.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (58 samples, 1.10%)</title><rect x="818.0" y="1043.0" width="13.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (3 samples, 0.06%)</title><rect x="818.2" y="1027.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (2 samples, 0.04%)</title><rect x="818.4" y="1011.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="821.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (2 samples, 0.04%)</title><rect x="818.4" y="995.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="821.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (2 samples, 0.04%)</title><rect x="818.4" y="979.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="821.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.04%)</title><rect x="818.4" y="963.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="821.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.04%)</title><rect x="818.4" y="947.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.04%)</title><rect x="818.4" y="931.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="821.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.04%)</title><rect x="818.4" y="915.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="821.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (53 samples, 1.01%)</title><rect x="819.1" y="1027.0" width="11.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="822.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (53 samples, 1.01%)</title><rect x="819.1" y="1011.0" width="11.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="822.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (52 samples, 0.99%)</title><rect x="819.3" y="995.0" width="11.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (52 samples, 0.99%)</title><rect x="819.3" y="979.0" width="11.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (29 samples, 0.55%)</title><rect x="819.3" y="963.0" width="6.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (29 samples, 0.55%)</title><rect x="819.3" y="947.0" width="6.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (29 samples, 0.55%)</title><rect x="819.3" y="931.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="822.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (29 samples, 0.55%)</title><rect x="819.3" y="915.0" width="6.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="822.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (29 samples, 0.55%)</title><rect x="819.3" y="899.0" width="6.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="822.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (29 samples, 0.55%)</title><rect x="819.3" y="883.0" width="6.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="822.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (29 samples, 0.55%)</title><rect x="819.3" y="867.0" width="6.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="822.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (26 samples, 0.49%)</title><rect x="819.3" y="851.0" width="5.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="822.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (26 samples, 0.49%)</title><rect x="819.3" y="835.0" width="5.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="822.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (25 samples, 0.48%)</title><rect x="819.3" y="819.0" width="5.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="822.3" y="830.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.06%)</title><rect x="819.3" y="803.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="822.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/10694432.apply (19 samples, 0.36%)</title><rect x="820.0" y="803.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="823.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (18 samples, 0.34%)</title><rect x="820.2" y="787.0" width="4.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (17 samples, 0.32%)</title><rect x="820.2" y="771.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="823.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (17 samples, 0.32%)</title><rect x="820.2" y="755.0" width="3.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (15 samples, 0.29%)</title><rect x="820.5" y="739.0" width="3.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="823.5" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (5 samples, 0.10%)</title><rect x="820.5" y="723.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="823.5" y="734.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (3 samples, 0.06%)</title><rect x="820.9" y="707.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (3 samples, 0.06%)</title><rect x="820.9" y="691.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (3 samples, 0.06%)</title><rect x="820.9" y="675.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.04%)</title><rect x="821.1" y="659.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="824.1" y="670.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.04%)</title><rect x="821.1" y="643.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="824.1" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (10 samples, 0.19%)</title><rect x="821.6" y="723.0" width="2.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="824.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/102085371.run (10 samples, 0.19%)</title><rect x="821.6" y="707.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.6" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (10 samples, 0.19%)</title><rect x="821.6" y="691.0" width="2.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="824.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="821.6" y="675.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="824.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="821.6" y="659.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="824.6" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (2 samples, 0.04%)</title><rect x="822.0" y="675.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.0" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (2 samples, 0.04%)</title><rect x="822.0" y="659.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="825.0" y="670.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (2 samples, 0.04%)</title><rect x="822.0" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="825.0" y="654.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (2 samples, 0.04%)</title><rect x="822.0" y="627.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="825.0" y="638.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.04%)</title><rect x="822.0" y="611.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="825.0" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (4 samples, 0.08%)</title><rect x="822.5" y="675.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="825.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (2 samples, 0.04%)</title><rect x="822.9" y="659.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="825.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (2 samples, 0.04%)</title><rect x="823.4" y="675.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="826.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (2 samples, 0.04%)</title><rect x="823.4" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="826.4" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="823.4" y="643.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="826.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/179650308.apply (3 samples, 0.06%)</title><rect x="824.3" y="803.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="827.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (3 samples, 0.06%)</title><rect x="824.3" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="827.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (3 samples, 0.06%)</title><rect x="824.3" y="771.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="827.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (3 samples, 0.06%)</title><rect x="824.3" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="827.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.04%)</title><rect x="824.5" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="827.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$275/352039824.apply (2 samples, 0.04%)</title><rect x="825.2" y="851.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="828.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (2 samples, 0.04%)</title><rect x="825.2" y="835.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="828.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="825.2" y="819.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="828.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="825.2" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="828.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (2 samples, 0.04%)</title><rect x="825.2" y="787.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="828.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (22 samples, 0.42%)</title><rect x="825.8" y="963.0" width="5.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="828.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (2 samples, 0.04%)</title><rect x="825.8" y="947.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="828.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (11 samples, 0.21%)</title><rect x="826.3" y="947.0" width="2.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="829.3" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (10 samples, 0.19%)</title><rect x="826.5" y="931.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.5" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (10 samples, 0.19%)</title><rect x="826.5" y="915.0" width="2.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.5" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (5 samples, 0.10%)</title><rect x="827.0" y="899.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.0" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (5 samples, 0.10%)</title><rect x="827.0" y="883.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="830.0" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (5 samples, 0.10%)</title><rect x="827.0" y="867.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.0" y="878.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.06%)</title><rect x="827.0" y="851.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.06%)</title><rect x="827.0" y="835.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="830.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="827.2" y="819.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="827.2" y="803.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="830.2" y="814.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (3 samples, 0.06%)</title><rect x="828.1" y="899.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (9 samples, 0.17%)</title><rect x="828.8" y="947.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="831.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (9 samples, 0.17%)</title><rect x="828.8" y="931.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="831.8" y="942.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.04%)</title><rect x="829.4" y="915.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="832.4" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.04%)</title><rect x="829.4" y="899.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="832.4" y="910.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.06%)</title><rect x="830.1" y="915.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="833.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (37 samples, 0.70%)</title><rect x="831.0" y="1075.0" width="8.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="834.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (37 samples, 0.70%)</title><rect x="831.0" y="1059.0" width="8.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="834.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (37 samples, 0.70%)</title><rect x="831.0" y="1043.0" width="8.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (37 samples, 0.70%)</title><rect x="831.0" y="1027.0" width="8.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (37 samples, 0.70%)</title><rect x="831.0" y="1011.0" width="8.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="834.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.06%)</title><rect x="831.0" y="995.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="834.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (34 samples, 0.65%)</title><rect x="831.7" y="995.0" width="7.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (34 samples, 0.65%)</title><rect x="831.7" y="979.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (34 samples, 0.65%)</title><rect x="831.7" y="963.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="834.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (34 samples, 0.65%)</title><rect x="831.7" y="947.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (34 samples, 0.65%)</title><rect x="831.7" y="931.0" width="7.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (34 samples, 0.65%)</title><rect x="831.7" y="915.0" width="7.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1531363542.run (15 samples, 0.29%)</title><rect x="831.7" y="899.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (15 samples, 0.29%)</title><rect x="831.7" y="883.0" width="3.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="834.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (15 samples, 0.29%)</title><rect x="831.7" y="867.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="834.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (11 samples, 0.21%)</title><rect x="832.1" y="851.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="835.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (11 samples, 0.21%)</title><rect x="832.1" y="835.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="835.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (3 samples, 0.06%)</title><rect x="832.3" y="819.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="835.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (6 samples, 0.11%)</title><rect x="833.2" y="819.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="836.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (6 samples, 0.11%)</title><rect x="833.2" y="803.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="836.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (5 samples, 0.10%)</title><rect x="833.5" y="787.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="836.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (5 samples, 0.10%)</title><rect x="833.5" y="771.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (5 samples, 0.10%)</title><rect x="833.5" y="755.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="836.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5 samples, 0.10%)</title><rect x="833.5" y="739.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5 samples, 0.10%)</title><rect x="833.5" y="723.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.5" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.10%)</title><rect x="833.5" y="707.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="836.5" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.10%)</title><rect x="833.5" y="691.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="836.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="833.5" y="675.0" width="1.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="836.5" y="686.0"></text>
</g>
<g>
<title>write (5 samples, 0.10%)</title><rect x="833.5" y="659.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="836.5" y="670.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="833.5" y="643.0" width="1.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="836.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="833.5" y="627.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="836.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="833.5" y="611.0" width="1.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="836.5" y="622.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="833.5" y="595.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="836.5" y="606.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="833.5" y="579.0" width="1.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="836.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="833.5" y="563.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="836.5" y="574.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="833.5" y="547.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="836.5" y="558.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="833.7" y="531.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="836.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="833.9" y="515.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="836.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="833.9" y="499.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="836.9" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="834.1" y="483.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="837.1" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (2 samples, 0.04%)</title><rect x="834.6" y="851.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="837.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.connected (2 samples, 0.04%)</title><rect x="834.6" y="835.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="837.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$299/1271326018.accept (6 samples, 0.11%)</title><rect x="835.0" y="899.0" width="1.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="838.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (6 samples, 0.11%)</title><rect x="835.0" y="883.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="838.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (6 samples, 0.11%)</title><rect x="835.0" y="867.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="838.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.11%)</title><rect x="835.0" y="851.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.11%)</title><rect x="835.0" y="835.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="838.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6 samples, 0.11%)</title><rect x="835.0" y="819.0" width="1.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="838.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.11%)</title><rect x="835.0" y="803.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="838.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$306/1537821975.accept (4 samples, 0.08%)</title><rect x="835.5" y="787.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="838.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (3 samples, 0.06%)</title><rect x="835.7" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="838.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (3 samples, 0.06%)</title><rect x="835.7" y="755.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="838.7" y="766.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (2 samples, 0.04%)</title><rect x="835.9" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="838.9" y="750.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (2 samples, 0.04%)</title><rect x="835.9" y="723.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="838.9" y="734.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (2 samples, 0.04%)</title><rect x="835.9" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="838.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (9 samples, 0.17%)</title><rect x="836.4" y="899.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="839.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (9 samples, 0.17%)</title><rect x="836.4" y="883.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="839.4" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (9 samples, 0.17%)</title><rect x="836.4" y="867.0" width="2.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.4" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (8 samples, 0.15%)</title><rect x="836.4" y="851.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="839.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.13%)</title><rect x="836.6" y="835.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="839.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6 samples, 0.11%)</title><rect x="836.8" y="819.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="839.8" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.11%)</title><rect x="836.8" y="803.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="839.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$308/830188074.accept (5 samples, 0.10%)</title><rect x="837.1" y="787.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="840.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (5 samples, 0.10%)</title><rect x="837.1" y="771.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="840.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (5 samples, 0.10%)</title><rect x="837.1" y="755.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="840.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.10%)</title><rect x="837.1" y="739.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="840.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (4 samples, 0.08%)</title><rect x="837.3" y="723.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="840.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (4 samples, 0.08%)</title><rect x="837.3" y="707.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.08%)</title><rect x="837.3" y="691.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="840.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.06%)</title><rect x="837.3" y="675.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="840.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.06%)</title><rect x="837.3" y="659.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="840.3" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (3 samples, 0.06%)</title><rect x="837.3" y="643.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="840.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (3 samples, 0.06%)</title><rect x="837.3" y="627.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="840.3" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.06%)</title><rect x="837.3" y="611.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="840.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.06%)</title><rect x="837.3" y="595.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="840.3" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="837.3" y="579.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="840.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="837.3" y="563.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="840.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="837.3" y="547.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="840.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="837.3" y="531.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="840.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="837.3" y="515.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="840.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="837.3" y="499.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="840.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="837.5" y="483.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="840.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (3 samples, 0.06%)</title><rect x="838.6" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.6" y="910.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.slice (3 samples, 0.06%)</title><rect x="838.6" y="883.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="841.6" y="894.0"></text>
</g>
<g>
<title>[ProxyWorker-4 tid=7930] (311 samples, 5.91%)</title><rect x="839.3" y="1171.0" width="69.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="842.3" y="1182.0">[ProxyW..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.10%)</title><rect x="839.7" y="1155.0" width="1.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="842.7" y="1166.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (4 samples, 0.08%)</title><rect x="840.0" y="1139.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="843.0" y="1150.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (3 samples, 0.06%)</title><rect x="840.2" y="1123.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="843.2" y="1134.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.04%)</title><rect x="840.4" y="1107.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="843.4" y="1118.0"></text>
</g>
<g>
<title>[unknown_Java] (5 samples, 0.10%)</title><rect x="840.9" y="1155.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="843.9" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="841.5" y="1139.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="844.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/Thread.run (299 samples, 5.69%)</title><rect x="842.0" y="1155.0" width="67.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.0" y="1166.0">java/la..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (299 samples, 5.69%)</title><rect x="842.0" y="1139.0" width="67.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="845.0" y="1150.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (299 samples, 5.69%)</title><rect x="842.0" y="1123.0" width="67.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.0" y="1134.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (89 samples, 1.69%)</title><rect x="842.0" y="1107.0" width="20.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (88 samples, 1.67%)</title><rect x="842.2" y="1091.0" width="19.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="845.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (88 samples, 1.67%)</title><rect x="842.2" y="1075.0" width="19.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="845.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1181434552.apply (85 samples, 1.62%)</title><rect x="842.7" y="1059.0" width="19.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="845.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (85 samples, 1.62%)</title><rect x="842.7" y="1043.0" width="19.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="845.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (85 samples, 1.62%)</title><rect x="842.7" y="1027.0" width="19.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="845.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (81 samples, 1.54%)</title><rect x="842.7" y="1011.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (81 samples, 1.54%)</title><rect x="842.7" y="995.0" width="18.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="845.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (80 samples, 1.52%)</title><rect x="842.9" y="979.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="845.9" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (41 samples, 0.78%)</title><rect x="842.9" y="963.0" width="9.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="845.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (41 samples, 0.78%)</title><rect x="842.9" y="947.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="845.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (41 samples, 0.78%)</title><rect x="842.9" y="931.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/2067260339.apply (41 samples, 0.78%)</title><rect x="842.9" y="915.0" width="9.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="845.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (41 samples, 0.78%)</title><rect x="842.9" y="899.0" width="9.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="845.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (41 samples, 0.78%)</title><rect x="842.9" y="883.0" width="9.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="845.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/354122190.apply (41 samples, 0.78%)</title><rect x="842.9" y="867.0" width="9.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="845.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (41 samples, 0.78%)</title><rect x="842.9" y="851.0" width="9.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="845.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (40 samples, 0.76%)</title><rect x="843.1" y="835.0" width="9.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (35 samples, 0.67%)</title><rect x="843.1" y="819.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="846.1" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (35 samples, 0.67%)</title><rect x="843.1" y="803.0" width="7.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="846.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$237/1679310185.apply (35 samples, 0.67%)</title><rect x="843.1" y="787.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (33 samples, 0.63%)</title><rect x="843.6" y="771.0" width="7.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="843.8" y="755.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="846.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.04%)</title><rect x="844.5" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="847.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.04%)</title><rect x="844.5" y="739.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="844.5" y="723.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="847.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="844.5" y="707.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="847.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (2 samples, 0.04%)</title><rect x="844.5" y="691.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="847.5" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.04%)</title><rect x="844.5" y="675.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.5" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.04%)</title><rect x="844.5" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (2 samples, 0.04%)</title><rect x="844.5" y="643.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="847.5" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.04%)</title><rect x="844.5" y="627.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (2 samples, 0.04%)</title><rect x="844.5" y="611.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="847.5" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (2 samples, 0.04%)</title><rect x="844.5" y="595.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="847.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (2 samples, 0.04%)</title><rect x="844.5" y="579.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="847.5" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (2 samples, 0.04%)</title><rect x="844.5" y="563.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="847.5" y="574.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (2 samples, 0.04%)</title><rect x="844.5" y="547.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="847.5" y="558.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (2 samples, 0.04%)</title><rect x="844.5" y="531.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="847.5" y="542.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.04%)</title><rect x="844.5" y="515.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="847.5" y="526.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (2 samples, 0.04%)</title><rect x="844.5" y="499.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="847.5" y="510.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (2 samples, 0.04%)</title><rect x="844.5" y="483.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="847.5" y="494.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (2 samples, 0.04%)</title><rect x="844.5" y="467.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="847.5" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="844.5" y="451.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="847.5" y="462.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="844.5" y="435.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="847.5" y="446.0"></text>
</g>
<g>
<title>__GI___writev (2 samples, 0.04%)</title><rect x="844.5" y="419.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="847.5" y="430.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="844.5" y="403.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="847.5" y="414.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="844.5" y="387.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="847.5" y="398.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="844.5" y="371.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="847.5" y="382.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="844.5" y="355.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="847.5" y="366.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="844.5" y="339.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="847.5" y="350.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="844.5" y="323.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="847.5" y="334.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (7 samples, 0.13%)</title><rect x="844.9" y="755.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="847.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (7 samples, 0.13%)</title><rect x="844.9" y="739.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="847.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (2 samples, 0.04%)</title><rect x="844.9" y="723.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="847.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (5 samples, 0.10%)</title><rect x="845.4" y="723.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="848.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (5 samples, 0.10%)</title><rect x="845.4" y="707.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="848.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (5 samples, 0.10%)</title><rect x="845.4" y="691.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="848.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5 samples, 0.10%)</title><rect x="845.4" y="675.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="848.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5 samples, 0.10%)</title><rect x="845.4" y="659.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="848.4" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.10%)</title><rect x="845.4" y="643.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="848.4" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (4 samples, 0.08%)</title><rect x="845.6" y="627.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="848.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="845.6" y="611.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="848.6" y="622.0"></text>
</g>
<g>
<title>write (4 samples, 0.08%)</title><rect x="845.6" y="595.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="848.6" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="845.6" y="579.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="848.6" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="845.6" y="563.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="848.6" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="845.6" y="547.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="848.6" y="558.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="845.6" y="531.0" width="0.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="848.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="845.6" y="515.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="848.6" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="845.6" y="499.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="848.6" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="845.6" y="483.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="848.6" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="845.6" y="467.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="848.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="845.6" y="451.0" width="0.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="848.6" y="462.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="845.8" y="435.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="848.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="845.8" y="419.0" width="0.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="848.8" y="430.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (20 samples, 0.38%)</title><rect x="846.5" y="755.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="849.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (14 samples, 0.27%)</title><rect x="846.7" y="739.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="849.7" y="750.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (2 samples, 0.04%)</title><rect x="847.2" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="850.2" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (4 samples, 0.08%)</title><rect x="847.8" y="723.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="850.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (5 samples, 0.10%)</title><rect x="848.7" y="723.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="851.7" y="734.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (5 samples, 0.10%)</title><rect x="848.7" y="707.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="851.7" y="718.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (5 samples, 0.10%)</title><rect x="848.7" y="691.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="851.7" y="702.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (4 samples, 0.08%)</title><rect x="848.9" y="675.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="851.9" y="686.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (4 samples, 0.08%)</title><rect x="848.9" y="659.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="851.9" y="670.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (4 samples, 0.08%)</title><rect x="848.9" y="643.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.9" y="654.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.04%)</title><rect x="849.4" y="627.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="852.4" y="638.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.accept (2 samples, 0.04%)</title><rect x="849.4" y="611.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="852.4" y="622.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.04%)</title><rect x="849.4" y="595.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.4" y="606.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="849.4" y="579.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="852.4" y="590.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="849.4" y="563.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="852.4" y="574.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="849.4" y="547.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="852.4" y="558.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="849.4" y="531.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="852.4" y="542.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="849.4" y="515.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="852.4" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.08%)</title><rect x="850.1" y="739.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.1" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="850.1" y="723.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.1" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.04%)</title><rect x="850.5" y="723.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (5 samples, 0.10%)</title><rect x="851.0" y="819.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="854.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.06%)</title><rect x="851.4" y="803.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="854.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.06%)</title><rect x="851.4" y="787.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="854.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.06%)</title><rect x="851.4" y="771.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="854.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.06%)</title><rect x="851.4" y="755.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="854.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.06%)</title><rect x="851.4" y="739.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.06%)</title><rect x="851.4" y="723.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (3 samples, 0.06%)</title><rect x="851.4" y="707.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="854.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.06%)</title><rect x="851.4" y="691.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="854.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (38 samples, 0.72%)</title><rect x="852.3" y="963.0" width="8.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="855.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (37 samples, 0.70%)</title><rect x="852.5" y="947.0" width="8.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="855.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (31 samples, 0.59%)</title><rect x="852.5" y="931.0" width="7.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="855.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (31 samples, 0.59%)</title><rect x="852.5" y="915.0" width="7.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="855.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (30 samples, 0.57%)</title><rect x="852.8" y="899.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="855.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$160/1778891811.apply (29 samples, 0.55%)</title><rect x="853.0" y="883.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (29 samples, 0.55%)</title><rect x="853.0" y="867.0" width="6.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="856.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (29 samples, 0.55%)</title><rect x="853.0" y="851.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="856.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (13 samples, 0.25%)</title><rect x="853.0" y="835.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="856.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (13 samples, 0.25%)</title><rect x="853.0" y="819.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="856.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (13 samples, 0.25%)</title><rect x="853.0" y="803.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="856.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/1774108670.apply (13 samples, 0.25%)</title><rect x="853.0" y="787.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="856.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (13 samples, 0.25%)</title><rect x="853.0" y="771.0" width="2.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="856.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (13 samples, 0.25%)</title><rect x="853.0" y="755.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="856.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (13 samples, 0.25%)</title><rect x="853.0" y="739.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (10 samples, 0.19%)</title><rect x="853.0" y="723.0" width="2.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (6 samples, 0.11%)</title><rect x="853.7" y="707.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="856.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (6 samples, 0.11%)</title><rect x="853.7" y="691.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="856.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (6 samples, 0.11%)</title><rect x="853.7" y="675.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="856.7" y="686.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (6 samples, 0.11%)</title><rect x="853.7" y="659.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="856.7" y="670.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (4 samples, 0.08%)</title><rect x="853.7" y="643.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="856.7" y="654.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="854.1" y="627.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="857.1" y="638.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (2 samples, 0.04%)</title><rect x="854.1" y="611.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="857.1" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/146370526.run (2 samples, 0.04%)</title><rect x="854.6" y="643.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="857.6" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (2 samples, 0.04%)</title><rect x="854.6" y="627.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="857.6" y="638.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (2 samples, 0.04%)</title><rect x="854.6" y="611.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="857.6" y="622.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (2 samples, 0.04%)</title><rect x="854.6" y="595.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="857.6" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.06%)</title><rect x="855.2" y="723.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="858.2" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.06%)</title><rect x="855.2" y="707.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="858.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (16 samples, 0.30%)</title><rect x="855.9" y="835.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="858.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (15 samples, 0.29%)</title><rect x="855.9" y="819.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="858.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (11 samples, 0.21%)</title><rect x="856.8" y="803.0" width="2.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="859.8" y="814.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (11 samples, 0.21%)</title><rect x="856.8" y="787.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="859.8" y="798.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (6 samples, 0.11%)</title><rect x="857.2" y="771.0" width="1.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="860.2" y="782.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="857.9" y="755.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="860.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$166/752533844.run (3 samples, 0.06%)</title><rect x="858.6" y="771.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="861.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (3 samples, 0.06%)</title><rect x="858.6" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.6" y="766.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (3 samples, 0.06%)</title><rect x="858.6" y="739.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="861.6" y="750.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (3 samples, 0.06%)</title><rect x="858.6" y="723.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="861.6" y="734.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.06%)</title><rect x="858.6" y="707.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="861.6" y="718.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (3 samples, 0.06%)</title><rect x="858.6" y="691.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="861.6" y="702.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (3 samples, 0.06%)</title><rect x="858.6" y="675.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="859.5" y="931.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="862.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="859.5" y="915.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="862.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (3 samples, 0.06%)</title><rect x="859.9" y="931.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="862.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (2 samples, 0.04%)</title><rect x="860.2" y="915.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (2 samples, 0.04%)</title><rect x="860.2" y="899.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="863.2" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1033393279.linkToTargetMethod (2 samples, 0.04%)</title><rect x="860.2" y="883.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="863.2" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1762434755.invoke (2 samples, 0.04%)</title><rect x="860.2" y="867.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="863.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (4 samples, 0.08%)</title><rect x="860.8" y="1011.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="863.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (3 samples, 0.06%)</title><rect x="861.1" y="995.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="864.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.04%)</title><rect x="861.3" y="979.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="864.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (38 samples, 0.72%)</title><rect x="862.0" y="1107.0" width="8.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="865.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (36 samples, 0.68%)</title><rect x="862.4" y="1091.0" width="8.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (29 samples, 0.55%)</title><rect x="862.6" y="1075.0" width="6.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="865.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (11 samples, 0.21%)</title><rect x="862.6" y="1059.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="865.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 0.21%)</title><rect x="862.6" y="1043.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 0.21%)</title><rect x="862.6" y="1027.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="865.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 0.21%)</title><rect x="862.6" y="1011.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="865.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 0.21%)</title><rect x="862.6" y="995.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="865.6" y="1006.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.08%)</title><rect x="862.6" y="979.0" width="0.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="865.6" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.13%)</title><rect x="863.5" y="979.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="866.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="863.5" y="963.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="866.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="863.5" y="947.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="866.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="863.5" y="931.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="866.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="863.5" y="915.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="866.5" y="926.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="863.5" y="899.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="866.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="863.5" y="883.0" width="1.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="866.5" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="863.5" y="867.0" width="1.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="866.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="863.5" y="851.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="866.5" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (18 samples, 0.34%)</title><rect x="865.1" y="1059.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="868.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (18 samples, 0.34%)</title><rect x="865.1" y="1043.0" width="4.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="868.1" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Park (10 samples, 0.19%)</title><rect x="865.3" y="1027.0" width="2.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="868.3" y="1038.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (3 samples, 0.06%)</title><rect x="865.8" y="1011.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="868.8" y="1022.0"></text>
</g>
<g>
<title>__lll_unlock_wake (3 samples, 0.06%)</title><rect x="866.4" y="1011.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="869.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="866.4" y="995.0" width="0.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="869.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="866.4" y="979.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="869.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="866.4" y="963.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="869.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="866.4" y="947.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="869.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="866.4" y="931.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="869.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.13%)</title><rect x="867.6" y="1027.0" width="1.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="870.6" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_wait (7 samples, 0.13%)</title><rect x="867.6" y="1011.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="870.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="868.0" y="995.0" width="1.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="871.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="868.0" y="979.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="871.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="868.0" y="963.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="871.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="868.0" y="947.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="871.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="868.0" y="931.0" width="1.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="871.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="868.0" y="915.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="871.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="868.0" y="899.0" width="1.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="871.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="868.2" y="883.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="871.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="868.2" y="867.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="871.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (2 samples, 0.04%)</title><rect x="869.1" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (2 samples, 0.04%)</title><rect x="869.1" y="1059.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (2 samples, 0.04%)</title><rect x="869.1" y="1043.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="872.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.08%)</title><rect x="869.6" y="1075.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="872.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.08%)</title><rect x="869.6" y="1059.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.08%)</title><rect x="869.6" y="1043.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="872.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.08%)</title><rect x="869.6" y="1027.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="872.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.08%)</title><rect x="869.6" y="1011.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="872.6" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="869.6" y="995.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="872.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="869.6" y="979.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="872.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="869.6" y="963.0" width="0.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="872.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="869.6" y="947.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="872.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="869.6" y="931.0" width="0.9" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="872.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="869.6" y="915.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="872.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="869.6" y="899.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="872.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="869.8" y="883.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="872.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="869.8" y="867.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="872.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/808714778.run (76 samples, 1.45%)</title><rect x="870.5" y="1107.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (76 samples, 1.45%)</title><rect x="870.5" y="1091.0" width="17.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="873.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (76 samples, 1.45%)</title><rect x="870.5" y="1075.0" width="17.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="873.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (76 samples, 1.45%)</title><rect x="870.5" y="1059.0" width="17.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (75 samples, 1.43%)</title><rect x="870.7" y="1043.0" width="16.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (75 samples, 1.43%)</title><rect x="870.7" y="1027.0" width="16.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="873.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (75 samples, 1.43%)</title><rect x="870.7" y="1011.0" width="16.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (75 samples, 1.43%)</title><rect x="870.7" y="995.0" width="16.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (75 samples, 1.43%)</title><rect x="870.7" y="979.0" width="16.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="873.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (75 samples, 1.43%)</title><rect x="870.7" y="963.0" width="16.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (75 samples, 1.43%)</title><rect x="870.7" y="947.0" width="16.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="873.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (14 samples, 0.27%)</title><rect x="870.9" y="931.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (11 samples, 0.21%)</title><rect x="870.9" y="915.0" width="2.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (11 samples, 0.21%)</title><rect x="870.9" y="899.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="873.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (11 samples, 0.21%)</title><rect x="870.9" y="883.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="873.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (10 samples, 0.19%)</title><rect x="871.2" y="867.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="874.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (8 samples, 0.15%)</title><rect x="871.2" y="851.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="874.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$269/19789958.apply (4 samples, 0.08%)</title><rect x="871.6" y="835.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="874.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (4 samples, 0.08%)</title><rect x="871.6" y="819.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="874.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (4 samples, 0.08%)</title><rect x="871.6" y="803.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="874.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (4 samples, 0.08%)</title><rect x="871.6" y="787.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="874.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (3 samples, 0.06%)</title><rect x="871.8" y="771.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="874.8" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.06%)</title><rect x="871.8" y="755.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="874.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (3 samples, 0.06%)</title><rect x="871.8" y="739.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="874.8" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/10694432.apply (2 samples, 0.04%)</title><rect x="872.5" y="835.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (2 samples, 0.04%)</title><rect x="872.5" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (2 samples, 0.04%)</title><rect x="872.5" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="875.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (2 samples, 0.04%)</title><rect x="872.5" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (2 samples, 0.04%)</title><rect x="872.5" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="875.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.04%)</title><rect x="872.5" y="755.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="875.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/102085371.run (2 samples, 0.04%)</title><rect x="872.5" y="739.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="875.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (2 samples, 0.04%)</title><rect x="872.5" y="723.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.5" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (2 samples, 0.04%)</title><rect x="872.5" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="875.5" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (2 samples, 0.04%)</title><rect x="872.5" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="875.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="872.5" y="675.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="875.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="872.5" y="659.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="875.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="872.5" y="643.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="875.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.04%)</title><rect x="872.5" y="627.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="875.5" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (2 samples, 0.04%)</title><rect x="872.5" y="611.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="875.5" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (2 samples, 0.04%)</title><rect x="872.5" y="595.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="875.5" y="606.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (2 samples, 0.04%)</title><rect x="872.5" y="579.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="875.5" y="590.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (2 samples, 0.04%)</title><rect x="872.5" y="563.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="875.5" y="574.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (2 samples, 0.04%)</title><rect x="872.5" y="547.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="875.5" y="558.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (2 samples, 0.04%)</title><rect x="872.5" y="531.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="875.5" y="542.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.04%)</title><rect x="872.5" y="515.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="875.5" y="526.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (2 samples, 0.04%)</title><rect x="872.5" y="499.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="875.5" y="510.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (2 samples, 0.04%)</title><rect x="872.5" y="483.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="875.5" y="494.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (2 samples, 0.04%)</title><rect x="872.5" y="467.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="875.5" y="478.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (2 samples, 0.04%)</title><rect x="872.5" y="451.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="875.5" y="462.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (2 samples, 0.04%)</title><rect x="872.5" y="435.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="875.5" y="446.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (2 samples, 0.04%)</title><rect x="873.4" y="915.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="876.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (58 samples, 1.10%)</title><rect x="874.3" y="931.0" width="13.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="877.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (58 samples, 1.10%)</title><rect x="874.3" y="915.0" width="13.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="877.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (58 samples, 1.10%)</title><rect x="874.3" y="899.0" width="13.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="877.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (58 samples, 1.10%)</title><rect x="874.3" y="883.0" width="13.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="877.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (57 samples, 1.08%)</title><rect x="874.5" y="867.0" width="12.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="877.5" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (54 samples, 1.03%)</title><rect x="874.7" y="851.0" width="12.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="877.7" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (54 samples, 1.03%)</title><rect x="874.7" y="835.0" width="12.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="877.7" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (52 samples, 0.99%)</title><rect x="875.2" y="819.0" width="11.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.2" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (52 samples, 0.99%)</title><rect x="875.2" y="803.0" width="11.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="878.2" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (51 samples, 0.97%)</title><rect x="875.2" y="787.0" width="11.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="878.2" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (51 samples, 0.97%)</title><rect x="875.2" y="771.0" width="11.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="878.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="875.4" y="755.0" width="11.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="878.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="875.4" y="739.0" width="11.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="878.4" y="750.0"></text>
</g>
<g>
<title>__GI___writev (50 samples, 0.95%)</title><rect x="875.4" y="723.0" width="11.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="878.4" y="734.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="875.4" y="707.0" width="11.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="878.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="875.4" y="691.0" width="11.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="878.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="875.4" y="675.0" width="11.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="878.4" y="686.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="875.4" y="659.0" width="11.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="878.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.95%)</title><rect x="875.4" y="643.0" width="11.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="878.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.93%)</title><rect x="875.6" y="627.0" width="11.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="878.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.91%)</title><rect x="875.9" y="611.0" width="10.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="878.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.84%)</title><rect x="876.8" y="595.0" width="9.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="879.8" y="606.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.84%)</title><rect x="876.8" y="579.0" width="9.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="879.8" y="590.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.84%)</title><rect x="876.8" y="563.0" width="9.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="879.8" y="574.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.84%)</title><rect x="876.8" y="547.0" width="9.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="879.8" y="558.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.82%)</title><rect x="877.0" y="531.0" width="9.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="880.0" y="542.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.82%)</title><rect x="877.0" y="515.0" width="9.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="880.0" y="526.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.78%)</title><rect x="877.4" y="499.0" width="9.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="880.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.76%)</title><rect x="877.7" y="483.0" width="8.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="880.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.72%)</title><rect x="878.1" y="467.0" width="8.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="881.1" y="478.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.65%)</title><rect x="879.0" y="451.0" width="7.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="882.0" y="462.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="879.2" y="435.0" width="7.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="882.2" y="446.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="879.2" y="419.0" width="7.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="882.2" y="430.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="879.2" y="403.0" width="7.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="882.2" y="414.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="879.2" y="387.0" width="7.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="882.2" y="398.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="879.2" y="371.0" width="7.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="882.2" y="382.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.63%)</title><rect x="879.2" y="355.0" width="7.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="882.2" y="366.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.59%)</title><rect x="879.7" y="339.0" width="6.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="882.7" y="350.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.49%)</title><rect x="880.8" y="323.0" width="5.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="883.8" y="334.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.49%)</title><rect x="880.8" y="307.0" width="5.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="883.8" y="318.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="881.3" y="291.0" width="5.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="884.3" y="302.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="881.3" y="275.0" width="5.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="884.3" y="286.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.46%)</title><rect x="881.3" y="259.0" width="5.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="884.3" y="270.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.44%)</title><rect x="881.5" y="243.0" width="5.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="884.5" y="254.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.40%)</title><rect x="881.9" y="227.0" width="4.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="884.9" y="238.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.40%)</title><rect x="881.9" y="211.0" width="4.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="884.9" y="222.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.38%)</title><rect x="882.2" y="195.0" width="4.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="885.2" y="206.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.38%)</title><rect x="882.2" y="179.0" width="4.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="885.2" y="190.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.38%)</title><rect x="882.2" y="163.0" width="4.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="885.2" y="174.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.38%)</title><rect x="882.2" y="147.0" width="4.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="885.2" y="158.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.34%)</title><rect x="882.6" y="131.0" width="4.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="885.6" y="142.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.34%)</title><rect x="882.6" y="115.0" width="4.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="885.6" y="126.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.30%)</title><rect x="883.1" y="99.0" width="3.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="886.1" y="110.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.23%)</title><rect x="883.9" y="83.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="886.9" y="94.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.21%)</title><rect x="884.2" y="67.0" width="2.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="887.2" y="78.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="884.4" y="51.0" width="2.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="887.4" y="62.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.19%)</title><rect x="884.4" y="35.0" width="2.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="887.4" y="46.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (2 samples, 0.04%)</title><rect x="886.9" y="851.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (96 samples, 1.83%)</title><rect x="887.5" y="1107.0" width="21.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.5" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (94 samples, 1.79%)</title><rect x="888.0" y="1091.0" width="21.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="891.0" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.04%)</title><rect x="888.0" y="1075.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (48 samples, 0.91%)</title><rect x="888.4" y="1075.0" width="10.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="891.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (48 samples, 0.91%)</title><rect x="888.4" y="1059.0" width="10.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="891.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (48 samples, 0.91%)</title><rect x="888.4" y="1043.0" width="10.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="891.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (5 samples, 0.10%)</title><rect x="888.4" y="1027.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="891.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (5 samples, 0.10%)</title><rect x="888.4" y="1011.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5 samples, 0.10%)</title><rect x="888.4" y="995.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="891.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5 samples, 0.10%)</title><rect x="888.4" y="979.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="891.4" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/604125138.linkToTargetMethod (3 samples, 0.06%)</title><rect x="888.4" y="963.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.4" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/741669172.invoke (3 samples, 0.06%)</title><rect x="888.4" y="947.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="891.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (2 samples, 0.04%)</title><rect x="889.1" y="963.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="892.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (2 samples, 0.04%)</title><rect x="889.1" y="947.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="892.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (2 samples, 0.04%)</title><rect x="889.1" y="931.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.04%)</title><rect x="889.1" y="915.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="892.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.04%)</title><rect x="889.1" y="899.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="892.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (43 samples, 0.82%)</title><rect x="889.6" y="1027.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (43 samples, 0.82%)</title><rect x="889.6" y="1011.0" width="9.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="892.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (43 samples, 0.82%)</title><rect x="889.6" y="995.0" width="9.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="892.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (43 samples, 0.82%)</title><rect x="889.6" y="979.0" width="9.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="892.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (20 samples, 0.38%)</title><rect x="889.8" y="963.0" width="4.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="892.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (20 samples, 0.38%)</title><rect x="889.8" y="947.0" width="4.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (20 samples, 0.38%)</title><rect x="889.8" y="931.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="892.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (20 samples, 0.38%)</title><rect x="889.8" y="915.0" width="4.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="892.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (20 samples, 0.38%)</title><rect x="889.8" y="899.0" width="4.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="892.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (20 samples, 0.38%)</title><rect x="889.8" y="883.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="892.8" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (20 samples, 0.38%)</title><rect x="889.8" y="867.0" width="4.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="892.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (17 samples, 0.32%)</title><rect x="890.0" y="851.0" width="3.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="893.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (17 samples, 0.32%)</title><rect x="890.0" y="835.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="893.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (16 samples, 0.30%)</title><rect x="890.0" y="819.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="893.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/10694432.apply (12 samples, 0.23%)</title><rect x="890.5" y="803.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="893.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (12 samples, 0.23%)</title><rect x="890.5" y="787.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="893.5" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (12 samples, 0.23%)</title><rect x="890.5" y="771.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="893.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (12 samples, 0.23%)</title><rect x="890.5" y="755.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="893.5" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (11 samples, 0.21%)</title><rect x="890.7" y="739.0" width="2.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="893.7" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (3 samples, 0.06%)</title><rect x="890.7" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="893.7" y="734.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (2 samples, 0.04%)</title><rect x="890.9" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="893.9" y="718.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (2 samples, 0.04%)</title><rect x="890.9" y="691.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="893.9" y="702.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (2 samples, 0.04%)</title><rect x="890.9" y="675.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="893.9" y="686.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.04%)</title><rect x="890.9" y="659.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="893.9" y="670.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.04%)</title><rect x="890.9" y="643.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="893.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.15%)</title><rect x="891.4" y="723.0" width="1.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="894.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/102085371.run (8 samples, 0.15%)</title><rect x="891.4" y="707.0" width="1.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="894.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (8 samples, 0.15%)</title><rect x="891.4" y="691.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="894.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (7 samples, 0.13%)</title><rect x="891.6" y="675.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="894.6" y="686.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.10%)</title><rect x="891.8" y="659.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="894.8" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/712256162.invoke (5 samples, 0.10%)</title><rect x="891.8" y="643.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="894.8" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.10%)</title><rect x="891.8" y="627.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="894.8" y="638.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.04%)</title><rect x="892.5" y="611.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="895.5" y="622.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.04%)</title><rect x="892.5" y="595.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="895.5" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/179650308.apply (2 samples, 0.04%)</title><rect x="893.1" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="896.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (2 samples, 0.04%)</title><rect x="893.1" y="787.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (2 samples, 0.04%)</title><rect x="893.1" y="771.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="896.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (21 samples, 0.40%)</title><rect x="894.3" y="963.0" width="4.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="897.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (3 samples, 0.06%)</title><rect x="894.5" y="947.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="897.5" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.06%)</title><rect x="894.5" y="931.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="897.5" y="942.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="894.7" y="915.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="897.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (4 samples, 0.08%)</title><rect x="895.2" y="947.0" width="0.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="898.2" y="958.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (4 samples, 0.08%)</title><rect x="895.2" y="931.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="898.2" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (4 samples, 0.08%)</title><rect x="895.2" y="915.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="898.2" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (3 samples, 0.06%)</title><rect x="895.2" y="899.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="898.2" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (2 samples, 0.04%)</title><rect x="895.4" y="883.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="898.4" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (2 samples, 0.04%)</title><rect x="895.4" y="867.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (13 samples, 0.25%)</title><rect x="896.1" y="947.0" width="2.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="899.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (12 samples, 0.23%)</title><rect x="896.3" y="931.0" width="2.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="899.3" y="942.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.06%)</title><rect x="896.7" y="915.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="899.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="896.7" y="899.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="899.7" y="910.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.04%)</title><rect x="896.7" y="883.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="899.7" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="897.9" y="915.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="900.9" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="897.9" y="899.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="900.9" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="897.9" y="883.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="900.9" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="897.9" y="867.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="900.9" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.04%)</title><rect x="897.9" y="851.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="900.9" y="862.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (3 samples, 0.06%)</title><rect x="898.3" y="915.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="901.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$279/1275080702.apply (2 samples, 0.04%)</title><rect x="898.5" y="899.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.04%)</title><rect x="898.5" y="883.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="901.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (44 samples, 0.84%)</title><rect x="899.2" y="1075.0" width="9.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="902.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (43 samples, 0.82%)</title><rect x="899.4" y="1059.0" width="9.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.4" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (42 samples, 0.80%)</title><rect x="899.4" y="1043.0" width="9.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="902.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (42 samples, 0.80%)</title><rect x="899.4" y="1027.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="902.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (42 samples, 0.80%)</title><rect x="899.4" y="1011.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="902.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (7 samples, 0.13%)</title><rect x="899.4" y="995.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (4 samples, 0.08%)</title><rect x="900.1" y="979.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="903.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (4 samples, 0.08%)</title><rect x="900.1" y="963.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="903.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.tryAsyncReceive (35 samples, 0.67%)</title><rect x="901.0" y="995.0" width="7.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="904.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (35 samples, 0.67%)</title><rect x="901.0" y="979.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="904.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (35 samples, 0.67%)</title><rect x="901.0" y="963.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="904.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.handle (35 samples, 0.67%)</title><rect x="901.0" y="947.0" width="7.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="904.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (35 samples, 0.67%)</title><rect x="901.0" y="931.0" width="7.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="904.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.accept (34 samples, 0.65%)</title><rect x="901.2" y="915.0" width="7.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="904.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1531363542.run (15 samples, 0.29%)</title><rect x="901.5" y="899.0" width="3.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="904.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (14 samples, 0.27%)</title><rect x="901.7" y="883.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="904.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (14 samples, 0.27%)</title><rect x="901.7" y="867.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="904.7" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (2 samples, 0.04%)</title><rect x="901.7" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="904.7" y="862.0"></text>
</g>
<g>
<title>java/util/Collection.stream (2 samples, 0.04%)</title><rect x="901.7" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="904.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (12 samples, 0.23%)</title><rect x="902.1" y="851.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="905.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (11 samples, 0.21%)</title><rect x="902.3" y="835.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (2 samples, 0.04%)</title><rect x="902.6" y="819.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="905.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (8 samples, 0.15%)</title><rect x="903.0" y="819.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="906.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (8 samples, 0.15%)</title><rect x="903.0" y="803.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="906.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (8 samples, 0.15%)</title><rect x="903.0" y="787.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="906.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (8 samples, 0.15%)</title><rect x="903.0" y="771.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="906.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (5 samples, 0.10%)</title><rect x="903.0" y="755.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="906.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (5 samples, 0.10%)</title><rect x="903.0" y="739.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="906.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (5 samples, 0.10%)</title><rect x="903.0" y="723.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="906.0" y="734.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (5 samples, 0.10%)</title><rect x="903.0" y="707.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="906.0" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (5 samples, 0.10%)</title><rect x="903.0" y="691.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="906.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="903.2" y="675.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="906.2" y="686.0"></text>
</g>
<g>
<title>write (4 samples, 0.08%)</title><rect x="903.2" y="659.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="906.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="903.2" y="643.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="906.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="903.2" y="627.0" width="0.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="906.2" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="903.2" y="611.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="906.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="903.2" y="595.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="906.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="903.2" y="579.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="906.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="903.5" y="563.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="906.5" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (3 samples, 0.06%)</title><rect x="904.1" y="755.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="907.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$299/1271326018.accept (4 samples, 0.08%)</title><rect x="904.8" y="899.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="907.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (4 samples, 0.08%)</title><rect x="904.8" y="883.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="907.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (4 samples, 0.08%)</title><rect x="904.8" y="867.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="907.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (3 samples, 0.06%)</title><rect x="904.8" y="851.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.8" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (3 samples, 0.06%)</title><rect x="904.8" y="835.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="907.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (8 samples, 0.15%)</title><rect x="905.7" y="899.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (8 samples, 0.15%)</title><rect x="905.7" y="883.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (8 samples, 0.15%)</title><rect x="905.7" y="867.0" width="1.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="908.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.11%)</title><rect x="905.7" y="851.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="908.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.11%)</title><rect x="905.7" y="835.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="908.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6 samples, 0.11%)</title><rect x="905.7" y="819.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="908.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.11%)</title><rect x="905.7" y="803.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$308/830188074.accept (6 samples, 0.11%)</title><rect x="905.7" y="787.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.7" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (6 samples, 0.11%)</title><rect x="905.7" y="771.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (6 samples, 0.11%)</title><rect x="905.7" y="755.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="908.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.11%)</title><rect x="905.7" y="739.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="908.7" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (5 samples, 0.10%)</title><rect x="905.9" y="723.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="908.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (5 samples, 0.10%)</title><rect x="905.9" y="707.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.10%)</title><rect x="905.9" y="691.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (5 samples, 0.10%)</title><rect x="905.9" y="675.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="908.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (5 samples, 0.10%)</title><rect x="905.9" y="659.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="908.9" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (5 samples, 0.10%)</title><rect x="905.9" y="643.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="908.9" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.08%)</title><rect x="905.9" y="627.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="908.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.08%)</title><rect x="905.9" y="611.0" width="0.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="908.9" y="622.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.08%)</title><rect x="905.9" y="595.0" width="0.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="908.9" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.06%)</title><rect x="906.2" y="579.0" width="0.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="909.2" y="590.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="906.2" y="563.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="909.2" y="574.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="906.2" y="547.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="909.2" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="906.2" y="531.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="909.2" y="542.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="906.2" y="515.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="909.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="906.2" y="499.0" width="0.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="909.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="906.2" y="483.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="909.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="906.2" y="467.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="909.2" y="478.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="906.4" y="451.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="909.4" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (2 samples, 0.04%)</title><rect x="907.1" y="851.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="910.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (4 samples, 0.08%)</title><rect x="907.5" y="899.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="910.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onNext (4 samples, 0.08%)</title><rect x="907.5" y="883.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="910.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (3 samples, 0.06%)</title><rect x="907.7" y="867.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onNext (3 samples, 0.06%)</title><rect x="907.7" y="851.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="910.7" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.addAll (3 samples, 0.06%)</title><rect x="907.7" y="835.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="910.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.sliceWithLimitedCapacity (2 samples, 0.04%)</title><rect x="908.4" y="899.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="911.4" y="910.0"></text>
</g>
<g>
<title>[tid=7843] (9 samples, 0.17%)</title><rect x="909.1" y="1171.0" width="2.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="912.1" y="1182.0"></text>
</g>
<g>
<title>start_thread (9 samples, 0.17%)</title><rect x="909.1" y="1155.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="912.1" y="1166.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (9 samples, 0.17%)</title><rect x="909.1" y="1139.0" width="2.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="912.1" y="1150.0"></text>
</g>
<g>
<title>Thread::call_run() (9 samples, 0.17%)</title><rect x="909.1" y="1123.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="912.1" y="1134.0"></text>
</g>
<g>
<title>GangWorker::loop() (9 samples, 0.17%)</title><rect x="909.1" y="1107.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="912.1" y="1118.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (9 samples, 0.17%)</title><rect x="909.1" y="1091.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="912.1" y="1102.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.10%)</title><rect x="909.1" y="1075.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="912.1" y="1086.0"></text>
</g>
<g>
<title>SpinPause (5 samples, 0.10%)</title><rect x="909.1" y="1059.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="912.1" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="910.2" y="1075.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="913.2" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="910.2" y="1059.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="913.2" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.06%)</title><rect x="910.2" y="1043.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="913.2" y="1054.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.06%)</title><rect x="910.2" y="1027.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="913.2" y="1038.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.06%)</title><rect x="910.2" y="1011.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="913.2" y="1022.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.06%)</title><rect x="910.2" y="995.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="913.2" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.06%)</title><rect x="910.2" y="979.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="913.2" y="990.0"></text>
</g>
<g>
<title>[tid=7848] (4 samples, 0.08%)</title><rect x="911.1" y="1171.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="914.1" y="1182.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.06%)</title><rect x="911.3" y="1155.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="914.3" y="1166.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.06%)</title><rect x="911.3" y="1139.0" width="0.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="914.3" y="1150.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.06%)</title><rect x="911.3" y="1123.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="914.3" y="1134.0"></text>
</g>
<g>
<title>VMThread::run() (3 samples, 0.06%)</title><rect x="911.3" y="1107.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="914.3" y="1118.0"></text>
</g>
<g>
<title>VMThread::loop() (3 samples, 0.06%)</title><rect x="911.3" y="1091.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="914.3" y="1102.0"></text>
</g>
<g>
<title>[tid=7852] (1,149 samples, 21.85%)</title><rect x="912.0" y="1171.0" width="257.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="915.0" y="1182.0">[tid=7852]</text>
</g>
<g>
<title>[unknown] (6 samples, 0.11%)</title><rect x="912.0" y="1155.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="915.0" y="1166.0"></text>
</g>
<g>
<title>__GI___open64 (4 samples, 0.08%)</title><rect x="912.2" y="1139.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="915.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="912.2" y="1123.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="915.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="912.2" y="1107.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="915.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="912.2" y="1091.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="915.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="912.2" y="1075.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="915.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="912.2" y="1059.0" width="0.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="915.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="912.2" y="1043.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="915.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="912.2" y="1027.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="915.2" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="912.2" y="1011.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="915.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="912.4" y="995.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="915.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="912.7" y="979.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="915.7" y="990.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.04%)</title><rect x="913.3" y="1155.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="916.3" y="1166.0"></text>
</g>
<g>
<title>_int_malloc (2 samples, 0.04%)</title><rect x="913.8" y="1155.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="916.8" y="1166.0"></text>
</g>
<g>
<title>start_thread (1,137 samples, 21.62%)</title><rect x="914.7" y="1155.0" width="255.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="917.7" y="1166.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (1,137 samples, 21.62%)</title><rect x="914.7" y="1139.0" width="255.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="917.7" y="1150.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (1,137 samples, 21.62%)</title><rect x="914.7" y="1123.0" width="255.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="917.7" y="1134.0">Thread::call_run()</text>
</g>
<g>
<title>JavaThread::run() (1,137 samples, 21.62%)</title><rect x="914.7" y="1107.0" width="255.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="917.7" y="1118.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1,137 samples, 21.62%)</title><rect x="914.7" y="1091.0" width="255.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="917.7" y="1102.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1,137 samples, 21.62%)</title><rect x="914.7" y="1075.0" width="255.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="917.7" y="1086.0">CompileBroker::compiler_thread_loo..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1,135 samples, 21.58%)</title><rect x="914.7" y="1059.0" width="254.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="917.7" y="1070.0">CompileBroker::invoke_compiler_on_..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1,130 samples, 21.49%)</title><rect x="914.7" y="1043.0" width="253.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="917.7" y="1054.0">C2Compiler::compile_method(ciEnv*,..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (1,130 samples, 21.49%)</title><rect x="914.7" y="1027.0" width="253.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="917.7" y="1038.0">Compile::Compile(ciEnv*, C2Compile..</text>
</g>
<g>
<title>Compile::Code_Gen() (573 samples, 10.90%)</title><rect x="914.9" y="1011.0" width="128.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="917.9" y="1022.0">Compile::Code_Ge..</text>
</g>
<g>
<title>Compile::Output() (33 samples, 0.63%)</title><rect x="914.9" y="995.0" width="7.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="917.9" y="1006.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (18 samples, 0.34%)</title><rect x="914.9" y="979.0" width="4.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="917.9" y="990.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (4 samples, 0.08%)</title><rect x="918.1" y="963.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="921.1" y="974.0"></text>
</g>
<g>
<title>OopFlow::build_oop_map(Node*, int, PhaseRegAlloc*, int*) (2 samples, 0.04%)</title><rect x="918.5" y="947.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="921.5" y="958.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (10 samples, 0.19%)</title><rect x="919.0" y="979.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="922.0" y="990.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (10 samples, 0.19%)</title><rect x="919.0" y="963.0" width="2.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="922.0" y="974.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (4 samples, 0.08%)</title><rect x="920.1" y="947.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="923.1" y="958.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (4 samples, 0.08%)</title><rect x="921.4" y="979.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="924.4" y="990.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (15 samples, 0.29%)</title><rect x="922.3" y="995.0" width="3.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="925.3" y="1006.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (3 samples, 0.06%)</title><rect x="923.2" y="979.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="926.2" y="990.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.04%)</title><rect x="923.4" y="963.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="926.4" y="974.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (2 samples, 0.04%)</title><rect x="925.0" y="979.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="928.0" y="990.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.04%)</title><rect x="925.0" y="963.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="928.0" y="974.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.04%)</title><rect x="925.0" y="947.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="928.0" y="958.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (3 samples, 0.06%)</title><rect x="925.7" y="995.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="928.7" y="1006.0"></text>
</g>
<g>
<title>Matcher::match() (48 samples, 0.91%)</title><rect x="926.6" y="995.0" width="10.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="929.6" y="1006.0"></text>
</g>
<g>
<title>Matcher::Fixup_Save_On_Entry() (2 samples, 0.04%)</title><rect x="926.6" y="979.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="929.6" y="990.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (4 samples, 0.08%)</title><rect x="927.0" y="979.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="930.0" y="990.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (42 samples, 0.80%)</title><rect x="927.9" y="979.0" width="9.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="930.9" y="990.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (5 samples, 0.10%)</title><rect x="930.6" y="963.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="933.6" y="974.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (21 samples, 0.40%)</title><rect x="932.0" y="963.0" width="4.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="935.0" y="974.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (9 samples, 0.17%)</title><rect x="933.1" y="947.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="936.1" y="958.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (5 samples, 0.10%)</title><rect x="933.5" y="931.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="936.5" y="942.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (4 samples, 0.08%)</title><rect x="933.8" y="915.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="936.8" y="926.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (3 samples, 0.06%)</title><rect x="934.0" y="899.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="937.0" y="910.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (7 samples, 0.13%)</title><rect x="935.1" y="947.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="938.1" y="958.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.04%)</title><rect x="935.3" y="931.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="938.3" y="942.0"></text>
</g>
<g>
<title>State::MachOperGenerator(int) (2 samples, 0.04%)</title><rect x="936.0" y="931.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="939.0" y="942.0"></text>
</g>
<g>
<title>Node::clone() const (2 samples, 0.04%)</title><rect x="936.7" y="963.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="939.7" y="974.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (2 samples, 0.04%)</title><rect x="937.4" y="995.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="940.4" y="1006.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (2 samples, 0.04%)</title><rect x="937.4" y="979.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="940.4" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (3 samples, 0.06%)</title><rect x="937.8" y="995.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="940.8" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (3 samples, 0.06%)</title><rect x="937.8" y="979.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="940.8" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (62 samples, 1.18%)</title><rect x="938.5" y="995.0" width="13.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="941.5" y="1006.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (2 samples, 0.04%)</title><rect x="938.5" y="979.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="941.5" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (60 samples, 1.14%)</title><rect x="938.9" y="979.0" width="13.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="941.9" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::call_catch_cleanup(Block*) (2 samples, 0.04%)</title><rect x="939.8" y="963.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="942.8" y="974.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (6 samples, 0.11%)</title><rect x="940.3" y="963.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="943.3" y="974.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (9 samples, 0.17%)</title><rect x="941.6" y="963.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="944.6" y="974.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (3 samples, 0.06%)</title><rect x="941.6" y="947.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="944.6" y="958.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (4 samples, 0.08%)</title><rect x="942.3" y="947.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="945.3" y="958.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (11 samples, 0.21%)</title><rect x="943.6" y="963.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="946.6" y="974.0"></text>
</g>
<g>
<title>Node::is_iteratively_computed() (2 samples, 0.04%)</title><rect x="944.5" y="947.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="947.5" y="958.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (3 samples, 0.06%)</title><rect x="945.0" y="947.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="948.0" y="958.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (6 samples, 0.11%)</title><rect x="946.1" y="963.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="949.1" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (5 samples, 0.10%)</title><rect x="947.7" y="963.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="950.7" y="974.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.04%)</title><rect x="948.1" y="947.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="951.1" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (2 samples, 0.04%)</title><rect x="948.8" y="963.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="951.8" y="974.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (3 samples, 0.06%)</title><rect x="949.2" y="963.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="952.2" y="974.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (3 samples, 0.06%)</title><rect x="949.2" y="947.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="952.2" y="958.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (9 samples, 0.17%)</title><rect x="949.9" y="963.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="952.9" y="974.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (4 samples, 0.08%)</title><rect x="950.4" y="947.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="953.4" y="958.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.06%)</title><rect x="950.6" y="931.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="953.6" y="942.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (3 samples, 0.06%)</title><rect x="951.3" y="947.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="954.3" y="958.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.04%)</title><rect x="951.5" y="931.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="954.5" y="942.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (405 samples, 7.70%)</title><rect x="952.4" y="995.0" width="90.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="955.4" y="1006.0">PhaseChait..</text>
</g>
<g>
<title>MachNode::ideal_reg() const (2 samples, 0.04%)</title><rect x="953.7" y="979.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="956.7" y="990.0"></text>
</g>
<g>
<title>MachNode::oper_input_base() const (2 samples, 0.04%)</title><rect x="954.2" y="979.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="957.2" y="990.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (10 samples, 0.19%)</title><rect x="955.3" y="979.0" width="2.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="958.3" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (17 samples, 0.32%)</title><rect x="957.5" y="979.0" width="3.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="960.5" y="990.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.04%)</title><rect x="958.7" y="963.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="961.7" y="974.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (9 samples, 0.17%)</title><rect x="959.3" y="963.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="962.3" y="974.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (7 samples, 0.13%)</title><rect x="959.8" y="947.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="962.8" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (13 samples, 0.25%)</title><rect x="961.4" y="979.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="964.4" y="990.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.08%)</title><rect x="962.0" y="963.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="965.0" y="974.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (6 samples, 0.11%)</title><rect x="962.9" y="963.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="965.9" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (46 samples, 0.87%)</title><rect x="964.3" y="979.0" width="10.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="967.3" y="990.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.04%)</title><rect x="971.5" y="963.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="974.5" y="974.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (2 samples, 0.04%)</title><rect x="971.5" y="947.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="974.5" y="958.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (3 samples, 0.06%)</title><rect x="971.9" y="963.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="974.9" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::split_DEF(Node*, Block*, int, unsigned int, Node**, Node**, GrowableArray&lt;unsigned int&gt;, int) (2 samples, 0.04%)</title><rect x="973.3" y="963.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="976.3" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::split_Rematerialize(Node*, Block*, unsigned int, unsigned int&amp;, GrowableArray&lt;unsigned int&gt;, int, unsigned int*, Node**, bool) (3 samples, 0.06%)</title><rect x="973.7" y="963.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="976.7" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::clone_projs(Block*, unsigned int, Node*, Node*, unsigned int&amp;) (2 samples, 0.04%)</title><rect x="973.9" y="947.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="976.9" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (85 samples, 1.62%)</title><rect x="974.6" y="979.0" width="19.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="977.6" y="990.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (5 samples, 0.10%)</title><rect x="979.5" y="963.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="982.5" y="974.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.06%)</title><rect x="980.7" y="963.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="983.7" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (6 samples, 0.11%)</title><rect x="981.6" y="963.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="984.6" y="974.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (3 samples, 0.06%)</title><rect x="982.0" y="947.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="985.0" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::check_for_high_pressure_transition_at_fatproj(unsigned int&amp;, unsigned int, LRG&amp;, PhaseChaitin::Pressure&amp;, int) (2 samples, 0.04%)</title><rect x="982.9" y="963.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="985.9" y="974.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.04%)</title><rect x="982.9" y="947.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="985.9" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (25 samples, 0.48%)</title><rect x="983.3" y="963.0" width="5.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="986.3" y="974.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.04%)</title><rect x="987.2" y="947.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="990.2" y="958.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.11%)</title><rect x="987.6" y="947.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="990.6" y="958.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (19 samples, 0.36%)</title><rect x="989.0" y="963.0" width="4.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="992.0" y="974.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.06%)</title><rect x="989.6" y="947.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="992.6" y="958.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.06%)</title><rect x="990.3" y="947.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="993.3" y="958.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (10 samples, 0.19%)</title><rect x="991.0" y="947.0" width="2.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="994.0" y="958.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (2 samples, 0.04%)</title><rect x="993.2" y="963.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="996.2" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (6 samples, 0.11%)</title><rect x="993.7" y="979.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="996.7" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (31 samples, 0.59%)</title><rect x="995.0" y="979.0" width="7.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="998.0" y="990.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (3 samples, 0.06%)</title><rect x="998.4" y="963.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1001.4" y="974.0"></text>
</g>
<g>
<title>RegMask::Size() const (9 samples, 0.17%)</title><rect x="999.1" y="963.0" width="2.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1002.1" y="974.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (2 samples, 0.04%)</title><rect x="1001.3" y="963.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1004.3" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (15 samples, 0.29%)</title><rect x="1002.0" y="979.0" width="3.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1005.0" y="990.0"></text>
</g>
<g>
<title>RegMask::Size() const (5 samples, 0.10%)</title><rect x="1003.8" y="963.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1006.8" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.04%)</title><rect x="1005.3" y="979.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1008.3" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (12 samples, 0.23%)</title><rect x="1005.8" y="979.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1008.8" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (49 samples, 0.93%)</title><rect x="1008.5" y="979.0" width="11.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1011.5" y="990.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (17 samples, 0.32%)</title><rect x="1014.5" y="963.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1017.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1018.4" y="963.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1021.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1018.4" y="947.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1021.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1018.4" y="931.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1021.4" y="942.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (3 samples, 0.06%)</title><rect x="1018.8" y="963.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1021.8" y="974.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (4 samples, 0.08%)</title><rect x="1019.5" y="979.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1022.5" y="990.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (21 samples, 0.40%)</title><rect x="1020.4" y="979.0" width="4.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1023.4" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (3 samples, 0.06%)</title><rect x="1020.4" y="963.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1023.4" y="974.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (18 samples, 0.34%)</title><rect x="1021.0" y="963.0" width="4.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1024.0" y="974.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (3 samples, 0.06%)</title><rect x="1021.9" y="947.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1024.9" y="958.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (2 samples, 0.04%)</title><rect x="1022.8" y="947.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1025.8" y="958.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (6 samples, 0.11%)</title><rect x="1023.3" y="947.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1026.3" y="958.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (12 samples, 0.23%)</title><rect x="1025.1" y="979.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1028.1" y="990.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (7 samples, 0.13%)</title><rect x="1026.2" y="963.0" width="1.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1029.2" y="974.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (9 samples, 0.17%)</title><rect x="1027.8" y="979.0" width="2.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1030.8" y="990.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.10%)</title><rect x="1028.4" y="963.0" width="1.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1031.4" y="974.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (3 samples, 0.06%)</title><rect x="1029.8" y="979.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1032.8" y="990.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (3 samples, 0.06%)</title><rect x="1029.8" y="963.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1032.8" y="974.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (44 samples, 0.84%)</title><rect x="1030.5" y="979.0" width="9.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1033.5" y="990.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.04%)</title><rect x="1035.4" y="963.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1038.4" y="974.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (18 samples, 0.34%)</title><rect x="1035.9" y="963.0" width="4.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1038.9" y="974.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (3 samples, 0.06%)</title><rect x="1038.1" y="947.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1041.1" y="958.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.10%)</title><rect x="1038.8" y="947.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1041.8" y="958.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (2 samples, 0.04%)</title><rect x="1040.8" y="979.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1043.8" y="990.0"></text>
</g>
<g>
<title>RegMask::is_vector(unsigned int) (2 samples, 0.04%)</title><rect x="1041.5" y="979.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1044.5" y="990.0"></text>
</g>
<g>
<title>__memset_erms (3 samples, 0.06%)</title><rect x="1041.9" y="979.0" width="0.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1044.9" y="990.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (2 samples, 0.04%)</title><rect x="1042.6" y="979.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1045.6" y="990.0"></text>
</g>
<g>
<title>Compile::Optimize() (415 samples, 7.89%)</title><rect x="1043.5" y="1011.0" width="93.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1046.5" y="1022.0">Compile::Op..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (5 samples, 0.10%)</title><rect x="1043.7" y="995.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1046.7" y="1006.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (4 samples, 0.08%)</title><rect x="1043.9" y="979.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1046.9" y="990.0"></text>
</g>
<g>
<title>Compile::inline_incrementally(PhaseIterGVN&amp;) (2 samples, 0.04%)</title><rect x="1044.8" y="995.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1047.8" y="1006.0"></text>
</g>
<g>
<title>Compile::inline_incrementally_one(PhaseIterGVN&amp;) (2 samples, 0.04%)</title><rect x="1044.8" y="979.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1047.8" y="990.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.256] (5 samples, 0.10%)</title><rect x="1045.3" y="995.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1048.3" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_speculative_types() (2 samples, 0.04%)</title><rect x="1045.9" y="979.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1048.9" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (13 samples, 0.25%)</title><rect x="1046.4" y="995.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1049.4" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (13 samples, 0.25%)</title><rect x="1046.4" y="979.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1049.4" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (3 samples, 0.06%)</title><rect x="1047.5" y="963.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1050.5" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.247] (2 samples, 0.04%)</title><rect x="1047.5" y="947.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1050.5" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (4 samples, 0.08%)</title><rect x="1048.4" y="963.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1051.4" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.06%)</title><rect x="1048.4" y="947.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1051.4" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (3 samples, 0.06%)</title><rect x="1048.4" y="931.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1051.4" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.04%)</title><rect x="1048.6" y="915.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1051.6" y="926.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (14 samples, 0.27%)</title><rect x="1049.3" y="995.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1052.3" y="1006.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (2 samples, 0.04%)</title><rect x="1051.3" y="979.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1054.3" y="990.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (4 samples, 0.08%)</title><rect x="1052.5" y="995.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1055.5" y="1006.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (4 samples, 0.08%)</title><rect x="1052.5" y="979.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1055.5" y="990.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (2 samples, 0.04%)</title><rect x="1052.9" y="963.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1055.9" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::PhaseIdealLoop(PhaseIterGVN&amp;, bool, bool, bool) (2 samples, 0.04%)</title><rect x="1053.4" y="995.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1056.4" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (304 samples, 5.78%)</title><rect x="1053.8" y="995.0" width="68.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1056.8" y="1006.0">PhaseId..</text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (4 samples, 0.08%)</title><rect x="1054.3" y="979.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1057.3" y="990.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (4 samples, 0.08%)</title><rect x="1054.3" y="963.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1057.3" y="974.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (3 samples, 0.06%)</title><rect x="1054.5" y="947.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1057.5" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::do_unroll(IdealLoopTree*, Node_List&amp;, bool) (2 samples, 0.04%)</title><rect x="1054.7" y="931.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1057.7" y="942.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (4 samples, 0.08%)</title><rect x="1055.1" y="979.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1058.1" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (3 samples, 0.06%)</title><rect x="1055.4" y="963.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1058.4" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (2 samples, 0.04%)</title><rect x="1055.6" y="947.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1058.6" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.04%)</title><rect x="1055.6" y="931.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1058.6" y="942.0"></text>
</g>
<g>
<title>Node::pinned() const (2 samples, 0.04%)</title><rect x="1056.3" y="979.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1059.3" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (21 samples, 0.40%)</title><rect x="1056.7" y="979.0" width="4.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1059.7" y="990.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (2 samples, 0.04%)</title><rect x="1059.2" y="963.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1062.2" y="974.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (7 samples, 0.13%)</title><rect x="1059.6" y="963.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1062.6" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (19 samples, 0.36%)</title><rect x="1061.4" y="979.0" width="4.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1064.4" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (5 samples, 0.10%)</title><rect x="1064.6" y="963.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1067.6" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (198 samples, 3.76%)</title><rect x="1065.7" y="979.0" width="44.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1068.7" y="990.0">Phas..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (176 samples, 3.35%)</title><rect x="1070.4" y="963.0" width="39.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1073.4" y="974.0">Pha..</text>
</g>
<g>
<title>Node::unique_ctrl_out() const (2 samples, 0.04%)</title><rect x="1073.3" y="947.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1076.3" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (3 samples, 0.06%)</title><rect x="1073.8" y="947.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1076.8" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (153 samples, 2.91%)</title><rect x="1074.4" y="947.0" width="34.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1077.4" y="958.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (9 samples, 0.17%)</title><rect x="1076.7" y="931.0" width="2.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1079.7" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (7 samples, 0.13%)</title><rect x="1076.9" y="915.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1079.9" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (133 samples, 2.53%)</title><rect x="1078.9" y="931.0" width="29.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1081.9" y="942.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (2 samples, 0.04%)</title><rect x="1108.8" y="947.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1111.8" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (13 samples, 0.25%)</title><rect x="1110.1" y="979.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1113.1" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (2 samples, 0.04%)</title><rect x="1112.4" y="963.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1115.4" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (25 samples, 0.48%)</title><rect x="1113.0" y="979.0" width="5.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1116.0" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (14 samples, 0.27%)</title><rect x="1115.5" y="963.0" width="3.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1118.5" y="974.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (2 samples, 0.04%)</title><rect x="1116.6" y="947.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1119.6" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (4 samples, 0.08%)</title><rect x="1117.1" y="947.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1120.1" y="958.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (2 samples, 0.04%)</title><rect x="1117.5" y="931.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1120.5" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (3 samples, 0.06%)</title><rect x="1118.0" y="947.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1121.0" y="958.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (9 samples, 0.17%)</title><rect x="1118.6" y="979.0" width="2.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1121.6" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (9 samples, 0.17%)</title><rect x="1118.6" y="963.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1121.6" y="974.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (3 samples, 0.06%)</title><rect x="1118.9" y="947.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1121.9" y="958.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.04%)</title><rect x="1119.5" y="947.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1122.5" y="958.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.04%)</title><rect x="1119.5" y="931.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1122.5" y="942.0"></text>
</g>
<g>
<title>ProjNode::is_CFG() const (2 samples, 0.04%)</title><rect x="1120.7" y="979.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1123.7" y="990.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (2 samples, 0.04%)</title><rect x="1121.1" y="979.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1124.1" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (3 samples, 0.06%)</title><rect x="1122.0" y="995.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1125.0" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (3 samples, 0.06%)</title><rect x="1122.0" y="979.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1125.0" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (48 samples, 0.91%)</title><rect x="1122.7" y="995.0" width="10.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1125.7" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (44 samples, 0.84%)</title><rect x="1123.6" y="979.0" width="9.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1126.6" y="990.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (7 samples, 0.13%)</title><rect x="1124.9" y="963.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1127.9" y="974.0"></text>
</g>
<g>
<title>IfNode::fold_compares(PhaseIterGVN*) (2 samples, 0.04%)</title><rect x="1125.4" y="947.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1128.4" y="958.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (3 samples, 0.06%)</title><rect x="1126.5" y="963.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1129.5" y="974.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (2 samples, 0.04%)</title><rect x="1127.2" y="963.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1130.2" y="974.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (4 samples, 0.08%)</title><rect x="1127.8" y="963.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1130.8" y="974.0"></text>
</g>
<g>
<title>NodeHash::grow() (2 samples, 0.04%)</title><rect x="1128.1" y="947.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1131.1" y="958.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (2 samples, 0.04%)</title><rect x="1128.7" y="963.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1131.7" y="974.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.04%)</title><rect x="1129.2" y="963.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1132.2" y="974.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (6 samples, 0.11%)</title><rect x="1129.6" y="963.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1132.6" y="974.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (3 samples, 0.06%)</title><rect x="1131.2" y="963.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.2" y="974.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (2 samples, 0.04%)</title><rect x="1131.4" y="947.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.4" y="958.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (5 samples, 0.10%)</title><rect x="1131.9" y="963.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.9" y="974.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (4 samples, 0.08%)</title><rect x="1131.9" y="947.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1134.9" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.08%)</title><rect x="1131.9" y="931.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1134.9" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.08%)</title><rect x="1131.9" y="915.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1134.9" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.08%)</title><rect x="1131.9" y="899.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1134.9" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.08%)</title><rect x="1131.9" y="883.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1134.9" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.08%)</title><rect x="1131.9" y="867.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1134.9" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.08%)</title><rect x="1131.9" y="851.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1134.9" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.08%)</title><rect x="1131.9" y="835.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1134.9" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.08%)</title><rect x="1131.9" y="819.0" width="0.9" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1134.9" y="830.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.06%)</title><rect x="1131.9" y="803.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.9" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1131.9" y="787.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1134.9" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1131.9" y="771.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1134.9" y="782.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1131.9" y="755.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1134.9" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.04%)</title><rect x="1131.9" y="739.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1134.9" y="750.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (9 samples, 0.17%)</title><rect x="1133.5" y="995.0" width="2.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1136.5" y="1006.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.10%)</title><rect x="1133.5" y="979.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.5" y="990.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.10%)</title><rect x="1133.5" y="963.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1136.5" y="974.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (2 samples, 0.04%)</title><rect x="1133.7" y="947.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1136.7" y="958.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (3 samples, 0.06%)</title><rect x="1134.6" y="979.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1137.6" y="990.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.04%)</title><rect x="1135.5" y="995.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1138.5" y="1006.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.04%)</title><rect x="1135.5" y="979.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1138.5" y="990.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (6 samples, 0.11%)</title><rect x="1136.6" y="1011.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.6" y="1022.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (4 samples, 0.08%)</title><rect x="1136.6" y="995.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1139.6" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.08%)</title><rect x="1136.6" y="979.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1139.6" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.08%)</title><rect x="1136.6" y="963.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1139.6" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1136.8" y="947.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1139.8" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1136.8" y="931.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1139.8" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1136.8" y="915.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1139.8" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1136.8" y="899.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1139.8" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1136.8" y="883.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1139.8" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1136.8" y="867.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1136.8" y="851.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1139.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1136.8" y="835.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1136.8" y="819.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1139.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1136.8" y="803.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1139.8" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1136.8" y="787.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1139.8" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1136.8" y="771.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1136.8" y="755.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1136.8" y="739.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1136.8" y="723.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1139.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1136.8" y="707.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1139.8" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1136.8" y="691.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1139.8" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1136.8" y="675.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1139.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1136.8" y="659.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1139.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1136.8" y="643.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1139.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1136.8" y="627.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1139.8" y="638.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.04%)</title><rect x="1137.5" y="995.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1140.5" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (118 samples, 2.24%)</title><rect x="1137.9" y="1011.0" width="26.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.9" y="1022.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (118 samples, 2.24%)</title><rect x="1137.9" y="995.0" width="26.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1140.9" y="1006.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (116 samples, 2.21%)</title><rect x="1138.2" y="979.0" width="26.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1141.2" y="990.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (116 samples, 2.21%)</title><rect x="1138.2" y="963.0" width="26.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1141.2" y="974.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (115 samples, 2.19%)</title><rect x="1138.4" y="947.0" width="25.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1141.4" y="958.0">P..</text>
</g>
<g>
<title>Parse::do_call() (111 samples, 2.11%)</title><rect x="1138.4" y="931.0" width="24.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.4" y="942.0">P..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (7 samples, 0.13%)</title><rect x="1138.4" y="915.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1141.4" y="926.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (7 samples, 0.13%)</title><rect x="1138.4" y="899.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1141.4" y="910.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (4 samples, 0.08%)</title><rect x="1138.8" y="883.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1141.8" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (4 samples, 0.08%)</title><rect x="1138.8" y="867.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1141.8" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (4 samples, 0.08%)</title><rect x="1138.8" y="851.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.8" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (4 samples, 0.08%)</title><rect x="1138.8" y="835.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.8" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.06%)</title><rect x="1139.1" y="819.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1142.1" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (3 samples, 0.06%)</title><rect x="1139.1" y="803.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.1" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (3 samples, 0.06%)</title><rect x="1139.1" y="787.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1142.1" y="798.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.06%)</title><rect x="1139.1" y="771.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1142.1" y="782.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.06%)</title><rect x="1139.1" y="755.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1142.1" y="766.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.06%)</title><rect x="1139.1" y="739.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1142.1" y="750.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.04%)</title><rect x="1139.3" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1142.3" y="734.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.04%)</title><rect x="1139.3" y="707.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.3" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (79 samples, 1.50%)</title><rect x="1140.4" y="915.0" width="17.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1143.4" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (79 samples, 1.50%)</title><rect x="1140.4" y="899.0" width="17.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1143.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (77 samples, 1.46%)</title><rect x="1140.6" y="883.0" width="17.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1143.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (77 samples, 1.46%)</title><rect x="1140.6" y="867.0" width="17.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1143.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (76 samples, 1.45%)</title><rect x="1140.9" y="851.0" width="17.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1143.9" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (66 samples, 1.25%)</title><rect x="1141.3" y="835.0" width="14.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1144.3" y="846.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.06%)</title><rect x="1141.3" y="819.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1144.3" y="830.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.04%)</title><rect x="1141.3" y="803.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.3" y="814.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.04%)</title><rect x="1141.3" y="787.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.3" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.04%)</title><rect x="1141.3" y="771.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1144.3" y="782.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.04%)</title><rect x="1141.3" y="755.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1144.3" y="766.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.04%)</title><rect x="1141.3" y="739.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1144.3" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.04%)</title><rect x="1141.3" y="723.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.3" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.04%)</title><rect x="1141.3" y="707.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1144.3" y="718.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1142.0" y="819.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1145.0" y="830.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (2 samples, 0.04%)</title><rect x="1142.0" y="803.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1145.0" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (45 samples, 0.86%)</title><rect x="1142.7" y="819.0" width="10.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1145.7" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (45 samples, 0.86%)</title><rect x="1142.7" y="803.0" width="10.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1145.7" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (44 samples, 0.84%)</title><rect x="1142.9" y="787.0" width="9.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1145.9" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (44 samples, 0.84%)</title><rect x="1142.9" y="771.0" width="9.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1145.9" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (44 samples, 0.84%)</title><rect x="1142.9" y="755.0" width="9.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1145.9" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (41 samples, 0.78%)</title><rect x="1143.1" y="739.0" width="9.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1146.1" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (35 samples, 0.67%)</title><rect x="1143.3" y="723.0" width="7.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1146.3" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (35 samples, 0.67%)</title><rect x="1143.3" y="707.0" width="7.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1146.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (34 samples, 0.65%)</title><rect x="1143.6" y="691.0" width="7.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.6" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (34 samples, 0.65%)</title><rect x="1143.6" y="675.0" width="7.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.6" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (33 samples, 0.63%)</title><rect x="1143.6" y="659.0" width="7.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (30 samples, 0.57%)</title><rect x="1143.6" y="643.0" width="6.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1146.6" y="654.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (7 samples, 0.13%)</title><rect x="1143.6" y="627.0" width="1.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1146.6" y="638.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (6 samples, 0.11%)</title><rect x="1143.6" y="611.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1146.6" y="622.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (5 samples, 0.10%)</title><rect x="1143.6" y="595.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1146.6" y="606.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (5 samples, 0.10%)</title><rect x="1143.6" y="579.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1146.6" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (5 samples, 0.10%)</title><rect x="1143.6" y="563.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1146.6" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (5 samples, 0.10%)</title><rect x="1143.6" y="547.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1146.6" y="558.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (5 samples, 0.10%)</title><rect x="1143.6" y="531.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1146.6" y="542.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (3 samples, 0.06%)</title><rect x="1143.8" y="515.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1146.8" y="526.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (2 samples, 0.04%)</title><rect x="1143.8" y="499.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1146.8" y="510.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.04%)</title><rect x="1143.8" y="483.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.8" y="494.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.04%)</title><rect x="1143.8" y="467.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1146.8" y="478.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.04%)</title><rect x="1143.8" y="451.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1146.8" y="462.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.04%)</title><rect x="1143.8" y="435.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1146.8" y="446.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.04%)</title><rect x="1143.8" y="419.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1146.8" y="430.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.04%)</title><rect x="1143.8" y="403.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1146.8" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (20 samples, 0.38%)</title><rect x="1145.1" y="627.0" width="4.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1148.1" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (20 samples, 0.38%)</title><rect x="1145.1" y="611.0" width="4.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.1" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (19 samples, 0.36%)</title><rect x="1145.3" y="595.0" width="4.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1148.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (19 samples, 0.36%)</title><rect x="1145.3" y="579.0" width="4.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1148.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (19 samples, 0.36%)</title><rect x="1145.3" y="563.0" width="4.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1148.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (16 samples, 0.30%)</title><rect x="1145.3" y="547.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.3" y="558.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1145.6" y="531.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.6" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (13 samples, 0.25%)</title><rect x="1146.0" y="531.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1149.0" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (13 samples, 0.25%)</title><rect x="1146.0" y="515.0" width="2.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.0" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (13 samples, 0.25%)</title><rect x="1146.0" y="499.0" width="2.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1149.0" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.23%)</title><rect x="1146.2" y="483.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.2" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.23%)</title><rect x="1146.2" y="467.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1149.2" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.15%)</title><rect x="1146.5" y="451.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1149.5" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.13%)</title><rect x="1146.7" y="435.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1149.7" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.13%)</title><rect x="1146.7" y="419.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1149.7" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.13%)</title><rect x="1146.7" y="403.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1149.7" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.13%)</title><rect x="1146.7" y="387.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.7" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.13%)</title><rect x="1146.7" y="371.0" width="1.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1149.7" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.08%)</title><rect x="1146.7" y="355.0" width="0.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1149.7" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1146.9" y="339.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1149.9" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1146.9" y="323.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1149.9" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1146.9" y="307.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1149.9" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1146.9" y="291.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1149.9" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1146.9" y="275.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1149.9" y="286.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1146.9" y="259.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1149.9" y="270.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.04%)</title><rect x="1148.3" y="451.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1151.3" y="462.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.04%)</title><rect x="1148.3" y="435.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1151.3" y="446.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.04%)</title><rect x="1148.3" y="419.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1151.3" y="430.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.04%)</title><rect x="1148.3" y="403.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1151.3" y="414.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1149.6" y="627.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.6" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1149.6" y="611.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1152.6" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1149.6" y="595.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.6" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1149.6" y="579.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1149.6" y="563.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.6" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1149.6" y="547.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1149.6" y="531.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1152.6" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1149.6" y="515.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.6" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1149.6" y="499.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.6" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1149.6" y="483.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.6" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1149.6" y="467.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.6" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1149.6" y="451.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1152.6" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1149.6" y="435.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.6" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1149.6" y="419.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.6" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1149.6" y="403.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.6" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1149.6" y="387.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.6" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1149.6" y="371.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.6" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1149.6" y="355.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1152.6" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1149.6" y="339.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1152.6" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1149.6" y="323.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1152.6" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1149.6" y="307.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1152.6" y="318.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (5 samples, 0.10%)</title><rect x="1151.2" y="723.0" width="1.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1154.2" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1151.2" y="707.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.2" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1151.2" y="691.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1154.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1151.2" y="675.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1154.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1151.2" y="659.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1151.2" y="643.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1151.2" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1154.2" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1151.2" y="611.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.2" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1151.2" y="595.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1151.2" y="579.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1151.2" y="563.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1151.2" y="547.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1154.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1151.2" y="531.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1154.2" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1151.2" y="515.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.2" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1151.2" y="499.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1154.2" y="510.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1151.9" y="707.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.9" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1151.9" y="691.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1154.9" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1151.9" y="675.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1154.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1151.9" y="659.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1154.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1151.9" y="643.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1154.9" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1151.9" y="627.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1151.9" y="611.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1154.9" y="622.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1151.9" y="595.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.9" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1151.9" y="579.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1154.9" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1151.9" y="563.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1154.9" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1151.9" y="547.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1154.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1151.9" y="531.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1151.9" y="515.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.9" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1151.9" y="499.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1154.9" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1151.9" y="483.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.9" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1151.9" y="467.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1154.9" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1151.9" y="451.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1154.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1151.9" y="435.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.9" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1151.9" y="419.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1154.9" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1151.9" y="403.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1154.9" y="414.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1151.9" y="387.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1154.9" y="398.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (14 samples, 0.27%)</title><rect x="1152.8" y="819.0" width="3.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.8" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.15%)</title><rect x="1152.8" y="803.0" width="1.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.8" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.15%)</title><rect x="1152.8" y="787.0" width="1.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.8" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.15%)</title><rect x="1152.8" y="771.0" width="1.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1155.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.15%)</title><rect x="1152.8" y="755.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1155.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.15%)</title><rect x="1152.8" y="739.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1155.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.13%)</title><rect x="1152.8" y="723.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1155.8" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.11%)</title><rect x="1153.0" y="707.0" width="1.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.0" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.11%)</title><rect x="1153.0" y="691.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.10%)</title><rect x="1153.2" y="675.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1156.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.10%)</title><rect x="1153.2" y="659.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1156.2" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.10%)</title><rect x="1153.2" y="643.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.2" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.10%)</title><rect x="1153.2" y="627.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.2" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.10%)</title><rect x="1153.2" y="611.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.2" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.10%)</title><rect x="1153.2" y="595.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.2" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.10%)</title><rect x="1153.2" y="579.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1156.2" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.10%)</title><rect x="1153.2" y="563.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.10%)</title><rect x="1153.2" y="547.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1156.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1153.2" y="531.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1156.2" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1153.4" y="515.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1156.4" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1153.4" y="499.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1153.4" y="483.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1153.4" y="467.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1156.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1153.4" y="451.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1156.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1153.4" y="435.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1156.4" y="446.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (6 samples, 0.11%)</title><rect x="1154.5" y="803.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.5" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.11%)</title><rect x="1154.5" y="787.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1157.5" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.11%)</title><rect x="1154.5" y="771.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.11%)</title><rect x="1154.5" y="755.0" width="1.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.11%)</title><rect x="1154.5" y="739.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1157.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.11%)</title><rect x="1154.5" y="723.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1157.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.11%)</title><rect x="1154.5" y="707.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1157.5" y="718.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.08%)</title><rect x="1155.0" y="691.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1158.0" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.08%)</title><rect x="1155.0" y="675.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.0" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.08%)</title><rect x="1155.0" y="659.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1158.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.08%)</title><rect x="1155.0" y="643.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.0" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.08%)</title><rect x="1155.0" y="627.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1158.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.08%)</title><rect x="1155.0" y="611.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.08%)</title><rect x="1155.0" y="595.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1158.0" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1155.0" y="579.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.0" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1155.0" y="563.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.0" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1155.0" y="547.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.0" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1155.0" y="531.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1158.0" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1155.0" y="515.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1158.0" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1155.0" y="499.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.0" y="510.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1155.0" y="483.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1158.0" y="494.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1155.2" y="467.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.2" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1155.2" y="451.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.2" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1155.2" y="435.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1158.2" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1155.2" y="419.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.2" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1155.2" y="403.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1158.2" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1155.2" y="387.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.2" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1155.2" y="371.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1158.2" y="382.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1155.2" y="355.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.2" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1155.2" y="339.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1158.2" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1155.2" y="323.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.2" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1155.2" y="307.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1158.2" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1155.2" y="291.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.2" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1155.2" y="275.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1158.2" y="286.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1155.2" y="259.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1158.2" y="270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1155.2" y="243.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.2" y="254.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1155.2" y="227.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1158.2" y="238.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1155.2" y="211.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1158.2" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1155.2" y="195.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1158.2" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1155.2" y="179.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1158.2" y="190.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1155.2" y="163.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1158.2" y="174.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1155.2" y="147.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1158.2" y="158.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.06%)</title><rect x="1156.1" y="835.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1159.1" y="846.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.04%)</title><rect x="1156.1" y="819.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1159.1" y="830.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (2 samples, 0.04%)</title><rect x="1156.1" y="803.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1159.1" y="814.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (2 samples, 0.04%)</title><rect x="1156.1" y="787.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1159.1" y="798.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.04%)</title><rect x="1156.1" y="771.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1159.1" y="782.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.04%)</title><rect x="1156.1" y="755.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1159.1" y="766.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (2 samples, 0.04%)</title><rect x="1156.1" y="739.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1159.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.04%)</title><rect x="1156.8" y="835.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1159.8" y="846.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (22 samples, 0.42%)</title><rect x="1158.1" y="915.0" width="5.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.1" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (18 samples, 0.34%)</title><rect x="1158.1" y="899.0" width="4.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.1" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (18 samples, 0.34%)</title><rect x="1158.1" y="883.0" width="4.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.1" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (17 samples, 0.32%)</title><rect x="1158.1" y="867.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (17 samples, 0.32%)</title><rect x="1158.1" y="851.0" width="3.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (17 samples, 0.32%)</title><rect x="1158.1" y="835.0" width="3.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.1" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (14 samples, 0.27%)</title><rect x="1158.1" y="819.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.1" y="830.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.06%)</title><rect x="1158.1" y="803.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.1" y="814.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.04%)</title><rect x="1158.1" y="787.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.1" y="798.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.04%)</title><rect x="1158.1" y="771.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.1" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (10 samples, 0.19%)</title><rect x="1159.0" y="803.0" width="2.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1162.0" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (10 samples, 0.19%)</title><rect x="1159.0" y="787.0" width="2.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.15%)</title><rect x="1159.5" y="771.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.15%)</title><rect x="1159.5" y="755.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.15%)</title><rect x="1159.5" y="739.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.13%)</title><rect x="1159.5" y="723.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.5" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1159.9" y="707.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1162.9" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1159.9" y="691.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1159.9" y="675.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1159.9" y="659.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1162.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1159.9" y="643.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1162.9" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1159.9" y="627.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.9" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1159.9" y="611.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1162.9" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1159.9" y="595.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1162.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1159.9" y="579.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1162.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1159.9" y="563.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.9" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1159.9" y="547.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.9" y="558.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1160.4" y="707.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.4" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1160.4" y="691.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.4" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1160.4" y="675.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.4" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1160.4" y="659.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1160.4" y="643.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1160.4" y="627.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1160.4" y="611.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.4" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1160.4" y="595.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1163.4" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1160.4" y="579.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1160.4" y="563.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1160.4" y="547.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.4" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1160.4" y="531.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.4" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1160.4" y="515.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.4" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1160.4" y="499.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.4" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1160.4" y="483.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1160.4" y="467.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1160.4" y="451.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.4" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1160.4" y="435.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.4" y="446.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (2 samples, 0.04%)</title><rect x="1161.5" y="819.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1164.5" y="830.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.08%)</title><rect x="1162.2" y="899.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.2" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.08%)</title><rect x="1162.2" y="883.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.2" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.08%)</title><rect x="1162.2" y="867.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.2" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1162.2" y="851.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.2" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1162.2" y="835.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1162.2" y="819.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1165.2" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1162.2" y="803.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.2" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1162.2" y="787.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.2" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1162.2" y="771.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.2" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1162.2" y="755.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1162.2" y="739.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1165.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1162.2" y="723.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1165.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1162.2" y="707.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.04%)</title><rect x="1163.3" y="931.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.3" y="942.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (12 samples, 0.23%)</title><rect x="1164.4" y="1011.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1167.4" y="1022.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (5 samples, 0.10%)</title><rect x="1164.6" y="995.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1167.6" y="1006.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (4 samples, 0.08%)</title><rect x="1165.8" y="995.0" width="0.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.8" y="1006.0"></text>
</g>
<g>
<title>Unique_Node_List::remove_useless_nodes(VectorSet&amp;) (2 samples, 0.04%)</title><rect x="1166.7" y="995.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.7" y="1006.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (3 samples, 0.06%)</title><rect x="1167.3" y="1011.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1170.3" y="1022.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.04%)</title><rect x="1167.6" y="995.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1170.6" y="1006.0"></text>
</g>
<g>
<title>ciEnv::ciEnv(CompileTask*, int) (2 samples, 0.04%)</title><rect x="1168.5" y="1043.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.5" y="1054.0"></text>
</g>
<g>
<title>[tid=7853] (55 samples, 1.05%)</title><rect x="1169.8" y="1171.0" width="12.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1172.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.08%)</title><rect x="1169.8" y="1155.0" width="0.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1172.8" y="1166.0"></text>
</g>
<g>
<title>__GI___open64 (3 samples, 0.06%)</title><rect x="1170.0" y="1139.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1173.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="1170.0" y="1123.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1173.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="1170.0" y="1107.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1173.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="1170.0" y="1091.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1173.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="1170.0" y="1075.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1173.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="1170.0" y="1059.0" width="0.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1173.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="1170.0" y="1043.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1173.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="1170.0" y="1027.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1173.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1170.3" y="1011.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1173.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1170.3" y="995.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1173.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1170.3" y="979.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1173.3" y="990.0"></text>
</g>
<g>
<title>start_thread (50 samples, 0.95%)</title><rect x="1170.9" y="1155.0" width="11.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1173.9" y="1166.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (50 samples, 0.95%)</title><rect x="1170.9" y="1139.0" width="11.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1173.9" y="1150.0"></text>
</g>
<g>
<title>Thread::call_run() (50 samples, 0.95%)</title><rect x="1170.9" y="1123.0" width="11.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1173.9" y="1134.0"></text>
</g>
<g>
<title>JavaThread::run() (50 samples, 0.95%)</title><rect x="1170.9" y="1107.0" width="11.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.9" y="1118.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (50 samples, 0.95%)</title><rect x="1170.9" y="1091.0" width="11.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.9" y="1102.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (50 samples, 0.95%)</title><rect x="1170.9" y="1075.0" width="11.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1173.9" y="1086.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (49 samples, 0.93%)</title><rect x="1170.9" y="1059.0" width="11.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1173.9" y="1070.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (47 samples, 0.89%)</title><rect x="1171.2" y="1043.0" width="10.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1174.2" y="1054.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (47 samples, 0.89%)</title><rect x="1171.2" y="1027.0" width="10.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1174.2" y="1038.0"></text>
</g>
<g>
<title>Compilation::compile_method() (47 samples, 0.89%)</title><rect x="1171.2" y="1011.0" width="10.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.2" y="1022.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (44 samples, 0.84%)</title><rect x="1171.2" y="995.0" width="9.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.2" y="1006.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (19 samples, 0.36%)</title><rect x="1171.2" y="979.0" width="4.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1174.2" y="990.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (16 samples, 0.30%)</title><rect x="1171.4" y="963.0" width="3.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.4" y="974.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (16 samples, 0.30%)</title><rect x="1171.4" y="947.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1174.4" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (16 samples, 0.30%)</title><rect x="1171.4" y="931.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.4" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (16 samples, 0.30%)</title><rect x="1171.4" y="915.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.4" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (15 samples, 0.29%)</title><rect x="1171.4" y="899.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.4" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (12 samples, 0.23%)</title><rect x="1171.8" y="883.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1174.8" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (8 samples, 0.15%)</title><rect x="1171.8" y="867.0" width="1.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1174.8" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (8 samples, 0.15%)</title><rect x="1171.8" y="851.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.8" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (7 samples, 0.13%)</title><rect x="1171.8" y="835.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1174.8" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (7 samples, 0.13%)</title><rect x="1171.8" y="819.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1174.8" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (6 samples, 0.11%)</title><rect x="1172.0" y="803.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1175.0" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (4 samples, 0.08%)</title><rect x="1172.0" y="787.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1175.0" y="798.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.06%)</title><rect x="1172.0" y="771.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1175.0" y="782.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.04%)</title><rect x="1172.0" y="755.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1175.0" y="766.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.04%)</title><rect x="1172.0" y="739.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.0" y="750.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.04%)</title><rect x="1172.0" y="723.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1175.0" y="734.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1172.0" y="707.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.0" y="718.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.04%)</title><rect x="1172.0" y="691.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.0" y="702.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (3 samples, 0.06%)</title><rect x="1173.6" y="867.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1176.6" y="878.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.06%)</title><rect x="1173.6" y="851.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.6" y="862.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (3 samples, 0.06%)</title><rect x="1173.6" y="835.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1176.6" y="846.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.04%)</title><rect x="1173.8" y="819.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1176.8" y="830.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.04%)</title><rect x="1173.8" y="803.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.8" y="814.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.04%)</title><rect x="1173.8" y="787.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1176.8" y="798.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.04%)</title><rect x="1173.8" y="771.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.8" y="782.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (9 samples, 0.17%)</title><rect x="1175.4" y="979.0" width="2.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1178.4" y="990.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (5 samples, 0.10%)</title><rect x="1175.4" y="963.0" width="1.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.4" y="974.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (2 samples, 0.04%)</title><rect x="1175.6" y="947.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.6" y="958.0"></text>
</g>
<g>
<title>LIR_Assembler::call(LIR_OpJavaCall*, relocInfo::relocType) (2 samples, 0.04%)</title><rect x="1175.6" y="931.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.6" y="942.0"></text>
</g>
<g>
<title>LIR_Assembler::add_call_info(int, CodeEmitInfo*) (2 samples, 0.04%)</title><rect x="1175.6" y="915.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.6" y="926.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (2 samples, 0.04%)</title><rect x="1175.6" y="899.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1178.6" y="910.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (2 samples, 0.04%)</title><rect x="1176.8" y="963.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.8" y="974.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (16 samples, 0.30%)</title><rect x="1177.4" y="979.0" width="3.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.4" y="990.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (7 samples, 0.13%)</title><rect x="1177.4" y="963.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.4" y="974.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (7 samples, 0.13%)</title><rect x="1177.4" y="947.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.4" y="958.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (3 samples, 0.06%)</title><rect x="1177.9" y="931.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1180.9" y="942.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (2 samples, 0.04%)</title><rect x="1178.1" y="915.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.1" y="926.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (2 samples, 0.04%)</title><rect x="1178.1" y="899.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.1" y="910.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (8 samples, 0.15%)</title><rect x="1179.2" y="963.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.2" y="974.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (2 samples, 0.04%)</title><rect x="1179.5" y="947.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.5" y="958.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (2 samples, 0.04%)</title><rect x="1179.5" y="931.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.5" y="942.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (2 samples, 0.04%)</title><rect x="1179.5" y="915.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.5" y="926.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (2 samples, 0.04%)</title><rect x="1180.1" y="947.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.1" y="958.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (2 samples, 0.04%)</title><rect x="1180.6" y="947.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1183.6" y="958.0"></text>
</g>
<g>
<title>LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&amp;) (2 samples, 0.04%)</title><rect x="1180.6" y="931.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1183.6" y="942.0"></text>
</g>
<g>
<title>Compilation::initialize() (2 samples, 0.04%)</title><rect x="1181.0" y="995.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.0" y="1006.0"></text>
</g>
<g>
<title>[tid=7855] (8 samples, 0.15%)</title><rect x="1182.4" y="1171.0" width="1.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1185.4" y="1182.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.13%)</title><rect x="1182.6" y="1155.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1185.6" y="1166.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.13%)</title><rect x="1182.6" y="1139.0" width="1.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1185.6" y="1150.0"></text>
</g>
<g>
<title>Thread::call_run() (7 samples, 0.13%)</title><rect x="1182.6" y="1123.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.6" y="1134.0"></text>
</g>
<g>
<title>JavaThread::run() (7 samples, 0.13%)</title><rect x="1182.6" y="1107.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.6" y="1118.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (7 samples, 0.13%)</title><rect x="1182.6" y="1091.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.6" y="1102.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (7 samples, 0.13%)</title><rect x="1182.6" y="1075.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.6" y="1086.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (7 samples, 0.13%)</title><rect x="1182.6" y="1059.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.6" y="1070.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (7 samples, 0.13%)</title><rect x="1182.6" y="1043.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.6" y="1054.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (2 samples, 0.04%)</title><rect x="1182.6" y="1027.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.6" y="1038.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (5 samples, 0.10%)</title><rect x="1183.0" y="1027.0" width="1.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1186.0" y="1038.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.04%)</title><rect x="1183.5" y="1011.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.5" y="1022.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.04%)</title><rect x="1183.5" y="995.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.5" y="1006.0"></text>
</g>
<g>
<title>[tid=7859] (7 samples, 0.13%)</title><rect x="1184.4" y="1171.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1187.4" y="1182.0"></text>
</g>
<g>
<title>start_thread (7 samples, 0.13%)</title><rect x="1184.4" y="1155.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1187.4" y="1166.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (7 samples, 0.13%)</title><rect x="1184.4" y="1139.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1187.4" y="1150.0"></text>
</g>
<g>
<title>Thread::call_run() (7 samples, 0.13%)</title><rect x="1184.4" y="1123.0" width="1.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.4" y="1134.0"></text>
</g>
<g>
<title>GangWorker::loop() (7 samples, 0.13%)</title><rect x="1184.4" y="1107.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.4" y="1118.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (7 samples, 0.13%)</title><rect x="1184.4" y="1091.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.4" y="1102.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (3 samples, 0.06%)</title><rect x="1184.4" y="1075.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.4" y="1086.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.06%)</title><rect x="1184.4" y="1059.0" width="0.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1187.4" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (4 samples, 0.08%)</title><rect x="1185.1" y="1075.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.1" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (4 samples, 0.08%)</title><rect x="1185.1" y="1059.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.1" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (4 samples, 0.08%)</title><rect x="1185.1" y="1043.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.1" y="1054.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (4 samples, 0.08%)</title><rect x="1185.1" y="1027.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.1" y="1038.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (4 samples, 0.08%)</title><rect x="1185.1" y="1011.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.1" y="1022.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (4 samples, 0.08%)</title><rect x="1185.1" y="995.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.1" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.04%)</title><rect x="1185.3" y="979.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.3" y="990.0"></text>
</g>
<g>
<title>[tid=7882] (10 samples, 0.19%)</title><rect x="1186.0" y="1171.0" width="2.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1189.0" y="1182.0"></text>
</g>
<g>
<title>start_thread (10 samples, 0.19%)</title><rect x="1186.0" y="1155.0" width="2.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1189.0" y="1166.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (10 samples, 0.19%)</title><rect x="1186.0" y="1139.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1189.0" y="1150.0"></text>
</g>
<g>
<title>Thread::call_run() (10 samples, 0.19%)</title><rect x="1186.0" y="1123.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.0" y="1134.0"></text>
</g>
<g>
<title>GangWorker::loop() (10 samples, 0.19%)</title><rect x="1186.0" y="1107.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.0" y="1118.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (10 samples, 0.19%)</title><rect x="1186.0" y="1091.0" width="2.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.0" y="1102.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (5 samples, 0.10%)</title><rect x="1186.0" y="1075.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.0" y="1086.0"></text>
</g>
<g>
<title>SpinPause (4 samples, 0.08%)</title><rect x="1186.2" y="1059.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1189.2" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="1187.1" y="1075.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="1187.1" y="1059.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.1" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.06%)</title><rect x="1187.1" y="1043.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.1" y="1054.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.06%)</title><rect x="1187.1" y="1027.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.1" y="1038.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.06%)</title><rect x="1187.1" y="1011.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.1" y="1022.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.06%)</title><rect x="1187.1" y="995.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (3 samples, 0.06%)</title><rect x="1187.1" y="979.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.1" y="990.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.04%)</title><rect x="1187.8" y="1075.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.8" y="1086.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.04%)</title><rect x="1187.8" y="1059.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.8" y="1070.0"></text>
</g>
<g>
<title>[tid=7883] (8 samples, 0.15%)</title><rect x="1188.2" y="1171.0" width="1.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1191.2" y="1182.0"></text>
</g>
<g>
<title>start_thread (8 samples, 0.15%)</title><rect x="1188.2" y="1155.0" width="1.8" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1191.2" y="1166.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (8 samples, 0.15%)</title><rect x="1188.2" y="1139.0" width="1.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1191.2" y="1150.0"></text>
</g>
<g>
<title>Thread::call_run() (8 samples, 0.15%)</title><rect x="1188.2" y="1123.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.2" y="1134.0"></text>
</g>
<g>
<title>GangWorker::loop() (8 samples, 0.15%)</title><rect x="1188.2" y="1107.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.2" y="1118.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (8 samples, 0.15%)</title><rect x="1188.2" y="1091.0" width="1.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.2" y="1102.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (4 samples, 0.08%)</title><rect x="1188.2" y="1075.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.2" y="1086.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.06%)</title><rect x="1188.4" y="1059.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1191.4" y="1070.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="1189.1" y="1075.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.1" y="1086.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (3 samples, 0.06%)</title><rect x="1189.1" y="1059.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.1" y="1070.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (3 samples, 0.06%)</title><rect x="1189.1" y="1043.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.1" y="1054.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (3 samples, 0.06%)</title><rect x="1189.1" y="1027.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.1" y="1038.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (3 samples, 0.06%)</title><rect x="1189.1" y="1011.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.1" y="1022.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (3 samples, 0.06%)</title><rect x="1189.1" y="995.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.1" y="1006.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (2 samples, 0.04%)</title><rect x="1189.1" y="979.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.1" y="990.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.04%)</title><rect x="1189.1" y="963.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.1" y="974.0"></text>
</g>
</g>
</svg>
