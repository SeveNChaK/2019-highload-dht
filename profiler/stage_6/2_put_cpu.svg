<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1382" onload="init(evt)" viewBox="0 0 1200 1382" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1365"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1365"> </text>
<g id="frames">
<g>
<title>all (7,307 samples, 100.00%)</title><rect x="10.0" y="1331.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="1342.0">all</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="10.0" y="1315.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="13.0" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (2 samples, 0.03%)</title><rect x="10.3" y="1315.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.3" y="1326.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (14 samples, 0.19%)</title><rect x="10.8" y="1315.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="13.8" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (6 samples, 0.08%)</title><rect x="11.3" y="1299.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.3" y="1310.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.07%)</title><rect x="11.3" y="1283.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="14.3" y="1294.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.07%)</title><rect x="11.3" y="1267.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="14.3" y="1278.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (4 samples, 0.05%)</title><rect x="11.5" y="1251.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="14.5" y="1262.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.03%)</title><rect x="11.5" y="1235.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.5" y="1246.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.03%)</title><rect x="11.8" y="1235.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="14.8" y="1246.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.07%)</title><rect x="12.3" y="1299.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="15.3" y="1310.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.07%)</title><rect x="12.3" y="1283.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.3" y="1294.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="12.4" y="1267.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.4" y="1278.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (2 samples, 0.03%)</title><rect x="12.6" y="1251.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="15.6" y="1262.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (7 samples, 0.10%)</title><rect x="13.1" y="1315.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.1" y="1326.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.05%)</title><rect x="13.6" y="1299.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.6" y="1310.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.05%)</title><rect x="13.6" y="1283.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.6" y="1294.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.05%)</title><rect x="13.6" y="1267.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="16.6" y="1278.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="13.9" y="1251.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.9" y="1262.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (26 samples, 0.36%)</title><rect x="14.2" y="1315.0" width="4.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="17.2" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (25 samples, 0.34%)</title><rect x="14.4" y="1299.0" width="4.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="17.4" y="1310.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (21 samples, 0.29%)</title><rect x="14.5" y="1283.0" width="3.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="17.5" y="1294.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (20 samples, 0.27%)</title><rect x="14.5" y="1267.0" width="3.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="17.5" y="1278.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (14 samples, 0.19%)</title><rect x="15.2" y="1251.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.2" y="1262.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (6 samples, 0.08%)</title><rect x="15.8" y="1235.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.8" y="1246.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (3 samples, 0.04%)</title><rect x="16.1" y="1219.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="19.1" y="1230.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (3 samples, 0.04%)</title><rect x="16.1" y="1203.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="19.1" y="1214.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (3 samples, 0.04%)</title><rect x="16.1" y="1187.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="19.1" y="1198.0"></text>
</g>
<g>
<title>HeapRegion::set_eden() (2 samples, 0.03%)</title><rect x="16.3" y="1171.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="19.3" y="1182.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.03%)</title><rect x="16.8" y="1235.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="19.8" y="1246.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.03%)</title><rect x="16.8" y="1219.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="19.8" y="1230.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.04%)</title><rect x="17.9" y="1283.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.9" y="1294.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (4 samples, 0.05%)</title><rect x="18.4" y="1315.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="21.4" y="1326.0"></text>
</g>
<g>
<title>SimpleThresholdPolicy::event(methodHandle const&amp;, methodHandle const&amp;, int, int, CompLevel, CompiledMethod*, JavaThread*) (3 samples, 0.04%)</title><rect x="18.6" y="1299.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="21.6" y="1310.0"></text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (19 samples, 0.26%)</title><rect x="19.0" y="1315.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.0" y="1326.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (16 samples, 0.22%)</title><rect x="19.5" y="1299.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.5" y="1310.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (8 samples, 0.11%)</title><rect x="19.7" y="1283.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="22.7" y="1294.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (5 samples, 0.07%)</title><rect x="20.0" y="1267.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="23.0" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (7 samples, 0.10%)</title><rect x="21.0" y="1283.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="24.0" y="1294.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (6 samples, 0.08%)</title><rect x="21.0" y="1267.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="24.0" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (4 samples, 0.05%)</title><rect x="21.1" y="1251.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="24.1" y="1262.0"></text>
</g>
<g>
<title>Runtime1::new_instance(JavaThread*, Klass*) (6 samples, 0.08%)</title><rect x="22.1" y="1315.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="25.1" y="1326.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (6 samples, 0.08%)</title><rect x="22.1" y="1299.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="25.1" y="1310.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (5 samples, 0.07%)</title><rect x="22.1" y="1283.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="25.1" y="1294.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.07%)</title><rect x="22.1" y="1267.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="25.1" y="1278.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (3 samples, 0.04%)</title><rect x="22.3" y="1251.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="25.3" y="1262.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (45 samples, 0.62%)</title><rect x="23.4" y="1315.0" width="7.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="26.4" y="1326.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (43 samples, 0.59%)</title><rect x="23.7" y="1299.0" width="7.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="26.7" y="1310.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (19 samples, 0.26%)</title><rect x="24.0" y="1283.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="27.0" y="1294.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (18 samples, 0.25%)</title><rect x="24.0" y="1267.0" width="3.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="27.0" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (21 samples, 0.29%)</title><rect x="27.1" y="1283.0" width="3.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="30.1" y="1294.0"></text>
</g>
<g>
<title>JavaThreadBlockedOnMonitorEnterState::JavaThreadBlockedOnMonitorEnterState(JavaThread*, ObjectMonitor*) (2 samples, 0.03%)</title><rect x="27.4" y="1267.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="30.4" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (16 samples, 0.22%)</title><rect x="27.8" y="1267.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="30.8" y="1278.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (9 samples, 0.12%)</title><rect x="27.9" y="1251.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="30.9" y="1262.0"></text>
</g>
<g>
<title>SpinPause (2 samples, 0.03%)</title><rect x="29.4" y="1251.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="32.4" y="1262.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.03%)</title><rect x="29.7" y="1251.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="32.7" y="1262.0"></text>
</g>
<g>
<title>[not_walkable] (12 samples, 0.16%)</title><rect x="30.8" y="1315.0" width="2.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="33.8" y="1326.0"></text>
</g>
<g>
<title>[not_walkable_Java] (39 samples, 0.53%)</title><rect x="32.8" y="1315.0" width="6.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="35.8" y="1326.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (3 samples, 0.04%)</title><rect x="33.4" y="1299.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="36.4" y="1310.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (9 samples, 0.12%)</title><rect x="34.4" y="1299.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="37.4" y="1310.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (9 samples, 0.12%)</title><rect x="34.4" y="1283.0" width="1.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="37.4" y="1294.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.07%)</title><rect x="34.4" y="1267.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="37.4" y="1278.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.05%)</title><rect x="34.4" y="1251.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="37.4" y="1262.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="34.7" y="1235.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="37.7" y="1246.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (4 samples, 0.05%)</title><rect x="35.2" y="1267.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="38.2" y="1278.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.03%)</title><rect x="35.5" y="1251.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="38.5" y="1262.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (4 samples, 0.05%)</title><rect x="35.8" y="1299.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="38.8" y="1310.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (2 samples, 0.03%)</title><rect x="36.2" y="1283.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="39.2" y="1294.0"></text>
</g>
<g>
<title>Runtime1::monitorexit(JavaThread*, BasicObjectLock*) (8 samples, 0.11%)</title><rect x="36.5" y="1299.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="39.5" y="1310.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (2 samples, 0.03%)</title><rect x="36.6" y="1283.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="39.6" y="1294.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (4 samples, 0.05%)</title><rect x="37.0" y="1283.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="40.0" y="1294.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (2 samples, 0.03%)</title><rect x="37.3" y="1267.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="40.3" y="1278.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (3 samples, 0.04%)</title><rect x="37.9" y="1299.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="40.9" y="1310.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="38.4" y="1299.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="41.4" y="1310.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="38.7" y="1283.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="41.7" y="1294.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.21%)</title><rect x="39.1" y="1315.0" width="2.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="42.1" y="1326.0"></text>
</g>
<g>
<title>__GI___open64 (5 samples, 0.07%)</title><rect x="39.6" y="1299.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="42.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="39.6" y="1283.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="42.6" y="1294.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="39.6" y="1267.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="42.6" y="1278.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="39.6" y="1251.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="42.6" y="1262.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="39.6" y="1235.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="42.6" y="1246.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="39.6" y="1219.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="42.6" y="1230.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="39.6" y="1203.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="42.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="39.7" y="1187.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="42.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="39.9" y="1171.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="42.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="40.0" y="1155.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="43.0" y="1166.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="40.4" y="1299.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="43.4" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="40.4" y="1283.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="43.4" y="1294.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="40.4" y="1267.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="43.4" y="1278.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="40.4" y="1251.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="43.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="40.4" y="1235.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="43.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="40.4" y="1219.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="43.4" y="1230.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.04%)</title><rect x="41.0" y="1299.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="44.0" y="1310.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.04%)</title><rect x="41.0" y="1283.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="44.0" y="1294.0"></text>
</g>
<g>
<title>[unknown_Java] (58 samples, 0.79%)</title><rect x="41.5" y="1315.0" width="9.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="44.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="47.8" y="1299.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="50.8" y="1310.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.04%)</title><rect x="48.1" y="1283.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="51.1" y="1294.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (13 samples, 0.18%)</title><rect x="48.6" y="1299.0" width="2.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="51.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="48.8" y="1283.0" width="1.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="51.8" y="1294.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="48.8" y="1267.0" width="1.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="51.8" y="1278.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="48.8" y="1251.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="51.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="48.8" y="1235.0" width="1.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="51.8" y="1246.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="48.8" y="1219.0" width="1.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="51.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.14%)</title><rect x="49.1" y="1203.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="52.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.14%)</title><rect x="49.1" y="1187.0" width="1.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="52.1" y="1198.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.14%)</title><rect x="49.1" y="1171.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="52.1" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (8 samples, 0.11%)</title><rect x="51.2" y="1315.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="54.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.10%)</title><rect x="51.3" y="1299.0" width="1.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="54.3" y="1310.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.10%)</title><rect x="51.3" y="1283.0" width="1.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="54.3" y="1294.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="51.5" y="1267.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="54.5" y="1278.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="51.5" y="1251.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="54.5" y="1262.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="51.5" y="1235.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="54.5" y="1246.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="51.7" y="1219.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="54.7" y="1230.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="52.6" y="1315.0" width="0.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="55.6" y="1326.0"></text>
</g>
<g>
<title>java/lang/NullPointerException.&lt;init&gt; (8 samples, 0.11%)</title><rect x="53.1" y="1315.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.1" y="1326.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (8 samples, 0.11%)</title><rect x="53.1" y="1299.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="56.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (8 samples, 0.11%)</title><rect x="53.1" y="1283.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="56.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (8 samples, 0.11%)</title><rect x="53.1" y="1267.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="56.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 0.11%)</title><rect x="53.1" y="1251.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="56.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (8 samples, 0.11%)</title><rect x="53.1" y="1235.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="56.1" y="1246.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (8 samples, 0.11%)</title><rect x="53.1" y="1219.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="56.1" y="1230.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (8 samples, 0.11%)</title><rect x="53.1" y="1203.0" width="1.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="56.1" y="1214.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (8 samples, 0.11%)</title><rect x="53.1" y="1187.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="56.1" y="1198.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (7 samples, 0.10%)</title><rect x="53.3" y="1171.0" width="1.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="56.3" y="1182.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (2 samples, 0.03%)</title><rect x="53.8" y="1155.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="56.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3,102 samples, 42.45%)</title><rect x="54.4" y="1315.0" width="500.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="57.4" y="1326.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3,102 samples, 42.45%)</title><rect x="54.4" y="1299.0" width="500.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="57.4" y="1310.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3,102 samples, 42.45%)</title><rect x="54.4" y="1283.0" width="500.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="57.4" y="1294.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.04%)</title><rect x="58.8" y="1267.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="61.8" y="1278.0"></text>
</g>
<g>
<title>itable stub (6 samples, 0.08%)</title><rect x="59.3" y="1267.0" width="0.9" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="62.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (10 samples, 0.14%)</title><rect x="60.2" y="1267.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="63.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.07%)</title><rect x="61.0" y="1251.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="64.0" y="1262.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (4 samples, 0.05%)</title><rect x="61.2" y="1235.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="64.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.03%)</title><rect x="61.8" y="1267.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="64.8" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (697 samples, 9.54%)</title><rect x="62.2" y="1267.0" width="112.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="65.2" y="1278.0">java/util/conc..</text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="62.5" y="1251.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="65.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (692 samples, 9.47%)</title><rect x="62.8" y="1251.0" width="111.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="65.8" y="1262.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (691 samples, 9.46%)</title><rect x="62.8" y="1235.0" width="111.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.8" y="1246.0">java/util/con..</text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="63.1" y="1219.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="66.1" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="63.6" y="1219.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="66.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.03%)</title><rect x="63.6" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="66.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$132/901790106.apply (682 samples, 9.33%)</title><rect x="64.1" y="1219.0" width="110.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="67.1" y="1230.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (682 samples, 9.33%)</title><rect x="64.1" y="1203.0" width="110.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.1" y="1214.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (682 samples, 9.33%)</title><rect x="64.1" y="1187.0" width="110.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="67.1" y="1198.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="64.1" y="1171.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="64.1" y="1155.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="67.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$241/574542749.get$Lambda (3 samples, 0.04%)</title><rect x="64.1" y="1139.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="67.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$241/574542749.&lt;init&gt; (3 samples, 0.04%)</title><rect x="64.1" y="1123.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="67.1" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/772231929.get$Lambda (2 samples, 0.03%)</title><rect x="64.6" y="1139.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="67.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.04%)</title><rect x="65.1" y="1171.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="68.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="65.2" y="1155.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="68.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (656 samples, 8.98%)</title><rect x="65.7" y="1171.0" width="106.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="68.7" y="1182.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (656 samples, 8.98%)</title><rect x="65.7" y="1155.0" width="106.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="68.7" y="1166.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (655 samples, 8.96%)</title><rect x="65.9" y="1139.0" width="105.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="68.9" y="1150.0">jdk/internal/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.08%)</title><rect x="66.4" y="1123.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.08%)</title><rect x="66.4" y="1107.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$145/867919385.get$Lambda (3 samples, 0.04%)</title><rect x="66.4" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="69.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$215/26138573.get$Lambda (2 samples, 0.03%)</title><rect x="67.0" y="1091.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (308 samples, 4.22%)</title><rect x="67.3" y="1123.0" width="49.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.3" y="1134.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (308 samples, 4.22%)</title><rect x="67.3" y="1107.0" width="49.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="70.3" y="1118.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (307 samples, 4.20%)</title><rect x="67.5" y="1091.0" width="49.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="70.5" y="1102.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="67.5" y="1075.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$215/26138573.apply (305 samples, 4.17%)</title><rect x="67.8" y="1075.0" width="49.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.8" y="1086.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (305 samples, 4.17%)</title><rect x="67.8" y="1059.0" width="49.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="70.8" y="1070.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (305 samples, 4.17%)</title><rect x="67.8" y="1043.0" width="49.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.8" y="1054.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$147/1130664697.apply (303 samples, 4.15%)</title><rect x="68.1" y="1027.0" width="49.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.1" y="1038.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (303 samples, 4.15%)</title><rect x="68.1" y="1011.0" width="49.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.1" y="1022.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (6 samples, 0.08%)</title><rect x="68.1" y="995.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="71.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (6 samples, 0.08%)</title><rect x="68.1" y="979.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (6 samples, 0.08%)</title><rect x="68.1" y="963.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$239/628439043.apply (6 samples, 0.08%)</title><rect x="68.1" y="947.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (6 samples, 0.08%)</title><rect x="68.1" y="931.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (6 samples, 0.08%)</title><rect x="68.1" y="915.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$145/867919385.apply (6 samples, 0.08%)</title><rect x="68.1" y="899.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (6 samples, 0.08%)</title><rect x="68.1" y="883.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (6 samples, 0.08%)</title><rect x="68.1" y="867.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="71.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (5 samples, 0.07%)</title><rect x="68.3" y="851.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (5 samples, 0.07%)</title><rect x="68.3" y="835.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="71.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (5 samples, 0.07%)</title><rect x="68.3" y="819.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$335/960318299.accept (5 samples, 0.07%)</title><rect x="68.3" y="803.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (5 samples, 0.07%)</title><rect x="68.3" y="787.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="71.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (5 samples, 0.07%)</title><rect x="68.3" y="771.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="71.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (5 samples, 0.07%)</title><rect x="68.3" y="755.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.3" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (5 samples, 0.07%)</title><rect x="68.3" y="739.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="71.3" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.07%)</title><rect x="68.3" y="723.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.07%)</title><rect x="68.3" y="707.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.3" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.07%)</title><rect x="68.3" y="691.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="71.3" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.07%)</title><rect x="68.3" y="675.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.3" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (5 samples, 0.07%)</title><rect x="68.3" y="659.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="71.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.07%)</title><rect x="68.3" y="643.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.3" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (5 samples, 0.07%)</title><rect x="68.3" y="627.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="71.3" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.07%)</title><rect x="68.3" y="611.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.3" y="622.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.07%)</title><rect x="68.3" y="595.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.3" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.07%)</title><rect x="68.3" y="579.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.3" y="590.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.07%)</title><rect x="68.3" y="563.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="71.3" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (5 samples, 0.07%)</title><rect x="68.3" y="547.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.3" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (5 samples, 0.07%)</title><rect x="68.3" y="531.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.3" y="542.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (5 samples, 0.07%)</title><rect x="68.3" y="515.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.3" y="526.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (5 samples, 0.07%)</title><rect x="68.3" y="499.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.3" y="510.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (4 samples, 0.05%)</title><rect x="68.5" y="483.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.5" y="494.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (4 samples, 0.05%)</title><rect x="68.5" y="467.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.5" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (4 samples, 0.05%)</title><rect x="68.5" y="451.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.5" y="462.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (4 samples, 0.05%)</title><rect x="68.5" y="435.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="71.5" y="446.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (4 samples, 0.05%)</title><rect x="68.5" y="419.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="71.5" y="430.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (4 samples, 0.05%)</title><rect x="68.5" y="403.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.5" y="414.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (4 samples, 0.05%)</title><rect x="68.5" y="387.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.5" y="398.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.04%)</title><rect x="68.6" y="371.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="71.6" y="382.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (3 samples, 0.04%)</title><rect x="68.6" y="355.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="71.6" y="366.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (3 samples, 0.04%)</title><rect x="68.6" y="339.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="71.6" y="350.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (3 samples, 0.04%)</title><rect x="68.6" y="323.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.6" y="334.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="68.6" y="307.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="71.6" y="318.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="68.6" y="291.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="71.6" y="302.0"></text>
</g>
<g>
<title>__GI___writev (3 samples, 0.04%)</title><rect x="68.6" y="275.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="71.6" y="286.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="68.6" y="259.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="71.6" y="270.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="68.6" y="243.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="71.6" y="254.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="68.6" y="227.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="71.6" y="238.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="68.6" y="211.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="71.6" y="222.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="68.6" y="195.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="71.6" y="206.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="68.6" y="179.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="71.6" y="190.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="68.6" y="163.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="71.6" y="174.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="68.6" y="147.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="71.6" y="158.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="68.6" y="131.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="71.6" y="142.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="68.6" y="115.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="71.6" y="126.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="68.6" y="99.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="71.6" y="110.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="68.8" y="83.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="71.8" y="94.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="68.8" y="67.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="71.8" y="78.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="68.8" y="51.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="71.8" y="62.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="68.8" y="35.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="71.8" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (296 samples, 4.05%)</title><rect x="69.3" y="995.0" width="47.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="72.3" y="1006.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (250 samples, 3.42%)</title><rect x="69.8" y="979.0" width="40.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="72.8" y="990.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (250 samples, 3.42%)</title><rect x="69.8" y="963.0" width="40.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="72.8" y="974.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (4 samples, 0.05%)</title><rect x="70.2" y="947.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="73.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (4 samples, 0.05%)</title><rect x="70.2" y="931.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$236/1607741215.apply (239 samples, 3.27%)</title><rect x="70.9" y="947.0" width="38.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="73.9" y="958.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (237 samples, 3.24%)</title><rect x="71.2" y="931.0" width="38.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="74.2" y="942.0">jdk..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="71.5" y="915.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="74.5" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="71.5" y="899.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="74.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$251/1699099187.get$Lambda (2 samples, 0.03%)</title><rect x="71.5" y="883.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="74.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="72.0" y="915.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="75.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.04%)</title><rect x="72.0" y="899.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="75.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (2 samples, 0.03%)</title><rect x="72.0" y="883.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="75.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.03%)</title><rect x="72.0" y="867.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.12%)</title><rect x="72.5" y="915.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="75.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (9 samples, 0.12%)</title><rect x="72.5" y="899.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="75.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (8 samples, 0.11%)</title><rect x="72.7" y="883.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (7 samples, 0.10%)</title><rect x="72.8" y="867.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.08%)</title><rect x="73.0" y="851.0" width="0.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.08%)</title><rect x="73.0" y="835.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="76.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.08%)</title><rect x="73.0" y="819.0" width="0.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="76.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (6 samples, 0.08%)</title><rect x="73.0" y="803.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (5 samples, 0.07%)</title><rect x="73.1" y="787.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="76.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (5 samples, 0.07%)</title><rect x="73.1" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="76.1" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (5 samples, 0.07%)</title><rect x="73.1" y="755.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="76.1" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (5 samples, 0.07%)</title><rect x="73.1" y="739.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="76.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (5 samples, 0.07%)</title><rect x="73.1" y="723.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.1" y="734.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (5 samples, 0.07%)</title><rect x="73.1" y="707.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="76.1" y="718.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (5 samples, 0.07%)</title><rect x="73.1" y="691.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="76.1" y="702.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 0.07%)</title><rect x="73.1" y="675.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="76.1" y="686.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (5 samples, 0.07%)</title><rect x="73.1" y="659.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="76.1" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (4 samples, 0.05%)</title><rect x="73.3" y="643.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="76.3" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (4 samples, 0.05%)</title><rect x="73.3" y="627.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="76.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="611.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="76.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="595.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="76.3" y="606.0"></text>
</g>
<g>
<title>__GI___writev (4 samples, 0.05%)</title><rect x="73.3" y="579.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="76.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="563.0" width="0.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="76.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="547.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="76.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="531.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="76.3" y="542.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="515.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="76.3" y="526.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="499.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="76.3" y="510.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="483.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="76.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="467.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="76.3" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="451.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="76.3" y="462.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="435.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="76.3" y="446.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="419.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="76.3" y="430.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="403.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="76.3" y="414.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="387.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="76.3" y="398.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="371.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="76.3" y="382.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="73.3" y="355.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="76.3" y="366.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="73.5" y="339.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="76.5" y="350.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="73.6" y="323.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="76.6" y="334.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="73.6" y="307.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="76.6" y="318.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="73.6" y="291.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="76.6" y="302.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="73.6" y="275.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="76.6" y="286.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="73.6" y="259.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="76.6" y="270.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="73.6" y="243.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="76.6" y="254.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (75 samples, 1.03%)</title><rect x="73.9" y="915.0" width="12.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="76.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (74 samples, 1.01%)</title><rect x="74.1" y="899.0" width="12.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (20 samples, 0.27%)</title><rect x="74.1" y="883.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="77.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (18 samples, 0.25%)</title><rect x="74.4" y="867.0" width="2.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="77.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (17 samples, 0.23%)</title><rect x="74.6" y="851.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (7 samples, 0.10%)</title><rect x="74.9" y="835.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (7 samples, 0.10%)</title><rect x="74.9" y="819.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.9" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (4 samples, 0.05%)</title><rect x="75.4" y="803.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.4" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.04%)</title><rect x="75.6" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="78.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="75.6" y="771.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="78.6" y="782.0"></text>
</g>
<g>
<title>write (3 samples, 0.04%)</title><rect x="75.6" y="755.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="78.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="75.6" y="739.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="78.6" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="75.6" y="723.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="78.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="75.6" y="707.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="78.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="75.6" y="691.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="78.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="75.6" y="675.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="78.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="75.7" y="659.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="78.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="75.7" y="643.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="78.7" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (8 samples, 0.11%)</title><rect x="76.0" y="835.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="79.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (53 samples, 0.73%)</title><rect x="77.5" y="883.0" width="8.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (53 samples, 0.73%)</title><rect x="77.5" y="867.0" width="8.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (35 samples, 0.48%)</title><rect x="77.7" y="851.0" width="5.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="80.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (35 samples, 0.48%)</title><rect x="77.7" y="835.0" width="5.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (35 samples, 0.48%)</title><rect x="77.7" y="819.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.7" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (35 samples, 0.48%)</title><rect x="77.7" y="803.0" width="5.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="80.7" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (35 samples, 0.48%)</title><rect x="77.7" y="787.0" width="5.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="80.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.45%)</title><rect x="77.7" y="771.0" width="5.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="80.7" y="782.0"></text>
</g>
<g>
<title>write (32 samples, 0.44%)</title><rect x="77.8" y="755.0" width="5.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="80.8" y="766.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.44%)</title><rect x="77.8" y="739.0" width="5.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="80.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.44%)</title><rect x="77.8" y="723.0" width="5.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="80.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.44%)</title><rect x="77.8" y="707.0" width="5.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="80.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.44%)</title><rect x="77.8" y="691.0" width="5.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="80.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.44%)</title><rect x="77.8" y="675.0" width="5.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="80.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.41%)</title><rect x="78.1" y="659.0" width="4.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="81.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.36%)</title><rect x="78.8" y="643.0" width="4.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="81.8" y="654.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.31%)</title><rect x="79.3" y="627.0" width="3.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="82.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.27%)</title><rect x="79.8" y="611.0" width="3.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="82.8" y="622.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="80.2" y="595.0" width="2.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="83.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.22%)</title><rect x="80.4" y="579.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="83.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.7" y="563.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="85.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="82.7" y="547.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="85.7" y="558.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (6 samples, 0.08%)</title><rect x="83.3" y="851.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="86.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (11 samples, 0.15%)</title><rect x="84.3" y="851.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.3" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (8 samples, 0.11%)</title><rect x="84.4" y="835.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.4" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (8 samples, 0.11%)</title><rect x="84.4" y="819.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (8 samples, 0.11%)</title><rect x="84.4" y="803.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/604125138.linkToTargetMethod (7 samples, 0.10%)</title><rect x="84.4" y="787.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.4" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/741669172.invoke (7 samples, 0.10%)</title><rect x="84.4" y="771.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/726950788.invokeStatic (4 samples, 0.05%)</title><rect x="84.8" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="87.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (3 samples, 0.04%)</title><rect x="84.9" y="739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="87.9" y="750.0"></text>
</g>
<g>
<title>java/lang/Long.stringSize (3 samples, 0.04%)</title><rect x="84.9" y="723.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="87.9" y="734.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.04%)</title><rect x="84.9" y="707.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="87.9" y="718.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (3 samples, 0.04%)</title><rect x="84.9" y="691.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="87.9" y="702.0"></text>
</g>
<g>
<title>os::PlatformEvent::unpark() (2 samples, 0.03%)</title><rect x="85.1" y="675.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="88.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (145 samples, 1.98%)</title><rect x="86.1" y="915.0" width="23.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="89.1" y="926.0">j..</text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.05%)</title><rect x="86.4" y="899.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="89.4" y="910.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (4 samples, 0.05%)</title><rect x="86.4" y="883.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="89.4" y="894.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeASCII (3 samples, 0.04%)</title><rect x="86.5" y="867.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="89.5" y="878.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="87.2" y="899.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="90.2" y="910.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.03%)</title><rect x="87.2" y="883.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="90.2" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (91 samples, 1.25%)</title><rect x="88.0" y="899.0" width="14.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="91.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (7 samples, 0.10%)</title><rect x="88.3" y="883.0" width="1.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.3" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (6 samples, 0.08%)</title><rect x="88.5" y="867.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="91.5" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (5 samples, 0.07%)</title><rect x="88.5" y="851.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="91.5" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (4 samples, 0.05%)</title><rect x="88.6" y="835.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="91.6" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (4 samples, 0.05%)</title><rect x="88.6" y="819.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="91.6" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (4 samples, 0.05%)</title><rect x="88.6" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.6" y="814.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="88.8" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="91.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="88.8" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="91.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="88.8" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="91.8" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (39 samples, 0.53%)</title><rect x="89.5" y="883.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.5" y="894.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (14 samples, 0.19%)</title><rect x="89.6" y="867.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="92.6" y="878.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (14 samples, 0.19%)</title><rect x="89.6" y="851.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="92.6" y="862.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (5 samples, 0.07%)</title><rect x="89.8" y="835.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.8" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.05%)</title><rect x="89.9" y="819.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.9" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="90.1" y="803.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="93.1" y="814.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 0.04%)</title><rect x="90.6" y="835.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.6" y="846.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.03%)</title><rect x="91.1" y="835.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="94.1" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="91.4" y="835.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="94.4" y="846.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.03%)</title><rect x="91.9" y="867.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="94.9" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.03%)</title><rect x="91.9" y="851.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="94.9" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.03%)</title><rect x="91.9" y="835.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="94.9" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (2 samples, 0.03%)</title><rect x="91.9" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="94.9" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.03%)</title><rect x="91.9" y="803.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="94.9" y="814.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (14 samples, 0.19%)</title><rect x="92.2" y="867.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="95.2" y="878.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (13 samples, 0.18%)</title><rect x="92.4" y="851.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.4" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (13 samples, 0.18%)</title><rect x="92.4" y="835.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.4" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (9 samples, 0.12%)</title><rect x="92.7" y="819.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="95.7" y="830.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (5 samples, 0.07%)</title><rect x="93.3" y="803.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="96.3" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (2 samples, 0.03%)</title><rect x="94.1" y="819.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.1" y="830.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$257/499187032.test (7 samples, 0.10%)</title><rect x="94.6" y="867.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="97.6" y="878.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (6 samples, 0.08%)</title><rect x="94.8" y="851.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1002191352.test (6 samples, 0.08%)</title><rect x="94.8" y="835.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="97.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (6 samples, 0.08%)</title><rect x="94.8" y="819.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.8" y="830.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/1426329391.test (6 samples, 0.08%)</title><rect x="94.8" y="803.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.8" y="814.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (6 samples, 0.08%)</title><rect x="94.8" y="787.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="97.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/360067785.test (5 samples, 0.07%)</title><rect x="94.8" y="771.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.8" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (5 samples, 0.07%)</title><rect x="94.8" y="755.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="94.8" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="97.8" y="750.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="94.9" y="723.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="97.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="94.9" y="707.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="97.9" y="718.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="94.9" y="691.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="94.9" y="675.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="97.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.headerFilter (3 samples, 0.04%)</title><rect x="95.8" y="883.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.proxy (2 samples, 0.03%)</title><rect x="95.9" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="98.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (40 samples, 0.55%)</title><rect x="96.2" y="883.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="99.2" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (40 samples, 0.55%)</title><rect x="96.2" y="867.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="99.2" y="878.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (40 samples, 0.55%)</title><rect x="96.2" y="851.0" width="6.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.2" y="862.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (4 samples, 0.05%)</title><rect x="96.6" y="835.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.6" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (4 samples, 0.05%)</title><rect x="96.6" y="819.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.6" y="830.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="96.6" y="803.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="99.6" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (2 samples, 0.03%)</title><rect x="96.9" y="803.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="99.9" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (4 samples, 0.05%)</title><rect x="97.2" y="835.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="100.2" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (30 samples, 0.41%)</title><rect x="97.9" y="835.0" width="4.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="100.9" y="846.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/1304086955.accept (28 samples, 0.38%)</title><rect x="97.9" y="819.0" width="4.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="100.9" y="830.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (26 samples, 0.36%)</title><rect x="98.2" y="803.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="101.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.trim (12 samples, 0.16%)</title><rect x="98.2" y="787.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (12 samples, 0.16%)</title><rect x="98.2" y="771.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (12 samples, 0.16%)</title><rect x="98.2" y="755.0" width="1.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.11%)</title><rect x="98.7" y="739.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="101.7" y="750.0"></text>
</g>
<g>
<title>itable stub (3 samples, 0.04%)</title><rect x="98.7" y="723.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="101.7" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (2 samples, 0.03%)</title><rect x="99.3" y="723.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="102.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/510109769.test (2 samples, 0.03%)</title><rect x="99.6" y="723.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="102.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="100.1" y="787.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="103.1" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="100.1" y="771.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="103.1" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.get$Lambda (2 samples, 0.03%)</title><rect x="100.1" y="755.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.1" y="766.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.&lt;init&gt; (2 samples, 0.03%)</title><rect x="100.1" y="739.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="103.1" y="750.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (6 samples, 0.08%)</title><rect x="100.4" y="787.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="103.4" y="798.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.accept (6 samples, 0.08%)</title><rect x="100.4" y="771.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="103.4" y="782.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.08%)</title><rect x="100.4" y="755.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="103.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.03%)</title><rect x="100.9" y="739.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="103.9" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.03%)</title><rect x="100.9" y="723.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="103.9" y="734.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (6 samples, 0.08%)</title><rect x="101.4" y="787.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="104.4" y="798.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.04%)</title><rect x="101.7" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="104.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="101.7" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="104.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="101.7" y="739.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="104.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="101.7" y="723.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="104.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (6 samples, 0.08%)</title><rect x="102.7" y="899.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="105.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (2 samples, 0.03%)</title><rect x="102.7" y="883.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="105.7" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="103.0" y="883.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.0" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (4 samples, 0.05%)</title><rect x="103.0" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="106.0" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22429093.invoke (4 samples, 0.05%)</title><rect x="103.0" y="851.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="103.0" y="835.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="106.0" y="846.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (3 samples, 0.04%)</title><rect x="103.2" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="106.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="103.2" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="106.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (11 samples, 0.15%)</title><rect x="103.7" y="899.0" width="1.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="106.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (10 samples, 0.14%)</title><rect x="103.8" y="883.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="106.8" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="104.0" y="867.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.0" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (4 samples, 0.05%)</title><rect x="104.0" y="851.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="107.0" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22429093.invoke (4 samples, 0.05%)</title><rect x="104.0" y="835.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="107.0" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="104.0" y="819.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (3 samples, 0.04%)</title><rect x="104.0" y="803.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="107.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.04%)</title><rect x="104.0" y="787.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="107.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (4 samples, 0.05%)</title><rect x="104.8" y="867.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="107.8" y="878.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="105.1" y="851.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="108.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (24 samples, 0.33%)</title><rect x="105.4" y="899.0" width="3.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="108.4" y="910.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="105.4" y="883.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="108.4" y="894.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="105.4" y="867.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.4" y="878.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (2 samples, 0.03%)</title><rect x="105.4" y="851.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (2 samples, 0.03%)</title><rect x="105.4" y="835.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="108.4" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.15%)</title><rect x="105.8" y="883.0" width="1.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="108.8" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (11 samples, 0.15%)</title><rect x="105.8" y="867.0" width="1.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="108.8" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.12%)</title><rect x="106.1" y="851.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="109.1" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (9 samples, 0.12%)</title><rect x="106.1" y="835.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="109.1" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (4 samples, 0.05%)</title><rect x="106.6" y="819.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="109.6" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="107.2" y="819.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="110.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.03%)</title><rect x="107.2" y="803.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.2" y="814.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.14%)</title><rect x="107.5" y="883.0" width="1.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="110.5" y="894.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (3 samples, 0.04%)</title><rect x="108.2" y="867.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="111.2" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.03%)</title><rect x="108.7" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="111.7" y="878.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="108.7" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="108.7" y="835.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.7" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="108.7" y="819.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="111.7" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$237/1656921971.apply (3 samples, 0.04%)</title><rect x="109.5" y="947.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="112.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (43 samples, 0.59%)</title><rect x="110.1" y="979.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="113.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (30 samples, 0.41%)</title><rect x="111.4" y="963.0" width="4.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="114.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.03%)</title><rect x="111.7" y="947.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="114.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isSelectorThread (2 samples, 0.03%)</title><rect x="112.1" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="115.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 0.33%)</title><rect x="112.4" y="947.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="115.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (24 samples, 0.33%)</title><rect x="112.4" y="931.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (23 samples, 0.31%)</title><rect x="112.5" y="915.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="115.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (23 samples, 0.31%)</title><rect x="112.5" y="899.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (16 samples, 0.22%)</title><rect x="112.5" y="883.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="115.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/939607844.run (14 samples, 0.19%)</title><rect x="112.5" y="867.0" width="2.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="115.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (14 samples, 0.19%)</title><rect x="112.5" y="851.0" width="2.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="115.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (13 samples, 0.18%)</title><rect x="112.7" y="835.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="115.7" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="112.7" y="819.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="115.7" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="112.7" y="803.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="115.7" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$223/1299965987.get$Lambda (3 samples, 0.04%)</title><rect x="112.9" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$223/1299965987.&lt;init&gt; (3 samples, 0.04%)</title><rect x="112.9" y="771.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="115.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (5 samples, 0.07%)</title><rect x="113.4" y="819.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (3 samples, 0.04%)</title><rect x="113.4" y="803.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (3 samples, 0.04%)</title><rect x="113.4" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="116.4" y="798.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="113.5" y="771.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="116.5" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (2 samples, 0.03%)</title><rect x="113.8" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (3 samples, 0.04%)</title><rect x="114.3" y="819.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="117.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.03%)</title><rect x="114.5" y="803.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="117.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.03%)</title><rect x="114.8" y="867.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (7 samples, 0.10%)</title><rect x="115.1" y="883.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="118.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.03%)</title><rect x="115.9" y="867.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.03%)</title><rect x="115.9" y="851.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="118.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.04%)</title><rect x="116.6" y="963.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="119.6" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.04%)</title><rect x="116.6" y="947.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="119.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (3 samples, 0.04%)</title><rect x="116.6" y="931.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="119.6" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (3 samples, 0.04%)</title><rect x="116.6" y="915.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.6" y="926.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (3 samples, 0.04%)</title><rect x="116.6" y="899.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="119.6" y="910.0"></text>
</g>
<g>
<title>java/util/logging/Logger.isLoggable (2 samples, 0.03%)</title><rect x="116.6" y="883.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="119.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.04%)</title><rect x="117.1" y="1123.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="120.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="117.2" y="1107.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (335 samples, 4.58%)</title><rect x="117.6" y="1123.0" width="54.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.6" y="1134.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.07%)</title><rect x="117.6" y="1107.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="120.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.07%)</title><rect x="117.6" y="1091.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="120.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$214/462975252.apply (5 samples, 0.07%)</title><rect x="117.6" y="1075.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="120.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (3 samples, 0.04%)</title><rect x="117.9" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="120.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.03%)</title><rect x="118.0" y="1043.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="121.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.04%)</title><rect x="118.4" y="1107.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="121.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.04%)</title><rect x="118.4" y="1091.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.03%)</title><rect x="118.4" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="121.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (327 samples, 4.48%)</title><rect x="118.8" y="1107.0" width="52.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="121.8" y="1118.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (305 samples, 4.17%)</title><rect x="118.8" y="1091.0" width="49.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.8" y="1102.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (305 samples, 4.17%)</title><rect x="118.8" y="1075.0" width="49.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.8" y="1086.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (305 samples, 4.17%)</title><rect x="118.8" y="1059.0" width="49.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="121.8" y="1070.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.05%)</title><rect x="118.8" y="1043.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="121.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.05%)</title><rect x="118.8" y="1027.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="121.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/660313033.apply (2 samples, 0.03%)</title><rect x="119.2" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$154/660313033.apply (301 samples, 4.12%)</title><rect x="119.5" y="1043.0" width="48.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="122.5" y="1054.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (300 samples, 4.11%)</title><rect x="119.7" y="1027.0" width="48.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.7" y="1038.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (298 samples, 4.08%)</title><rect x="120.0" y="1011.0" width="48.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.0" y="1022.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (133 samples, 1.82%)</title><rect x="120.3" y="995.0" width="21.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="123.3" y="1006.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (132 samples, 1.81%)</title><rect x="120.5" y="979.0" width="21.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="123.5" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (132 samples, 1.81%)</title><rect x="120.5" y="963.0" width="21.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="123.5" y="974.0">j..</text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="120.9" y="947.0" width="0.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="123.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$207/677586424.apply (125 samples, 1.71%)</title><rect x="121.3" y="947.0" width="20.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="124.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (125 samples, 1.71%)</title><rect x="121.3" y="931.0" width="20.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="124.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (125 samples, 1.71%)</title><rect x="121.3" y="915.0" width="20.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (125 samples, 1.71%)</title><rect x="121.3" y="899.0" width="20.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="124.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (98 samples, 1.34%)</title><rect x="121.3" y="883.0" width="15.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="124.3" y="894.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (12 samples, 0.16%)</title><rect x="121.3" y="867.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.07%)</title><rect x="121.4" y="851.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="124.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (3 samples, 0.04%)</title><rect x="121.6" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.6" y="846.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (6 samples, 0.08%)</title><rect x="122.2" y="851.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.2" y="862.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (6 samples, 0.08%)</title><rect x="122.2" y="835.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="125.2" y="846.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeBlock (5 samples, 0.07%)</title><rect x="122.4" y="819.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.4" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (79 samples, 1.08%)</title><rect x="123.2" y="867.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (70 samples, 0.96%)</title><rect x="123.2" y="851.0" width="11.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (70 samples, 0.96%)</title><rect x="123.2" y="835.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.2" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/341748265.linkToTargetMethod (4 samples, 0.05%)</title><rect x="123.2" y="819.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="126.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="123.2" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="126.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/146370526.get$Lambda (4 samples, 0.05%)</title><rect x="123.2" y="787.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.2" y="798.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (66 samples, 0.90%)</title><rect x="123.8" y="819.0" width="10.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="126.8" y="830.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (45 samples, 0.62%)</title><rect x="123.8" y="803.0" width="7.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="126.8" y="814.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="124.0" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="127.0" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (5 samples, 0.07%)</title><rect x="124.5" y="787.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="127.5" y="798.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (5 samples, 0.07%)</title><rect x="124.5" y="771.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="127.5" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (7 samples, 0.10%)</title><rect x="125.5" y="787.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="128.5" y="798.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.04%)</title><rect x="126.1" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="129.1" y="782.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.04%)</title><rect x="126.6" y="787.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="129.6" y="798.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.03%)</title><rect x="127.1" y="787.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="130.1" y="798.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (3 samples, 0.04%)</title><rect x="127.7" y="787.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="130.7" y="798.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.04%)</title><rect x="127.7" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="130.7" y="782.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="127.7" y="755.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="130.7" y="766.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (18 samples, 0.25%)</title><rect x="128.2" y="787.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="131.2" y="798.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.03%)</title><rect x="129.8" y="771.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="132.8" y="782.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (4 samples, 0.05%)</title><rect x="130.1" y="771.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="133.1" y="782.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.03%)</title><rect x="130.8" y="771.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="133.8" y="782.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.03%)</title><rect x="130.8" y="755.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="133.8" y="766.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.03%)</title><rect x="130.8" y="739.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="133.8" y="750.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.03%)</title><rect x="130.8" y="723.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="133.8" y="734.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.03%)</title><rect x="131.3" y="803.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="134.3" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/146370526.run (17 samples, 0.23%)</title><rect x="131.6" y="803.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="134.6" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (16 samples, 0.22%)</title><rect x="131.8" y="787.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="134.8" y="798.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (16 samples, 0.22%)</title><rect x="131.8" y="771.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="134.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (3 samples, 0.04%)</title><rect x="132.4" y="755.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="135.4" y="766.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (5 samples, 0.07%)</title><rect x="132.9" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="135.9" y="766.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.05%)</title><rect x="133.1" y="739.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.1" y="750.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (2 samples, 0.03%)</title><rect x="133.4" y="723.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="136.4" y="734.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.05%)</title><rect x="133.7" y="755.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="136.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.04%)</title><rect x="133.9" y="739.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="136.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (9 samples, 0.12%)</title><rect x="134.5" y="851.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="137.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (9 samples, 0.12%)</title><rect x="134.5" y="835.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="137.5" y="846.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (3 samples, 0.04%)</title><rect x="135.5" y="819.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="138.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (7 samples, 0.10%)</title><rect x="136.0" y="867.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.0" y="878.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="136.0" y="851.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="139.0" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="136.0" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="139.0" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="136.0" y="819.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="139.0" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="136.0" y="803.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="139.0" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="136.0" y="787.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="139.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteBuffer (4 samples, 0.05%)</title><rect x="136.4" y="851.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="139.4" y="862.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.putShort (2 samples, 0.03%)</title><rect x="136.8" y="835.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="139.8" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (27 samples, 0.37%)</title><rect x="137.1" y="883.0" width="4.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.1" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.16%)</title><rect x="137.6" y="867.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="140.6" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (12 samples, 0.16%)</title><rect x="137.6" y="851.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="140.6" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="138.2" y="835.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="141.2" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (5 samples, 0.07%)</title><rect x="138.2" y="819.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="141.2" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.04%)</title><rect x="138.4" y="803.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="141.4" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (3 samples, 0.04%)</title><rect x="139.0" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="142.0" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (12 samples, 0.16%)</title><rect x="139.5" y="867.0" width="2.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="142.5" y="878.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (4 samples, 0.05%)</title><rect x="140.0" y="851.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.0" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.04%)</title><rect x="140.6" y="851.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="143.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="140.6" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="143.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="140.6" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="143.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.04%)</title><rect x="140.6" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="143.6" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="140.8" y="787.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="143.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="140.8" y="771.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="143.8" y="782.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.03%)</title><rect x="141.1" y="851.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="144.1" y="862.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (2 samples, 0.03%)</title><rect x="141.1" y="835.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="144.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (2 samples, 0.03%)</title><rect x="141.5" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="144.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (163 samples, 2.23%)</title><rect x="141.8" y="995.0" width="26.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="144.8" y="1006.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (158 samples, 2.16%)</title><rect x="142.1" y="979.0" width="25.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="145.1" y="990.0">j..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="143.6" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="146.6" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="143.6" y="947.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$156/1498712762.get$Lambda (4 samples, 0.05%)</title><rect x="143.6" y="931.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (8 samples, 0.11%)</title><rect x="144.5" y="963.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="147.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.&lt;init&gt; (5 samples, 0.07%)</title><rect x="145.8" y="963.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.8" y="974.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.toJUL (2 samples, 0.03%)</title><rect x="146.3" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="149.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (11 samples, 0.15%)</title><rect x="146.6" y="963.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="149.6" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="147.1" y="947.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="150.1" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="147.1" y="931.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/939607844.get$Lambda (3 samples, 0.04%)</title><rect x="147.3" y="915.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="150.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/939607844.&lt;init&gt; (3 samples, 0.04%)</title><rect x="147.3" y="899.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (2 samples, 0.03%)</title><rect x="147.8" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="150.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.03%)</title><rect x="148.1" y="947.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="151.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.03%)</title><rect x="148.1" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="151.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.03%)</title><rect x="148.1" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="151.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.03%)</title><rect x="148.1" y="899.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="151.1" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (10 samples, 0.14%)</title><rect x="148.4" y="963.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (4 samples, 0.05%)</title><rect x="149.2" y="947.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.&lt;init&gt; (4 samples, 0.05%)</title><rect x="149.2" y="931.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.2" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (2 samples, 0.03%)</title><rect x="149.4" y="915.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.4" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.&lt;init&gt; (2 samples, 0.03%)</title><rect x="150.0" y="963.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="153.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (25 samples, 0.34%)</title><rect x="150.3" y="963.0" width="4.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (21 samples, 0.29%)</title><rect x="150.3" y="947.0" width="3.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (20 samples, 0.27%)</title><rect x="150.5" y="931.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.5" y="942.0"></text>
</g>
<g>
<title>java/util/HashMap.get (8 samples, 0.11%)</title><rect x="150.7" y="915.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="153.7" y="926.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (6 samples, 0.08%)</title><rect x="150.7" y="899.0" width="0.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="153.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (4 samples, 0.05%)</title><rect x="150.7" y="883.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="153.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.03%)</title><rect x="151.3" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.3" y="894.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="151.6" y="899.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.6" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList.removeFirst (2 samples, 0.03%)</title><rect x="151.9" y="915.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.9" y="926.0"></text>
</g>
<g>
<title>java/util/LinkedList.unlinkFirst (2 samples, 0.03%)</title><rect x="151.9" y="899.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (8 samples, 0.11%)</title><rect x="152.4" y="915.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.4" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (3 samples, 0.04%)</title><rect x="152.8" y="899.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="155.8" y="910.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (3 samples, 0.04%)</title><rect x="152.8" y="883.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.8" y="894.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.remove (2 samples, 0.03%)</title><rect x="153.4" y="899.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.4" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (4 samples, 0.05%)</title><rect x="153.7" y="947.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="156.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (2 samples, 0.03%)</title><rect x="154.0" y="931.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="157.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (80 samples, 1.09%)</title><rect x="154.4" y="963.0" width="12.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="157.4" y="974.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (79 samples, 1.08%)</title><rect x="154.5" y="947.0" width="12.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="157.5" y="958.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (38 samples, 0.52%)</title><rect x="155.3" y="931.0" width="6.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="158.3" y="942.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 0.12%)</title><rect x="156.5" y="915.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="159.5" y="926.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.07%)</title><rect x="156.6" y="899.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="159.6" y="910.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.03%)</title><rect x="157.0" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="160.0" y="894.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.03%)</title><rect x="157.4" y="899.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="160.4" y="910.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (7 samples, 0.10%)</title><rect x="158.6" y="915.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="161.6" y="926.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (5 samples, 0.07%)</title><rect x="158.9" y="899.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="161.9" y="910.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (4 samples, 0.05%)</title><rect x="159.1" y="883.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="162.1" y="894.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (11 samples, 0.15%)</title><rect x="159.7" y="915.0" width="1.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="162.7" y="926.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (4 samples, 0.05%)</title><rect x="160.5" y="899.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="163.5" y="910.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.04%)</title><rect x="160.7" y="883.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="163.7" y="894.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.03%)</title><rect x="161.2" y="899.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="164.2" y="910.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (2 samples, 0.03%)</title><rect x="161.2" y="883.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="164.2" y="894.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (3 samples, 0.04%)</title><rect x="161.5" y="931.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="164.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$161/731132211.run (31 samples, 0.42%)</title><rect x="162.1" y="931.0" width="5.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="165.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (29 samples, 0.40%)</title><rect x="162.4" y="915.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="165.4" y="926.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (29 samples, 0.40%)</title><rect x="162.4" y="899.0" width="4.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="165.4" y="910.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (25 samples, 0.34%)</title><rect x="162.6" y="883.0" width="4.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="165.6" y="894.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (25 samples, 0.34%)</title><rect x="162.6" y="867.0" width="4.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="165.6" y="878.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (22 samples, 0.30%)</title><rect x="163.1" y="851.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="166.1" y="862.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (15 samples, 0.21%)</title><rect x="164.1" y="835.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="167.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Object.clone (2 samples, 0.03%)</title><rect x="164.5" y="819.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.5" y="830.0"></text>
</g>
<g>
<title>JVM_Clone (2 samples, 0.03%)</title><rect x="164.5" y="803.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="167.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (2 samples, 0.03%)</title><rect x="164.9" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="167.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="164.9" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="167.9" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.next (2 samples, 0.03%)</title><rect x="165.4" y="819.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="168.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (2 samples, 0.03%)</title><rect x="165.4" y="803.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="168.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (5 samples, 0.07%)</title><rect x="165.7" y="819.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="168.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeySet.iterator (2 samples, 0.03%)</title><rect x="166.0" y="803.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="169.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="166.0" y="787.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="169.0" y="798.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.checkHost (2 samples, 0.03%)</title><rect x="166.6" y="883.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="169.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.03%)</title><rect x="167.3" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="170.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (2 samples, 0.03%)</title><rect x="167.3" y="947.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.03%)</title><rect x="167.3" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="170.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.03%)</title><rect x="167.3" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="170.3" y="926.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (2 samples, 0.03%)</title><rect x="167.3" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="170.3" y="910.0"></text>
</g>
<g>
<title>java/util/logging/Logger.isLoggable (2 samples, 0.03%)</title><rect x="167.3" y="883.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="170.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.04%)</title><rect x="167.6" y="979.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="170.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.03%)</title><rect x="167.6" y="963.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="170.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.03%)</title><rect x="167.6" y="947.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="170.6" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="167.6" y="931.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="170.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.07%)</title><rect x="168.1" y="1091.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="171.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.07%)</title><rect x="168.1" y="1075.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="171.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.version (2 samples, 0.03%)</title><rect x="169.1" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="172.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.version (2 samples, 0.03%)</title><rect x="169.1" y="1075.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="172.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (14 samples, 0.19%)</title><rect x="169.4" y="1091.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="172.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (4 samples, 0.05%)</title><rect x="169.6" y="1075.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="172.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="169.7" y="1059.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="172.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (9 samples, 0.12%)</title><rect x="170.2" y="1075.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="173.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="170.4" y="1059.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="173.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="170.7" y="1043.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="173.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (4 samples, 0.05%)</title><rect x="171.0" y="1059.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="174.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1425625864.linkToTargetMethod (4 samples, 0.05%)</title><rect x="171.0" y="1043.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="174.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/587140885.invoke (4 samples, 0.05%)</title><rect x="171.0" y="1027.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="174.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="171.0" y="1011.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="174.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (2 samples, 0.03%)</title><rect x="171.2" y="995.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="174.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (2 samples, 0.03%)</title><rect x="171.2" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="174.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (15 samples, 0.21%)</title><rect x="171.8" y="1171.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="174.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (11 samples, 0.15%)</title><rect x="172.3" y="1155.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="175.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (3 samples, 0.04%)</title><rect x="172.3" y="1139.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="175.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (7 samples, 0.10%)</title><rect x="172.8" y="1139.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="175.8" y="1150.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (4 samples, 0.05%)</title><rect x="173.3" y="1123.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="176.3" y="1134.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.04%)</title><rect x="173.4" y="1107.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="176.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (6 samples, 0.08%)</title><rect x="174.7" y="1267.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="177.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (6 samples, 0.08%)</title><rect x="174.7" y="1251.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="177.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (4 samples, 0.05%)</title><rect x="175.0" y="1235.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="175.4" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="178.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="175.4" y="1203.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="175.4" y="1187.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="178.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (4 samples, 0.05%)</title><rect x="175.7" y="1267.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="178.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.05%)</title><rect x="175.7" y="1251.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="178.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (3 samples, 0.04%)</title><rect x="175.7" y="1235.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="178.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (388 samples, 5.31%)</title><rect x="176.3" y="1267.0" width="62.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.3" y="1278.0">java/u..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="177.6" y="1251.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="180.6" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="177.6" y="1235.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="180.6" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="177.6" y="1219.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="180.6" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="177.6" y="1203.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="180.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (362 samples, 4.95%)</title><rect x="177.9" y="1251.0" width="58.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="180.9" y="1262.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (233 samples, 3.19%)</title><rect x="179.4" y="1235.0" width="37.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="182.4" y="1246.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (3 samples, 0.04%)</title><rect x="179.7" y="1219.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="179.9" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.03%)</title><rect x="180.4" y="1219.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (29 samples, 0.40%)</title><rect x="180.7" y="1219.0" width="4.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="183.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (28 samples, 0.38%)</title><rect x="180.9" y="1203.0" width="4.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (27 samples, 0.37%)</title><rect x="180.9" y="1187.0" width="4.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="183.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (24 samples, 0.33%)</title><rect x="181.3" y="1171.0" width="3.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="184.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (24 samples, 0.33%)</title><rect x="181.3" y="1155.0" width="3.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="184.3" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Unpark (4 samples, 0.05%)</title><rect x="181.5" y="1139.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="184.5" y="1150.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (19 samples, 0.26%)</title><rect x="182.1" y="1139.0" width="3.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="185.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.26%)</title><rect x="182.1" y="1123.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="185.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.26%)</title><rect x="182.1" y="1107.0" width="3.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="185.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.25%)</title><rect x="182.3" y="1091.0" width="2.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="185.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.25%)</title><rect x="182.3" y="1075.0" width="2.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="185.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.25%)</title><rect x="182.3" y="1059.0" width="2.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="185.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.25%)</title><rect x="182.3" y="1043.0" width="2.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="185.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="182.5" y="1027.0" width="2.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="185.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="182.5" y="1011.0" width="2.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="185.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (195 samples, 2.67%)</title><rect x="185.5" y="1219.0" width="31.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="188.5" y="1230.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (195 samples, 2.67%)</title><rect x="185.5" y="1203.0" width="31.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="188.5" y="1214.0">jd..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.04%)</title><rect x="186.5" y="1187.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="189.5" y="1198.0"></text>
</g>
<g>
<title>Unsafe_Park (64 samples, 0.88%)</title><rect x="187.2" y="1187.0" width="10.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="190.2" y="1198.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.04%)</title><rect x="188.6" y="1171.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="191.6" y="1182.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="189.1" y="1171.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="192.1" y="1182.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (21 samples, 0.29%)</title><rect x="189.6" y="1171.0" width="3.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="192.6" y="1182.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.03%)</title><rect x="191.4" y="1155.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="194.4" y="1166.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (6 samples, 0.08%)</title><rect x="191.7" y="1155.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="194.7" y="1166.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.05%)</title><rect x="193.0" y="1171.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="196.0" y="1182.0"></text>
</g>
<g>
<title>__lll_unlock_wake (13 samples, 0.18%)</title><rect x="193.6" y="1171.0" width="2.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="196.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="193.8" y="1155.0" width="1.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="196.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="193.8" y="1139.0" width="1.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="196.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="194.3" y="1123.0" width="1.4" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="197.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="194.4" y="1107.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="197.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="194.4" y="1091.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="197.4" y="1102.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.04%)</title><rect x="195.7" y="1171.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="198.7" y="1182.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="196.4" y="1171.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="199.4" y="1182.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="197.2" y="1171.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="200.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (120 samples, 1.64%)</title><rect x="197.5" y="1187.0" width="19.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="200.5" y="1198.0"></text>
</g>
<g>
<title>__pthread_cond_wait (107 samples, 1.46%)</title><rect x="197.5" y="1171.0" width="17.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="200.5" y="1182.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 1.16%)</title><rect x="201.0" y="1155.0" width="13.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="204.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (85 samples, 1.16%)</title><rect x="201.0" y="1139.0" width="13.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="204.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.07%)</title><rect x="202.2" y="1123.0" width="12.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="205.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.07%)</title><rect x="202.2" y="1107.0" width="12.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="205.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (77 samples, 1.05%)</title><rect x="202.3" y="1091.0" width="12.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="205.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.96%)</title><rect x="203.5" y="1075.0" width="11.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="206.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.75%)</title><rect x="205.9" y="1059.0" width="8.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="208.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.60%)</title><rect x="207.7" y="1043.0" width="7.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="210.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.55%)</title><rect x="208.3" y="1027.0" width="6.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="211.3" y="1038.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="214.9" y="1171.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="217.9" y="1182.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="215.3" y="1171.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="218.3" y="1182.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (4 samples, 0.05%)</title><rect x="215.6" y="1171.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="218.6" y="1182.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.05%)</title><rect x="216.2" y="1171.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="219.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (43 samples, 0.59%)</title><rect x="217.0" y="1235.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="220.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (43 samples, 0.59%)</title><rect x="217.0" y="1219.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="220.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.05%)</title><rect x="217.2" y="1203.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="220.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.04%)</title><rect x="217.4" y="1187.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="220.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (33 samples, 0.45%)</title><rect x="217.8" y="1203.0" width="5.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="220.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (12 samples, 0.16%)</title><rect x="218.6" y="1187.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="221.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (10 samples, 0.14%)</title><rect x="219.0" y="1171.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="222.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (6 samples, 0.08%)</title><rect x="219.1" y="1155.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="222.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.04%)</title><rect x="220.1" y="1155.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="223.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="220.3" y="1139.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="223.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (2 samples, 0.03%)</title><rect x="220.6" y="1187.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="223.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (11 samples, 0.15%)</title><rect x="220.9" y="1187.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="223.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (11 samples, 0.15%)</title><rect x="220.9" y="1171.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="223.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (8 samples, 0.11%)</title><rect x="221.1" y="1155.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="224.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="222.4" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="225.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (3 samples, 0.04%)</title><rect x="222.7" y="1187.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="225.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.03%)</title><rect x="223.2" y="1203.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="226.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.03%)</title><rect x="223.2" y="1187.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="226.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.03%)</title><rect x="223.2" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="226.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.04%)</title><rect x="223.5" y="1203.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="226.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (77 samples, 1.05%)</title><rect x="224.0" y="1235.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (77 samples, 1.05%)</title><rect x="224.0" y="1219.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="227.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (77 samples, 1.05%)</title><rect x="224.0" y="1203.0" width="12.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="227.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (77 samples, 1.05%)</title><rect x="224.0" y="1187.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="227.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (77 samples, 1.05%)</title><rect x="224.0" y="1171.0" width="12.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.0" y="1182.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="224.1" y="1155.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="227.1" y="1166.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.10%)</title><rect x="224.5" y="1155.0" width="1.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="227.5" y="1166.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="224.9" y="1139.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="227.9" y="1150.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.04%)</title><rect x="225.6" y="1155.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="228.6" y="1166.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="226.1" y="1155.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="229.1" y="1166.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (62 samples, 0.85%)</title><rect x="226.4" y="1155.0" width="10.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="229.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.79%)</title><rect x="227.0" y="1139.0" width="9.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="230.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.79%)</title><rect x="227.0" y="1123.0" width="9.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="230.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.77%)</title><rect x="227.4" y="1107.0" width="9.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="230.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.77%)</title><rect x="227.4" y="1091.0" width="9.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="230.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.77%)</title><rect x="227.4" y="1075.0" width="9.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="230.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.68%)</title><rect x="228.3" y="1059.0" width="8.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="231.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 0.63%)</title><rect x="229.0" y="1043.0" width="7.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="232.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.60%)</title><rect x="229.3" y="1027.0" width="7.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="232.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (16 samples, 0.22%)</title><rect x="236.4" y="1251.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="239.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (16 samples, 0.22%)</title><rect x="236.4" y="1235.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="239.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (8 samples, 0.11%)</title><rect x="237.7" y="1219.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="240.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (2 samples, 0.03%)</title><rect x="237.7" y="1203.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="240.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.03%)</title><rect x="237.7" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="240.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (2 samples, 0.03%)</title><rect x="238.7" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="241.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.03%)</title><rect x="238.7" y="1187.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="241.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (3 samples, 0.04%)</title><rect x="239.0" y="1267.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="242.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$255/1801153474.run (752 samples, 10.29%)</title><rect x="239.8" y="1267.0" width="121.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="242.8" y="1278.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (751 samples, 10.28%)</title><rect x="240.0" y="1251.0" width="121.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="243.0" y="1262.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (748 samples, 10.24%)</title><rect x="240.4" y="1235.0" width="120.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="243.4" y="1246.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (736 samples, 10.07%)</title><rect x="242.4" y="1219.0" width="118.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="245.4" y="1230.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (735 samples, 10.06%)</title><rect x="242.5" y="1203.0" width="118.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="245.5" y="1214.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (735 samples, 10.06%)</title><rect x="242.5" y="1187.0" width="118.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="245.5" y="1198.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (734 samples, 10.05%)</title><rect x="242.5" y="1171.0" width="118.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="245.5" y="1182.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (733 samples, 10.03%)</title><rect x="242.7" y="1155.0" width="118.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.7" y="1166.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (732 samples, 10.02%)</title><rect x="242.9" y="1139.0" width="118.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="245.9" y="1150.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (728 samples, 9.96%)</title><rect x="243.2" y="1123.0" width="117.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="246.2" y="1134.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (726 samples, 9.94%)</title><rect x="243.5" y="1107.0" width="117.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="246.5" y="1118.0">jdk/internal/n..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (186 samples, 2.55%)</title><rect x="243.8" y="1091.0" width="30.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="246.8" y="1102.0">jd..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="244.5" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="247.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="244.5" y="1059.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="247.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (162 samples, 2.22%)</title><rect x="244.8" y="1075.0" width="26.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.8" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (161 samples, 2.20%)</title><rect x="245.0" y="1059.0" width="26.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="248.0" y="1070.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (160 samples, 2.19%)</title><rect x="245.1" y="1043.0" width="25.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="248.1" y="1054.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (152 samples, 2.08%)</title><rect x="246.4" y="1027.0" width="24.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="249.4" y="1038.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (55 samples, 0.75%)</title><rect x="246.6" y="1011.0" width="8.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="249.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="248.4" y="995.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.03%)</title><rect x="248.4" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="251.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$264/500678966.apply (13 samples, 0.18%)</title><rect x="249.2" y="995.0" width="2.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="252.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (12 samples, 0.16%)</title><rect x="249.3" y="979.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (12 samples, 0.16%)</title><rect x="249.3" y="963.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="252.3" y="974.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.03%)</title><rect x="249.5" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="252.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (9 samples, 0.12%)</title><rect x="249.8" y="947.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="252.8" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="250.0" y="931.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="253.0" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="250.0" y="915.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="253.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$277/282632138.get$Lambda (4 samples, 0.05%)</title><rect x="250.0" y="899.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="253.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$277/282632138.&lt;init&gt; (2 samples, 0.03%)</title><rect x="250.3" y="883.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (4 samples, 0.05%)</title><rect x="250.6" y="931.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="253.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.05%)</title><rect x="250.6" y="915.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="253.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (3 samples, 0.04%)</title><rect x="250.8" y="899.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/1208971968.apply (24 samples, 0.33%)</title><rect x="251.3" y="995.0" width="3.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="254.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (24 samples, 0.33%)</title><rect x="251.3" y="979.0" width="3.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (24 samples, 0.33%)</title><rect x="251.3" y="963.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="254.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (24 samples, 0.33%)</title><rect x="251.3" y="947.0" width="3.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (23 samples, 0.31%)</title><rect x="251.4" y="931.0" width="3.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.4" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (22 samples, 0.30%)</title><rect x="251.6" y="915.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="254.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$286/1806093010.run (21 samples, 0.29%)</title><rect x="251.7" y="899.0" width="3.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="254.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (21 samples, 0.29%)</title><rect x="251.7" y="883.0" width="3.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (3 samples, 0.04%)</title><rect x="251.9" y="867.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="254.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.04%)</title><rect x="251.9" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="254.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (3 samples, 0.04%)</title><rect x="251.9" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (3 samples, 0.04%)</title><rect x="251.9" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="254.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (3 samples, 0.04%)</title><rect x="251.9" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.9" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (3 samples, 0.04%)</title><rect x="251.9" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="254.9" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/939607844.run (3 samples, 0.04%)</title><rect x="251.9" y="771.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="254.9" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (3 samples, 0.04%)</title><rect x="251.9" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="254.9" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (3 samples, 0.04%)</title><rect x="251.9" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="254.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (3 samples, 0.04%)</title><rect x="251.9" y="723.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="254.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (3 samples, 0.04%)</title><rect x="251.9" y="707.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="254.9" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/200648898.run (2 samples, 0.03%)</title><rect x="251.9" y="691.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="254.9" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (2 samples, 0.03%)</title><rect x="251.9" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="254.9" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (2 samples, 0.03%)</title><rect x="251.9" y="659.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="254.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.03%)</title><rect x="251.9" y="643.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="254.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.03%)</title><rect x="251.9" y="627.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="254.9" y="638.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (15 samples, 0.21%)</title><rect x="252.4" y="867.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.4" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (15 samples, 0.21%)</title><rect x="252.4" y="851.0" width="2.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="255.4" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (15 samples, 0.21%)</title><rect x="252.4" y="835.0" width="2.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="255.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (15 samples, 0.21%)</title><rect x="252.4" y="819.0" width="2.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="255.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (15 samples, 0.21%)</title><rect x="252.4" y="803.0" width="2.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (15 samples, 0.21%)</title><rect x="252.4" y="787.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (5 samples, 0.07%)</title><rect x="252.4" y="771.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (5 samples, 0.07%)</title><rect x="252.4" y="755.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="255.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (5 samples, 0.07%)</title><rect x="252.4" y="739.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.4" y="750.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (5 samples, 0.07%)</title><rect x="252.4" y="723.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="255.4" y="734.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (5 samples, 0.07%)</title><rect x="252.4" y="707.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="255.4" y="718.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (5 samples, 0.07%)</title><rect x="252.4" y="691.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="255.4" y="702.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (5 samples, 0.07%)</title><rect x="252.4" y="675.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="255.4" y="686.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (4 samples, 0.05%)</title><rect x="252.6" y="659.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="255.6" y="670.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (4 samples, 0.05%)</title><rect x="252.6" y="643.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="255.6" y="654.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (4 samples, 0.05%)</title><rect x="252.6" y="627.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="255.6" y="638.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (3 samples, 0.04%)</title><rect x="252.7" y="611.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="255.7" y="622.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (3 samples, 0.04%)</title><rect x="252.7" y="595.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="255.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$294/1808175138.accept (10 samples, 0.14%)</title><rect x="253.2" y="771.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="256.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (10 samples, 0.14%)</title><rect x="253.2" y="755.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="256.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (10 samples, 0.14%)</title><rect x="253.2" y="739.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="253.2" y="723.0" width="1.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="256.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="253.2" y="707.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="256.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="253.2" y="691.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="256.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="253.5" y="675.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="256.5" y="686.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="253.8" y="659.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="256.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="253.8" y="643.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="256.8" y="654.0"></text>
</g>
<g>
<title>__restore_rt (2 samples, 0.03%)</title><rect x="254.2" y="707.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="257.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (2 samples, 0.03%)</title><rect x="254.8" y="867.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="257.8" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="254.8" y="851.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="257.8" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/712256162.invoke (2 samples, 0.03%)</title><rect x="254.8" y="835.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="257.8" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="254.8" y="819.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="257.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.03%)</title><rect x="254.8" y="803.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.dbgString (2 samples, 0.03%)</title><rect x="254.8" y="787.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="257.8" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$241/574542749.apply (2 samples, 0.03%)</title><rect x="255.1" y="995.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="258.1" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (2 samples, 0.03%)</title><rect x="255.1" y="979.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (2 samples, 0.03%)</title><rect x="255.1" y="963.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="258.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (88 samples, 1.20%)</title><rect x="255.5" y="1011.0" width="14.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (86 samples, 1.18%)</title><rect x="255.8" y="995.0" width="13.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="258.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.07%)</title><rect x="255.8" y="979.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="258.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.07%)</title><rect x="255.8" y="963.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.8" y="974.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="255.8" y="947.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="258.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$239/628439043.apply (2 samples, 0.03%)</title><rect x="256.3" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$239/628439043.apply (81 samples, 1.11%)</title><rect x="256.6" y="979.0" width="13.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="259.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (79 samples, 1.08%)</title><rect x="256.9" y="963.0" width="12.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (79 samples, 1.08%)</title><rect x="256.9" y="947.0" width="12.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="259.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$145/867919385.apply (73 samples, 1.00%)</title><rect x="256.9" y="931.0" width="11.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="259.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (73 samples, 1.00%)</title><rect x="256.9" y="915.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (71 samples, 0.97%)</title><rect x="257.2" y="899.0" width="11.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.2" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="257.7" y="883.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="260.7" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="257.7" y="867.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="260.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenAccept (37 samples, 0.51%)</title><rect x="258.5" y="883.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.5" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptStage (37 samples, 0.51%)</title><rect x="258.5" y="867.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniAcceptNow (37 samples, 0.51%)</title><rect x="258.5" y="851.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$328/535996488.accept (6 samples, 0.08%)</title><rect x="259.3" y="835.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$7 (5 samples, 0.07%)</title><rect x="259.5" y="819.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="262.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.cancelIfFailed (5 samples, 0.07%)</title><rect x="259.5" y="803.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.5" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (5 samples, 0.07%)</title><rect x="259.5" y="787.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="262.5" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (5 samples, 0.07%)</title><rect x="259.5" y="771.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (4 samples, 0.05%)</title><rect x="259.5" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="262.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (4 samples, 0.05%)</title><rect x="259.5" y="739.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="262.5" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$335/960318299.accept (26 samples, 0.36%)</title><rect x="260.3" y="835.0" width="4.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="263.3" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendBodyAsync$8 (25 samples, 0.34%)</title><rect x="260.5" y="819.0" width="4.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="263.5" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (25 samples, 0.34%)</title><rect x="260.5" y="803.0" width="4.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="263.5" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (22 samples, 0.30%)</title><rect x="261.0" y="787.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="264.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.request (22 samples, 0.30%)</title><rect x="261.0" y="771.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.30%)</title><rect x="261.0" y="755.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="264.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (22 samples, 0.30%)</title><rect x="261.0" y="739.0" width="3.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="264.0" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (22 samples, 0.30%)</title><rect x="261.0" y="723.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="264.0" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (22 samples, 0.30%)</title><rect x="261.0" y="707.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="264.0" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (21 samples, 0.29%)</title><rect x="261.1" y="691.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="264.1" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onComplete (8 samples, 0.11%)</title><rect x="261.8" y="675.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="264.8" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (5 samples, 0.07%)</title><rect x="262.2" y="659.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="265.2" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$DataPair.&lt;init&gt; (3 samples, 0.04%)</title><rect x="262.2" y="643.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="265.2" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="262.4" y="627.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="265.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="262.4" y="611.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="265.4" y="622.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="262.4" y="595.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="265.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="262.4" y="579.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="265.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="262.4" y="563.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="265.4" y="574.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (2 samples, 0.03%)</title><rect x="262.7" y="643.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.7" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (2 samples, 0.03%)</title><rect x="262.7" y="627.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="265.7" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (2 samples, 0.03%)</title><rect x="262.7" y="611.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="265.7" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.linkLast (2 samples, 0.03%)</title><rect x="262.7" y="595.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="265.7" y="606.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (8 samples, 0.11%)</title><rect x="263.1" y="675.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="266.1" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onNext (6 samples, 0.08%)</title><rect x="263.4" y="659.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="266.4" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (26 samples, 0.36%)</title><rect x="264.5" y="883.0" width="4.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (3 samples, 0.04%)</title><rect x="265.0" y="867.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="268.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (3 samples, 0.04%)</title><rect x="265.0" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="268.0" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.subscribe (20 samples, 0.27%)</title><rect x="265.5" y="867.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher.subscribe (6 samples, 0.08%)</title><rect x="265.6" y="851.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.6" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.onSubscribe (3 samples, 0.04%)</title><rect x="265.6" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.6" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription.&lt;init&gt; (3 samples, 0.04%)</title><rect x="266.1" y="835.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.1" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (3 samples, 0.04%)</title><rect x="266.1" y="819.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="269.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RequestPublishers$ByteArrayPublisher.copy (13 samples, 0.18%)</title><rect x="266.6" y="851.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="269.6" y="862.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="267.1" y="835.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.1" y="846.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="267.3" y="819.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="270.3" y="830.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.04%)</title><rect x="267.6" y="835.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="270.6" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="268.1" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.1" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="268.4" y="835.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="271.4" y="846.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="268.4" y="819.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.4" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="268.4" y="803.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="271.4" y="814.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="268.4" y="787.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="271.4" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="268.4" y="771.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$147/1130664697.apply (6 samples, 0.08%)</title><rect x="268.7" y="931.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="271.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (6 samples, 0.08%)</title><rect x="268.7" y="915.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="271.7" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (6 samples, 0.08%)</title><rect x="268.7" y="899.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="271.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (4 samples, 0.05%)</title><rect x="269.0" y="883.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="272.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.03%)</title><rect x="269.2" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="272.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.03%)</title><rect x="269.7" y="1011.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="272.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.03%)</title><rect x="270.0" y="1011.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="273.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (2 samples, 0.03%)</title><rect x="270.0" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="273.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="270.0" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="273.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (2 samples, 0.03%)</title><rect x="270.0" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="273.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (2 samples, 0.03%)</title><rect x="270.0" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="273.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.03%)</title><rect x="270.0" y="931.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="273.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.03%)</title><rect x="270.0" y="915.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="273.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="270.0" y="899.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="273.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.03%)</title><rect x="270.0" y="883.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="273.0" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="270.0" y="867.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="273.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="270.0" y="851.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="273.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="270.0" y="835.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="273.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="270.0" y="819.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="273.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="270.0" y="803.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="273.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="270.0" y="787.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="273.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="270.0" y="771.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="273.0" y="782.0"></text>
</g>
<g>
<title>vtable stub (4 samples, 0.05%)</title><rect x="270.3" y="1011.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="273.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (12 samples, 0.16%)</title><rect x="271.0" y="1075.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="274.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.07%)</title><rect x="271.0" y="1059.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="274.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.07%)</title><rect x="271.0" y="1043.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="274.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (6 samples, 0.08%)</title><rect x="271.9" y="1059.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="274.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (4 samples, 0.05%)</title><rect x="272.1" y="1043.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.updateTail (2 samples, 0.03%)</title><rect x="272.4" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.07%)</title><rect x="273.1" y="1075.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$339/1936528662.run (4 samples, 0.05%)</title><rect x="273.2" y="1059.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.requestMoreBody (3 samples, 0.04%)</title><rect x="273.4" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="276.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.request (3 samples, 0.04%)</title><rect x="273.4" y="1027.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (2 samples, 0.03%)</title><rect x="273.9" y="1091.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="276.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (2 samples, 0.03%)</title><rect x="273.9" y="1075.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="276.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.03%)</title><rect x="273.9" y="1059.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="276.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (535 samples, 7.32%)</title><rect x="274.2" y="1091.0" width="86.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="277.2" y="1102.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (534 samples, 7.31%)</title><rect x="274.4" y="1075.0" width="86.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="277.4" y="1086.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (534 samples, 7.31%)</title><rect x="274.4" y="1059.0" width="86.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="277.4" y="1070.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (532 samples, 7.28%)</title><rect x="274.5" y="1043.0" width="85.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="277.5" y="1054.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$271/2126917903.run (6 samples, 0.08%)</title><rect x="275.0" y="1027.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="278.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (6 samples, 0.08%)</title><rect x="275.0" y="1011.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (4 samples, 0.05%)</title><rect x="275.3" y="995.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="278.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.03%)</title><rect x="276.0" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="279.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (518 samples, 7.09%)</title><rect x="276.3" y="1027.0" width="83.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="279.3" y="1038.0">jdk/inter..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (505 samples, 6.91%)</title><rect x="276.6" y="1011.0" width="81.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="279.6" y="1022.0">java/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (505 samples, 6.91%)</title><rect x="276.6" y="995.0" width="81.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="279.6" y="1006.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (504 samples, 6.90%)</title><rect x="276.8" y="979.0" width="81.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="279.8" y="990.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (503 samples, 6.88%)</title><rect x="276.9" y="963.0" width="81.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.9" y="974.0">sun/nio/c..</text>
</g>
<g>
<title>java/lang/ThreadLocal.get (2 samples, 0.03%)</title><rect x="277.1" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="280.1" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.03%)</title><rect x="277.4" y="947.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="280.4" y="958.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (16 samples, 0.22%)</title><rect x="277.7" y="947.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="280.7" y="958.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.put (16 samples, 0.22%)</title><rect x="277.7" y="931.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="280.7" y="942.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.position (3 samples, 0.04%)</title><rect x="277.7" y="915.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.7" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.04%)</title><rect x="277.7" y="899.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="280.7" y="910.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.04%)</title><rect x="277.7" y="883.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="280.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (13 samples, 0.18%)</title><rect x="278.2" y="915.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="281.2" y="926.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory0 (3 samples, 0.04%)</title><rect x="278.2" y="899.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="281.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (10 samples, 0.14%)</title><rect x="278.7" y="899.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="281.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (10 samples, 0.14%)</title><rect x="278.7" y="883.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="281.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (2 samples, 0.03%)</title><rect x="278.9" y="867.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="281.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (7 samples, 0.10%)</title><rect x="279.2" y="867.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="282.2" y="878.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (5 samples, 0.07%)</title><rect x="279.5" y="851.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="282.5" y="862.0"></text>
</g>
<g>
<title>java/lang/Class.isArray (4 samples, 0.05%)</title><rect x="279.7" y="835.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="282.7" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="279.7" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="282.7" y="830.0"></text>
</g>
<g>
<title>java_lang_Class::as_Klass(oopDesc*) (2 samples, 0.03%)</title><rect x="280.0" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="283.0" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.get (4 samples, 0.05%)</title><rect x="280.3" y="947.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="283.3" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (2 samples, 0.03%)</title><rect x="281.0" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="284.0" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setShadow (3 samples, 0.04%)</title><rect x="281.3" y="947.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="284.3" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (465 samples, 6.36%)</title><rect x="281.8" y="947.0" width="75.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="284.8" y="958.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (465 samples, 6.36%)</title><rect x="281.8" y="931.0" width="75.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="284.8" y="942.0">sun/nio/..</text>
</g>
<g>
<title>[unknown] (453 samples, 6.20%)</title><rect x="282.9" y="915.0" width="73.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="285.9" y="926.0">[unknown]</text>
</g>
<g>
<title>[unknown] (453 samples, 6.20%)</title><rect x="282.9" y="899.0" width="73.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="285.9" y="910.0">[unknown]</text>
</g>
<g>
<title>__GI___writev (451 samples, 6.17%)</title><rect x="282.9" y="883.0" width="72.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="285.9" y="894.0">__GI___w..</text>
</g>
<g>
<title>[unknown] (446 samples, 6.10%)</title><rect x="283.7" y="867.0" width="72.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="286.7" y="878.0">[unknown]</text>
</g>
<g>
<title>[unknown] (446 samples, 6.10%)</title><rect x="283.7" y="851.0" width="72.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="286.7" y="862.0">[unknown]</text>
</g>
<g>
<title>[unknown] (444 samples, 6.08%)</title><rect x="284.0" y="835.0" width="71.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="287.0" y="846.0">[unknown]</text>
</g>
<g>
<title>[unknown] (443 samples, 6.06%)</title><rect x="284.2" y="819.0" width="71.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="287.2" y="830.0">[unknown]</text>
</g>
<g>
<title>[unknown] (441 samples, 6.04%)</title><rect x="284.5" y="803.0" width="71.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="287.5" y="814.0">[unknown]</text>
</g>
<g>
<title>[unknown] (431 samples, 5.90%)</title><rect x="286.1" y="787.0" width="69.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="289.1" y="798.0">[unknown]</text>
</g>
<g>
<title>[unknown] (423 samples, 5.79%)</title><rect x="287.4" y="771.0" width="68.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="290.4" y="782.0">[unknown]</text>
</g>
<g>
<title>[unknown] (410 samples, 5.61%)</title><rect x="289.5" y="755.0" width="66.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="292.5" y="766.0">[unknown]</text>
</g>
<g>
<title>[unknown] (405 samples, 5.54%)</title><rect x="290.3" y="739.0" width="65.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="293.3" y="750.0">[unknown]</text>
</g>
<g>
<title>[unknown] (403 samples, 5.52%)</title><rect x="290.7" y="723.0" width="65.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="293.7" y="734.0">[unknown]</text>
</g>
<g>
<title>[unknown] (397 samples, 5.43%)</title><rect x="291.6" y="707.0" width="64.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="294.6" y="718.0">[unknown]</text>
</g>
<g>
<title>[unknown] (394 samples, 5.39%)</title><rect x="292.1" y="691.0" width="63.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="295.1" y="702.0">[unknown]</text>
</g>
<g>
<title>[unknown] (377 samples, 5.16%)</title><rect x="294.9" y="675.0" width="60.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="297.9" y="686.0">[unkno..</text>
</g>
<g>
<title>[unknown] (360 samples, 4.93%)</title><rect x="297.6" y="659.0" width="58.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="300.6" y="670.0">[unkno..</text>
</g>
<g>
<title>[unknown] (344 samples, 4.71%)</title><rect x="300.2" y="643.0" width="55.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="303.2" y="654.0">[unkn..</text>
</g>
<g>
<title>[unknown] (318 samples, 4.35%)</title><rect x="304.4" y="627.0" width="51.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="307.4" y="638.0">[unkn..</text>
</g>
<g>
<title>[unknown] (297 samples, 4.06%)</title><rect x="307.8" y="611.0" width="47.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="310.8" y="622.0">[unk..</text>
</g>
<g>
<title>[unknown] (284 samples, 3.89%)</title><rect x="309.9" y="595.0" width="45.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="312.9" y="606.0">[unk..</text>
</g>
<g>
<title>[unknown] (278 samples, 3.80%)</title><rect x="310.9" y="579.0" width="44.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="313.9" y="590.0">[unk..</text>
</g>
<g>
<title>[unknown] (270 samples, 3.70%)</title><rect x="312.1" y="563.0" width="43.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="315.1" y="574.0">[unk..</text>
</g>
<g>
<title>[unknown] (264 samples, 3.61%)</title><rect x="313.1" y="547.0" width="42.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="316.1" y="558.0">[unk..</text>
</g>
<g>
<title>[unknown] (246 samples, 3.37%)</title><rect x="316.0" y="531.0" width="39.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="319.0" y="542.0">[un..</text>
</g>
<g>
<title>[unknown] (229 samples, 3.13%)</title><rect x="318.8" y="515.0" width="36.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="321.8" y="526.0">[un..</text>
</g>
<g>
<title>[unknown] (220 samples, 3.01%)</title><rect x="320.2" y="499.0" width="35.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="323.2" y="510.0">[un..</text>
</g>
<g>
<title>[unknown] (182 samples, 2.49%)</title><rect x="326.4" y="483.0" width="29.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="329.4" y="494.0">[u..</text>
</g>
<g>
<title>[unknown] (168 samples, 2.30%)</title><rect x="328.6" y="467.0" width="27.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="331.6" y="478.0">[..</text>
</g>
<g>
<title>[unknown] (151 samples, 2.07%)</title><rect x="331.4" y="451.0" width="24.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="334.4" y="462.0">[..</text>
</g>
<g>
<title>[unknown] (148 samples, 2.03%)</title><rect x="331.8" y="435.0" width="23.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="334.8" y="446.0">[..</text>
</g>
<g>
<title>[unknown] (146 samples, 2.00%)</title><rect x="332.2" y="419.0" width="23.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="335.2" y="430.0">[..</text>
</g>
<g>
<title>[unknown] (141 samples, 1.93%)</title><rect x="333.0" y="403.0" width="22.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="336.0" y="414.0">[..</text>
</g>
<g>
<title>[unknown] (138 samples, 1.89%)</title><rect x="333.5" y="387.0" width="22.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="336.5" y="398.0">[..</text>
</g>
<g>
<title>[unknown] (130 samples, 1.78%)</title><rect x="334.8" y="371.0" width="20.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="337.8" y="382.0"></text>
</g>
<g>
<title>[unknown] (123 samples, 1.68%)</title><rect x="335.9" y="355.0" width="19.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="338.9" y="366.0"></text>
</g>
<g>
<title>[unknown] (121 samples, 1.66%)</title><rect x="336.2" y="339.0" width="19.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="339.2" y="350.0"></text>
</g>
<g>
<title>[unknown] (119 samples, 1.63%)</title><rect x="336.5" y="323.0" width="19.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="339.5" y="334.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 1.59%)</title><rect x="337.0" y="307.0" width="18.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="340.0" y="318.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.42%)</title><rect x="339.0" y="291.0" width="16.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="342.0" y="302.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.33%)</title><rect x="340.1" y="275.0" width="15.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="343.1" y="286.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 1.19%)</title><rect x="341.7" y="259.0" width="14.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="344.7" y="270.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.97%)</title><rect x="344.3" y="243.0" width="11.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="347.3" y="254.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.78%)</title><rect x="346.5" y="227.0" width="9.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="349.5" y="238.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 0.75%)</title><rect x="346.9" y="211.0" width="8.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="349.9" y="222.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.52%)</title><rect x="349.6" y="195.0" width="6.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="352.6" y="206.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="355.3" y="179.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="358.3" y="190.0"></text>
</g>
<g>
<title>__GI___writev (3 samples, 0.04%)</title><rect x="356.1" y="915.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="359.1" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerLastTemporaryDirectBuffer (7 samples, 0.10%)</title><rect x="357.0" y="947.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="360.0" y="958.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (6 samples, 0.08%)</title><rect x="357.0" y="931.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.0" y="942.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.getMap (4 samples, 0.05%)</title><rect x="357.0" y="915.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="360.0" y="926.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="357.7" y="915.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="360.7" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (11 samples, 0.15%)</title><rect x="358.2" y="1011.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="361.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (5 samples, 0.07%)</title><rect x="358.2" y="995.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="361.2" y="1006.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.03%)</title><rect x="359.0" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="362.0" y="1006.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (2 samples, 0.03%)</title><rect x="359.0" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="362.0" y="990.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (3 samples, 0.04%)</title><rect x="359.5" y="995.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="362.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (2 samples, 0.03%)</title><rect x="359.9" y="1027.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="362.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.03%)</title><rect x="360.8" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (2 samples, 0.03%)</title><rect x="360.8" y="1107.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="363.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (2 samples, 0.03%)</title><rect x="360.8" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="363.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (665 samples, 9.10%)</title><rect x="361.2" y="1267.0" width="107.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="364.2" y="1278.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (664 samples, 9.09%)</title><rect x="361.4" y="1251.0" width="107.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="364.4" y="1262.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (381 samples, 5.21%)</title><rect x="361.7" y="1235.0" width="61.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="364.7" y="1246.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/939607844.run (380 samples, 5.20%)</title><rect x="361.9" y="1219.0" width="61.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="364.9" y="1230.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (380 samples, 5.20%)</title><rect x="361.9" y="1203.0" width="61.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="364.9" y="1214.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (28 samples, 0.38%)</title><rect x="361.9" y="1187.0" width="4.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="364.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (28 samples, 0.38%)</title><rect x="361.9" y="1171.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="364.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (28 samples, 0.38%)</title><rect x="361.9" y="1155.0" width="4.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="364.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (28 samples, 0.38%)</title><rect x="361.9" y="1139.0" width="4.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="364.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (28 samples, 0.38%)</title><rect x="361.9" y="1123.0" width="4.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="364.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="361.9" y="1107.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="361.9" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="364.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$260/530077054.get$Lambda (2 samples, 0.03%)</title><rect x="361.9" y="1075.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="364.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (2 samples, 0.03%)</title><rect x="361.9" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="364.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (26 samples, 0.36%)</title><rect x="362.2" y="1107.0" width="4.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="365.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (24 samples, 0.33%)</title><rect x="362.5" y="1091.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="365.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (24 samples, 0.33%)</title><rect x="362.5" y="1075.0" width="3.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="365.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (21 samples, 0.29%)</title><rect x="363.0" y="1059.0" width="3.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="366.0" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (17 samples, 0.23%)</title><rect x="363.7" y="1043.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="366.7" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (17 samples, 0.23%)</title><rect x="363.7" y="1027.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="366.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.21%)</title><rect x="363.8" y="1011.0" width="2.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="366.8" y="1022.0"></text>
</g>
<g>
<title>write (15 samples, 0.21%)</title><rect x="363.8" y="995.0" width="2.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="366.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.21%)</title><rect x="363.8" y="979.0" width="2.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="366.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.21%)</title><rect x="363.8" y="963.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="366.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="364.0" y="947.0" width="2.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="367.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.18%)</title><rect x="364.1" y="931.0" width="2.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="367.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.18%)</title><rect x="364.1" y="915.0" width="2.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="367.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.18%)</title><rect x="364.1" y="899.0" width="2.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="367.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.18%)</title><rect x="364.1" y="883.0" width="2.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="367.1" y="894.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.14%)</title><rect x="364.6" y="867.0" width="1.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="367.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="364.8" y="851.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="367.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.10%)</title><rect x="365.1" y="835.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="368.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="365.3" y="819.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="368.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (16 samples, 0.22%)</title><rect x="366.4" y="1187.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="369.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="366.9" y="1171.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="369.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="366.9" y="1155.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="369.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.&lt;init&gt; (6 samples, 0.08%)</title><rect x="367.2" y="1171.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="370.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AbstractSubscription.&lt;init&gt; (4 samples, 0.05%)</title><rect x="367.5" y="1155.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="370.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.&lt;init&gt; (4 samples, 0.05%)</title><rect x="367.5" y="1139.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="370.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.onSubscribe (2 samples, 0.03%)</title><rect x="368.2" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="371.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (3 samples, 0.04%)</title><rect x="368.5" y="1171.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="371.5" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (336 samples, 4.60%)</title><rect x="369.0" y="1187.0" width="54.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="372.0" y="1198.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (335 samples, 4.58%)</title><rect x="369.2" y="1171.0" width="54.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="372.2" y="1182.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (335 samples, 4.58%)</title><rect x="369.2" y="1155.0" width="54.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.2" y="1166.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (335 samples, 4.58%)</title><rect x="369.2" y="1139.0" width="54.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="372.2" y="1150.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (220 samples, 3.01%)</title><rect x="369.2" y="1123.0" width="35.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.2" y="1134.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (220 samples, 3.01%)</title><rect x="369.2" y="1107.0" width="35.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="372.2" y="1118.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (220 samples, 3.01%)</title><rect x="369.2" y="1091.0" width="35.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="372.2" y="1102.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (219 samples, 3.00%)</title><rect x="369.3" y="1075.0" width="35.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="372.3" y="1086.0">jav..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (218 samples, 2.98%)</title><rect x="369.5" y="1059.0" width="35.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="372.5" y="1070.0">jdk..</text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="369.5" y="1043.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="372.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (216 samples, 2.96%)</title><rect x="369.8" y="1043.0" width="34.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="372.8" y="1054.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (216 samples, 2.96%)</title><rect x="369.8" y="1027.0" width="34.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="372.8" y="1038.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (12 samples, 0.16%)</title><rect x="369.8" y="1011.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="372.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (10 samples, 0.14%)</title><rect x="370.1" y="995.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="373.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (9 samples, 0.12%)</title><rect x="370.1" y="979.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="373.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (7 samples, 0.10%)</title><rect x="370.4" y="963.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="373.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (4 samples, 0.05%)</title><rect x="370.8" y="947.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="373.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (178 samples, 2.44%)</title><rect x="371.7" y="1011.0" width="28.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="374.7" y="1022.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (178 samples, 2.44%)</title><rect x="371.7" y="995.0" width="28.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="374.7" y="1006.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (163 samples, 2.23%)</title><rect x="371.9" y="979.0" width="26.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="374.9" y="990.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="372.9" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="375.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.03%)</title><rect x="372.9" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="375.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeRelay (3 samples, 0.04%)</title><rect x="373.2" y="963.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="376.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeRelay (2 samples, 0.03%)</title><rect x="373.4" y="947.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="376.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$267/408775171.apply (7 samples, 0.10%)</title><rect x="373.8" y="963.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="376.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (4 samples, 0.05%)</title><rect x="374.3" y="947.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="377.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (4 samples, 0.05%)</title><rect x="374.3" y="931.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="377.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.04%)</title><rect x="374.5" y="915.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="377.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (3 samples, 0.04%)</title><rect x="374.5" y="899.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="377.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (3 samples, 0.04%)</title><rect x="374.5" y="883.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="377.5" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/1208971968.apply (130 samples, 1.78%)</title><rect x="375.0" y="963.0" width="21.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="378.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (125 samples, 1.71%)</title><rect x="375.8" y="947.0" width="20.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="378.8" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="375.8" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="378.8" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="375.8" y="915.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$304/1506719647.get$Lambda (2 samples, 0.03%)</title><rect x="375.8" y="899.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="378.8" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (3 samples, 0.04%)</title><rect x="376.1" y="931.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="379.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (3 samples, 0.04%)</title><rect x="376.1" y="915.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="379.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (116 samples, 1.59%)</title><rect x="376.7" y="931.0" width="18.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="379.7" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (113 samples, 1.55%)</title><rect x="377.2" y="915.0" width="18.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="380.2" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$122/701212622.apply (5 samples, 0.07%)</title><rect x="377.7" y="899.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="380.7" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (103 samples, 1.41%)</title><rect x="378.5" y="899.0" width="16.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="381.5" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (30 samples, 0.41%)</title><rect x="378.8" y="883.0" width="4.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="381.8" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.04%)</title><rect x="379.0" y="867.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="382.0" y="878.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.05%)</title><rect x="379.5" y="867.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="382.5" y="878.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.04%)</title><rect x="379.6" y="851.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="382.6" y="862.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (2 samples, 0.03%)</title><rect x="379.6" y="835.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="382.6" y="846.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (20 samples, 0.27%)</title><rect x="380.1" y="867.0" width="3.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="383.1" y="878.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (19 samples, 0.26%)</title><rect x="380.3" y="851.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="383.3" y="862.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (19 samples, 0.26%)</title><rect x="380.3" y="835.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="383.3" y="846.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (18 samples, 0.25%)</title><rect x="380.5" y="819.0" width="2.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="383.5" y="830.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (16 samples, 0.22%)</title><rect x="380.5" y="803.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="383.5" y="814.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.03%)</title><rect x="380.9" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="383.9" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (8 samples, 0.11%)</title><rect x="381.3" y="787.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="384.3" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (6 samples, 0.08%)</title><rect x="381.6" y="771.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="384.6" y="782.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (6 samples, 0.08%)</title><rect x="381.6" y="755.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="384.6" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (6 samples, 0.08%)</title><rect x="381.6" y="739.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="384.6" y="750.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$281/586229749.applyAsLong (6 samples, 0.08%)</title><rect x="381.6" y="723.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="384.6" y="734.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (6 samples, 0.08%)</title><rect x="381.6" y="707.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="384.6" y="718.0"></text>
</g>
<g>
<title>java/lang/Long.parseLong (2 samples, 0.03%)</title><rect x="381.7" y="691.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="384.7" y="702.0"></text>
</g>
<g>
<title>java/lang/Long.valueOf (3 samples, 0.04%)</title><rect x="382.1" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.1" y="702.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (2 samples, 0.03%)</title><rect x="382.6" y="787.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="385.6" y="798.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.03%)</title><rect x="383.0" y="803.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="386.0" y="814.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.opWrapSink (2 samples, 0.03%)</title><rect x="383.0" y="787.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="386.0" y="798.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.mapToLong (2 samples, 0.03%)</title><rect x="383.4" y="867.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="386.4" y="878.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.&lt;init&gt; (2 samples, 0.03%)</title><rect x="383.4" y="851.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="386.4" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.03%)</title><rect x="383.8" y="883.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="386.8" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.fixupContentLen (5 samples, 0.07%)</title><rect x="384.2" y="883.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="387.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="384.3" y="867.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="387.3" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="384.7" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="387.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (62 samples, 0.85%)</title><rect x="385.0" y="883.0" width="10.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="388.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$286/1806093010.run (62 samples, 0.85%)</title><rect x="385.0" y="867.0" width="10.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (61 samples, 0.83%)</title><rect x="385.1" y="851.0" width="9.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="388.1" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="385.6" y="835.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="388.6" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="385.6" y="819.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="388.6" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1374968253.get$Lambda (4 samples, 0.05%)</title><rect x="385.8" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="388.8" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1374968253.&lt;init&gt; (4 samples, 0.05%)</title><rect x="385.8" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="388.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isCompletedExceptionally (2 samples, 0.03%)</title><rect x="386.4" y="835.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="389.4" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (5 samples, 0.07%)</title><rect x="386.8" y="835.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="389.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.05%)</title><rect x="386.9" y="819.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="389.9" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (2 samples, 0.03%)</title><rect x="387.1" y="803.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="390.1" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.03%)</title><rect x="387.1" y="787.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="390.1" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.start (2 samples, 0.03%)</title><rect x="387.7" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="390.7" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (3 samples, 0.04%)</title><rect x="388.0" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="391.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.reference (2 samples, 0.03%)</title><rect x="388.2" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="391.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (17 samples, 0.23%)</title><rect x="388.5" y="835.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="391.5" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (17 samples, 0.23%)</title><rect x="388.5" y="819.0" width="2.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="391.5" y="830.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (15 samples, 0.21%)</title><rect x="388.7" y="803.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.7" y="814.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (13 samples, 0.18%)</title><rect x="389.0" y="787.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="392.0" y="798.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (13 samples, 0.18%)</title><rect x="389.0" y="771.0" width="2.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="392.0" y="782.0"></text>
</g>
<g>
<title>JVM_IHashCode (7 samples, 0.10%)</title><rect x="389.2" y="755.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="392.2" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (3 samples, 0.04%)</title><rect x="389.5" y="739.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="392.5" y="750.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="390.0" y="739.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="393.0" y="750.0"></text>
</g>
<g>
<title>Java_java_lang_System_identityHashCode (2 samples, 0.03%)</title><rect x="390.3" y="755.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="393.3" y="766.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (2 samples, 0.03%)</title><rect x="390.6" y="755.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="393.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (10 samples, 0.14%)</title><rect x="391.3" y="835.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.3" y="846.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="392.2" y="819.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="395.2" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/712256162.invoke (4 samples, 0.05%)</title><rect x="392.2" y="803.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="395.2" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="392.2" y="787.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.2" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (2 samples, 0.03%)</title><rect x="392.6" y="771.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (13 samples, 0.18%)</title><rect x="392.9" y="835.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="395.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (12 samples, 0.16%)</title><rect x="392.9" y="819.0" width="1.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="395.9" y="830.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.11%)</title><rect x="393.4" y="803.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="396.4" y="814.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="393.4" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="396.4" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser$$Lambda$291/1888717088.get$Lambda (3 samples, 0.04%)</title><rect x="393.4" y="771.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="396.4" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/712256162.invoke (5 samples, 0.07%)</title><rect x="393.9" y="787.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="396.9" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="393.9" y="771.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.03%)</title><rect x="394.0" y="755.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="397.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1982791261.invoke (2 samples, 0.03%)</title><rect x="394.3" y="771.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="397.3" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="394.3" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.03%)</title><rect x="394.3" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="394.3" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseInfoImpl.&lt;init&gt; (2 samples, 0.03%)</title><rect x="395.2" y="899.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.getExchange (3 samples, 0.04%)</title><rect x="395.5" y="931.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="398.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$241/574542749.apply (14 samples, 0.19%)</title><rect x="396.0" y="963.0" width="2.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="399.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (14 samples, 0.19%)</title><rect x="396.0" y="947.0" width="2.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (14 samples, 0.19%)</title><rect x="396.0" y="931.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="399.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (10 samples, 0.14%)</title><rect x="396.6" y="915.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="399.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (9 samples, 0.12%)</title><rect x="396.8" y="899.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="399.8" y="910.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (6 samples, 0.08%)</title><rect x="397.3" y="883.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="400.3" y="894.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (4 samples, 0.05%)</title><rect x="397.6" y="867.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="400.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (3 samples, 0.04%)</title><rect x="397.7" y="851.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="400.7" y="862.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.03%)</title><rect x="397.9" y="835.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="400.9" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (13 samples, 0.18%)</title><rect x="398.2" y="979.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="401.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (13 samples, 0.18%)</title><rect x="398.2" y="963.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="401.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.07%)</title><rect x="398.5" y="947.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="401.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.07%)</title><rect x="398.5" y="931.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="401.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/772231929.apply (3 samples, 0.04%)</title><rect x="398.9" y="915.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="401.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/772231929.apply (6 samples, 0.08%)</title><rect x="399.3" y="947.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="402.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (6 samples, 0.08%)</title><rect x="399.3" y="931.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="402.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (3 samples, 0.04%)</title><rect x="399.8" y="915.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="402.8" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (2 samples, 0.03%)</title><rect x="400.0" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="403.0" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$277/282632138.apply (25 samples, 0.34%)</title><rect x="400.5" y="1011.0" width="4.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="403.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (25 samples, 0.34%)</title><rect x="400.5" y="995.0" width="4.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="403.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (5 samples, 0.07%)</title><rect x="401.4" y="979.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="404.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (13 samples, 0.18%)</title><rect x="402.4" y="979.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="405.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="402.4" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="405.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (11 samples, 0.15%)</title><rect x="402.7" y="963.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="405.7" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (4 samples, 0.05%)</title><rect x="403.9" y="947.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (111 samples, 1.52%)</title><rect x="404.7" y="1123.0" width="17.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="407.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (7 samples, 0.10%)</title><rect x="405.8" y="1107.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="408.8" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="406.6" y="1091.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="409.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (3 samples, 0.04%)</title><rect x="406.9" y="1107.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="409.9" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (11 samples, 0.15%)</title><rect x="407.4" y="1107.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="410.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.04%)</title><rect x="408.1" y="1091.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="411.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (3 samples, 0.04%)</title><rect x="408.1" y="1075.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="411.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="408.7" y="1091.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="411.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="408.7" y="1075.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="411.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (47 samples, 0.64%)</title><rect x="409.2" y="1107.0" width="7.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="412.2" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (44 samples, 0.60%)</title><rect x="409.4" y="1091.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.4" y="1102.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (44 samples, 0.60%)</title><rect x="409.4" y="1075.0" width="7.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="412.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.10%)</title><rect x="409.8" y="1059.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="412.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.07%)</title><rect x="410.2" y="1043.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="413.2" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/1304086955.get$Lambda (5 samples, 0.07%)</title><rect x="410.2" y="1027.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="413.2" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/1304086955.&lt;init&gt; (4 samples, 0.05%)</title><rect x="410.3" y="1011.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.3" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.&lt;init&gt; (6 samples, 0.08%)</title><rect x="411.0" y="1059.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="414.0" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (19 samples, 0.26%)</title><rect x="412.1" y="1059.0" width="3.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="415.1" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/1304086955.accept (17 samples, 0.23%)</title><rect x="412.4" y="1043.0" width="2.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="415.4" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (16 samples, 0.22%)</title><rect x="412.6" y="1027.0" width="2.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="415.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.trim (7 samples, 0.10%)</title><rect x="412.8" y="1011.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="415.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (7 samples, 0.10%)</title><rect x="412.8" y="995.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="415.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (7 samples, 0.10%)</title><rect x="412.8" y="979.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="415.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 0.10%)</title><rect x="412.8" y="963.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="415.8" y="974.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="412.9" y="947.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="415.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/510109769.test (3 samples, 0.04%)</title><rect x="413.4" y="947.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="416.4" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="413.9" y="1011.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="416.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="413.9" y="995.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="416.9" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.get$Lambda (3 samples, 0.04%)</title><rect x="413.9" y="979.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.9" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.&lt;init&gt; (3 samples, 0.04%)</title><rect x="413.9" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="416.9" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.03%)</title><rect x="414.4" y="1011.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="417.4" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.accept (2 samples, 0.03%)</title><rect x="414.4" y="995.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="417.4" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (3 samples, 0.04%)</title><rect x="414.7" y="1011.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.7" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.04%)</title><rect x="414.7" y="995.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="414.7" y="979.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.04%)</title><rect x="414.7" y="963.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="417.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.03%)</title><rect x="414.9" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="417.9" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.03%)</title><rect x="415.2" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.2" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (6 samples, 0.08%)</title><rect x="415.5" y="1059.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.5" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (6 samples, 0.08%)</title><rect x="415.5" y="1043.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="418.5" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="416.1" y="1027.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="419.1" y="1038.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="416.5" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="419.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (36 samples, 0.49%)</title><rect x="416.8" y="1107.0" width="5.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="419.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (33 samples, 0.45%)</title><rect x="417.0" y="1091.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="420.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="417.3" y="1075.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.07%)</title><rect x="417.8" y="1075.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="420.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.07%)</title><rect x="417.8" y="1059.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="420.8" y="1070.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.04%)</title><rect x="418.1" y="1043.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="421.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (2 samples, 0.03%)</title><rect x="418.6" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.03%)</title><rect x="418.6" y="1059.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="421.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.07%)</title><rect x="418.9" y="1075.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.05%)</title><rect x="419.1" y="1059.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="422.1" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="419.7" y="1075.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="422.7" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.05%)</title><rect x="419.7" y="1059.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="422.7" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="419.9" y="1043.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.9" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.04%)</title><rect x="419.9" y="1027.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="422.9" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (12 samples, 0.16%)</title><rect x="420.3" y="1075.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="423.3" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (2 samples, 0.03%)</title><rect x="420.7" y="1059.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="423.7" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (6 samples, 0.08%)</title><rect x="421.0" y="1059.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="424.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$280/178266912.apply (2 samples, 0.03%)</title><rect x="422.0" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (2 samples, 0.03%)</title><rect x="422.0" y="1043.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.0" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="422.0" y="1027.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeHeader (2 samples, 0.03%)</title><rect x="422.3" y="1091.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="425.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$217/752412765.accept (4 samples, 0.05%)</title><rect x="422.6" y="1123.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="425.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (4 samples, 0.05%)</title><rect x="422.6" y="1107.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="425.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (4 samples, 0.05%)</title><rect x="422.6" y="1091.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="425.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (281 samples, 3.85%)</title><rect x="423.3" y="1235.0" width="45.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="426.3" y="1246.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (276 samples, 3.78%)</title><rect x="424.1" y="1219.0" width="44.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="427.1" y="1230.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (276 samples, 3.78%)</title><rect x="424.1" y="1203.0" width="44.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="427.1" y="1214.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/939607844.run (273 samples, 3.74%)</title><rect x="424.2" y="1187.0" width="44.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.2" y="1198.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (273 samples, 3.74%)</title><rect x="424.2" y="1171.0" width="44.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="427.2" y="1182.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (267 samples, 3.65%)</title><rect x="424.4" y="1155.0" width="43.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.4" y="1166.0">jdk/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="424.4" y="1139.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="427.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (264 samples, 3.61%)</title><rect x="424.7" y="1139.0" width="42.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.7" y="1150.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (264 samples, 3.61%)</title><rect x="424.7" y="1123.0" width="42.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.7" y="1134.0">jdk/..</text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="425.2" y="1107.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="428.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$288/200648898.run (112 samples, 1.53%)</title><rect x="425.5" y="1107.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="428.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (109 samples, 1.49%)</title><rect x="426.0" y="1091.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="429.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (106 samples, 1.45%)</title><rect x="426.5" y="1075.0" width="17.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.5" y="1086.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (11 samples, 0.15%)</title><rect x="426.6" y="1059.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.6" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.03%)</title><rect x="426.6" y="1043.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="429.6" y="1054.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.03%)</title><rect x="426.6" y="1027.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.6" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.03%)</title><rect x="426.6" y="1011.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="429.6" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.03%)</title><rect x="426.6" y="995.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="429.6" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.03%)</title><rect x="426.6" y="979.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="429.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="426.6" y="963.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.03%)</title><rect x="426.6" y="947.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="429.6" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (8 samples, 0.11%)</title><rect x="427.1" y="1043.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.1" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.11%)</title><rect x="427.1" y="1027.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.1" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (8 samples, 0.11%)</title><rect x="427.1" y="1011.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="430.1" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.05%)</title><rect x="427.4" y="995.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.4" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.03%)</title><rect x="427.8" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.8" y="990.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.03%)</title><rect x="428.1" y="995.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="431.1" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.get (2 samples, 0.03%)</title><rect x="428.1" y="979.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="431.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (90 samples, 1.23%)</title><rect x="428.6" y="1059.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="431.6" y="1070.0"></text>
</g>
<g>
<title>java/time/Instant.now (11 samples, 0.15%)</title><rect x="428.6" y="1043.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="431.6" y="1054.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (11 samples, 0.15%)</title><rect x="428.6" y="1027.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="431.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (9 samples, 0.12%)</title><rect x="428.9" y="1011.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="431.9" y="1022.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (7 samples, 0.10%)</title><rect x="429.2" y="995.0" width="1.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="432.2" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.04%)</title><rect x="429.9" y="979.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="432.9" y="990.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="429.9" y="963.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="432.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (79 samples, 1.08%)</title><rect x="430.4" y="1043.0" width="12.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="433.4" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (10 samples, 0.14%)</title><rect x="430.7" y="1027.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.7" y="1038.0"></text>
</g>
<g>
<title>java/time/Instant.plus (2 samples, 0.03%)</title><rect x="431.0" y="1011.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.0" y="1022.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.05%)</title><rect x="431.5" y="1011.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="434.5" y="1022.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (4 samples, 0.05%)</title><rect x="431.5" y="995.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="434.5" y="1006.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (4 samples, 0.05%)</title><rect x="431.5" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (9 samples, 0.12%)</title><rect x="432.3" y="1027.0" width="1.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="435.3" y="1038.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.07%)</title><rect x="432.5" y="1011.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="435.5" y="1022.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.04%)</title><rect x="432.5" y="995.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="435.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (3 samples, 0.04%)</title><rect x="432.5" y="979.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="435.5" y="990.0"></text>
</g>
<g>
<title>java/util/Objects.equals (2 samples, 0.03%)</title><rect x="432.6" y="963.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="435.6" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.03%)</title><rect x="432.9" y="995.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="435.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (2 samples, 0.03%)</title><rect x="432.9" y="979.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.9" y="990.0"></text>
</g>
<g>
<title>java/util/Objects.hash (2 samples, 0.03%)</title><rect x="432.9" y="963.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.9" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (2 samples, 0.03%)</title><rect x="432.9" y="947.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="435.9" y="958.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.03%)</title><rect x="433.3" y="1011.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="436.3" y="1022.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.03%)</title><rect x="433.3" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="436.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (57 samples, 0.78%)</title><rect x="433.7" y="1027.0" width="9.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="436.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (55 samples, 0.75%)</title><rect x="434.1" y="1011.0" width="8.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="437.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (5 samples, 0.07%)</title><rect x="434.2" y="995.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="437.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (5 samples, 0.07%)</title><rect x="434.2" y="979.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="437.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (5 samples, 0.07%)</title><rect x="434.2" y="963.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="437.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (4 samples, 0.05%)</title><rect x="434.4" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="437.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (49 samples, 0.67%)</title><rect x="435.0" y="995.0" width="8.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (49 samples, 0.67%)</title><rect x="435.0" y="979.0" width="8.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="438.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (2 samples, 0.03%)</title><rect x="435.0" y="963.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="438.0" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_L (2 samples, 0.03%)</title><rect x="435.0" y="947.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="438.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (33 samples, 0.45%)</title><rect x="435.4" y="963.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (33 samples, 0.45%)</title><rect x="435.4" y="947.0" width="5.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="438.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (33 samples, 0.45%)</title><rect x="435.4" y="931.0" width="5.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="438.4" y="942.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (33 samples, 0.45%)</title><rect x="435.4" y="915.0" width="5.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.4" y="926.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (33 samples, 0.45%)</title><rect x="435.4" y="899.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="438.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.44%)</title><rect x="435.4" y="883.0" width="5.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="438.4" y="894.0"></text>
</g>
<g>
<title>write (32 samples, 0.44%)</title><rect x="435.4" y="867.0" width="5.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="438.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.41%)</title><rect x="435.7" y="851.0" width="4.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="438.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.41%)</title><rect x="435.7" y="835.0" width="4.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="438.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.41%)</title><rect x="435.7" y="819.0" width="4.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="438.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.40%)</title><rect x="435.8" y="803.0" width="4.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="438.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.40%)</title><rect x="435.8" y="787.0" width="4.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="438.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.38%)</title><rect x="436.0" y="771.0" width="4.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="439.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.38%)</title><rect x="436.0" y="755.0" width="4.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="439.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.31%)</title><rect x="436.8" y="739.0" width="3.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="439.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.26%)</title><rect x="437.5" y="723.0" width="3.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="440.5" y="734.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.18%)</title><rect x="438.4" y="707.0" width="2.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="441.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.15%)</title><rect x="438.8" y="691.0" width="1.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="441.8" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (5 samples, 0.07%)</title><rect x="440.7" y="963.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (9 samples, 0.12%)</title><rect x="441.5" y="963.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (7 samples, 0.10%)</title><rect x="441.5" y="947.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="444.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (7 samples, 0.10%)</title><rect x="441.5" y="931.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="444.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (7 samples, 0.10%)</title><rect x="441.5" y="915.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.5" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/604125138.linkToTargetMethod (7 samples, 0.10%)</title><rect x="441.5" y="899.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="444.5" y="910.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/741669172.invoke (7 samples, 0.10%)</title><rect x="441.5" y="883.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="444.5" y="894.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="441.8" y="867.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="444.8" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1982791261.invoke (2 samples, 0.03%)</title><rect x="442.3" y="867.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="445.3" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="442.3" y="851.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="445.3" y="862.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.03%)</title><rect x="442.3" y="835.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="445.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="442.3" y="819.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="445.3" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (2 samples, 0.03%)</title><rect x="442.6" y="947.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="445.6" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (3 samples, 0.04%)</title><rect x="443.1" y="1059.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="446.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$290/1374968253.accept (32 samples, 0.44%)</title><rect x="443.6" y="1107.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="446.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (32 samples, 0.44%)</title><rect x="443.6" y="1091.0" width="5.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="446.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (32 samples, 0.44%)</title><rect x="443.6" y="1075.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="446.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (25 samples, 0.34%)</title><rect x="444.1" y="1059.0" width="4.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="447.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (25 samples, 0.34%)</title><rect x="444.1" y="1043.0" width="4.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (23 samples, 0.31%)</title><rect x="444.4" y="1027.0" width="3.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (22 samples, 0.30%)</title><rect x="444.6" y="1011.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="447.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (9 samples, 0.12%)</title><rect x="444.6" y="995.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="447.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (8 samples, 0.11%)</title><rect x="444.7" y="979.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="447.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (8 samples, 0.11%)</title><rect x="444.7" y="963.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.11%)</title><rect x="444.7" y="947.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.11%)</title><rect x="444.7" y="931.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.11%)</title><rect x="444.7" y="915.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="447.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.11%)</title><rect x="444.7" y="899.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="447.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.11%)</title><rect x="444.7" y="883.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="447.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (8 samples, 0.11%)</title><rect x="444.7" y="867.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.7" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/311362326.accept (4 samples, 0.05%)</title><rect x="444.9" y="851.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="447.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$294/1808175138.accept (3 samples, 0.04%)</title><rect x="445.5" y="851.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="448.5" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/311362326.accept (7 samples, 0.10%)</title><rect x="446.0" y="995.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.0" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (5 samples, 0.07%)</title><rect x="446.3" y="979.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="449.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (3 samples, 0.04%)</title><rect x="446.7" y="963.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="449.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (2 samples, 0.03%)</title><rect x="446.8" y="947.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="449.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$294/1808175138.accept (6 samples, 0.08%)</title><rect x="447.2" y="995.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="450.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (4 samples, 0.05%)</title><rect x="447.5" y="979.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="450.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (4 samples, 0.05%)</title><rect x="447.5" y="963.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="450.5" y="974.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (3 samples, 0.04%)</title><rect x="447.6" y="947.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="450.6" y="958.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.closeDeletion (2 samples, 0.03%)</title><rect x="447.8" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="450.8" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$220/1039191075.accept (4 samples, 0.05%)</title><rect x="448.1" y="1059.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (3 samples, 0.04%)</title><rect x="448.3" y="1043.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="451.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (2 samples, 0.03%)</title><rect x="448.4" y="1027.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="451.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (111 samples, 1.52%)</title><rect x="448.8" y="1107.0" width="17.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="451.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (110 samples, 1.51%)</title><rect x="448.9" y="1091.0" width="17.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="451.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.compareAndSet (4 samples, 0.05%)</title><rect x="449.3" y="1075.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="452.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (4 samples, 0.05%)</title><rect x="449.3" y="1059.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (4 samples, 0.05%)</title><rect x="449.3" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="452.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/Class.cast (3 samples, 0.04%)</title><rect x="449.4" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (104 samples, 1.42%)</title><rect x="449.9" y="1075.0" width="16.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="452.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (100 samples, 1.37%)</title><rect x="449.9" y="1059.0" width="16.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="452.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (5 samples, 0.07%)</title><rect x="449.9" y="1043.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="452.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.07%)</title><rect x="449.9" y="1027.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="452.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.07%)</title><rect x="449.9" y="1011.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="452.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/Class.cast (5 samples, 0.07%)</title><rect x="449.9" y="995.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="452.9" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (4 samples, 0.05%)</title><rect x="450.1" y="979.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="453.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (95 samples, 1.30%)</title><rect x="450.7" y="1043.0" width="15.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="453.7" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (93 samples, 1.27%)</title><rect x="451.0" y="1027.0" width="15.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="454.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (91 samples, 1.25%)</title><rect x="451.3" y="1011.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="454.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (7 samples, 0.10%)</title><rect x="451.3" y="995.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="454.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (7 samples, 0.10%)</title><rect x="451.3" y="979.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (7 samples, 0.10%)</title><rect x="451.3" y="963.0" width="1.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="454.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (7 samples, 0.10%)</title><rect x="451.3" y="947.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="454.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.10%)</title><rect x="451.3" y="931.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="454.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.10%)</title><rect x="451.3" y="915.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="454.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.10%)</title><rect x="451.3" y="899.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="454.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.10%)</title><rect x="451.3" y="883.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="454.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (7 samples, 0.10%)</title><rect x="451.3" y="867.0" width="1.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="454.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$296/1374665315.accept (84 samples, 1.15%)</title><rect x="452.5" y="995.0" width="13.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="455.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (83 samples, 1.14%)</title><rect x="452.6" y="979.0" width="13.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="455.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (83 samples, 1.14%)</title><rect x="452.6" y="963.0" width="13.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="455.6" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.03%)</title><rect x="452.6" y="947.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="455.6" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="452.6" y="931.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="455.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (81 samples, 1.11%)</title><rect x="453.0" y="947.0" width="13.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="456.0" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="453.3" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="456.3" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="453.3" y="915.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="456.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (6 samples, 0.08%)</title><rect x="453.6" y="931.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (4 samples, 0.05%)</title><rect x="453.8" y="915.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="456.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.04%)</title><rect x="453.9" y="899.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="456.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (3 samples, 0.04%)</title><rect x="453.9" y="883.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="456.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (2 samples, 0.03%)</title><rect x="454.1" y="867.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (70 samples, 0.96%)</title><rect x="454.6" y="931.0" width="11.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="457.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (70 samples, 0.96%)</title><rect x="454.6" y="915.0" width="11.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="457.6" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (64 samples, 0.88%)</title><rect x="454.6" y="899.0" width="10.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.6" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (50 samples, 0.68%)</title><rect x="454.6" y="883.0" width="8.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="457.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (50 samples, 0.68%)</title><rect x="454.6" y="867.0" width="8.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="457.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (50 samples, 0.68%)</title><rect x="454.6" y="851.0" width="8.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="457.6" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (3 samples, 0.04%)</title><rect x="454.6" y="835.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="457.6" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (47 samples, 0.64%)</title><rect x="455.1" y="835.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="458.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (47 samples, 0.64%)</title><rect x="455.1" y="819.0" width="7.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="458.1" y="830.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (47 samples, 0.64%)</title><rect x="455.1" y="803.0" width="7.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="458.1" y="814.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.14%)</title><rect x="455.5" y="787.0" width="1.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="458.5" y="798.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="455.9" y="771.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="458.9" y="782.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="456.2" y="771.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="459.2" y="782.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="456.5" y="771.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="459.5" y="782.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (33 samples, 0.45%)</title><rect x="457.3" y="787.0" width="5.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="460.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.42%)</title><rect x="457.6" y="771.0" width="5.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="460.6" y="782.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.42%)</title><rect x="457.6" y="755.0" width="5.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="460.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.38%)</title><rect x="458.1" y="739.0" width="4.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="461.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.37%)</title><rect x="458.3" y="723.0" width="4.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="461.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.36%)</title><rect x="458.5" y="707.0" width="4.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="461.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.30%)</title><rect x="459.1" y="691.0" width="3.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="462.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.25%)</title><rect x="459.7" y="675.0" width="3.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="462.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="459.9" y="659.0" width="2.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="462.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14 samples, 0.19%)</title><rect x="462.7" y="883.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="465.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.19%)</title><rect x="462.7" y="867.0" width="2.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="465.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (12 samples, 0.16%)</title><rect x="463.0" y="851.0" width="1.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="466.0" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.16%)</title><rect x="463.0" y="835.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.0" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.16%)</title><rect x="463.0" y="819.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.16%)</title><rect x="463.0" y="803.0" width="1.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.16%)</title><rect x="463.0" y="787.0" width="1.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="466.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (12 samples, 0.16%)</title><rect x="463.0" y="771.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="466.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$141/621367896.accept (3 samples, 0.04%)</title><rect x="464.4" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$301/759656526.accept (4 samples, 0.05%)</title><rect x="464.9" y="899.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="467.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (2 samples, 0.03%)</title><rect x="465.1" y="883.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="468.1" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$141/621367896.accept (2 samples, 0.03%)</title><rect x="465.6" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="468.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (4 samples, 0.05%)</title><rect x="466.0" y="1059.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="469.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (4 samples, 0.05%)</title><rect x="466.0" y="1043.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="469.0" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.03%)</title><rect x="466.4" y="1027.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="469.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (4 samples, 0.05%)</title><rect x="466.7" y="1107.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="469.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (2 samples, 0.03%)</title><rect x="467.0" y="1091.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="470.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.03%)</title><rect x="467.0" y="1075.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="467.0" y="1059.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="470.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.03%)</title><rect x="467.0" y="1043.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (5 samples, 0.07%)</title><rect x="467.5" y="1155.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="470.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (5 samples, 0.07%)</title><rect x="467.5" y="1139.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="470.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5 samples, 0.07%)</title><rect x="467.5" y="1123.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="470.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (5 samples, 0.07%)</title><rect x="467.5" y="1107.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="470.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.03%)</title><rect x="467.5" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="470.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (2 samples, 0.03%)</title><rect x="467.5" y="1075.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="470.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.03%)</title><rect x="467.5" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="470.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.03%)</title><rect x="467.5" y="1043.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="470.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.03%)</title><rect x="467.5" y="1027.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="470.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (2 samples, 0.03%)</title><rect x="467.5" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (2 samples, 0.03%)</title><rect x="467.5" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="470.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (3 samples, 0.04%)</title><rect x="467.8" y="1091.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (2 samples, 0.03%)</title><rect x="468.3" y="1187.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="471.3" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$111/543001321.run (537 samples, 7.35%)</title><rect x="468.6" y="1267.0" width="86.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="471.6" y="1278.0">ru/mail/po..</text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="468.8" y="1251.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="471.8" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$313/835220698.run (534 samples, 7.31%)</title><rect x="469.1" y="1251.0" width="86.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="472.1" y="1262.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$1 (527 samples, 7.21%)</title><rect x="470.2" y="1235.0" width="85.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="473.2" y="1246.0">ru/mail/po..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.upsert (510 samples, 6.98%)</title><rect x="470.4" y="1219.0" width="82.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.4" y="1230.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="470.9" y="1203.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="473.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="470.9" y="1187.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="473.9" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$322/169185775.get$Lambda (3 samples, 0.04%)</title><rect x="470.9" y="1171.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="473.9" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="471.4" y="1203.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="474.4" y="1214.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="471.4" y="1187.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.4" y="1198.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="471.5" y="1171.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.5" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="471.5" y="1155.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="474.5" y="1166.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="471.5" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="474.5" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.contains (2 samples, 0.03%)</title><rect x="471.9" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.9" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (49 samples, 0.67%)</title><rect x="472.3" y="1203.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="475.3" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (49 samples, 0.67%)</title><rect x="472.3" y="1187.0" width="8.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="475.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.04%)</title><rect x="472.7" y="1171.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="475.7" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.04%)</title><rect x="472.7" y="1155.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.04%)</title><rect x="472.7" y="1139.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="475.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock.readLock (2 samples, 0.03%)</title><rect x="473.2" y="1171.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="476.2" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (42 samples, 0.57%)</title><rect x="473.5" y="1171.0" width="6.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="476.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (39 samples, 0.53%)</title><rect x="473.5" y="1155.0" width="6.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (39 samples, 0.53%)</title><rect x="473.5" y="1139.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (5 samples, 0.07%)</title><rect x="474.9" y="1123.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="477.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.03%)</title><rect x="475.7" y="1123.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="478.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (21 samples, 0.29%)</title><rect x="476.1" y="1123.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="479.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.26%)</title><rect x="476.4" y="1107.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.4" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (19 samples, 0.26%)</title><rect x="476.4" y="1091.0" width="3.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="479.4" y="1102.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (2 samples, 0.03%)</title><rect x="476.4" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="479.4" y="1086.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (15 samples, 0.21%)</title><rect x="476.7" y="1075.0" width="2.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="479.7" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (8 samples, 0.11%)</title><rect x="477.8" y="1059.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="480.8" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.08%)</title><rect x="478.2" y="1043.0" width="0.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="481.2" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="479.1" y="1075.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="482.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.nextSecondarySeed (2 samples, 0.03%)</title><rect x="479.4" y="1123.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="482.4" y="1134.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="479.8" y="1155.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="482.8" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (52 samples, 0.71%)</title><rect x="480.3" y="1203.0" width="8.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="483.3" y="1214.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (7 samples, 0.10%)</title><rect x="480.7" y="1187.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="483.7" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (7 samples, 0.10%)</title><rect x="480.7" y="1171.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="483.7" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (6 samples, 0.08%)</title><rect x="480.7" y="1155.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="483.7" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (4 samples, 0.05%)</title><rect x="481.1" y="1139.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="484.1" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (2 samples, 0.03%)</title><rect x="481.4" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="484.4" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.03%)</title><rect x="481.4" y="1107.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="484.4" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="481.9" y="1187.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="484.9" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (2 samples, 0.03%)</title><rect x="482.2" y="1187.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="485.2" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (2 samples, 0.03%)</title><rect x="482.2" y="1171.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.2" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (2 samples, 0.03%)</title><rect x="482.2" y="1155.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="485.2" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (7 samples, 0.10%)</title><rect x="482.5" y="1187.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="485.5" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (7 samples, 0.10%)</title><rect x="482.5" y="1171.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.5" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.&lt;init&gt; (7 samples, 0.10%)</title><rect x="482.5" y="1155.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="485.5" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (7 samples, 0.10%)</title><rect x="482.5" y="1139.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="485.5" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2 samples, 0.03%)</title><rect x="483.3" y="1123.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="486.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (31 samples, 0.42%)</title><rect x="483.6" y="1187.0" width="5.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="486.6" y="1198.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (22 samples, 0.30%)</title><rect x="483.6" y="1171.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="486.6" y="1182.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (9 samples, 0.12%)</title><rect x="483.8" y="1155.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.8" y="1166.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (9 samples, 0.12%)</title><rect x="483.8" y="1139.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="486.8" y="1150.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (8 samples, 0.11%)</title><rect x="484.0" y="1123.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="487.0" y="1134.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (8 samples, 0.11%)</title><rect x="484.0" y="1107.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="487.0" y="1118.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (7 samples, 0.10%)</title><rect x="484.1" y="1091.0" width="1.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="487.1" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (3 samples, 0.04%)</title><rect x="484.6" y="1075.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="487.6" y="1086.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (10 samples, 0.14%)</title><rect x="485.3" y="1155.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="488.3" y="1166.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (3 samples, 0.04%)</title><rect x="485.6" y="1139.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="488.6" y="1150.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.processRemaining (5 samples, 0.07%)</title><rect x="486.1" y="1139.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="489.1" y="1150.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="486.6" y="1123.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="489.6" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.ceilingEntry (8 samples, 0.11%)</title><rect x="487.4" y="1171.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="490.4" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (7 samples, 0.10%)</title><rect x="487.5" y="1155.0" width="1.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="490.5" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.04%)</title><rect x="488.2" y="1139.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="491.2" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.executeIfProxied (57 samples, 0.78%)</title><rect x="488.7" y="1203.0" width="9.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.05%)</title><rect x="488.7" y="1187.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="491.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="488.7" y="1171.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="491.7" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$278/895497718.get$Lambda (4 samples, 0.05%)</title><rect x="488.7" y="1155.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="491.7" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$278/895497718.&lt;init&gt; (3 samples, 0.04%)</title><rect x="488.8" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="491.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (2 samples, 0.03%)</title><rect x="489.3" y="1187.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="492.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (5 samples, 0.07%)</title><rect x="489.6" y="1187.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="492.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (4 samples, 0.05%)</title><rect x="489.8" y="1171.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="492.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.&lt;init&gt; (4 samples, 0.05%)</title><rect x="489.8" y="1155.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="492.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (46 samples, 0.63%)</title><rect x="490.4" y="1187.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="493.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (45 samples, 0.62%)</title><rect x="490.4" y="1171.0" width="7.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="493.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (44 samples, 0.60%)</title><rect x="490.6" y="1155.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="493.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (43 samples, 0.59%)</title><rect x="490.8" y="1139.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="493.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (42 samples, 0.57%)</title><rect x="490.9" y="1123.0" width="6.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="493.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (2 samples, 0.03%)</title><rect x="490.9" y="1107.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="493.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.tryLockPhase (3 samples, 0.04%)</title><rect x="491.2" y="1107.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (3 samples, 0.04%)</title><rect x="491.2" y="1091.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="494.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="491.2" y="1075.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="494.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (37 samples, 0.51%)</title><rect x="491.7" y="1107.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="494.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (35 samples, 0.48%)</title><rect x="492.0" y="1091.0" width="5.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="495.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (35 samples, 0.48%)</title><rect x="492.0" y="1075.0" width="5.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="495.0" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.07%)</title><rect x="492.2" y="1059.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="495.2" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="492.5" y="1043.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="495.5" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (28 samples, 0.38%)</title><rect x="493.2" y="1059.0" width="4.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="496.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.34%)</title><rect x="493.7" y="1043.0" width="4.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="496.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.34%)</title><rect x="493.7" y="1027.0" width="4.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="496.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.34%)</title><rect x="493.7" y="1011.0" width="4.0" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="496.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.34%)</title><rect x="493.7" y="995.0" width="4.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="496.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.34%)</title><rect x="493.7" y="979.0" width="4.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="496.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.33%)</title><rect x="493.8" y="963.0" width="3.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="496.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.30%)</title><rect x="494.1" y="947.0" width="3.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="497.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.26%)</title><rect x="494.6" y="931.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="497.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getResponsesFromReplicas (340 samples, 4.65%)</title><rect x="497.9" y="1203.0" width="54.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="500.9" y="1214.0">ru/ma..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (15 samples, 0.21%)</title><rect x="498.5" y="1187.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/157683534.invoke (15 samples, 0.21%)</title><rect x="498.5" y="1171.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="501.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (11 samples, 0.15%)</title><rect x="498.7" y="1155.0" width="1.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="501.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (3 samples, 0.04%)</title><rect x="498.7" y="1139.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="501.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixCoder (2 samples, 0.03%)</title><rect x="499.2" y="1139.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="502.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (4 samples, 0.05%)</title><rect x="499.5" y="1139.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.checkOverflow (2 samples, 0.03%)</title><rect x="499.8" y="1123.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="502.8" y="1134.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (3 samples, 0.04%)</title><rect x="500.4" y="1155.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.4" y="1166.0"></text>
</g>
<g>
<title>java/net/URI.create (43 samples, 0.59%)</title><rect x="500.9" y="1187.0" width="7.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="503.9" y="1198.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (42 samples, 0.57%)</title><rect x="501.1" y="1171.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.1" y="1182.0"></text>
</g>
<g>
<title>java/net/URI$Parser.&lt;init&gt; (2 samples, 0.03%)</title><rect x="501.1" y="1155.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="504.1" y="1166.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (40 samples, 0.55%)</title><rect x="501.4" y="1155.0" width="6.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="504.4" y="1166.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (3 samples, 0.04%)</title><rect x="501.7" y="1139.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.7" y="1150.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.04%)</title><rect x="501.7" y="1123.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.7" y="1134.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.04%)</title><rect x="501.7" y="1107.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="504.7" y="1118.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (32 samples, 0.44%)</title><rect x="502.2" y="1139.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="505.2" y="1150.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (22 samples, 0.30%)</title><rect x="502.7" y="1123.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="505.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="503.2" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="503.2" y="1091.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.2" y="1102.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (12 samples, 0.16%)</title><rect x="503.5" y="1107.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="506.5" y="1118.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (2 samples, 0.03%)</title><rect x="504.2" y="1091.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="507.2" y="1102.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (6 samples, 0.08%)</title><rect x="504.5" y="1091.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="507.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.05%)</title><rect x="504.5" y="1075.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="507.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.04%)</title><rect x="504.6" y="1059.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="507.6" y="1070.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="504.8" y="1043.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="507.8" y="1054.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.03%)</title><rect x="505.1" y="1075.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="508.1" y="1086.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.07%)</title><rect x="505.4" y="1107.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="508.4" y="1118.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.10%)</title><rect x="506.3" y="1123.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="509.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="506.6" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="509.6" y="1118.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.04%)</title><rect x="507.4" y="1139.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="510.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="507.4" y="1123.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="510.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="507.4" y="1107.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="510.4" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (5 samples, 0.07%)</title><rect x="507.9" y="1187.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="510.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (4 samples, 0.05%)</title><rect x="508.0" y="1171.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="511.0" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (6 samples, 0.08%)</title><rect x="508.7" y="1187.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="511.7" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="509.3" y="1171.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="512.3" y="1182.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (2 samples, 0.03%)</title><rect x="509.3" y="1155.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.03%)</title><rect x="509.3" y="1139.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="512.3" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="509.6" y="1187.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="512.6" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.remove (2 samples, 0.03%)</title><rect x="510.0" y="1187.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="513.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (206 samples, 2.82%)</title><rect x="510.3" y="1187.0" width="33.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="513.3" y="1198.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (205 samples, 2.81%)</title><rect x="510.5" y="1171.0" width="33.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="513.5" y="1182.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (205 samples, 2.81%)</title><rect x="510.5" y="1155.0" width="33.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="513.5" y="1166.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (199 samples, 2.72%)</title><rect x="511.4" y="1139.0" width="32.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="514.4" y="1150.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (148 samples, 2.03%)</title><rect x="512.1" y="1123.0" width="23.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="515.1" y="1134.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (14 samples, 0.19%)</title><rect x="513.0" y="1107.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.0" y="1118.0"></text>
</g>
<g>
<title>java/util/Collection.stream (7 samples, 0.10%)</title><rect x="513.0" y="1091.0" width="1.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.0" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (7 samples, 0.10%)</title><rect x="513.0" y="1075.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="516.0" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (3 samples, 0.04%)</title><rect x="513.2" y="1059.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="516.2" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (3 samples, 0.04%)</title><rect x="513.2" y="1043.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="516.2" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (3 samples, 0.04%)</title><rect x="513.2" y="1027.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="516.2" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.fromCharacteristics (3 samples, 0.04%)</title><rect x="513.7" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="516.7" y="1070.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (2 samples, 0.03%)</title><rect x="513.8" y="1043.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="516.8" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (7 samples, 0.10%)</title><rect x="514.2" y="1091.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="517.2" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (7 samples, 0.10%)</title><rect x="514.2" y="1075.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="517.2" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (7 samples, 0.10%)</title><rect x="514.2" y="1059.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.2" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (5 samples, 0.07%)</title><rect x="514.5" y="1043.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="517.5" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.05%)</title><rect x="514.5" y="1027.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="517.5" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (12 samples, 0.16%)</title><rect x="515.3" y="1107.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="518.3" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (12 samples, 0.16%)</title><rect x="515.3" y="1091.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.3" y="1102.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (10 samples, 0.14%)</title><rect x="515.6" y="1075.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="518.6" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (10 samples, 0.14%)</title><rect x="515.6" y="1059.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="518.6" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/1304086955.accept (10 samples, 0.14%)</title><rect x="515.6" y="1043.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.6" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (10 samples, 0.14%)</title><rect x="515.6" y="1027.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="518.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (8 samples, 0.11%)</title><rect x="515.6" y="1011.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="518.6" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.accept (7 samples, 0.10%)</title><rect x="515.6" y="995.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.6" y="1006.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (7 samples, 0.10%)</title><rect x="515.6" y="979.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.04%)</title><rect x="515.6" y="963.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="518.6" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.03%)</title><rect x="515.8" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="518.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/107456312.test (3 samples, 0.04%)</title><rect x="516.3" y="963.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (3 samples, 0.04%)</title><rect x="516.3" y="947.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="519.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.03%)</title><rect x="516.4" y="931.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="519.4" y="942.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.03%)</title><rect x="516.9" y="1011.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="519.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.03%)</title><rect x="516.9" y="995.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (2 samples, 0.03%)</title><rect x="517.7" y="1107.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="520.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="517.7" y="1091.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="520.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (107 samples, 1.46%)</title><rect x="518.0" y="1107.0" width="17.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="521.0" y="1118.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.isEmpty (2 samples, 0.03%)</title><rect x="518.4" y="1091.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.4" y="1102.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (103 samples, 1.41%)</title><rect x="518.7" y="1091.0" width="16.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.04%)</title><rect x="519.0" y="1075.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.04%)</title><rect x="519.0" y="1059.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.04%)</title><rect x="519.0" y="1043.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.0" y="1054.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (97 samples, 1.33%)</title><rect x="519.7" y="1075.0" width="15.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="522.7" y="1086.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (67 samples, 0.92%)</title><rect x="520.0" y="1059.0" width="10.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="523.0" y="1070.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (2 samples, 0.03%)</title><rect x="521.1" y="1043.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="524.1" y="1054.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (14 samples, 0.19%)</title><rect x="521.9" y="1043.0" width="2.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="524.9" y="1054.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.03%)</title><rect x="522.4" y="1027.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="525.4" y="1038.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (5 samples, 0.07%)</title><rect x="522.9" y="1027.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="525.9" y="1038.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (2 samples, 0.03%)</title><rect x="523.7" y="1027.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="526.7" y="1038.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.03%)</title><rect x="524.3" y="1043.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="527.3" y="1054.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (13 samples, 0.18%)</title><rect x="525.3" y="1043.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="528.3" y="1054.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (8 samples, 0.11%)</title><rect x="526.0" y="1027.0" width="1.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="529.0" y="1038.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.07%)</title><rect x="526.0" y="1011.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="529.0" y="1022.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.04%)</title><rect x="526.3" y="995.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="529.3" y="1006.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (2 samples, 0.03%)</title><rect x="526.9" y="1011.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="529.9" y="1022.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (21 samples, 0.29%)</title><rect x="527.4" y="1043.0" width="3.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="530.4" y="1054.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.03%)</title><rect x="527.9" y="1027.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="530.9" y="1038.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (8 samples, 0.11%)</title><rect x="528.2" y="1027.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="531.2" y="1038.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (5 samples, 0.07%)</title><rect x="528.7" y="1011.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="531.7" y="1022.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (8 samples, 0.11%)</title><rect x="529.5" y="1027.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="532.5" y="1038.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (6 samples, 0.08%)</title><rect x="529.8" y="1011.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="532.8" y="1022.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (5 samples, 0.07%)</title><rect x="529.8" y="995.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="532.8" y="1006.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (4 samples, 0.05%)</title><rect x="530.0" y="979.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="533.0" y="990.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.04%)</title><rect x="531.3" y="1059.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="534.3" y="1070.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (20 samples, 0.27%)</title><rect x="532.1" y="1059.0" width="3.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.1" y="1070.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (20 samples, 0.27%)</title><rect x="532.1" y="1043.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="535.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.10%)</title><rect x="532.6" y="1027.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="535.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.10%)</title><rect x="532.6" y="1011.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="535.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.07%)</title><rect x="532.9" y="995.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="535.9" y="1006.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (9 samples, 0.12%)</title><rect x="533.9" y="1027.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="536.9" y="1038.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (6 samples, 0.08%)</title><rect x="534.4" y="1011.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="537.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (6 samples, 0.08%)</title><rect x="534.4" y="995.0" width="0.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (3 samples, 0.04%)</title><rect x="535.3" y="1107.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="538.3" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="535.3" y="1091.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="538.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (22 samples, 0.30%)</title><rect x="536.0" y="1123.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="539.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (5 samples, 0.07%)</title><rect x="536.3" y="1107.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="539.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2 samples, 0.03%)</title><rect x="537.1" y="1107.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="540.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (13 samples, 0.18%)</title><rect x="537.4" y="1107.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="540.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (13 samples, 0.18%)</title><rect x="537.4" y="1091.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="540.4" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (9 samples, 0.12%)</title><rect x="538.1" y="1075.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="541.1" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (9 samples, 0.12%)</title><rect x="538.1" y="1059.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="541.1" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (9 samples, 0.12%)</title><rect x="538.1" y="1043.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="541.1" y="1054.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (6 samples, 0.08%)</title><rect x="538.4" y="1027.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="541.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (2 samples, 0.03%)</title><rect x="538.9" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="541.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (25 samples, 0.34%)</title><rect x="539.5" y="1123.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="542.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (17 samples, 0.23%)</title><rect x="539.8" y="1107.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="542.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (16 samples, 0.22%)</title><rect x="540.0" y="1091.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="543.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (16 samples, 0.22%)</title><rect x="540.0" y="1075.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="543.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (2 samples, 0.03%)</title><rect x="540.2" y="1059.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (8 samples, 0.11%)</title><rect x="540.5" y="1059.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="543.5" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (8 samples, 0.11%)</title><rect x="540.5" y="1043.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (8 samples, 0.11%)</title><rect x="540.5" y="1027.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (8 samples, 0.11%)</title><rect x="540.5" y="1011.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="543.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.11%)</title><rect x="540.5" y="995.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.11%)</title><rect x="540.5" y="979.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="543.5" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (7 samples, 0.10%)</title><rect x="540.7" y="963.0" width="1.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="543.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="540.8" y="947.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="543.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="540.8" y="931.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="543.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="540.8" y="915.0" width="1.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="543.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="541.0" y="899.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="544.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="541.0" y="883.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="544.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="541.0" y="867.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="544.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="541.0" y="851.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="544.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="541.1" y="835.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="544.1" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.03%)</title><rect x="541.8" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="544.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.03%)</title><rect x="541.8" y="1043.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="544.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.04%)</title><rect x="542.1" y="1059.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.04%)</title><rect x="542.1" y="1043.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="545.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.03%)</title><rect x="542.3" y="1027.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="545.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.03%)</title><rect x="542.3" y="1011.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="545.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (2 samples, 0.03%)</title><rect x="542.3" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (5 samples, 0.07%)</title><rect x="542.8" y="1107.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="545.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="542.8" y="1091.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="545.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="542.8" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="545.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.04%)</title><rect x="543.1" y="1091.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.04%)</title><rect x="543.1" y="1075.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.PUT (2 samples, 0.03%)</title><rect x="543.6" y="1187.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.method0 (2 samples, 0.03%)</title><rect x="543.6" y="1171.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="546.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (23 samples, 0.31%)</title><rect x="543.9" y="1187.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (23 samples, 0.31%)</title><rect x="543.9" y="1171.0" width="3.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="546.9" y="1182.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (23 samples, 0.31%)</title><rect x="543.9" y="1155.0" width="3.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.9" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (23 samples, 0.31%)</title><rect x="543.9" y="1139.0" width="3.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.9" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (3 samples, 0.04%)</title><rect x="544.4" y="1123.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="547.4" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (17 samples, 0.23%)</title><rect x="544.9" y="1123.0" width="2.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.9" y="1134.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$119/1304086955.accept (16 samples, 0.22%)</title><rect x="545.0" y="1107.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="548.0" y="1118.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (16 samples, 0.22%)</title><rect x="545.0" y="1091.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="548.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.trim (9 samples, 0.12%)</title><rect x="545.2" y="1075.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="548.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (9 samples, 0.12%)</title><rect x="545.2" y="1059.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="548.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (6 samples, 0.08%)</title><rect x="545.7" y="1043.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="548.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.05%)</title><rect x="545.8" y="1027.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="548.8" y="1038.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.03%)</title><rect x="546.0" y="1011.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="549.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="546.6" y="1075.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="549.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="546.6" y="1059.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="549.6" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.get$Lambda (3 samples, 0.04%)</title><rect x="546.6" y="1043.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="549.6" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.&lt;init&gt; (3 samples, 0.04%)</title><rect x="546.6" y="1027.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="549.6" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.03%)</title><rect x="547.1" y="1075.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.1" y="1086.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$120/466745303.accept (2 samples, 0.03%)</title><rect x="547.1" y="1059.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="550.1" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.03%)</title><rect x="547.1" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (18 samples, 0.25%)</title><rect x="547.6" y="1187.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="550.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (18 samples, 0.25%)</title><rect x="547.6" y="1171.0" width="2.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="550.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (12 samples, 0.16%)</title><rect x="547.8" y="1155.0" width="1.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="550.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1473611564.test (8 samples, 0.11%)</title><rect x="547.9" y="1139.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="550.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (8 samples, 0.11%)</title><rect x="547.9" y="1123.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="550.9" y="1134.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (8 samples, 0.11%)</title><rect x="547.9" y="1107.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="550.9" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (8 samples, 0.11%)</title><rect x="547.9" y="1091.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="550.9" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (8 samples, 0.11%)</title><rect x="547.9" y="1075.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="550.9" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (8 samples, 0.11%)</title><rect x="547.9" y="1059.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="550.9" y="1070.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (6 samples, 0.08%)</title><rect x="548.2" y="1043.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="551.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.08%)</title><rect x="548.2" y="1027.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="551.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.08%)</title><rect x="548.2" y="1011.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="551.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (6 samples, 0.08%)</title><rect x="548.2" y="995.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="551.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="548.7" y="979.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="551.7" y="990.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="548.7" y="963.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.7" y="974.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.03%)</title><rect x="548.7" y="947.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="551.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidValue (2 samples, 0.03%)</title><rect x="549.4" y="1139.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="552.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="549.4" y="1123.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="552.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (5 samples, 0.07%)</title><rect x="549.7" y="1155.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="552.7" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="549.7" y="1139.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="552.7" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="550.0" y="1139.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.0" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="550.0" y="1123.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="553.0" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="550.2" y="1107.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.2" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="550.2" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="553.2" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getFirstResponses (13 samples, 0.18%)</title><rect x="550.7" y="1187.0" width="2.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="553.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/888221754.linkToTargetMethod (5 samples, 0.07%)</title><rect x="551.0" y="1171.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="554.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/472498971.invokeStatic (5 samples, 0.07%)</title><rect x="551.0" y="1155.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="554.0" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils$$Lambda$143/512638028.get$Lambda (5 samples, 0.07%)</title><rect x="551.0" y="1139.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="554.0" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils$$Lambda$143/512638028.&lt;init&gt; (4 samples, 0.05%)</title><rect x="551.1" y="1123.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="554.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (2 samples, 0.03%)</title><rect x="551.5" y="1107.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="554.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (2 samples, 0.03%)</title><rect x="552.1" y="1171.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="555.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (2 samples, 0.03%)</title><rect x="552.1" y="1155.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (2 samples, 0.03%)</title><rect x="552.1" y="1139.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="555.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (2 samples, 0.03%)</title><rect x="552.1" y="1123.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="555.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (2 samples, 0.03%)</title><rect x="552.1" y="1107.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="555.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (2 samples, 0.03%)</title><rect x="552.1" y="1091.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="555.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (2 samples, 0.03%)</title><rect x="552.1" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.03%)</title><rect x="552.1" y="1059.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="552.1" y="1043.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="555.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (2 samples, 0.03%)</title><rect x="552.4" y="1171.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="555.4" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (16 samples, 0.22%)</title><rect x="552.8" y="1219.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="555.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="553.2" y="1203.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="556.2" y="1214.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.04%)</title><rect x="553.6" y="1203.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.6" y="1214.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="553.7" y="1187.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.7" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.10%)</title><rect x="554.2" y="1203.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.05%)</title><rect x="554.2" y="1187.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="554.5" y="1171.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.04%)</title><rect x="554.9" y="1187.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="555.0" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="558.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (794 samples, 10.87%)</title><rect x="555.3" y="1315.0" width="128.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="558.3" y="1326.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (794 samples, 10.87%)</title><rect x="555.3" y="1299.0" width="128.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.3" y="1310.0">java/util/concur..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="556.8" y="1283.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="559.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (635 samples, 8.69%)</title><rect x="557.3" y="1283.0" width="102.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="560.3" y="1294.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (618 samples, 8.46%)</title><rect x="559.2" y="1267.0" width="99.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="562.2" y="1278.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (616 samples, 8.43%)</title><rect x="559.5" y="1251.0" width="99.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="562.5" y="1262.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (308 samples, 4.22%)</title><rect x="560.0" y="1235.0" width="49.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="563.0" y="1246.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (308 samples, 4.22%)</title><rect x="560.0" y="1219.0" width="49.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="563.0" y="1230.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeNull (2 samples, 0.03%)</title><rect x="560.5" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="560.5" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="563.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.07%)</title><rect x="560.8" y="1203.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="563.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (4 samples, 0.05%)</title><rect x="561.0" y="1187.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="564.0" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$278/895497718.run (298 samples, 4.08%)</title><rect x="561.6" y="1203.0" width="48.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="564.6" y="1214.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$executeIfProxied$10 (297 samples, 4.06%)</title><rect x="561.8" y="1187.0" width="48.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="564.8" y="1198.0">ru/m..</text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.04%)</title><rect x="562.1" y="1171.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="562.3" y="1155.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="562.3" y="1139.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="565.3" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="562.6" y="1171.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="565.6" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (5 samples, 0.07%)</title><rect x="562.6" y="1155.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="565.6" y="1166.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.05%)</title><rect x="562.8" y="1139.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="565.8" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="563.1" y="1123.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="566.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.03%)</title><rect x="563.1" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="566.1" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.upsert (91 samples, 1.25%)</title><rect x="563.6" y="1171.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.6" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.upsert (91 samples, 1.25%)</title><rect x="563.6" y="1155.0" width="14.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="566.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (4 samples, 0.05%)</title><rect x="563.7" y="1139.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="566.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (4 samples, 0.05%)</title><rect x="563.7" y="1123.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="566.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (4 samples, 0.05%)</title><rect x="563.7" y="1107.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="566.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.03%)</title><rect x="564.1" y="1091.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="567.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.03%)</title><rect x="564.1" y="1075.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="567.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock (4 samples, 0.05%)</title><rect x="564.4" y="1139.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="567.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.releaseShared (2 samples, 0.03%)</title><rect x="564.7" y="1123.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="567.7" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.upsert (80 samples, 1.09%)</title><rect x="565.0" y="1139.0" width="13.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (73 samples, 1.00%)</title><rect x="565.5" y="1123.0" width="11.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (71 samples, 0.97%)</title><rect x="565.8" y="1107.0" width="11.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.04%)</title><rect x="567.9" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="570.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.04%)</title><rect x="567.9" y="1075.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="570.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addCount (4 samples, 0.05%)</title><rect x="568.4" y="1091.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="571.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (5 samples, 0.07%)</title><rect x="569.1" y="1091.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="572.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.addIndices (2 samples, 0.03%)</title><rect x="569.4" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="572.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (45 samples, 0.62%)</title><rect x="569.9" y="1091.0" width="7.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="572.9" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (38 samples, 0.52%)</title><rect x="571.0" y="1075.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.0" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (37 samples, 0.51%)</title><rect x="571.2" y="1059.0" width="5.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="574.2" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (6 samples, 0.08%)</title><rect x="571.8" y="1043.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="574.8" y="1054.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (22 samples, 0.30%)</title><rect x="573.0" y="1043.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="576.0" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (15 samples, 0.21%)</title><rect x="574.1" y="1027.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="577.1" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (12 samples, 0.16%)</title><rect x="574.6" y="1011.0" width="1.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="577.6" y="1022.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (4 samples, 0.05%)</title><rect x="576.5" y="1043.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="579.5" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.of (3 samples, 0.04%)</title><rect x="577.5" y="1123.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="580.5" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.setToFlush (2 samples, 0.03%)</title><rect x="578.0" y="1139.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="581.0" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.createEmptyResponse (6 samples, 0.08%)</title><rect x="578.3" y="1171.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="581.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (6 samples, 0.08%)</title><rect x="578.3" y="1155.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="581.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.03%)</title><rect x="578.8" y="1139.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="581.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="578.8" y="1123.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="581.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.sendResponse (189 samples, 2.59%)</title><rect x="579.2" y="1171.0" width="30.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="582.2" y="1182.0">ru..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (189 samples, 2.59%)</title><rect x="579.2" y="1155.0" width="30.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="582.2" y="1166.0">on..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (4 samples, 0.05%)</title><rect x="580.1" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="583.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.05%)</title><rect x="580.1" y="1123.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="583.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.05%)</title><rect x="580.1" y="1107.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="583.1" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="580.4" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="583.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (177 samples, 2.42%)</title><rect x="580.7" y="1139.0" width="28.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="583.7" y="1150.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.12%)</title><rect x="580.9" y="1123.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="583.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.07%)</title><rect x="581.5" y="1107.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="584.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.03%)</title><rect x="581.5" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="584.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="581.8" y="1091.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="584.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.04%)</title><rect x="581.8" y="1075.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="584.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (167 samples, 2.29%)</title><rect x="582.3" y="1123.0" width="27.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="585.3" y="1134.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (165 samples, 2.26%)</title><rect x="582.6" y="1107.0" width="26.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="585.6" y="1118.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (162 samples, 2.22%)</title><rect x="582.8" y="1091.0" width="26.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.8" y="1102.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (159 samples, 2.18%)</title><rect x="583.3" y="1075.0" width="25.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="586.3" y="1086.0">o..</text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="583.6" y="1059.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="586.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="583.6" y="1043.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="586.6" y="1054.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.08%)</title><rect x="583.6" y="1027.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="586.6" y="1038.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="584.1" y="1011.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="587.1" y="1022.0"></text>
</g>
<g>
<title>__send (2 samples, 0.03%)</title><rect x="584.6" y="1027.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="587.6" y="1038.0"></text>
</g>
<g>
<title>__send (149 samples, 2.04%)</title><rect x="584.9" y="1059.0" width="24.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="587.9" y="1070.0">_..</text>
</g>
<g>
<title>[unknown] (147 samples, 2.01%)</title><rect x="585.2" y="1043.0" width="23.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="588.2" y="1054.0">[..</text>
</g>
<g>
<title>[unknown] (147 samples, 2.01%)</title><rect x="585.2" y="1027.0" width="23.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="588.2" y="1038.0">[..</text>
</g>
<g>
<title>[unknown] (145 samples, 1.98%)</title><rect x="585.5" y="1011.0" width="23.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="588.5" y="1022.0">[..</text>
</g>
<g>
<title>[unknown] (145 samples, 1.98%)</title><rect x="585.5" y="995.0" width="23.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="588.5" y="1006.0">[..</text>
</g>
<g>
<title>[unknown] (143 samples, 1.96%)</title><rect x="585.9" y="979.0" width="23.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="588.9" y="990.0">[..</text>
</g>
<g>
<title>[unknown] (142 samples, 1.94%)</title><rect x="586.0" y="963.0" width="23.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="589.0" y="974.0">[..</text>
</g>
<g>
<title>[unknown] (141 samples, 1.93%)</title><rect x="586.2" y="947.0" width="22.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="589.2" y="958.0">[..</text>
</g>
<g>
<title>[unknown] (141 samples, 1.93%)</title><rect x="586.2" y="931.0" width="22.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="589.2" y="942.0">[..</text>
</g>
<g>
<title>[unknown] (129 samples, 1.77%)</title><rect x="588.1" y="915.0" width="20.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="591.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (119 samples, 1.63%)</title><rect x="589.7" y="899.0" width="19.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="592.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 1.59%)</title><rect x="590.2" y="883.0" width="18.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="593.2" y="894.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 1.48%)</title><rect x="591.5" y="867.0" width="17.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="594.5" y="878.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 1.42%)</title><rect x="592.2" y="851.0" width="16.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="595.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 1.38%)</title><rect x="592.7" y="835.0" width="16.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="595.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (96 samples, 1.31%)</title><rect x="593.5" y="819.0" width="15.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="596.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.26%)</title><rect x="594.1" y="803.0" width="14.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="597.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 1.25%)</title><rect x="594.3" y="787.0" width="14.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="597.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (87 samples, 1.19%)</title><rect x="594.9" y="771.0" width="14.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="597.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (81 samples, 1.11%)</title><rect x="595.9" y="755.0" width="13.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="598.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 1.00%)</title><rect x="597.2" y="739.0" width="11.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="600.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.83%)</title><rect x="599.1" y="723.0" width="9.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="602.1" y="734.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.78%)</title><rect x="599.8" y="707.0" width="9.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="602.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.77%)</title><rect x="599.9" y="691.0" width="9.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="602.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.71%)</title><rect x="600.6" y="675.0" width="8.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="603.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.68%)</title><rect x="600.9" y="659.0" width="8.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="603.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.67%)</title><rect x="601.0" y="643.0" width="8.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="604.0" y="654.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.64%)</title><rect x="601.4" y="627.0" width="7.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="604.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.57%)</title><rect x="602.2" y="611.0" width="6.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="605.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.49%)</title><rect x="603.1" y="595.0" width="5.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="606.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.49%)</title><rect x="603.1" y="579.0" width="5.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="606.1" y="590.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.49%)</title><rect x="603.1" y="563.0" width="5.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="606.1" y="574.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.49%)</title><rect x="603.1" y="547.0" width="5.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="606.1" y="558.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.44%)</title><rect x="603.8" y="531.0" width="5.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="606.8" y="542.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.34%)</title><rect x="604.9" y="515.0" width="4.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="607.9" y="526.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.30%)</title><rect x="605.4" y="499.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="608.4" y="510.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="606.2" y="483.0" width="2.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="609.2" y="494.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="606.2" y="467.0" width="2.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="609.2" y="478.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="606.2" y="451.0" width="2.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="609.2" y="462.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="607.7" y="435.0" width="1.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="610.7" y="446.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="609.0" y="1091.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="612.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="609.3" y="1139.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (305 samples, 4.17%)</title><rect x="609.8" y="1235.0" width="49.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.8" y="1246.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (305 samples, 4.17%)</title><rect x="609.8" y="1219.0" width="49.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.8" y="1230.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (79 samples, 1.08%)</title><rect x="609.8" y="1203.0" width="12.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (79 samples, 1.08%)</title><rect x="609.8" y="1187.0" width="12.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (4 samples, 0.05%)</title><rect x="609.8" y="1171.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (2 samples, 0.03%)</title><rect x="609.9" y="1155.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (75 samples, 1.03%)</title><rect x="610.4" y="1171.0" width="12.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (75 samples, 1.03%)</title><rect x="610.4" y="1155.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="613.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (27 samples, 0.37%)</title><rect x="610.4" y="1139.0" width="4.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="613.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (24 samples, 0.33%)</title><rect x="610.7" y="1123.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="613.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.isDone (2 samples, 0.03%)</title><rect x="610.7" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="613.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (22 samples, 0.30%)</title><rect x="611.1" y="1107.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (19 samples, 0.26%)</title><rect x="611.2" y="1091.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="614.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (18 samples, 0.25%)</title><rect x="611.2" y="1075.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="614.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown (6 samples, 0.08%)</title><rect x="612.7" y="1059.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="615.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.tryTerminate (2 samples, 0.03%)</title><rect x="614.3" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="617.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (48 samples, 0.66%)</title><rect x="614.8" y="1139.0" width="7.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (38 samples, 0.52%)</title><rect x="614.9" y="1123.0" width="6.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (38 samples, 0.52%)</title><rect x="614.9" y="1107.0" width="6.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="617.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (38 samples, 0.52%)</title><rect x="614.9" y="1091.0" width="6.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="617.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (38 samples, 0.52%)</title><rect x="614.9" y="1075.0" width="6.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (36 samples, 0.49%)</title><rect x="615.1" y="1059.0" width="5.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="618.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (36 samples, 0.49%)</title><rect x="615.1" y="1043.0" width="5.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="618.1" y="1054.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.15%)</title><rect x="615.4" y="1027.0" width="1.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="618.4" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.04%)</title><rect x="615.6" y="1011.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="618.6" y="1022.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.05%)</title><rect x="616.2" y="1011.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="619.2" y="1022.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="616.9" y="1011.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="619.9" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (22 samples, 0.30%)</title><rect x="617.4" y="1027.0" width="3.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="620.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.29%)</title><rect x="617.5" y="1011.0" width="3.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="620.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.29%)</title><rect x="617.5" y="995.0" width="3.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="620.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.29%)</title><rect x="617.5" y="979.0" width="3.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="620.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.29%)</title><rect x="617.5" y="963.0" width="3.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="620.5" y="974.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.29%)</title><rect x="617.5" y="947.0" width="3.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="620.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.25%)</title><rect x="618.0" y="931.0" width="2.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="621.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="618.2" y="915.0" width="2.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="621.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.21%)</title><rect x="618.5" y="899.0" width="2.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="621.5" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.12%)</title><rect x="621.1" y="1123.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.12%)</title><rect x="621.1" y="1107.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="624.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.12%)</title><rect x="621.1" y="1091.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.08%)</title><rect x="621.1" y="1075.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (2 samples, 0.03%)</title><rect x="621.1" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="624.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (2 samples, 0.03%)</title><rect x="621.1" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="624.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (2 samples, 0.03%)</title><rect x="621.1" y="1027.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="624.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.03%)</title><rect x="621.1" y="1011.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="624.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.05%)</title><rect x="621.4" y="1059.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="624.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.05%)</title><rect x="621.4" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="624.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.05%)</title><rect x="621.4" y="1027.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="624.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (4 samples, 0.05%)</title><rect x="621.4" y="1011.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.04%)</title><rect x="622.0" y="1075.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.04%)</title><rect x="622.0" y="1059.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.04%)</title><rect x="622.0" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.04%)</title><rect x="622.0" y="1027.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="625.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (3 samples, 0.04%)</title><rect x="622.0" y="1011.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="625.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (226 samples, 3.09%)</title><rect x="622.5" y="1203.0" width="36.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="625.5" y="1214.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (26 samples, 0.36%)</title><rect x="622.5" y="1187.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="625.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (26 samples, 0.36%)</title><rect x="622.5" y="1171.0" width="4.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (26 samples, 0.36%)</title><rect x="622.5" y="1155.0" width="4.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (26 samples, 0.36%)</title><rect x="622.5" y="1139.0" width="4.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="625.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (24 samples, 0.33%)</title><rect x="622.5" y="1123.0" width="3.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="625.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (24 samples, 0.33%)</title><rect x="622.5" y="1107.0" width="3.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="625.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (24 samples, 0.33%)</title><rect x="622.5" y="1091.0" width="3.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="625.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (24 samples, 0.33%)</title><rect x="622.5" y="1075.0" width="3.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="625.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (24 samples, 0.33%)</title><rect x="622.5" y="1059.0" width="3.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="625.5" y="1070.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="623.8" y="1043.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="626.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (5 samples, 0.07%)</title><rect x="624.5" y="1043.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="627.5" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (2 samples, 0.03%)</title><rect x="625.3" y="1043.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="628.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$142/1569487664.accept (3 samples, 0.04%)</title><rect x="625.6" y="1043.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="628.6" y="1054.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.03%)</title><rect x="626.1" y="1043.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="629.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$322/169185775.accept (180 samples, 2.46%)</title><rect x="626.9" y="1187.0" width="29.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="629.9" y="1198.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$upsert$4 (178 samples, 2.44%)</title><rect x="627.2" y="1171.0" width="28.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="630.2" y="1182.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.sendResponseIfNecessary (5 samples, 0.07%)</title><rect x="627.4" y="1155.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="630.4" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.getAck (2 samples, 0.03%)</title><rect x="627.9" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="630.9" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.sendResponse (172 samples, 2.35%)</title><rect x="628.2" y="1155.0" width="27.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="631.2" y="1166.0">r..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (172 samples, 2.35%)</title><rect x="628.2" y="1139.0" width="27.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.2" y="1150.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="628.5" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="631.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="628.5" y="1107.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="631.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="628.5" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="631.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (166 samples, 2.27%)</title><rect x="628.8" y="1123.0" width="26.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="631.8" y="1134.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.03%)</title><rect x="628.8" y="1107.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="631.8" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.03%)</title><rect x="628.8" y="1091.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="631.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (164 samples, 2.24%)</title><rect x="629.1" y="1107.0" width="26.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="632.1" y="1118.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (164 samples, 2.24%)</title><rect x="629.1" y="1091.0" width="26.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="632.1" y="1102.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (160 samples, 2.19%)</title><rect x="629.6" y="1075.0" width="25.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="632.6" y="1086.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (158 samples, 2.16%)</title><rect x="630.0" y="1059.0" width="25.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="633.0" y="1070.0">o..</text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="630.3" y="1043.0" width="0.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="633.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="630.3" y="1027.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="633.3" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.05%)</title><rect x="630.3" y="1011.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="633.3" y="1022.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="630.6" y="995.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="633.6" y="1006.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="630.6" y="979.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="633.6" y="990.0"></text>
</g>
<g>
<title>__send (150 samples, 2.05%)</title><rect x="631.2" y="1043.0" width="24.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="634.2" y="1054.0">_..</text>
</g>
<g>
<title>[unknown] (149 samples, 2.04%)</title><rect x="631.4" y="1027.0" width="24.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="634.4" y="1038.0">[..</text>
</g>
<g>
<title>[unknown] (149 samples, 2.04%)</title><rect x="631.4" y="1011.0" width="24.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="634.4" y="1022.0">[..</text>
</g>
<g>
<title>[unknown] (148 samples, 2.03%)</title><rect x="631.6" y="995.0" width="23.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="634.6" y="1006.0">[..</text>
</g>
<g>
<title>[unknown] (148 samples, 2.03%)</title><rect x="631.6" y="979.0" width="23.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="634.6" y="990.0">[..</text>
</g>
<g>
<title>[unknown] (146 samples, 2.00%)</title><rect x="631.9" y="963.0" width="23.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="634.9" y="974.0">[..</text>
</g>
<g>
<title>[unknown] (144 samples, 1.97%)</title><rect x="632.2" y="947.0" width="23.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="635.2" y="958.0">[..</text>
</g>
<g>
<title>[unknown] (142 samples, 1.94%)</title><rect x="632.5" y="931.0" width="23.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="635.5" y="942.0">[..</text>
</g>
<g>
<title>[unknown] (142 samples, 1.94%)</title><rect x="632.5" y="915.0" width="23.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="635.5" y="926.0">[..</text>
</g>
<g>
<title>[unknown] (135 samples, 1.85%)</title><rect x="633.7" y="899.0" width="21.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="636.7" y="910.0">[..</text>
</g>
<g>
<title>[unknown] (132 samples, 1.81%)</title><rect x="634.2" y="883.0" width="21.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="637.2" y="894.0">[..</text>
</g>
<g>
<title>[unknown] (123 samples, 1.68%)</title><rect x="635.6" y="867.0" width="19.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="638.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.51%)</title><rect x="637.7" y="851.0" width="17.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="640.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.37%)</title><rect x="639.3" y="835.0" width="16.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="642.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (100 samples, 1.37%)</title><rect x="639.3" y="819.0" width="16.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="642.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.33%)</title><rect x="639.8" y="803.0" width="15.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="642.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (97 samples, 1.33%)</title><rect x="639.8" y="787.0" width="15.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="642.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (96 samples, 1.31%)</title><rect x="640.0" y="771.0" width="15.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="643.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.26%)</title><rect x="640.6" y="755.0" width="14.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="643.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.22%)</title><rect x="641.1" y="739.0" width="14.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="644.1" y="750.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.18%)</title><rect x="641.6" y="723.0" width="13.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="644.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (73 samples, 1.00%)</title><rect x="643.7" y="707.0" width="11.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="646.7" y="718.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.92%)</title><rect x="644.7" y="691.0" width="10.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="647.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 0.83%)</title><rect x="645.6" y="675.0" width="9.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="648.6" y="686.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.81%)</title><rect x="645.9" y="659.0" width="9.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="648.9" y="670.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.77%)</title><rect x="646.4" y="643.0" width="9.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="649.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 0.77%)</title><rect x="646.4" y="627.0" width="9.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="649.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 0.73%)</title><rect x="646.9" y="611.0" width="8.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="649.9" y="622.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 0.68%)</title><rect x="647.4" y="595.0" width="8.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="650.4" y="606.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.66%)</title><rect x="647.7" y="579.0" width="7.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="650.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.66%)</title><rect x="647.7" y="563.0" width="7.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="650.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 0.66%)</title><rect x="647.7" y="547.0" width="7.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="650.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.64%)</title><rect x="647.9" y="531.0" width="7.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="650.9" y="542.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.62%)</title><rect x="648.2" y="515.0" width="7.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="651.2" y="526.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.53%)</title><rect x="649.2" y="499.0" width="6.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="652.2" y="510.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.52%)</title><rect x="649.3" y="483.0" width="6.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="652.3" y="494.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.41%)</title><rect x="650.6" y="467.0" width="4.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="653.6" y="478.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.36%)</title><rect x="651.3" y="451.0" width="4.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="654.3" y="462.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.34%)</title><rect x="651.4" y="435.0" width="4.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="654.4" y="446.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.33%)</title><rect x="651.6" y="419.0" width="3.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="654.6" y="430.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="655.6" y="1123.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="658.6" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils$$Lambda$143/512638028.accept (19 samples, 0.26%)</title><rect x="656.0" y="1187.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.0" y="1198.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.lambda$getFirstResponses$0 (19 samples, 0.26%)</title><rect x="656.0" y="1171.0" width="3.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="659.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7 samples, 0.10%)</title><rect x="656.3" y="1155.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (6 samples, 0.08%)</title><rect x="656.4" y="1139.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (6 samples, 0.08%)</title><rect x="656.4" y="1123.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.4" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (6 samples, 0.08%)</title><rect x="656.4" y="1107.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.4" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (6 samples, 0.08%)</title><rect x="656.4" y="1091.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="659.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (6 samples, 0.08%)</title><rect x="656.4" y="1075.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="659.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (6 samples, 0.08%)</title><rect x="656.4" y="1059.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="659.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (6 samples, 0.08%)</title><rect x="656.4" y="1043.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="659.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (6 samples, 0.08%)</title><rect x="656.4" y="1027.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="659.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.08%)</title><rect x="656.4" y="1011.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="659.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.08%)</title><rect x="656.4" y="995.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="659.4" y="1006.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.08%)</title><rect x="656.4" y="979.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="659.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="656.4" y="963.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="659.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="656.4" y="947.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="659.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="656.4" y="931.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="659.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="656.4" y="915.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="659.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="656.4" y="899.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="659.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="656.6" y="883.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="659.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="656.6" y="867.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="659.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="656.9" y="851.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="659.9" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (9 samples, 0.12%)</title><rect x="657.6" y="1155.0" width="1.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="660.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (5 samples, 0.07%)</title><rect x="659.0" y="1267.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="662.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (5 samples, 0.07%)</title><rect x="659.0" y="1251.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="662.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (5 samples, 0.07%)</title><rect x="659.0" y="1235.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="662.0" y="1246.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.03%)</title><rect x="659.0" y="1219.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="662.0" y="1230.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.04%)</title><rect x="659.3" y="1219.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="662.3" y="1230.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="659.3" y="1203.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="662.3" y="1214.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="659.3" y="1187.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="662.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="659.3" y="1171.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="662.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="659.3" y="1155.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="662.3" y="1166.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="659.3" y="1139.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="662.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="659.3" y="1123.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="662.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="659.3" y="1107.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="662.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="659.3" y="1091.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="662.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (85 samples, 1.16%)</title><rect x="659.8" y="1283.0" width="13.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="662.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (2 samples, 0.03%)</title><rect x="659.8" y="1267.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="662.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (83 samples, 1.14%)</title><rect x="660.2" y="1267.0" width="13.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="663.2" y="1278.0"></text>
</g>
<g>
<title>Unsafe_Park (30 samples, 0.41%)</title><rect x="660.8" y="1251.0" width="4.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="663.8" y="1262.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.03%)</title><rect x="661.3" y="1235.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="664.3" y="1246.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.08%)</title><rect x="661.8" y="1235.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="664.8" y="1246.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="662.1" y="1219.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="665.1" y="1230.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (2 samples, 0.03%)</title><rect x="662.9" y="1235.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="665.9" y="1246.0"></text>
</g>
<g>
<title>__lll_unlock_wake (10 samples, 0.14%)</title><rect x="663.2" y="1235.0" width="1.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="666.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="663.5" y="1219.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="666.5" y="1230.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="663.5" y="1203.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="666.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.10%)</title><rect x="663.7" y="1187.0" width="1.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="666.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.10%)</title><rect x="663.7" y="1171.0" width="1.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="666.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="663.9" y="1155.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="666.9" y="1166.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="665.3" y="1235.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="668.3" y="1246.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 0.67%)</title><rect x="665.6" y="1251.0" width="8.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="668.6" y="1262.0"></text>
</g>
<g>
<title>__pthread_cond_wait (43 samples, 0.59%)</title><rect x="665.6" y="1235.0" width="7.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="668.6" y="1246.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.48%)</title><rect x="666.9" y="1219.0" width="5.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="669.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.48%)</title><rect x="666.9" y="1203.0" width="5.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="669.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.44%)</title><rect x="667.4" y="1187.0" width="5.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="670.4" y="1198.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.44%)</title><rect x="667.4" y="1171.0" width="5.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="670.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.40%)</title><rect x="667.9" y="1155.0" width="4.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="670.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.36%)</title><rect x="668.4" y="1139.0" width="4.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="671.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.26%)</title><rect x="669.5" y="1123.0" width="3.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="672.5" y="1134.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="670.7" y="1107.0" width="1.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="673.7" y="1118.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.16%)</title><rect x="670.7" y="1091.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="673.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="672.3" y="1075.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="675.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="672.3" y="1059.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="675.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="672.3" y="1043.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="675.3" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="672.3" y="1027.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="675.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="672.3" y="1011.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="675.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="672.3" y="995.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="675.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="672.3" y="979.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="675.3" y="990.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="672.9" y="1235.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="675.9" y="1246.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (2 samples, 0.03%)</title><rect x="673.2" y="1235.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="676.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (61 samples, 0.83%)</title><rect x="673.6" y="1283.0" width="9.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="676.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (60 samples, 0.82%)</title><rect x="673.7" y="1267.0" width="9.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="676.7" y="1278.0"></text>
</g>
<g>
<title>Unsafe_Park (24 samples, 0.33%)</title><rect x="673.9" y="1251.0" width="3.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="676.9" y="1262.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (9 samples, 0.12%)</title><rect x="674.5" y="1235.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="677.5" y="1246.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="675.2" y="1219.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="678.2" y="1230.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (3 samples, 0.04%)</title><rect x="675.5" y="1219.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="678.5" y="1230.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.05%)</title><rect x="676.1" y="1235.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="679.1" y="1246.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="676.3" y="1219.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="679.3" y="1230.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="676.3" y="1203.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="679.3" y="1214.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="676.3" y="1187.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="679.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="676.5" y="1171.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="679.5" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.03%)</title><rect x="676.8" y="1235.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="679.8" y="1246.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="677.1" y="1235.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="680.1" y="1246.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (31 samples, 0.42%)</title><rect x="677.8" y="1251.0" width="5.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="680.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.36%)</title><rect x="678.6" y="1235.0" width="4.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="681.6" y="1246.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.36%)</title><rect x="678.6" y="1219.0" width="4.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="681.6" y="1230.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.34%)</title><rect x="678.7" y="1203.0" width="4.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="681.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.31%)</title><rect x="679.0" y="1187.0" width="3.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="682.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.30%)</title><rect x="679.2" y="1171.0" width="3.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="682.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.27%)</title><rect x="679.5" y="1155.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="682.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="680.0" y="1139.0" width="2.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="683.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.22%)</title><rect x="680.2" y="1123.0" width="2.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="683.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.14%)</title><rect x="681.1" y="1107.0" width="1.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="684.1" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="682.3" y="1091.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="685.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="682.3" y="1075.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="685.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="682.3" y="1059.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="685.3" y="1070.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="682.8" y="1251.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="685.8" y="1262.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.03%)</title><rect x="683.1" y="1251.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="686.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (516 samples, 7.06%)</title><rect x="683.6" y="1315.0" width="83.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="686.6" y="1326.0">jdk/inter..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.05%)</title><rect x="689.2" y="1299.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="692.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.05%)</title><rect x="689.2" y="1283.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="692.2" y="1294.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="689.4" y="1267.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="692.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="689.9" y="1299.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="692.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="690.0" y="1283.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/341748265.linkToTargetMethod (2 samples, 0.03%)</title><rect x="690.4" y="1299.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="693.4" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="690.4" y="1283.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$248/1217883835.get$Lambda (2 samples, 0.03%)</title><rect x="690.4" y="1267.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="693.4" y="1278.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (2 samples, 0.03%)</title><rect x="690.8" y="1299.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="693.8" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (2 samples, 0.03%)</title><rect x="691.2" y="1299.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="694.2" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (2 samples, 0.03%)</title><rect x="691.5" y="1299.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="694.5" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.04%)</title><rect x="691.8" y="1299.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="694.8" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (8 samples, 0.11%)</title><rect x="692.3" y="1299.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="695.3" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (107 samples, 1.46%)</title><rect x="693.6" y="1299.0" width="17.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.6" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementAt (4 samples, 0.05%)</title><rect x="693.9" y="1283.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="696.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (2 samples, 0.03%)</title><rect x="694.2" y="1267.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="697.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/1428665908.accept (95 samples, 1.30%)</title><rect x="694.6" y="1283.0" width="15.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="697.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (95 samples, 1.30%)</title><rect x="694.6" y="1267.0" width="15.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="697.6" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (95 samples, 1.30%)</title><rect x="694.6" y="1251.0" width="15.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="697.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (95 samples, 1.30%)</title><rect x="694.6" y="1235.0" width="15.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (95 samples, 1.30%)</title><rect x="694.6" y="1219.0" width="15.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.04%)</title><rect x="694.7" y="1203.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="697.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.04%)</title><rect x="694.7" y="1187.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="697.7" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.03%)</title><rect x="694.7" y="1171.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.7" y="1182.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.03%)</title><rect x="694.7" y="1155.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.7" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="694.7" y="1139.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="697.7" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.03%)</title><rect x="694.7" y="1123.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="697.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (91 samples, 1.25%)</title><rect x="695.2" y="1203.0" width="14.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="698.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (91 samples, 1.25%)</title><rect x="695.2" y="1187.0" width="14.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (91 samples, 1.25%)</title><rect x="695.2" y="1171.0" width="14.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="698.2" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (89 samples, 1.22%)</title><rect x="695.5" y="1155.0" width="14.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="698.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (87 samples, 1.19%)</title><rect x="695.7" y="1139.0" width="14.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="698.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$179/877950871.run (85 samples, 1.16%)</title><rect x="695.8" y="1123.0" width="13.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="698.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (84 samples, 1.15%)</title><rect x="695.8" y="1107.0" width="13.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="698.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (13 samples, 0.18%)</title><rect x="696.3" y="1091.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (12 samples, 0.16%)</title><rect x="696.5" y="1075.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="699.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (10 samples, 0.14%)</title><rect x="696.8" y="1059.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="699.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.14%)</title><rect x="696.8" y="1043.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="699.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.14%)</title><rect x="696.8" y="1027.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="699.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.12%)</title><rect x="696.8" y="1011.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="699.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.12%)</title><rect x="696.8" y="995.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="699.8" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.12%)</title><rect x="696.8" y="979.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="699.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (7 samples, 0.10%)</title><rect x="696.8" y="963.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="699.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (7 samples, 0.10%)</title><rect x="696.8" y="947.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="699.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (7 samples, 0.10%)</title><rect x="696.8" y="931.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (7 samples, 0.10%)</title><rect x="696.8" y="915.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="699.8" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (7 samples, 0.10%)</title><rect x="696.8" y="899.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="699.8" y="910.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (7 samples, 0.10%)</title><rect x="696.8" y="883.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="699.8" y="894.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.08%)</title><rect x="697.0" y="867.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="700.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="697.0" y="851.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="700.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="697.0" y="835.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="700.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="697.0" y="819.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="700.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="697.0" y="803.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="700.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="697.0" y="787.0" width="0.9" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="700.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="697.0" y="771.0" width="0.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="700.0" y="782.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="697.0" y="755.0" width="0.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="700.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="697.0" y="739.0" width="0.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="700.0" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="697.9" y="963.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="700.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="697.9" y="947.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="700.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.03%)</title><rect x="697.9" y="931.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="700.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.03%)</title><rect x="697.9" y="915.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="700.9" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (2 samples, 0.03%)</title><rect x="697.9" y="899.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="700.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.04%)</title><rect x="698.6" y="1091.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="701.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (62 samples, 0.85%)</title><rect x="699.1" y="1091.0" width="10.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="702.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (3 samples, 0.04%)</title><rect x="699.6" y="1075.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="702.6" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.03%)</title><rect x="699.6" y="1059.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="702.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (3 samples, 0.04%)</title><rect x="700.0" y="1075.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="703.0" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (53 samples, 0.73%)</title><rect x="700.5" y="1075.0" width="8.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="703.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.04%)</title><rect x="701.0" y="1059.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="704.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.04%)</title><rect x="701.0" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="704.0" y="1054.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (47 samples, 0.64%)</title><rect x="701.5" y="1059.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (47 samples, 0.64%)</title><rect x="701.5" y="1043.0" width="7.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="704.5" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (5 samples, 0.07%)</title><rect x="702.0" y="1027.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="705.0" y="1038.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (5 samples, 0.07%)</title><rect x="702.0" y="1011.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="705.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.04%)</title><rect x="702.3" y="995.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="705.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (2 samples, 0.03%)</title><rect x="702.5" y="979.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="705.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (2 samples, 0.03%)</title><rect x="702.5" y="963.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="705.5" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (37 samples, 0.51%)</title><rect x="702.8" y="1027.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="705.8" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (35 samples, 0.48%)</title><rect x="703.1" y="1011.0" width="5.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="706.1" y="1022.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (34 samples, 0.47%)</title><rect x="703.3" y="995.0" width="5.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="706.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.44%)</title><rect x="703.6" y="979.0" width="5.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="706.6" y="990.0"></text>
</g>
<g>
<title>read (32 samples, 0.44%)</title><rect x="703.6" y="963.0" width="5.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="706.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.40%)</title><rect x="704.1" y="947.0" width="4.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="707.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.40%)</title><rect x="704.1" y="931.0" width="4.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="707.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.37%)</title><rect x="704.4" y="915.0" width="4.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="707.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.37%)</title><rect x="704.4" y="899.0" width="4.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="707.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.37%)</title><rect x="704.4" y="883.0" width="4.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="707.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.36%)</title><rect x="704.6" y="867.0" width="4.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="707.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.36%)</title><rect x="704.6" y="851.0" width="4.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="707.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.33%)</title><rect x="704.9" y="835.0" width="3.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="707.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.27%)</title><rect x="705.5" y="819.0" width="3.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="708.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.26%)</title><rect x="705.7" y="803.0" width="3.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="708.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.25%)</title><rect x="705.9" y="787.0" width="2.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="708.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.21%)</title><rect x="706.3" y="771.0" width="2.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="709.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.18%)</title><rect x="706.7" y="755.0" width="2.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="709.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="707.5" y="739.0" width="1.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="710.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.04%)</title><rect x="708.3" y="723.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="711.3" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (2 samples, 0.03%)</title><rect x="709.1" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="712.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (2 samples, 0.03%)</title><rect x="709.1" y="1075.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="712.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$254/905390100.accept (6 samples, 0.08%)</title><rect x="709.9" y="1283.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="712.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (6 samples, 0.08%)</title><rect x="709.9" y="1267.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="712.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$248/1217883835.run (6 samples, 0.08%)</title><rect x="709.9" y="1251.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (6 samples, 0.08%)</title><rect x="709.9" y="1235.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (6 samples, 0.08%)</title><rect x="709.9" y="1219.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="712.9" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (2 samples, 0.03%)</title><rect x="710.2" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.2" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (2 samples, 0.03%)</title><rect x="710.2" y="1187.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="713.2" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (2 samples, 0.03%)</title><rect x="710.5" y="1203.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.5" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (3 samples, 0.04%)</title><rect x="710.9" y="1299.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.9" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (4 samples, 0.05%)</title><rect x="711.5" y="1299.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.5" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (4 samples, 0.05%)</title><rect x="711.5" y="1283.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="714.5" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (12 samples, 0.16%)</title><rect x="712.2" y="1299.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="715.2" y="1310.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.14%)</title><rect x="712.3" y="1283.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.3" y="1294.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (9 samples, 0.12%)</title><rect x="712.5" y="1267.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.5" y="1278.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (9 samples, 0.12%)</title><rect x="712.5" y="1251.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.5" y="1262.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (9 samples, 0.12%)</title><rect x="712.5" y="1235.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="715.5" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (9 samples, 0.12%)</title><rect x="712.5" y="1219.0" width="1.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="715.5" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (2 samples, 0.03%)</title><rect x="713.0" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$247/1732387286.accept (2 samples, 0.03%)</title><rect x="713.0" y="1187.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="716.0" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.begin (2 samples, 0.03%)</title><rect x="713.6" y="1203.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="716.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (56 samples, 0.77%)</title><rect x="714.1" y="1299.0" width="9.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="717.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$186/606969358.run (43 samples, 0.59%)</title><rect x="714.1" y="1283.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.1" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (43 samples, 0.59%)</title><rect x="714.1" y="1267.0" width="6.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="717.1" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.channel (3 samples, 0.04%)</title><rect x="714.9" y="1251.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="717.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (35 samples, 0.48%)</title><rect x="715.4" y="1251.0" width="5.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (35 samples, 0.48%)</title><rect x="715.4" y="1235.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="718.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (34 samples, 0.47%)</title><rect x="715.5" y="1219.0" width="5.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="718.5" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (34 samples, 0.47%)</title><rect x="715.5" y="1203.0" width="5.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="718.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$179/877950871.run (32 samples, 0.44%)</title><rect x="715.9" y="1187.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="718.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (31 samples, 0.42%)</title><rect x="716.0" y="1171.0" width="5.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="719.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (31 samples, 0.42%)</title><rect x="716.0" y="1155.0" width="5.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (2 samples, 0.03%)</title><rect x="717.6" y="1139.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="720.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (18 samples, 0.25%)</title><rect x="718.0" y="1139.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="721.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (9 samples, 0.12%)</title><rect x="718.0" y="1123.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (9 samples, 0.12%)</title><rect x="718.0" y="1107.0" width="1.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (9 samples, 0.12%)</title><rect x="718.0" y="1091.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="721.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (7 samples, 0.10%)</title><rect x="718.3" y="1075.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="721.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="718.3" y="1059.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="721.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="718.3" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="721.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$260/530077054.get$Lambda (2 samples, 0.03%)</title><rect x="718.3" y="1027.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.3" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5 samples, 0.07%)</title><rect x="718.6" y="1059.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="721.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.05%)</title><rect x="718.8" y="1043.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="721.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.05%)</title><rect x="718.8" y="1027.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.03%)</title><rect x="719.1" y="1011.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="722.1" y="1022.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.03%)</title><rect x="719.1" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="722.1" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="719.1" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.1" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (2 samples, 0.03%)</title><rect x="719.1" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="722.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (9 samples, 0.12%)</title><rect x="719.4" y="1123.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="722.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.12%)</title><rect x="719.4" y="1107.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="722.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (9 samples, 0.12%)</title><rect x="719.4" y="1091.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.12%)</title><rect x="719.4" y="1075.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="722.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.12%)</title><rect x="719.4" y="1059.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="722.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (8 samples, 0.11%)</title><rect x="719.6" y="1043.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.05%)</title><rect x="719.7" y="1027.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="722.7" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="719.7" y="1011.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="722.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.03%)</title><rect x="720.1" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="723.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.03%)</title><rect x="720.1" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="723.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.03%)</title><rect x="720.1" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="723.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.03%)</title><rect x="720.1" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="723.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.03%)</title><rect x="720.6" y="1027.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="723.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="720.6" y="1011.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="723.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.03%)</title><rect x="720.6" y="995.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="723.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.03%)</title><rect x="720.6" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$195/874054338.run (13 samples, 0.18%)</title><rect x="721.0" y="1283.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="724.0" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (13 samples, 0.18%)</title><rect x="721.0" y="1267.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="721.4" y="1251.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="721.4" y="1235.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="724.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$255/1801153474.get$Lambda (2 samples, 0.03%)</title><rect x="721.4" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="724.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (9 samples, 0.12%)</title><rect x="721.7" y="1251.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="724.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (9 samples, 0.12%)</title><rect x="721.7" y="1235.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="724.7" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (9 samples, 0.12%)</title><rect x="721.7" y="1219.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="724.7" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (2 samples, 0.03%)</title><rect x="721.7" y="1203.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="724.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (4 samples, 0.05%)</title><rect x="722.2" y="1203.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 0.05%)</title><rect x="722.2" y="1187.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="725.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.05%)</title><rect x="722.2" y="1171.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="725.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 0.05%)</title><rect x="722.2" y="1155.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="725.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.05%)</title><rect x="722.2" y="1139.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="725.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.05%)</title><rect x="722.2" y="1123.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="725.2" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="722.5" y="1107.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="725.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="722.5" y="1091.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="725.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="722.5" y="1075.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="725.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="722.5" y="1059.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="725.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="722.5" y="1043.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="725.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="722.5" y="1027.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="725.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="722.5" y="1011.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="725.5" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="722.5" y="995.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="725.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="722.5" y="979.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="725.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (44 samples, 0.60%)</title><rect x="723.1" y="1299.0" width="7.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="726.1" y="1310.0"></text>
</g>
<g>
<title>java/time/Instant.now (5 samples, 0.07%)</title><rect x="723.9" y="1283.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="726.9" y="1294.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (5 samples, 0.07%)</title><rect x="723.9" y="1267.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="726.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (3 samples, 0.04%)</title><rect x="724.3" y="1251.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="727.3" y="1262.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (3 samples, 0.04%)</title><rect x="724.3" y="1235.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="727.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (34 samples, 0.47%)</title><rect x="724.8" y="1283.0" width="5.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="727.8" y="1294.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.05%)</title><rect x="725.7" y="1267.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="728.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.07%)</title><rect x="726.4" y="1267.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="729.4" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.05%)</title><rect x="726.5" y="1251.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="729.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$$Lambda$307/575866923.get$Lambda (4 samples, 0.05%)</title><rect x="726.5" y="1235.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="729.5" y="1246.0"></text>
</g>
<g>
<title>java/time/Instant.until (3 samples, 0.04%)</title><rect x="727.2" y="1267.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="730.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.nextExpiryDeadline (5 samples, 0.07%)</title><rect x="728.0" y="1267.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="731.0" y="1278.0"></text>
</g>
<g>
<title>java/util/Optional.of (3 samples, 0.04%)</title><rect x="728.3" y="1251.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="731.3" y="1262.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (2 samples, 0.03%)</title><rect x="728.5" y="1235.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="731.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (8 samples, 0.11%)</title><rect x="728.8" y="1267.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="731.8" y="1278.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (3 samples, 0.04%)</title><rect x="729.6" y="1251.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="732.6" y="1262.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (2 samples, 0.03%)</title><rect x="729.8" y="1235.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="732.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (2 samples, 0.03%)</title><rect x="730.2" y="1299.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="733.2" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.03%)</title><rect x="730.6" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="733.6" y="1310.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (2 samples, 0.03%)</title><rect x="730.6" y="1283.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="733.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.isReferenced (4 samples, 0.05%)</title><rect x="730.9" y="1299.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (4 samples, 0.05%)</title><rect x="730.9" y="1283.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="733.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (2 samples, 0.03%)</title><rect x="731.7" y="1299.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="734.7" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (184 samples, 2.52%)</title><rect x="732.2" y="1299.0" width="29.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.2" y="1310.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (183 samples, 2.50%)</title><rect x="732.3" y="1283.0" width="29.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.3" y="1294.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (180 samples, 2.46%)</title><rect x="732.8" y="1267.0" width="29.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="735.8" y="1278.0">su..</text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.03%)</title><rect x="733.1" y="1251.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="736.1" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (93 samples, 1.27%)</title><rect x="733.5" y="1251.0" width="15.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="736.5" y="1262.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (2 samples, 0.03%)</title><rect x="734.0" y="1235.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="737.0" y="1246.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.20%)</title><rect x="734.3" y="1235.0" width="14.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="737.3" y="1246.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.03%)</title><rect x="734.4" y="1219.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="737.4" y="1230.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.03%)</title><rect x="734.8" y="1219.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="737.8" y="1230.0"></text>
</g>
<g>
<title>epoll_wait (83 samples, 1.14%)</title><rect x="735.1" y="1219.0" width="13.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="738.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 1.04%)</title><rect x="736.2" y="1203.0" width="12.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="739.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 1.04%)</title><rect x="736.2" y="1187.0" width="12.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="739.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 0.97%)</title><rect x="737.0" y="1171.0" width="11.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="740.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 0.94%)</title><rect x="737.3" y="1155.0" width="11.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="740.3" y="1166.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 0.89%)</title><rect x="738.0" y="1139.0" width="10.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="741.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.74%)</title><rect x="739.8" y="1123.0" width="8.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="742.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.56%)</title><rect x="741.9" y="1107.0" width="6.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="744.9" y="1118.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.44%)</title><rect x="743.3" y="1091.0" width="5.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="746.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.34%)</title><rect x="744.5" y="1075.0" width="4.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="747.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.15%)</title><rect x="746.7" y="1059.0" width="1.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="749.7" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (62 samples, 0.85%)</title><rect x="748.5" y="1251.0" width="10.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="751.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (2 samples, 0.03%)</title><rect x="748.7" y="1235.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="751.7" y="1246.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.03%)</title><rect x="748.7" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.7" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="749.0" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="752.0" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (51 samples, 0.70%)</title><rect x="749.5" y="1235.0" width="8.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="752.5" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (48 samples, 0.66%)</title><rect x="749.9" y="1219.0" width="7.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="752.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.31%)</title><rect x="750.6" y="1203.0" width="3.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="753.6" y="1214.0"></text>
</g>
<g>
<title>Metadata::is_klass() const volatile (2 samples, 0.03%)</title><rect x="750.6" y="1187.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="753.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="750.6" y="1171.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="753.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="750.6" y="1155.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="753.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="750.6" y="1139.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="753.6" y="1150.0"></text>
</g>
<g>
<title>read (2 samples, 0.03%)</title><rect x="750.6" y="1123.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="753.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="750.6" y="1107.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="753.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="750.6" y="1091.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="753.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="750.6" y="1075.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="753.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="750.6" y="1059.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="753.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.18%)</title><rect x="750.9" y="1187.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="753.9" y="1198.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="750.9" y="1171.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="753.9" y="1182.0"></text>
</g>
<g>
<title>read (2 samples, 0.03%)</title><rect x="751.2" y="1155.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="754.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="751.2" y="1139.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="754.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="751.2" y="1123.0" width="0.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="754.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="751.2" y="1107.0" width="0.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="754.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="751.2" y="1091.0" width="0.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="754.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="751.2" y="1075.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="754.2" y="1086.0"></text>
</g>
<g>
<title>read (9 samples, 0.12%)</title><rect x="751.6" y="1171.0" width="1.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="754.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="751.6" y="1155.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="754.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="751.6" y="1139.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="754.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="751.6" y="1123.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="754.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="751.6" y="1107.0" width="1.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="754.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.10%)</title><rect x="751.9" y="1091.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="754.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.10%)</title><rect x="751.9" y="1075.0" width="1.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="754.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="752.0" y="1059.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="755.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.07%)</title><rect x="752.2" y="1043.0" width="0.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="755.2" y="1054.0"></text>
</g>
<g>
<title>read (8 samples, 0.11%)</title><rect x="753.0" y="1187.0" width="1.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="756.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="753.0" y="1171.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="756.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="753.0" y="1155.0" width="1.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="756.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="753.0" y="1139.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="756.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="753.0" y="1123.0" width="1.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="756.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="753.0" y="1107.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="756.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.11%)</title><rect x="753.0" y="1091.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="756.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.10%)</title><rect x="753.2" y="1075.0" width="1.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="756.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="753.3" y="1059.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="756.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="753.7" y="1043.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="756.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="754.0" y="1027.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="757.0" y="1038.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.04%)</title><rect x="754.5" y="1203.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="757.5" y="1214.0"></text>
</g>
<g>
<title>read (17 samples, 0.23%)</title><rect x="754.9" y="1203.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="757.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.21%)</title><rect x="755.3" y="1187.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="758.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.21%)</title><rect x="755.3" y="1171.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="758.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.21%)</title><rect x="755.3" y="1155.0" width="2.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="758.3" y="1166.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.21%)</title><rect x="755.3" y="1139.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="758.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="755.4" y="1123.0" width="2.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="758.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="755.4" y="1107.0" width="2.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="758.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.19%)</title><rect x="755.4" y="1091.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="758.4" y="1102.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.18%)</title><rect x="755.6" y="1075.0" width="2.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="758.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="756.2" y="1059.0" width="1.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="759.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.10%)</title><rect x="756.6" y="1043.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="759.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="757.0" y="1027.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="760.0" y="1038.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (5 samples, 0.07%)</title><rect x="757.7" y="1235.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="760.7" y="1246.0"></text>
</g>
<g>
<title>java/util/HashSet.contains (4 samples, 0.05%)</title><rect x="757.9" y="1219.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="760.9" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.containsKey (4 samples, 0.05%)</title><rect x="757.9" y="1203.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="760.9" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.04%)</title><rect x="758.0" y="1187.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="761.0" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (16 samples, 0.22%)</title><rect x="758.5" y="1251.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="761.5" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayDeque.pollFirst (9 samples, 0.12%)</title><rect x="759.5" y="1235.0" width="1.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="762.5" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (4 samples, 0.05%)</title><rect x="761.2" y="1251.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.2" y="1262.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (4 samples, 0.05%)</title><rect x="761.2" y="1235.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="764.2" y="1246.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.05%)</title><rect x="761.2" y="1219.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="764.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.05%)</title><rect x="761.2" y="1203.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="764.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.05%)</title><rect x="761.2" y="1187.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="764.2" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (27 samples, 0.37%)</title><rect x="761.9" y="1299.0" width="4.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="764.9" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (26 samples, 0.36%)</title><rect x="762.1" y="1283.0" width="4.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="765.1" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (19 samples, 0.26%)</title><rect x="763.2" y="1267.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="766.2" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (10 samples, 0.14%)</title><rect x="763.3" y="1251.0" width="1.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.14%)</title><rect x="763.3" y="1235.0" width="1.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="766.3" y="1246.0"></text>
</g>
<g>
<title>epoll_wait (10 samples, 0.14%)</title><rect x="763.3" y="1219.0" width="1.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="766.3" y="1230.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="763.5" y="1203.0" width="1.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="766.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.12%)</title><rect x="763.5" y="1187.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="766.5" y="1198.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.10%)</title><rect x="763.8" y="1171.0" width="1.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="766.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.10%)</title><rect x="763.8" y="1155.0" width="1.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="766.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="764.0" y="1139.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="767.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="764.3" y="1123.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="767.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="764.3" y="1107.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="767.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="764.3" y="1091.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="767.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="764.3" y="1075.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="767.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="764.6" y="1059.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="767.6" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (6 samples, 0.08%)</title><rect x="765.0" y="1251.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="768.0" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (2 samples, 0.03%)</title><rect x="765.1" y="1235.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="768.1" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (2 samples, 0.03%)</title><rect x="765.1" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="765.1" y="1203.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="768.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="765.1" y="1187.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="768.1" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (3 samples, 0.04%)</title><rect x="765.4" y="1235.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="768.4" y="1246.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.03%)</title><rect x="765.4" y="1219.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.4" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.put (2 samples, 0.03%)</title><rect x="765.4" y="1203.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="768.4" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (4 samples, 0.05%)</title><rect x="766.3" y="1299.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="769.3" y="1310.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (4 samples, 0.05%)</title><rect x="766.3" y="1283.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.3" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (4 samples, 0.05%)</title><rect x="766.3" y="1267.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="769.3" y="1278.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (760 samples, 10.40%)</title><rect x="767.1" y="1315.0" width="122.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="770.1" y="1326.0">one/nio/server/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.05%)</title><rect x="771.1" y="1299.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="774.1" y="1310.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (114 samples, 1.56%)</title><rect x="771.7" y="1299.0" width="18.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="774.7" y="1310.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.03%)</title><rect x="773.2" y="1283.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="776.2" y="1294.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.03%)</title><rect x="773.2" y="1267.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="776.2" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (103 samples, 1.41%)</title><rect x="773.5" y="1283.0" width="16.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="776.5" y="1294.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (6 samples, 0.08%)</title><rect x="775.0" y="1267.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="778.0" y="1278.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 1.12%)</title><rect x="775.9" y="1267.0" width="13.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="778.9" y="1278.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="775.9" y="1251.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="778.9" y="1262.0"></text>
</g>
<g>
<title>epoll_wait (77 samples, 1.05%)</title><rect x="776.7" y="1251.0" width="12.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="779.7" y="1262.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.96%)</title><rect x="777.9" y="1235.0" width="11.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="780.9" y="1246.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 0.96%)</title><rect x="777.9" y="1219.0" width="11.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="780.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.93%)</title><rect x="778.2" y="1203.0" width="11.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="781.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 0.93%)</title><rect x="778.2" y="1187.0" width="11.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="781.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (67 samples, 0.92%)</title><rect x="778.4" y="1171.0" width="10.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="781.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.71%)</title><rect x="780.8" y="1155.0" width="8.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="783.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.52%)</title><rect x="783.0" y="1139.0" width="6.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="786.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.38%)</title><rect x="784.7" y="1123.0" width="4.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="787.7" y="1134.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.33%)</title><rect x="785.3" y="1107.0" width="3.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="788.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.22%)</title><rect x="786.6" y="1091.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="789.6" y="1102.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="789.2" y="1267.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="792.2" y="1278.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.04%)</title><rect x="789.7" y="1267.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="792.7" y="1278.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (617 samples, 8.44%)</title><rect x="790.2" y="1299.0" width="99.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="793.2" y="1310.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (608 samples, 8.32%)</title><rect x="791.0" y="1283.0" width="98.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="794.0" y="1294.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (331 samples, 4.53%)</title><rect x="791.6" y="1267.0" width="53.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="794.6" y="1278.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (266 samples, 3.64%)</title><rect x="795.8" y="1251.0" width="43.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="798.8" y="1262.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (265 samples, 3.63%)</title><rect x="796.0" y="1235.0" width="42.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="799.0" y="1246.0">one/..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (239 samples, 3.27%)</title><rect x="796.3" y="1219.0" width="38.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="799.3" y="1230.0">Req..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (14 samples, 0.19%)</title><rect x="796.9" y="1203.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="796.9" y="1187.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="799.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (3 samples, 0.04%)</title><rect x="796.9" y="1171.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="799.9" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (4 samples, 0.05%)</title><rect x="797.4" y="1187.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.04%)</title><rect x="797.6" y="1171.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="800.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.04%)</title><rect x="797.6" y="1155.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="800.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="798.1" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="801.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="798.1" y="1171.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="801.1" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.07%)</title><rect x="798.4" y="1187.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="801.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="798.7" y="1171.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="801.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.04%)</title><rect x="798.7" y="1155.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="801.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="798.9" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="801.9" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (221 samples, 3.02%)</title><rect x="799.2" y="1203.0" width="35.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="802.2" y="1214.0">ru/..</text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.14%)</title><rect x="800.3" y="1187.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="803.3" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (8 samples, 0.11%)</title><rect x="800.5" y="1171.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="803.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="800.5" y="1155.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="803.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (6 samples, 0.08%)</title><rect x="800.8" y="1155.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="801.3" y="1139.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="804.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="801.3" y="1123.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="804.3" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (30 samples, 0.41%)</title><rect x="801.9" y="1187.0" width="4.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="804.9" y="1198.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (30 samples, 0.41%)</title><rect x="801.9" y="1171.0" width="4.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.9" y="1182.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (8 samples, 0.11%)</title><rect x="802.1" y="1155.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="805.1" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.04%)</title><rect x="802.9" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="805.9" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (3 samples, 0.04%)</title><rect x="802.9" y="1123.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.9" y="1134.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (18 samples, 0.25%)</title><rect x="803.4" y="1155.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="806.4" y="1166.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (15 samples, 0.21%)</title><rect x="803.7" y="1139.0" width="2.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.7" y="1150.0"></text>
</g>
<g>
<title>java/util/HashSet.add (9 samples, 0.12%)</title><rect x="803.7" y="1123.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="806.7" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.put (8 samples, 0.11%)</title><rect x="803.7" y="1107.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="806.7" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (7 samples, 0.10%)</title><rect x="803.7" y="1091.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="806.7" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (5 samples, 0.07%)</title><rect x="804.0" y="1075.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="807.0" y="1086.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (4 samples, 0.05%)</title><rect x="805.5" y="1123.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="808.5" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (2 samples, 0.03%)</title><rect x="805.5" y="1107.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="808.5" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (2 samples, 0.03%)</title><rect x="805.5" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="808.5" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (2 samples, 0.03%)</title><rect x="805.8" y="1107.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="808.8" y="1118.0"></text>
</g>
<g>
<title>java/util/Set.of (3 samples, 0.04%)</title><rect x="806.3" y="1155.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="809.3" y="1166.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (3 samples, 0.04%)</title><rect x="806.3" y="1139.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="809.3" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (61 samples, 0.83%)</title><rect x="806.8" y="1187.0" width="9.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="809.8" y="1198.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (5 samples, 0.07%)</title><rect x="807.3" y="1171.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="810.3" y="1182.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (4 samples, 0.05%)</title><rect x="807.3" y="1155.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="810.3" y="1166.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (3 samples, 0.04%)</title><rect x="807.4" y="1139.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="810.4" y="1150.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.&lt;init&gt; (3 samples, 0.04%)</title><rect x="807.4" y="1123.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="810.4" y="1134.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (26 samples, 0.36%)</title><rect x="808.1" y="1171.0" width="4.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="811.1" y="1182.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (14 samples, 0.19%)</title><rect x="808.2" y="1155.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="811.2" y="1166.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (10 samples, 0.14%)</title><rect x="808.9" y="1139.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="811.9" y="1150.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (5 samples, 0.07%)</title><rect x="809.5" y="1123.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="812.5" y="1134.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (5 samples, 0.07%)</title><rect x="809.5" y="1107.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="812.5" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.separatorStart (3 samples, 0.04%)</title><rect x="809.9" y="1091.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="812.9" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.indexIn (3 samples, 0.04%)</title><rect x="809.9" y="1075.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="810.0" y="1059.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="813.0" y="1070.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (2 samples, 0.03%)</title><rect x="810.5" y="1155.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="813.5" y="1166.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (6 samples, 0.08%)</title><rect x="811.0" y="1155.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="814.0" y="1166.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (4 samples, 0.05%)</title><rect x="811.3" y="1139.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="814.3" y="1150.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (4 samples, 0.05%)</title><rect x="811.3" y="1123.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="814.3" y="1134.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (4 samples, 0.05%)</title><rect x="811.3" y="1107.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="814.3" y="1118.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (4 samples, 0.05%)</title><rect x="811.3" y="1091.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="814.3" y="1102.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.&lt;init&gt; (4 samples, 0.05%)</title><rect x="811.3" y="1075.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="814.3" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="812.0" y="1155.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="815.0" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.03%)</title><rect x="812.0" y="1139.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="815.0" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="812.0" y="1123.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="815.0" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.03%)</title><rect x="812.0" y="1107.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="815.0" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.03%)</title><rect x="812.0" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="815.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (24 samples, 0.33%)</title><rect x="812.3" y="1171.0" width="3.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="815.3" y="1182.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (24 samples, 0.33%)</title><rect x="812.3" y="1155.0" width="3.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="815.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/Character.digit (18 samples, 0.25%)</title><rect x="812.4" y="1139.0" width="2.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="815.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/Character.digit (18 samples, 0.25%)</title><rect x="812.4" y="1123.0" width="2.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="815.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (18 samples, 0.25%)</title><rect x="812.4" y="1107.0" width="2.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="815.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.03%)</title><rect x="815.3" y="1139.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="818.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.03%)</title><rect x="815.3" y="1123.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="818.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="815.7" y="1139.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.7" y="1150.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.size (3 samples, 0.04%)</title><rect x="816.2" y="1171.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.2" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (113 samples, 1.55%)</title><rect x="816.6" y="1187.0" width="18.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="819.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.04%)</title><rect x="816.6" y="1171.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="819.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.04%)</title><rect x="816.6" y="1155.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="819.6" y="1166.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$111/543001321.get$Lambda (3 samples, 0.04%)</title><rect x="816.6" y="1139.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="819.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (110 samples, 1.51%)</title><rect x="817.1" y="1171.0" width="17.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="820.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (108 samples, 1.48%)</title><rect x="817.4" y="1155.0" width="17.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="820.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (5 samples, 0.07%)</title><rect x="817.8" y="1139.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="820.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (94 samples, 1.29%)</title><rect x="818.6" y="1139.0" width="15.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="821.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (94 samples, 1.29%)</title><rect x="818.6" y="1123.0" width="15.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (94 samples, 1.29%)</title><rect x="818.6" y="1107.0" width="15.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="821.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (94 samples, 1.29%)</title><rect x="818.6" y="1091.0" width="15.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (94 samples, 1.29%)</title><rect x="818.6" y="1075.0" width="15.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="821.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (94 samples, 1.29%)</title><rect x="818.6" y="1059.0" width="15.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="821.6" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Unpark (20 samples, 0.27%)</title><rect x="819.1" y="1043.0" width="3.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="822.1" y="1054.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="819.7" y="1027.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="822.7" y="1038.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.05%)</title><rect x="820.0" y="1027.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="823.0" y="1038.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.05%)</title><rect x="820.7" y="1027.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="823.7" y="1038.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (3 samples, 0.04%)</title><rect x="821.5" y="1027.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="824.5" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.03%)</title><rect x="822.3" y="1043.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="825.3" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (67 samples, 0.92%)</title><rect x="822.9" y="1043.0" width="10.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="825.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.88%)</title><rect x="823.4" y="1027.0" width="10.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="826.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.88%)</title><rect x="823.4" y="1011.0" width="10.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="826.4" y="1022.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 0.82%)</title><rect x="824.1" y="995.0" width="9.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="827.1" y="1006.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 0.81%)</title><rect x="824.2" y="979.0" width="9.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="827.2" y="990.0"></text>
</g>
<g>
<title>[unknown] (57 samples, 0.78%)</title><rect x="824.6" y="963.0" width="9.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="827.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 0.71%)</title><rect x="825.4" y="947.0" width="8.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="828.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.64%)</title><rect x="826.2" y="931.0" width="7.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="829.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.62%)</title><rect x="826.5" y="915.0" width="7.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="829.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.05%)</title><rect x="833.8" y="1139.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="836.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.05%)</title><rect x="833.8" y="1123.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.04%)</title><rect x="833.8" y="1107.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (2 samples, 0.03%)</title><rect x="833.9" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="836.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (2 samples, 0.03%)</title><rect x="833.9" y="1075.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="836.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.03%)</title><rect x="833.9" y="1059.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="836.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.03%)</title><rect x="833.9" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="836.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.04%)</title><rect x="834.4" y="1139.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="837.4" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (9 samples, 0.12%)</title><rect x="835.0" y="1219.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="838.0" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.get (9 samples, 0.12%)</title><rect x="835.0" y="1203.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="838.0" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (9 samples, 0.12%)</title><rect x="835.0" y="1187.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="838.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.equals (4 samples, 0.05%)</title><rect x="835.9" y="1171.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="838.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (14 samples, 0.19%)</title><rect x="836.5" y="1219.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.substring (14 samples, 0.19%)</title><rect x="836.5" y="1203.0" width="2.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="839.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (14 samples, 0.19%)</title><rect x="836.5" y="1187.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="839.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (14 samples, 0.19%)</title><rect x="836.5" y="1171.0" width="2.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="839.5" y="1182.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (5 samples, 0.07%)</title><rect x="836.8" y="1155.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="839.8" y="1166.0"></text>
</g>
<g>
<title>itable stub (5 samples, 0.07%)</title><rect x="837.6" y="1155.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="840.6" y="1166.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="838.4" y="1155.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="841.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (16 samples, 0.22%)</title><rect x="838.8" y="1251.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="841.8" y="1262.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.08%)</title><rect x="839.4" y="1235.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.08%)</title><rect x="839.4" y="1219.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (6 samples, 0.08%)</title><rect x="839.4" y="1203.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="842.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.07%)</title><rect x="839.6" y="1187.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="842.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="840.4" y="1235.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="843.4" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.07%)</title><rect x="840.5" y="1219.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="843.5" y="1230.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.08%)</title><rect x="841.3" y="1251.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="844.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.03%)</title><rect x="841.8" y="1235.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="844.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.03%)</title><rect x="841.8" y="1219.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="844.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="841.8" y="1203.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="844.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="841.8" y="1187.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="844.8" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (9 samples, 0.12%)</title><rect x="842.5" y="1251.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="845.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (5 samples, 0.07%)</title><rect x="843.1" y="1235.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="846.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (5 samples, 0.07%)</title><rect x="843.1" y="1219.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="846.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="843.4" y="1203.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="846.4" y="1214.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.03%)</title><rect x="843.4" y="1187.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="846.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.10%)</title><rect x="843.9" y="1251.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="846.9" y="1262.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.08%)</title><rect x="844.1" y="1235.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="847.1" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (273 samples, 3.74%)</title><rect x="845.1" y="1267.0" width="44.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="848.1" y="1278.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (272 samples, 3.72%)</title><rect x="845.2" y="1251.0" width="43.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="848.2" y="1262.0">one/..</text>
</g>
<g>
<title>[unknown] (36 samples, 0.49%)</title><rect x="845.7" y="1235.0" width="5.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="848.7" y="1246.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.49%)</title><rect x="845.7" y="1219.0" width="5.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="848.7" y="1230.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (30 samples, 0.41%)</title><rect x="845.7" y="1203.0" width="4.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="848.7" y="1214.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (4 samples, 0.05%)</title><rect x="846.7" y="1187.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="849.7" y="1198.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="847.3" y="1187.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="850.3" y="1198.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.04%)</title><rect x="847.6" y="1187.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="850.6" y="1198.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.19%)</title><rect x="848.1" y="1187.0" width="2.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="851.1" y="1198.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="848.5" y="1171.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="851.5" y="1182.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="848.8" y="1171.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="851.8" y="1182.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.04%)</title><rect x="849.1" y="1171.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="852.1" y="1182.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (5 samples, 0.07%)</title><rect x="849.6" y="1171.0" width="0.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="852.6" y="1182.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.03%)</title><rect x="850.1" y="1155.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="853.1" y="1166.0"></text>
</g>
<g>
<title>__GI___recv (3 samples, 0.04%)</title><rect x="850.6" y="1203.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="853.6" y="1214.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.03%)</title><rect x="851.2" y="1203.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="854.2" y="1214.0"></text>
</g>
<g>
<title>__GI___recv (233 samples, 3.19%)</title><rect x="851.5" y="1235.0" width="37.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="854.5" y="1246.0">__G..</text>
</g>
<g>
<title>[unknown] (232 samples, 3.18%)</title><rect x="851.7" y="1219.0" width="37.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="854.7" y="1230.0">[un..</text>
</g>
<g>
<title>[unknown] (232 samples, 3.18%)</title><rect x="851.7" y="1203.0" width="37.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="854.7" y="1214.0">[un..</text>
</g>
<g>
<title>[unknown] (223 samples, 3.05%)</title><rect x="853.1" y="1187.0" width="36.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="856.1" y="1198.0">[un..</text>
</g>
<g>
<title>[unknown] (222 samples, 3.04%)</title><rect x="853.3" y="1171.0" width="35.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="856.3" y="1182.0">[un..</text>
</g>
<g>
<title>[unknown] (217 samples, 2.97%)</title><rect x="854.1" y="1155.0" width="35.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="857.1" y="1166.0">[un..</text>
</g>
<g>
<title>[unknown] (210 samples, 2.87%)</title><rect x="855.2" y="1139.0" width="33.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="858.2" y="1150.0">[u..</text>
</g>
<g>
<title>[unknown] (200 samples, 2.74%)</title><rect x="856.8" y="1123.0" width="32.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="859.8" y="1134.0">[u..</text>
</g>
<g>
<title>[unknown] (189 samples, 2.59%)</title><rect x="858.6" y="1107.0" width="30.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="861.6" y="1118.0">[u..</text>
</g>
<g>
<title>[unknown] (177 samples, 2.42%)</title><rect x="860.6" y="1091.0" width="28.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="863.6" y="1102.0">[u..</text>
</g>
<g>
<title>[unknown] (167 samples, 2.29%)</title><rect x="862.2" y="1075.0" width="26.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="865.2" y="1086.0">[..</text>
</g>
<g>
<title>[unknown] (156 samples, 2.13%)</title><rect x="864.0" y="1059.0" width="25.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="867.0" y="1070.0">[..</text>
</g>
<g>
<title>[unknown] (140 samples, 1.92%)</title><rect x="866.5" y="1043.0" width="22.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="869.5" y="1054.0">[..</text>
</g>
<g>
<title>[unknown] (127 samples, 1.74%)</title><rect x="868.6" y="1027.0" width="20.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="871.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (118 samples, 1.61%)</title><rect x="870.1" y="1011.0" width="19.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="873.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (116 samples, 1.59%)</title><rect x="870.4" y="995.0" width="18.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="873.4" y="1006.0"></text>
</g>
<g>
<title>[unknown] (114 samples, 1.56%)</title><rect x="870.7" y="979.0" width="18.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="873.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (108 samples, 1.48%)</title><rect x="871.7" y="963.0" width="17.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="874.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.45%)</title><rect x="872.0" y="947.0" width="17.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="875.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (98 samples, 1.34%)</title><rect x="873.3" y="931.0" width="15.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="876.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (75 samples, 1.03%)</title><rect x="877.0" y="915.0" width="12.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="880.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 0.88%)</title><rect x="878.8" y="899.0" width="10.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="881.8" y="910.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 0.79%)</title><rect x="879.8" y="883.0" width="9.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="882.8" y="894.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 0.74%)</title><rect x="880.4" y="867.0" width="8.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="883.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 0.64%)</title><rect x="881.6" y="851.0" width="7.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="884.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.62%)</title><rect x="881.9" y="835.0" width="7.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="884.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (43 samples, 0.59%)</title><rect x="882.2" y="819.0" width="6.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="885.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.55%)</title><rect x="882.7" y="803.0" width="6.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="885.7" y="814.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.49%)</title><rect x="883.3" y="787.0" width="5.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="886.3" y="798.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.48%)</title><rect x="883.5" y="771.0" width="5.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="886.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.47%)</title><rect x="883.7" y="755.0" width="5.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="886.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.47%)</title><rect x="883.7" y="739.0" width="5.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="886.7" y="750.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.44%)</title><rect x="884.0" y="723.0" width="5.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="887.0" y="734.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.38%)</title><rect x="884.6" y="707.0" width="4.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="887.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.37%)</title><rect x="884.8" y="691.0" width="4.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="887.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.27%)</title><rect x="885.9" y="675.0" width="3.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="888.9" y="686.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.23%)</title><rect x="886.4" y="659.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="889.4" y="670.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.15%)</title><rect x="887.4" y="643.0" width="1.7" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="890.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.14%)</title><rect x="887.5" y="627.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="890.5" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="888.2" y="611.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="891.2" y="622.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.08%)</title><rect x="888.2" y="595.0" width="0.9" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="891.2" y="606.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.05%)</title><rect x="888.5" y="579.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="891.5" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.05%)</title><rect x="889.1" y="1283.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="892.1" y="1294.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="889.5" y="1267.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="892.5" y="1278.0"></text>
</g>
<g>
<title>oopFactory::new_typeArray(BasicType, int, Thread*) (2 samples, 0.03%)</title><rect x="889.8" y="1315.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="892.8" y="1326.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="890.1" y="1315.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="893.1" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="890.1" y="1299.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="893.1" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="890.1" y="1283.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="893.1" y="1294.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="890.1" y="1267.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="893.1" y="1278.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="890.1" y="1251.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="893.1" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="890.1" y="1235.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="893.1" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="890.1" y="1219.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="893.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="890.1" y="1203.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="893.1" y="1214.0"></text>
</g>
<g>
<title>start_thread (1,855 samples, 25.39%)</title><rect x="890.4" y="1315.0" width="299.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="893.4" y="1326.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (1,855 samples, 25.39%)</title><rect x="890.4" y="1299.0" width="299.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="893.4" y="1310.0">thread_native_entry(Thread*)</text>
</g>
<g>
<title>Thread::call_run() (1,855 samples, 25.39%)</title><rect x="890.4" y="1283.0" width="299.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="893.4" y="1294.0">Thread::call_run()</text>
</g>
<g>
<title>GangWorker::loop() (57 samples, 0.78%)</title><rect x="890.4" y="1267.0" width="9.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="893.4" y="1278.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (54 samples, 0.74%)</title><rect x="890.4" y="1251.0" width="8.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="893.4" y="1262.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (19 samples, 0.26%)</title><rect x="890.4" y="1235.0" width="3.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="893.4" y="1246.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (8 samples, 0.11%)</title><rect x="890.6" y="1219.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="893.6" y="1230.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (6 samples, 0.08%)</title><rect x="890.9" y="1203.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="893.9" y="1214.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (5 samples, 0.07%)</title><rect x="891.1" y="1187.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="894.1" y="1198.0"></text>
</g>
<g>
<title>SpinPause (10 samples, 0.14%)</title><rect x="891.9" y="1219.0" width="1.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="894.9" y="1230.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (33 samples, 0.45%)</title><rect x="893.5" y="1235.0" width="5.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="896.5" y="1246.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (33 samples, 0.45%)</title><rect x="893.5" y="1219.0" width="5.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="896.5" y="1230.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (33 samples, 0.45%)</title><rect x="893.5" y="1203.0" width="5.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="896.5" y="1214.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (33 samples, 0.45%)</title><rect x="893.5" y="1187.0" width="5.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="896.5" y="1198.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (32 samples, 0.44%)</title><rect x="893.7" y="1171.0" width="5.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="896.7" y="1182.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (26 samples, 0.36%)</title><rect x="893.7" y="1155.0" width="4.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="896.7" y="1166.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (13 samples, 0.18%)</title><rect x="895.3" y="1139.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="898.3" y="1150.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (7 samples, 0.10%)</title><rect x="896.3" y="1123.0" width="1.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="899.3" y="1134.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;TypeArrayKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="897.5" y="1139.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="900.5" y="1150.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (6 samples, 0.08%)</title><rect x="897.9" y="1155.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="900.9" y="1166.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (5 samples, 0.07%)</title><rect x="897.9" y="1139.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="900.9" y="1150.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.03%)</title><rect x="897.9" y="1123.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="900.9" y="1134.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (2 samples, 0.03%)</title><rect x="897.9" y="1107.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="900.9" y="1118.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (2 samples, 0.03%)</title><rect x="898.4" y="1123.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="901.4" y="1134.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (2 samples, 0.03%)</title><rect x="898.8" y="1235.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="901.8" y="1246.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (2 samples, 0.03%)</title><rect x="899.3" y="1251.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="902.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="899.3" y="1235.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="902.3" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="899.3" y="1219.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="902.3" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="899.3" y="1203.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="902.3" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="899.3" y="1187.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="902.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="899.3" y="1171.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="902.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="899.3" y="1155.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="902.3" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="899.3" y="1139.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="902.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="899.3" y="1123.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="902.3" y="1134.0"></text>
</g>
<g>
<title>JavaThread::run() (1,791 samples, 24.51%)</title><rect x="899.6" y="1267.0" width="289.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="902.6" y="1278.0">JavaThread::run()</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (1,791 samples, 24.51%)</title><rect x="899.6" y="1251.0" width="289.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="902.6" y="1262.0">JavaThread::thread_main_inner()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (1,776 samples, 24.31%)</title><rect x="899.6" y="1235.0" width="286.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="902.6" y="1246.0">CompileBroker::compiler_thread_loop()</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (1,775 samples, 24.29%)</title><rect x="899.6" y="1219.0" width="286.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="902.6" y="1230.0">CompileBroker::invoke_compiler_on_meth..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (1,704 samples, 23.32%)</title><rect x="899.6" y="1203.0" width="275.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="902.6" y="1214.0">C2Compiler::compile_method(ciEnv*, ci..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (1,704 samples, 23.32%)</title><rect x="899.6" y="1187.0" width="275.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="902.6" y="1198.0">Compile::Compile(ciEnv*, C2Compiler*,..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (3 samples, 0.04%)</title><rect x="899.6" y="1171.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="902.6" y="1182.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (3 samples, 0.04%)</title><rect x="899.6" y="1155.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="902.6" y="1166.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.04%)</title><rect x="899.6" y="1139.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="902.6" y="1150.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.04%)</title><rect x="899.6" y="1123.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="902.6" y="1134.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.04%)</title><rect x="899.6" y="1107.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="902.6" y="1118.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="899.6" y="1091.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="902.6" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="899.6" y="1075.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="902.6" y="1086.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (3 samples, 0.04%)</title><rect x="899.6" y="1059.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="902.6" y="1070.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (2 samples, 0.03%)</title><rect x="899.6" y="1043.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="902.6" y="1054.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="899.6" y="1027.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="902.6" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="899.6" y="1011.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="902.6" y="1022.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="899.6" y="995.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="902.6" y="1006.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (868 samples, 11.88%)</title><rect x="900.1" y="1171.0" width="140.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="903.1" y="1182.0">Compile::Code_Gen()</text>
</g>
<g>
<title>Compile::Output() (37 samples, 0.51%)</title><rect x="900.1" y="1155.0" width="6.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="903.1" y="1166.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (22 samples, 0.30%)</title><rect x="900.1" y="1139.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="903.1" y="1150.0"></text>
</g>
<g>
<title>Node::jvms() const (2 samples, 0.03%)</title><rect x="902.2" y="1123.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="905.2" y="1134.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (6 samples, 0.08%)</title><rect x="902.5" y="1123.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="905.5" y="1134.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (13 samples, 0.18%)</title><rect x="903.7" y="1139.0" width="2.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="906.7" y="1150.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (12 samples, 0.16%)</title><rect x="903.8" y="1123.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="906.8" y="1134.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (7 samples, 0.10%)</title><rect x="904.5" y="1107.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="907.5" y="1118.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (2 samples, 0.03%)</title><rect x="905.0" y="1091.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="908.0" y="1102.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (21 samples, 0.29%)</title><rect x="906.1" y="1155.0" width="3.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="909.1" y="1166.0"></text>
</g>
<g>
<title>Compile::FillExceptionTables(unsigned int, unsigned int*, unsigned int*, Label*) (2 samples, 0.03%)</title><rect x="907.1" y="1139.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="910.1" y="1150.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (2 samples, 0.03%)</title><rect x="907.4" y="1139.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="910.4" y="1150.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.03%)</title><rect x="907.4" y="1123.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="910.4" y="1134.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.03%)</title><rect x="907.4" y="1107.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="910.4" y="1118.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (3 samples, 0.04%)</title><rect x="908.0" y="1139.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="911.0" y="1150.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (6 samples, 0.08%)</title><rect x="908.5" y="1139.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="911.5" y="1150.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (5 samples, 0.07%)</title><rect x="908.7" y="1123.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="911.7" y="1134.0"></text>
</g>
<g>
<title>__memcmp_sse4_1 (2 samples, 0.03%)</title><rect x="909.2" y="1107.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="912.2" y="1118.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (6 samples, 0.08%)</title><rect x="909.5" y="1155.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="912.5" y="1166.0"></text>
</g>
<g>
<title>Matcher::match() (62 samples, 0.85%)</title><rect x="910.8" y="1155.0" width="10.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="913.8" y="1166.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (4 samples, 0.05%)</title><rect x="911.3" y="1139.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="914.3" y="1150.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (52 samples, 0.71%)</title><rect x="911.9" y="1139.0" width="8.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="914.9" y="1150.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (12 samples, 0.16%)</title><rect x="913.5" y="1123.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="916.5" y="1134.0"></text>
</g>
<g>
<title>Matcher::collect_null_checks(Node*, Node*) (3 samples, 0.04%)</title><rect x="915.6" y="1123.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="918.6" y="1134.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (6 samples, 0.08%)</title><rect x="916.1" y="1123.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="919.1" y="1134.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (6 samples, 0.08%)</title><rect x="916.1" y="1107.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="919.1" y="1118.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.03%)</title><rect x="916.6" y="1091.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="919.6" y="1102.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (15 samples, 0.21%)</title><rect x="917.1" y="1123.0" width="2.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="920.1" y="1134.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (7 samples, 0.10%)</title><rect x="917.4" y="1107.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="920.4" y="1118.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (3 samples, 0.04%)</title><rect x="917.6" y="1091.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="920.6" y="1102.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (6 samples, 0.08%)</title><rect x="918.5" y="1107.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="921.5" y="1118.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.03%)</title><rect x="918.5" y="1091.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="921.5" y="1102.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.03%)</title><rect x="918.5" y="1075.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="921.5" y="1086.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (2 samples, 0.03%)</title><rect x="918.5" y="1059.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="921.5" y="1070.0"></text>
</g>
<g>
<title>State::MachNodeGenerator(int) (2 samples, 0.03%)</title><rect x="919.0" y="1091.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="922.0" y="1102.0"></text>
</g>
<g>
<title>Node::clone() const (2 samples, 0.03%)</title><rect x="919.5" y="1123.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="922.5" y="1134.0"></text>
</g>
<g>
<title>Node::out_grow(unsigned int) (2 samples, 0.03%)</title><rect x="919.8" y="1123.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="922.8" y="1134.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (5 samples, 0.07%)</title><rect x="920.8" y="1155.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="923.8" y="1166.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (2 samples, 0.03%)</title><rect x="921.0" y="1139.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="924.0" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (88 samples, 1.20%)</title><rect x="921.8" y="1155.0" width="14.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="924.8" y="1166.0"></text>
</g>
<g>
<title>PhaseCFG::build_dominator_tree() (4 samples, 0.05%)</title><rect x="921.8" y="1139.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="924.8" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::estimate_block_frequency() (3 samples, 0.04%)</title><rect x="922.4" y="1139.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="925.4" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (80 samples, 1.09%)</title><rect x="922.9" y="1139.0" width="12.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="925.9" y="1150.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (8 samples, 0.11%)</title><rect x="923.2" y="1123.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="926.2" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (17 samples, 0.23%)</title><rect x="924.5" y="1123.0" width="2.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="927.5" y="1134.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (2 samples, 0.03%)</title><rect x="924.5" y="1107.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="927.5" y="1118.0"></text>
</g>
<g>
<title>Node_Backward_Iterator::next() (7 samples, 0.10%)</title><rect x="924.8" y="1107.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="927.8" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::hoist_to_cheaper_block(Block*, Block*, Node*) (3 samples, 0.04%)</title><rect x="926.0" y="1107.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="929.0" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (4 samples, 0.05%)</title><rect x="926.4" y="1107.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="929.4" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (14 samples, 0.19%)</title><rect x="927.3" y="1123.0" width="2.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="930.3" y="1134.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (2 samples, 0.03%)</title><rect x="928.1" y="1107.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="931.1" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (3 samples, 0.04%)</title><rect x="928.5" y="1107.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="931.5" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_pinned_nodes(VectorSet&amp;) (3 samples, 0.04%)</title><rect x="929.5" y="1123.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="932.5" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (2 samples, 0.03%)</title><rect x="929.7" y="1107.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="932.7" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (7 samples, 0.10%)</title><rect x="930.0" y="1123.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="933.0" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::mark_ssa() (2 samples, 0.03%)</title><rect x="931.1" y="1123.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="934.1" y="1134.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (2 samples, 0.03%)</title><rect x="931.5" y="1123.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="934.5" y="1134.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.03%)</title><rect x="931.5" y="1107.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="934.5" y="1118.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (21 samples, 0.29%)</title><rect x="931.8" y="1123.0" width="3.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="934.8" y="1134.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.03%)</title><rect x="933.4" y="1107.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="936.4" y="1118.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (6 samples, 0.08%)</title><rect x="933.9" y="1107.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="936.9" y="1118.0"></text>
</g>
<g>
<title>PhaseLive::freeset(Block*) (2 samples, 0.03%)</title><rect x="934.8" y="1107.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="937.8" y="1118.0"></text>
</g>
<g>
<title>__memset_erms (2 samples, 0.03%)</title><rect x="935.3" y="1123.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="938.3" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (636 samples, 8.70%)</title><rect x="936.5" y="1155.0" width="102.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="939.5" y="1166.0">PhaseChaitin..</text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (2 samples, 0.03%)</title><rect x="936.8" y="1139.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="939.8" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="937.1" y="1139.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="940.1" y="1150.0"></text>
</g>
<g>
<title>Node::jvms() const (2 samples, 0.03%)</title><rect x="938.7" y="1139.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="941.7" y="1150.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (22 samples, 0.30%)</title><rect x="939.0" y="1139.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="942.0" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (38 samples, 0.52%)</title><rect x="942.6" y="1139.0" width="6.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="945.6" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.03%)</title><rect x="944.4" y="1123.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="947.4" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::bias_color(LRG&amp;, int) (8 samples, 0.11%)</title><rect x="944.7" y="1123.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="947.7" y="1134.0"></text>
</g>
<g>
<title>RegMask::find_first_set(int) const (2 samples, 0.03%)</title><rect x="945.2" y="1107.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="948.2" y="1118.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (3 samples, 0.04%)</title><rect x="945.5" y="1107.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="948.5" y="1118.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (16 samples, 0.22%)</title><rect x="946.0" y="1123.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="949.0" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (2 samples, 0.03%)</title><rect x="946.6" y="1107.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="949.6" y="1118.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (10 samples, 0.14%)</title><rect x="947.0" y="1107.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="950.0" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (27 samples, 0.37%)</title><rect x="948.7" y="1139.0" width="4.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="951.7" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (2 samples, 0.03%)</title><rect x="949.5" y="1123.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="952.5" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.05%)</title><rect x="949.9" y="1123.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="952.9" y="1134.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (16 samples, 0.22%)</title><rect x="950.5" y="1123.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="953.5" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.08%)</title><rect x="952.1" y="1107.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="955.1" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (71 samples, 0.97%)</title><rect x="953.1" y="1139.0" width="11.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="956.1" y="1150.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.03%)</title><rect x="962.6" y="1123.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="965.6" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::split_DEF(Node*, Block*, int, unsigned int, Node**, Node**, GrowableArray&lt;unsigned int&gt;, int) (2 samples, 0.03%)</title><rect x="963.1" y="1123.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="966.1" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (4 samples, 0.05%)</title><rect x="963.6" y="1123.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="966.6" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (2 samples, 0.03%)</title><rect x="963.9" y="1107.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="966.9" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (136 samples, 1.86%)</title><rect x="964.6" y="1139.0" width="21.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="967.6" y="1150.0">P..</text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (10 samples, 0.14%)</title><rect x="967.6" y="1123.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="970.6" y="1134.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (4 samples, 0.05%)</title><rect x="969.2" y="1123.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="972.2" y="1134.0"></text>
</g>
<g>
<title>Node::jvms() const (2 samples, 0.03%)</title><rect x="970.4" y="1123.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="973.4" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (15 samples, 0.21%)</title><rect x="970.7" y="1123.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="973.7" y="1134.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (2 samples, 0.03%)</title><rect x="972.2" y="1107.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="975.2" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (48 samples, 0.66%)</title><rect x="973.3" y="1123.0" width="7.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="976.3" y="1134.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (2 samples, 0.03%)</title><rect x="978.8" y="1107.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="981.8" y="1118.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (11 samples, 0.15%)</title><rect x="979.1" y="1107.0" width="1.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="982.1" y="1118.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (23 samples, 0.31%)</title><rect x="981.0" y="1123.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="984.0" y="1134.0"></text>
</g>
<g>
<title>RegMask::Size() const (6 samples, 0.08%)</title><rect x="981.7" y="1107.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="984.7" y="1118.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (13 samples, 0.18%)</title><rect x="982.6" y="1107.0" width="2.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="985.6" y="1118.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (10 samples, 0.14%)</title><rect x="984.7" y="1123.0" width="1.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="987.7" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (8 samples, 0.11%)</title><rect x="986.5" y="1139.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="989.5" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (4 samples, 0.05%)</title><rect x="987.2" y="1123.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="990.2" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (2 samples, 0.03%)</title><rect x="987.8" y="1139.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="990.8" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (4 samples, 0.05%)</title><rect x="988.3" y="1139.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="991.3" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::fixup_spills() (3 samples, 0.04%)</title><rect x="988.9" y="1139.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="991.9" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (57 samples, 0.78%)</title><rect x="989.4" y="1139.0" width="9.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="992.4" y="1150.0"></text>
</g>
<g>
<title>MachCallJavaNode::in_RegMask(unsigned int) const (2 samples, 0.03%)</title><rect x="993.1" y="1123.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="996.1" y="1134.0"></text>
</g>
<g>
<title>MachNode::in_RegMask(unsigned int) const (2 samples, 0.03%)</title><rect x="993.5" y="1123.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="996.5" y="1134.0"></text>
</g>
<g>
<title>RegMask::Size() const (15 samples, 0.21%)</title><rect x="994.0" y="1123.0" width="2.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="997.0" y="1134.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (5 samples, 0.07%)</title><rect x="996.7" y="1123.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="999.7" y="1134.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (4 samples, 0.05%)</title><rect x="997.5" y="1123.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1000.5" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (15 samples, 0.21%)</title><rect x="998.6" y="1139.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1001.6" y="1150.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.05%)</title><rect x="999.6" y="1123.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1002.6" y="1134.0"></text>
</g>
<g>
<title>RegMask::is_aligned_pairs() const (2 samples, 0.03%)</title><rect x="1000.4" y="1123.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1003.4" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (9 samples, 0.12%)</title><rect x="1001.1" y="1139.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1004.1" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (80 samples, 1.09%)</title><rect x="1002.5" y="1139.0" width="12.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1005.5" y="1150.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (32 samples, 0.44%)</title><rect x="1007.7" y="1123.0" width="5.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1010.7" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::use_prior_register(Node*, unsigned int, Node*, Block*, Node_List&amp;, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1012.2" y="1107.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1015.2" y="1118.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.03%)</title><rect x="1012.2" y="1091.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1015.2" y="1102.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (15 samples, 0.21%)</title><rect x="1013.0" y="1123.0" width="2.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1016.0" y="1134.0"></text>
</g>
<g>
<title>PhaseChaitin::stretch_base_pointer_live_ranges(ResourceArea*) (5 samples, 0.07%)</title><rect x="1015.4" y="1139.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1018.4" y="1150.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (24 samples, 0.33%)</title><rect x="1016.2" y="1139.0" width="3.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1019.2" y="1150.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (5 samples, 0.07%)</title><rect x="1016.2" y="1123.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1019.2" y="1134.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (3 samples, 0.04%)</title><rect x="1017.0" y="1123.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1020.0" y="1134.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (15 samples, 0.21%)</title><rect x="1017.5" y="1123.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1020.5" y="1134.0"></text>
</g>
<g>
<title>IndexSet::lrg_union(unsigned int, unsigned int, unsigned int, PhaseIFG const*, RegMask const&amp;) (6 samples, 0.08%)</title><rect x="1018.0" y="1107.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1021.0" y="1118.0"></text>
</g>
<g>
<title>PhaseCFG::is_uncommon(Block const*) (2 samples, 0.03%)</title><rect x="1019.0" y="1107.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1022.0" y="1118.0"></text>
</g>
<g>
<title>Block::has_uncommon_code() const (2 samples, 0.03%)</title><rect x="1019.0" y="1091.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1022.0" y="1102.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (3 samples, 0.04%)</title><rect x="1019.3" y="1107.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1022.3" y="1118.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (19 samples, 0.26%)</title><rect x="1020.1" y="1139.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1023.1" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (11 samples, 0.15%)</title><rect x="1021.4" y="1123.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1024.4" y="1134.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (15 samples, 0.21%)</title><rect x="1023.2" y="1139.0" width="2.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1026.2" y="1150.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.07%)</title><rect x="1024.6" y="1123.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1027.6" y="1134.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (7 samples, 0.10%)</title><rect x="1025.6" y="1139.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1028.6" y="1150.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (6 samples, 0.08%)</title><rect x="1025.8" y="1123.0" width="0.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1028.8" y="1134.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (57 samples, 0.78%)</title><rect x="1026.7" y="1139.0" width="9.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1029.7" y="1150.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.03%)</title><rect x="1030.8" y="1123.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1033.8" y="1134.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (26 samples, 0.36%)</title><rect x="1031.4" y="1123.0" width="4.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1034.4" y="1134.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (3 samples, 0.04%)</title><rect x="1034.0" y="1107.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1037.0" y="1118.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (6 samples, 0.08%)</title><rect x="1034.6" y="1107.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1037.6" y="1118.0"></text>
</g>
<g>
<title>__memset_erms (8 samples, 0.11%)</title><rect x="1036.4" y="1139.0" width="1.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1039.4" y="1150.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (3 samples, 0.04%)</title><rect x="1037.7" y="1139.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1040.7" y="1150.0"></text>
</g>
<g>
<title>jmpDirNode::is_block_proj() const (2 samples, 0.03%)</title><rect x="1038.2" y="1139.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1041.2" y="1150.0"></text>
</g>
<g>
<title>PhasePeephole::do_transform() (4 samples, 0.05%)</title><rect x="1039.2" y="1155.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1042.2" y="1166.0"></text>
</g>
<g>
<title>__memset_erms (2 samples, 0.03%)</title><rect x="1039.8" y="1155.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1042.8" y="1166.0"></text>
</g>
<g>
<title>Compile::Optimize() (640 samples, 8.76%)</title><rect x="1040.3" y="1171.0" width="103.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1043.3" y="1182.0">Compile::Opt..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (3 samples, 0.04%)</title><rect x="1040.6" y="1155.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1043.6" y="1166.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (3 samples, 0.04%)</title><rect x="1040.6" y="1139.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1043.6" y="1150.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.256] (8 samples, 0.11%)</title><rect x="1041.3" y="1155.0" width="1.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1044.3" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.07%)</title><rect x="1041.8" y="1139.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1044.8" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.07%)</title><rect x="1041.8" y="1123.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1044.8" y="1134.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (5 samples, 0.07%)</title><rect x="1041.8" y="1107.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1044.8" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (5 samples, 0.07%)</title><rect x="1041.8" y="1091.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1044.8" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1041.8" y="1075.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1044.8" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1041.8" y="1059.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1044.8" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.05%)</title><rect x="1041.8" y="1043.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1044.8" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1041.8" y="1027.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1044.8" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1041.8" y="1011.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1044.8" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1041.8" y="995.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1044.8" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1041.8" y="979.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1044.8" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1041.8" y="963.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1044.8" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1041.8" y="947.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1044.8" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1041.8" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1044.8" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1041.8" y="915.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1044.8" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1041.8" y="899.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1044.8" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1041.8" y="883.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1044.8" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1041.8" y="867.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1044.8" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1041.8" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1044.8" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1041.8" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1044.8" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1041.8" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1044.8" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (18 samples, 0.25%)</title><rect x="1042.6" y="1155.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1045.6" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (17 samples, 0.23%)</title><rect x="1042.6" y="1139.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1045.6" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (3 samples, 0.04%)</title><rect x="1043.9" y="1123.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1046.9" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::add_java_object_edges(JavaObjectNode*, bool) [clone .constprop.247] (3 samples, 0.04%)</title><rect x="1043.9" y="1107.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1046.9" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field_uses_to_worklist(FieldNode*) (3 samples, 0.04%)</title><rect x="1043.9" y="1091.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1046.9" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (4 samples, 0.05%)</title><rect x="1044.5" y="1123.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1047.5" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="1044.5" y="1107.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1047.5" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.03%)</title><rect x="1044.5" y="1091.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1047.5" y="1102.0"></text>
</g>
<g>
<title>MergeMemNode::set_memory_at(unsigned int, Node*) (2 samples, 0.03%)</title><rect x="1044.8" y="1107.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1047.8" y="1118.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (11 samples, 0.15%)</title><rect x="1045.5" y="1155.0" width="1.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1048.5" y="1166.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (2 samples, 0.03%)</title><rect x="1046.0" y="1139.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1049.0" y="1150.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseGVN*) const (2 samples, 0.03%)</title><rect x="1046.4" y="1139.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1049.4" y="1150.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (3 samples, 0.04%)</title><rect x="1046.8" y="1139.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1049.8" y="1150.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (2 samples, 0.03%)</title><rect x="1046.9" y="1123.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1049.9" y="1134.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (8 samples, 0.11%)</title><rect x="1047.2" y="1155.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1050.2" y="1166.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (8 samples, 0.11%)</title><rect x="1047.2" y="1139.0" width="1.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1050.2" y="1150.0"></text>
</g>
<g>
<title>PhaseCCP::transform_once(Node*) (3 samples, 0.04%)</title><rect x="1047.9" y="1123.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1050.9" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (486 samples, 6.65%)</title><rect x="1048.7" y="1155.0" width="78.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1051.7" y="1166.0">PhaseIdea..</text>
</g>
<g>
<title>CProjNode::is_CFG() const (2 samples, 0.03%)</title><rect x="1048.7" y="1139.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1051.7" y="1150.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (3 samples, 0.04%)</title><rect x="1049.2" y="1139.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1052.2" y="1150.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (6 samples, 0.08%)</title><rect x="1049.7" y="1139.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1052.7" y="1150.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (4 samples, 0.05%)</title><rect x="1049.7" y="1123.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1052.7" y="1134.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (4 samples, 0.05%)</title><rect x="1049.7" y="1107.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1052.7" y="1118.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (4 samples, 0.05%)</title><rect x="1049.7" y="1091.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1052.7" y="1102.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (4 samples, 0.05%)</title><rect x="1049.7" y="1075.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1052.7" y="1086.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (3 samples, 0.04%)</title><rect x="1049.7" y="1059.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1052.7" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (2 samples, 0.03%)</title><rect x="1049.8" y="1043.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1052.8" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.73] (2 samples, 0.03%)</title><rect x="1050.3" y="1123.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1053.3" y="1134.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (3 samples, 0.04%)</title><rect x="1050.6" y="1139.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1053.6" y="1150.0"></text>
</g>
<g>
<title>Node::is_CFG() const (2 samples, 0.03%)</title><rect x="1051.1" y="1139.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1054.1" y="1150.0"></text>
</g>
<g>
<title>Node::pinned() const (3 samples, 0.04%)</title><rect x="1051.4" y="1139.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1054.4" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (32 samples, 0.44%)</title><rect x="1052.1" y="1139.0" width="5.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1055.1" y="1150.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (7 samples, 0.10%)</title><rect x="1055.8" y="1123.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1058.8" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (35 samples, 0.48%)</title><rect x="1057.3" y="1139.0" width="5.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1060.3" y="1150.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (2 samples, 0.03%)</title><rect x="1062.4" y="1123.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1065.4" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (315 samples, 4.31%)</title><rect x="1062.9" y="1139.0" width="50.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1065.9" y="1150.0">Phase..</text>
</g>
<g>
<title>Node_List::push(Node*) (2 samples, 0.03%)</title><rect x="1066.9" y="1123.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1069.9" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (287 samples, 3.93%)</title><rect x="1067.3" y="1123.0" width="46.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1070.3" y="1134.0">Phas..</text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (269 samples, 3.68%)</title><rect x="1069.9" y="1107.0" width="43.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1072.9" y="1118.0">Phas..</text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (12 samples, 0.16%)</title><rect x="1076.0" y="1091.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1079.0" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (9 samples, 0.12%)</title><rect x="1076.3" y="1075.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1079.3" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.118] (3 samples, 0.04%)</title><rect x="1077.3" y="1059.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1080.3" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (8 samples, 0.11%)</title><rect x="1077.9" y="1091.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1080.9" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (2 samples, 0.03%)</title><rect x="1079.2" y="1091.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1082.2" y="1102.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (209 samples, 2.86%)</title><rect x="1079.5" y="1091.0" width="33.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1082.5" y="1102.0">Ph..</text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (23 samples, 0.31%)</title><rect x="1113.8" y="1139.0" width="3.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1116.8" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (3 samples, 0.04%)</title><rect x="1116.8" y="1123.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1119.8" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (24 samples, 0.33%)</title><rect x="1117.7" y="1139.0" width="3.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1120.7" y="1150.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_post(Node*, bool) (2 samples, 0.03%)</title><rect x="1119.4" y="1123.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1122.4" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (11 samples, 0.15%)</title><rect x="1119.8" y="1123.0" width="1.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1122.8" y="1134.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (4 samples, 0.05%)</title><rect x="1120.7" y="1107.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.7" y="1118.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (3 samples, 0.04%)</title><rect x="1120.9" y="1091.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1123.9" y="1102.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (23 samples, 0.31%)</title><rect x="1121.7" y="1139.0" width="3.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1124.7" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (21 samples, 0.29%)</title><rect x="1122.0" y="1123.0" width="3.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1125.0" y="1134.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1122.5" y="1107.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1125.5" y="1118.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1122.5" y="1091.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1125.5" y="1102.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.03%)</title><rect x="1123.3" y="1107.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1126.3" y="1118.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (3 samples, 0.04%)</title><rect x="1124.1" y="1107.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1127.1" y="1118.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (4 samples, 0.05%)</title><rect x="1124.6" y="1107.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1127.6" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (4 samples, 0.05%)</title><rect x="1124.6" y="1091.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1127.6" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.05%)</title><rect x="1124.6" y="1075.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1127.6" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.05%)</title><rect x="1124.6" y="1059.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1127.6" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1124.6" y="1043.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1127.6" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1124.6" y="1027.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1127.6" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1124.6" y="1011.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1127.6" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1124.6" y="995.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1127.6" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1124.6" y="979.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1127.6" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1124.6" y="963.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1127.6" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1124.6" y="947.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1127.6" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1124.6" y="931.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1127.6" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (3 samples, 0.04%)</title><rect x="1124.6" y="915.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1127.6" y="926.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (2 samples, 0.03%)</title><rect x="1124.8" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1127.8" y="910.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1124.8" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1127.8" y="894.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (6 samples, 0.08%)</title><rect x="1125.6" y="1139.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1128.6" y="1150.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (2 samples, 0.03%)</title><rect x="1126.5" y="1139.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1129.5" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (4 samples, 0.05%)</title><rect x="1127.2" y="1155.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1130.2" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (80 samples, 1.09%)</title><rect x="1127.8" y="1155.0" width="12.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1130.8" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (75 samples, 1.03%)</title><rect x="1128.6" y="1139.0" width="12.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1131.6" y="1150.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (5 samples, 0.07%)</title><rect x="1129.4" y="1123.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1132.4" y="1134.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (2 samples, 0.03%)</title><rect x="1129.6" y="1107.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1132.6" y="1118.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (5 samples, 0.07%)</title><rect x="1130.2" y="1123.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1133.2" y="1134.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (4 samples, 0.05%)</title><rect x="1130.4" y="1107.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1133.4" y="1118.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (7 samples, 0.10%)</title><rect x="1131.9" y="1123.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1134.9" y="1134.0"></text>
</g>
<g>
<title>NodeHash::grow() (3 samples, 0.04%)</title><rect x="1132.5" y="1107.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1135.5" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (12 samples, 0.16%)</title><rect x="1133.2" y="1123.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1136.2" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.03%)</title><rect x="1134.6" y="1107.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1137.6" y="1118.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (2 samples, 0.03%)</title><rect x="1134.6" y="1091.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1137.6" y="1102.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (7 samples, 0.10%)</title><rect x="1135.1" y="1123.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1138.1" y="1134.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (2 samples, 0.03%)</title><rect x="1135.9" y="1107.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1138.9" y="1118.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (9 samples, 0.12%)</title><rect x="1136.5" y="1123.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1139.5" y="1134.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (4 samples, 0.05%)</title><rect x="1136.7" y="1107.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1139.7" y="1118.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (2 samples, 0.03%)</title><rect x="1136.9" y="1091.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1139.9" y="1102.0"></text>
</g>
<g>
<title>PhiNode::is_unsafe_data_reference(Node*) const (2 samples, 0.03%)</title><rect x="1137.4" y="1107.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1140.4" y="1118.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (2 samples, 0.03%)</title><rect x="1137.7" y="1107.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1140.7" y="1118.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (15 samples, 0.21%)</title><rect x="1138.0" y="1123.0" width="2.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1141.0" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (14 samples, 0.19%)</title><rect x="1138.0" y="1107.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1141.0" y="1118.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (14 samples, 0.19%)</title><rect x="1138.0" y="1091.0" width="2.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1141.0" y="1102.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (14 samples, 0.19%)</title><rect x="1138.0" y="1075.0" width="2.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1141.0" y="1086.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (11 samples, 0.15%)</title><rect x="1138.0" y="1059.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.0" y="1070.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (11 samples, 0.15%)</title><rect x="1138.0" y="1043.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1141.0" y="1054.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (11 samples, 0.15%)</title><rect x="1138.0" y="1027.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.0" y="1038.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (11 samples, 0.15%)</title><rect x="1138.0" y="1011.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.0" y="1022.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (10 samples, 0.14%)</title><rect x="1138.0" y="995.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1141.0" y="1006.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (10 samples, 0.14%)</title><rect x="1138.0" y="979.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1141.0" y="990.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (10 samples, 0.14%)</title><rect x="1138.0" y="963.0" width="1.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1141.0" y="974.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (7 samples, 0.10%)</title><rect x="1138.0" y="947.0" width="1.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.0" y="958.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1138.0" y="931.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.0" y="942.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1138.0" y="915.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1141.0" y="926.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1138.0" y="899.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1141.0" y="910.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1138.0" y="883.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.0" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1138.0" y="867.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1141.0" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (5 samples, 0.07%)</title><rect x="1138.0" y="851.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1141.0" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (4 samples, 0.05%)</title><rect x="1138.0" y="835.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1141.0" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1138.0" y="819.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1141.0" y="830.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1138.0" y="803.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.0" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1138.0" y="787.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1141.0" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (2 samples, 0.03%)</title><rect x="1138.0" y="771.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.0" y="782.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (2 samples, 0.03%)</title><rect x="1138.0" y="755.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1141.0" y="766.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1138.0" y="739.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1141.0" y="750.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (2 samples, 0.03%)</title><rect x="1138.3" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1141.3" y="830.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1138.3" y="803.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1141.3" y="814.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (2 samples, 0.03%)</title><rect x="1138.8" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1141.8" y="942.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (2 samples, 0.03%)</title><rect x="1138.8" y="915.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1141.8" y="926.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (3 samples, 0.04%)</title><rect x="1139.1" y="947.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1142.1" y="958.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (3 samples, 0.04%)</title><rect x="1139.1" y="931.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1142.1" y="942.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (3 samples, 0.04%)</title><rect x="1139.8" y="1059.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1142.8" y="1070.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (3 samples, 0.04%)</title><rect x="1139.8" y="1043.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1142.8" y="1054.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (9 samples, 0.12%)</title><rect x="1140.9" y="1155.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1143.9" y="1166.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (7 samples, 0.10%)</title><rect x="1140.9" y="1139.0" width="1.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1143.9" y="1150.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (6 samples, 0.08%)</title><rect x="1141.1" y="1123.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.1" y="1134.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (2 samples, 0.03%)</title><rect x="1141.1" y="1107.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1144.1" y="1118.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_allocate_common(AllocateNode*, Node*, TypeFunc const*, unsigned char*) (2 samples, 0.03%)</title><rect x="1142.0" y="1139.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1145.0" y="1150.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (7 samples, 0.10%)</title><rect x="1142.4" y="1155.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1145.4" y="1166.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (6 samples, 0.08%)</title><rect x="1142.5" y="1139.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1145.5" y="1150.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (3 samples, 0.04%)</title><rect x="1142.7" y="1123.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1145.7" y="1134.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (2 samples, 0.03%)</title><rect x="1143.2" y="1123.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1146.2" y="1134.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (3 samples, 0.04%)</title><rect x="1143.7" y="1171.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1146.7" y="1182.0"></text>
</g>
<g>
<title>LateInlineCallGenerator::do_late_inline() (2 samples, 0.03%)</title><rect x="1143.7" y="1155.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1146.7" y="1166.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1143.7" y="1139.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1146.7" y="1150.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1143.7" y="1123.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.7" y="1134.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1143.7" y="1107.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1146.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1143.7" y="1091.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1146.7" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1143.7" y="1075.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1146.7" y="1086.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1143.7" y="1059.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.7" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1143.7" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1146.7" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1143.7" y="1027.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1146.7" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1143.7" y="1011.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1146.7" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1143.7" y="995.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1146.7" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1143.7" y="979.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.7" y="990.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.03%)</title><rect x="1143.7" y="963.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.7" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (169 samples, 2.31%)</title><rect x="1144.1" y="1171.0" width="27.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1147.1" y="1182.0">P..</text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (169 samples, 2.31%)</title><rect x="1144.1" y="1155.0" width="27.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1147.1" y="1166.0">P..</text>
</g>
<g>
<title>Parse::do_all_blocks() (166 samples, 2.27%)</title><rect x="1144.1" y="1139.0" width="26.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1147.1" y="1150.0">P..</text>
</g>
<g>
<title>Parse::do_one_block() (166 samples, 2.27%)</title><rect x="1144.1" y="1123.0" width="26.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1147.1" y="1134.0">P..</text>
</g>
<g>
<title>Parse::do_one_bytecode() (165 samples, 2.26%)</title><rect x="1144.3" y="1107.0" width="26.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1147.3" y="1118.0">P..</text>
</g>
<g>
<title>Parse::do_call() (158 samples, 2.16%)</title><rect x="1144.3" y="1091.0" width="25.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1147.3" y="1102.0">P..</text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (10 samples, 0.14%)</title><rect x="1144.3" y="1075.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1147.3" y="1086.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (9 samples, 0.12%)</title><rect x="1144.5" y="1059.0" width="1.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1147.5" y="1070.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.03%)</title><rect x="1144.8" y="1043.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.8" y="1054.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (5 samples, 0.07%)</title><rect x="1145.1" y="1043.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1148.1" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (5 samples, 0.07%)</title><rect x="1145.1" y="1027.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1148.1" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (5 samples, 0.07%)</title><rect x="1145.1" y="1011.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.1" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (5 samples, 0.07%)</title><rect x="1145.1" y="995.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1148.1" y="1006.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (5 samples, 0.07%)</title><rect x="1145.1" y="979.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1148.1" y="990.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (5 samples, 0.07%)</title><rect x="1145.1" y="963.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1148.1" y="974.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (4 samples, 0.05%)</title><rect x="1145.3" y="947.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1148.3" y="958.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (4 samples, 0.05%)</title><rect x="1145.3" y="931.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1148.3" y="942.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (4 samples, 0.05%)</title><rect x="1145.3" y="915.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1148.3" y="926.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (4 samples, 0.05%)</title><rect x="1145.3" y="899.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1148.3" y="910.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (2 samples, 0.03%)</title><rect x="1145.3" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1148.3" y="894.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1145.6" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1148.6" y="894.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1145.6" y="867.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1148.6" y="878.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1145.6" y="851.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1148.6" y="862.0"></text>
</g>
<g>
<title>ciSignature::ciSignature(ciKlass*, constantPoolHandle const&amp;, ciSymbol*) (2 samples, 0.03%)</title><rect x="1145.6" y="835.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1148.6" y="846.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1145.9" y="1075.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1148.9" y="1086.0"></text>
</g>
<g>
<title>GraphKit::set_results_for_java_call(CallJavaNode*, bool) (2 samples, 0.03%)</title><rect x="1146.1" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1149.1" y="1070.0"></text>
</g>
<g>
<title>GraphKit::record_profile_for_speculation(Node*, ciKlass*, ProfilePtrKind) (2 samples, 0.03%)</title><rect x="1146.6" y="1075.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1149.6" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (115 samples, 1.57%)</title><rect x="1147.2" y="1075.0" width="18.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1150.2" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (115 samples, 1.57%)</title><rect x="1147.2" y="1059.0" width="18.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1150.2" y="1070.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (2 samples, 0.03%)</title><rect x="1147.2" y="1043.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1150.2" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (111 samples, 1.52%)</title><rect x="1147.5" y="1043.0" width="18.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1150.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (109 samples, 1.49%)</title><rect x="1147.5" y="1027.0" width="17.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1150.5" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (109 samples, 1.49%)</title><rect x="1147.5" y="1011.0" width="17.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.5" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (97 samples, 1.33%)</title><rect x="1147.5" y="995.0" width="15.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1150.5" y="1006.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.03%)</title><rect x="1147.5" y="979.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.5" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (80 samples, 1.09%)</title><rect x="1147.9" y="979.0" width="12.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1150.9" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (80 samples, 1.09%)</title><rect x="1147.9" y="963.0" width="12.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1150.9" y="974.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (2 samples, 0.03%)</title><rect x="1148.0" y="947.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.0" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (75 samples, 1.03%)</title><rect x="1148.3" y="947.0" width="12.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1151.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (74 samples, 1.01%)</title><rect x="1148.3" y="931.0" width="12.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1151.3" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (74 samples, 1.01%)</title><rect x="1148.3" y="915.0" width="12.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1151.3" y="926.0"></text>
</g>
<g>
<title>Parse::array_store(BasicType) (2 samples, 0.03%)</title><rect x="1148.5" y="899.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1151.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (67 samples, 0.92%)</title><rect x="1148.8" y="899.0" width="10.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1151.8" y="910.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (6 samples, 0.08%)</title><rect x="1148.8" y="883.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1151.8" y="894.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (5 samples, 0.07%)</title><rect x="1149.0" y="867.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1152.0" y="878.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (4 samples, 0.05%)</title><rect x="1149.1" y="851.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.1" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.04%)</title><rect x="1149.3" y="835.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1152.3" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.04%)</title><rect x="1149.3" y="819.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1152.3" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1149.3" y="803.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1152.3" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1149.3" y="787.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1152.3" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (3 samples, 0.04%)</title><rect x="1149.3" y="771.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1152.3" y="782.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (2 samples, 0.03%)</title><rect x="1149.5" y="755.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1152.5" y="766.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.03%)</title><rect x="1149.5" y="739.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1152.5" y="750.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.03%)</title><rect x="1149.5" y="723.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1152.5" y="734.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (2 samples, 0.03%)</title><rect x="1149.5" y="707.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1152.5" y="718.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1149.5" y="691.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.5" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (54 samples, 0.74%)</title><rect x="1150.1" y="883.0" width="8.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.1" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (54 samples, 0.74%)</title><rect x="1150.1" y="867.0" width="8.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1153.1" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (53 samples, 0.73%)</title><rect x="1150.1" y="851.0" width="8.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.1" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (53 samples, 0.73%)</title><rect x="1150.1" y="835.0" width="8.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1153.1" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (53 samples, 0.73%)</title><rect x="1150.1" y="819.0" width="8.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1153.1" y="830.0"></text>
</g>
<g>
<title>Parse::do_call() (47 samples, 0.64%)</title><rect x="1150.3" y="803.0" width="7.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1153.3" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (40 samples, 0.55%)</title><rect x="1150.9" y="787.0" width="6.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1153.9" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (40 samples, 0.55%)</title><rect x="1150.9" y="771.0" width="6.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1153.9" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (38 samples, 0.52%)</title><rect x="1151.2" y="755.0" width="6.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1154.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (37 samples, 0.51%)</title><rect x="1151.2" y="739.0" width="6.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1154.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (36 samples, 0.49%)</title><rect x="1151.4" y="723.0" width="5.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (30 samples, 0.41%)</title><rect x="1151.4" y="707.0" width="4.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.4" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (28 samples, 0.38%)</title><rect x="1151.6" y="691.0" width="4.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1154.6" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (28 samples, 0.38%)</title><rect x="1151.6" y="675.0" width="4.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.6" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (28 samples, 0.38%)</title><rect x="1151.6" y="659.0" width="4.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1154.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (28 samples, 0.38%)</title><rect x="1151.6" y="643.0" width="4.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.6" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (28 samples, 0.38%)</title><rect x="1151.6" y="627.0" width="4.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1154.6" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (20 samples, 0.27%)</title><rect x="1151.7" y="611.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1154.7" y="622.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.03%)</title><rect x="1151.7" y="595.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1154.7" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (18 samples, 0.25%)</title><rect x="1152.1" y="595.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.1" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (18 samples, 0.25%)</title><rect x="1152.1" y="579.0" width="2.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1155.1" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (16 samples, 0.22%)</title><rect x="1152.2" y="563.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1155.2" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (16 samples, 0.22%)</title><rect x="1152.2" y="547.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1155.2" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (16 samples, 0.22%)</title><rect x="1152.2" y="531.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1155.2" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.15%)</title><rect x="1152.7" y="515.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1155.7" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.11%)</title><rect x="1152.9" y="499.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1155.9" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.11%)</title><rect x="1152.9" y="483.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1155.9" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.11%)</title><rect x="1152.9" y="467.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1155.9" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.11%)</title><rect x="1152.9" y="451.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1155.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.11%)</title><rect x="1152.9" y="435.0" width="1.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.9" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.08%)</title><rect x="1153.0" y="419.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1156.0" y="430.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.08%)</title><rect x="1153.0" y="403.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.0" y="414.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.08%)</title><rect x="1153.0" y="387.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1156.0" y="398.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.07%)</title><rect x="1153.2" y="371.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1156.2" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.07%)</title><rect x="1153.2" y="355.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.2" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.07%)</title><rect x="1153.2" y="339.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1156.2" y="350.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1153.2" y="323.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1156.2" y="334.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1153.2" y="307.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1156.2" y="318.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1153.2" y="291.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.2" y="302.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1153.2" y="275.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1156.2" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1153.2" y="259.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1156.2" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1153.2" y="243.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.2" y="254.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (2 samples, 0.03%)</title><rect x="1153.7" y="323.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1156.7" y="334.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (5 samples, 0.07%)</title><rect x="1155.0" y="611.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1155.1" y="595.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.1" y="606.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.04%)</title><rect x="1156.2" y="707.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1159.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1156.4" y="691.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1159.4" y="702.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1157.4" y="787.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1160.4" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1157.4" y="771.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1160.4" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1157.4" y="755.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.4" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1157.4" y="739.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1160.4" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1157.4" y="723.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1160.4" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1157.4" y="707.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1160.4" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1157.4" y="691.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.4" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1157.4" y="675.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1160.4" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1157.4" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1160.4" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1157.4" y="643.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.4" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1157.4" y="627.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1160.4" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1157.4" y="611.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1160.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1157.4" y="595.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1160.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.03%)</title><rect x="1158.0" y="803.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.0" y="814.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.05%)</title><rect x="1158.8" y="883.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.8" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1158.8" y="867.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.8" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1158.8" y="851.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1158.8" y="835.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1158.8" y="819.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1158.8" y="803.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.8" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1158.8" y="787.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.8" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1158.8" y="771.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1161.8" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1158.8" y="755.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1158.8" y="739.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1161.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1158.8" y="723.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1161.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1158.8" y="707.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1161.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1158.8" y="691.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1161.8" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1158.8" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.8" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1158.8" y="659.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1161.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1158.8" y="643.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1158.8" y="627.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1161.8" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1158.8" y="611.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.8" y="622.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.03%)</title><rect x="1159.8" y="899.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1162.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1159.8" y="883.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1162.8" y="894.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (2 samples, 0.03%)</title><rect x="1160.4" y="947.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.4" y="958.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (12 samples, 0.16%)</title><rect x="1160.8" y="979.0" width="1.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1163.8" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.16%)</title><rect x="1160.8" y="963.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.8" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.16%)</title><rect x="1160.8" y="947.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.8" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.15%)</title><rect x="1160.8" y="931.0" width="1.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.8" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.15%)</title><rect x="1160.8" y="915.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1163.8" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (11 samples, 0.15%)</title><rect x="1160.8" y="899.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (11 samples, 0.15%)</title><rect x="1160.8" y="883.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.8" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.12%)</title><rect x="1160.9" y="867.0" width="1.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1163.9" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.12%)</title><rect x="1160.9" y="851.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.9" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.12%)</title><rect x="1160.9" y="835.0" width="1.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.9" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.12%)</title><rect x="1160.9" y="819.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.9" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.12%)</title><rect x="1160.9" y="803.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.12%)</title><rect x="1160.9" y="787.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.9" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.11%)</title><rect x="1160.9" y="771.0" width="1.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.9" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.11%)</title><rect x="1160.9" y="755.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.9" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.11%)</title><rect x="1160.9" y="739.0" width="1.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.9" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.10%)</title><rect x="1160.9" y="723.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1163.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.10%)</title><rect x="1160.9" y="707.0" width="1.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1163.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.07%)</title><rect x="1160.9" y="691.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1163.9" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.07%)</title><rect x="1160.9" y="675.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1163.9" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.07%)</title><rect x="1160.9" y="659.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1163.9" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.07%)</title><rect x="1160.9" y="643.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.9" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.07%)</title><rect x="1160.9" y="627.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.07%)</title><rect x="1160.9" y="611.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1163.9" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1160.9" y="595.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1163.9" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1160.9" y="579.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.9" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1160.9" y="563.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.9" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1160.9" y="547.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1160.9" y="531.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1160.9" y="515.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.9" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1160.9" y="499.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.9" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1160.9" y="483.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1163.9" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1160.9" y="467.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.9" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1160.9" y="451.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1163.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1160.9" y="435.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1163.9" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1160.9" y="419.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.9" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1160.9" y="403.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.9" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1160.9" y="387.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1163.9" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1160.9" y="371.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.9" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1160.9" y="355.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.9" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1160.9" y="339.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1163.9" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1160.9" y="323.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.9" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1160.9" y="307.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1163.9" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1160.9" y="291.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1163.9" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1160.9" y="275.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.9" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1160.9" y="259.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.9" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1160.9" y="243.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1163.9" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1160.9" y="227.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1163.9" y="238.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.03%)</title><rect x="1161.7" y="691.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1164.7" y="702.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="1162.7" y="979.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.7" y="990.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1162.7" y="963.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.7" y="974.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1162.7" y="947.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.7" y="958.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (7 samples, 0.10%)</title><rect x="1163.4" y="995.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.4" y="1006.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (3 samples, 0.04%)</title><rect x="1163.5" y="979.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.5" y="990.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (2 samples, 0.03%)</title><rect x="1163.5" y="963.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.5" y="974.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (2 samples, 0.03%)</title><rect x="1163.5" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.5" y="958.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.03%)</title><rect x="1163.5" y="931.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.5" y="942.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (2 samples, 0.03%)</title><rect x="1163.5" y="915.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.5" y="926.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (2 samples, 0.03%)</title><rect x="1163.5" y="899.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1164.0" y="979.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1167.0" y="990.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.03%)</title><rect x="1164.0" y="963.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1167.0" y="974.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.03%)</title><rect x="1164.0" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.0" y="958.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (2 samples, 0.03%)</title><rect x="1164.0" y="931.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1167.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (2 samples, 0.03%)</title><rect x="1164.5" y="995.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1167.5" y="1006.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (24 samples, 0.33%)</title><rect x="1165.8" y="1075.0" width="3.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1168.8" y="1086.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (20 samples, 0.27%)</title><rect x="1165.9" y="1059.0" width="3.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1168.9" y="1070.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (20 samples, 0.27%)</title><rect x="1165.9" y="1043.0" width="3.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.9" y="1054.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (20 samples, 0.27%)</title><rect x="1165.9" y="1027.0" width="3.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1168.9" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_block() (20 samples, 0.27%)</title><rect x="1165.9" y="1011.0" width="3.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1168.9" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (19 samples, 0.26%)</title><rect x="1166.1" y="995.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1169.1" y="1006.0"></text>
</g>
<g>
<title>Parse::do_call() (17 samples, 0.23%)</title><rect x="1166.1" y="979.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.1" y="990.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (3 samples, 0.04%)</title><rect x="1166.1" y="963.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1169.1" y="974.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (3 samples, 0.04%)</title><rect x="1166.1" y="947.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.1" y="958.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (3 samples, 0.04%)</title><rect x="1166.1" y="931.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.1" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (3 samples, 0.04%)</title><rect x="1166.1" y="915.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.1" y="926.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (3 samples, 0.04%)</title><rect x="1166.1" y="899.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1169.1" y="910.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (3 samples, 0.04%)</title><rect x="1166.1" y="883.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1169.1" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.03%)</title><rect x="1166.3" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1169.3" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.03%)</title><rect x="1166.3" y="851.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1169.3" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.15%)</title><rect x="1166.6" y="963.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1169.6" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.15%)</title><rect x="1166.6" y="947.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.6" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (11 samples, 0.15%)</title><rect x="1166.6" y="931.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.6" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (11 samples, 0.15%)</title><rect x="1166.6" y="915.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.6" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (10 samples, 0.14%)</title><rect x="1166.7" y="899.0" width="1.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1169.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (9 samples, 0.12%)</title><rect x="1166.7" y="883.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.7" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.11%)</title><rect x="1166.9" y="867.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1169.9" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.11%)</title><rect x="1166.9" y="851.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.9" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.11%)</title><rect x="1166.9" y="835.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1169.9" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.11%)</title><rect x="1166.9" y="819.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.9" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.11%)</title><rect x="1166.9" y="803.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1169.9" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.05%)</title><rect x="1166.9" y="787.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1169.9" y="798.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.03%)</title><rect x="1166.9" y="771.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.9" y="782.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.03%)</title><rect x="1166.9" y="755.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1169.9" y="766.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.03%)</title><rect x="1166.9" y="739.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1169.9" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.03%)</title><rect x="1166.9" y="723.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1169.9" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.03%)</title><rect x="1166.9" y="707.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1169.9" y="718.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.03%)</title><rect x="1166.9" y="691.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.9" y="702.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.03%)</title><rect x="1166.9" y="675.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1169.9" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1167.2" y="771.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.2" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1167.2" y="755.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1170.2" y="766.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (3 samples, 0.04%)</title><rect x="1167.6" y="787.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1170.6" y="798.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1168.4" y="963.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.4" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1168.4" y="947.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1171.4" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1168.4" y="931.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.4" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1168.4" y="915.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.4" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1168.4" y="899.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1171.4" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1168.4" y="883.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1171.4" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1168.4" y="867.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1171.4" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1168.5" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1171.5" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1168.5" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1168.5" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.5" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1168.5" y="803.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1168.5" y="787.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1168.5" y="771.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1171.5" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1168.5" y="755.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1171.5" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1168.5" y="739.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1168.5" y="723.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1171.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1168.5" y="707.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1171.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1168.5" y="691.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1171.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1168.5" y="675.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1171.5" y="686.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1169.2" y="1059.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1172.2" y="1070.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1169.2" y="1043.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.2" y="1054.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1169.2" y="1027.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.2" y="1038.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1169.2" y="1011.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.2" y="1022.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1169.2" y="995.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1172.2" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1169.2" y="979.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1172.2" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1169.2" y="963.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.2" y="974.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.04%)</title><rect x="1169.2" y="947.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.2" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.04%)</title><rect x="1169.2" y="931.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1172.2" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.04%)</title><rect x="1169.2" y="915.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.2" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.04%)</title><rect x="1169.2" y="899.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.04%)</title><rect x="1169.2" y="883.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1172.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.04%)</title><rect x="1169.2" y="867.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.2" y="878.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1169.3" y="851.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1172.3" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1169.3" y="835.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1172.3" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1169.3" y="819.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1169.3" y="803.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1172.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1169.3" y="787.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1172.3" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1169.3" y="771.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1172.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1169.3" y="755.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1172.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (5 samples, 0.07%)</title><rect x="1170.0" y="1091.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.0" y="1102.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1170.1" y="1075.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1173.1" y="1086.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.03%)</title><rect x="1170.5" y="1075.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1173.5" y="1086.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (17 samples, 0.23%)</title><rect x="1171.4" y="1171.0" width="2.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.4" y="1182.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (5 samples, 0.07%)</title><rect x="1171.6" y="1155.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1174.6" y="1166.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (8 samples, 0.11%)</title><rect x="1172.4" y="1155.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1175.4" y="1166.0"></text>
</g>
<g>
<title>Compile::update_dead_node_list(Unique_Node_List&amp;) (2 samples, 0.03%)</title><rect x="1173.7" y="1155.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1176.7" y="1166.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (2 samples, 0.03%)</title><rect x="1174.3" y="1171.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1177.3" y="1182.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.03%)</title><rect x="1174.3" y="1155.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.3" y="1166.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (68 samples, 0.93%)</title><rect x="1174.8" y="1203.0" width="11.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.8" y="1214.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (68 samples, 0.93%)</title><rect x="1174.8" y="1187.0" width="11.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1177.8" y="1198.0"></text>
</g>
<g>
<title>Compilation::compile_method() (68 samples, 0.93%)</title><rect x="1174.8" y="1171.0" width="11.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.8" y="1182.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (64 samples, 0.88%)</title><rect x="1174.8" y="1155.0" width="10.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1177.8" y="1166.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (26 samples, 0.36%)</title><rect x="1175.0" y="1139.0" width="4.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.0" y="1150.0"></text>
</g>
<g>
<title>GlobalValueNumbering::GlobalValueNumbering(IR*) (2 samples, 0.03%)</title><rect x="1175.1" y="1123.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.1" y="1134.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (16 samples, 0.22%)</title><rect x="1175.5" y="1123.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.5" y="1134.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (16 samples, 0.22%)</title><rect x="1175.5" y="1107.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.5" y="1118.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (16 samples, 0.22%)</title><rect x="1175.5" y="1091.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.5" y="1102.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (16 samples, 0.22%)</title><rect x="1175.5" y="1075.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1178.5" y="1086.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (15 samples, 0.21%)</title><rect x="1175.5" y="1059.0" width="2.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.5" y="1070.0"></text>
</g>
<g>
<title>GraphBuilder::access_field(Bytecodes::Code) (6 samples, 0.08%)</title><rect x="1175.5" y="1043.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1178.5" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::copy_state_for_exception_with_bci(int) (2 samples, 0.03%)</title><rect x="1175.5" y="1027.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.5" y="1038.0"></text>
</g>
<g>
<title>ValueStack::copy(ValueStack::Kind, int) [clone .constprop.380] (2 samples, 0.03%)</title><rect x="1175.5" y="1011.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.5" y="1022.0"></text>
</g>
<g>
<title>ValueStack::ValueStack(ValueStack*, ValueStack::Kind, int) (2 samples, 0.03%)</title><rect x="1175.5" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.5" y="1006.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (4 samples, 0.05%)</title><rect x="1175.8" y="1027.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.8" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (4 samples, 0.05%)</title><rect x="1175.8" y="1011.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.8" y="1022.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (4 samples, 0.05%)</title><rect x="1175.8" y="995.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1178.8" y="1006.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (3 samples, 0.04%)</title><rect x="1176.0" y="979.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1179.0" y="990.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (2 samples, 0.03%)</title><rect x="1176.1" y="963.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.1" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (9 samples, 0.12%)</title><rect x="1176.4" y="1043.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.4" y="1054.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (8 samples, 0.11%)</title><rect x="1176.4" y="1027.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.4" y="1038.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (8 samples, 0.11%)</title><rect x="1176.4" y="1011.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.4" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (8 samples, 0.11%)</title><rect x="1176.4" y="995.0" width="1.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.4" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (8 samples, 0.11%)</title><rect x="1176.4" y="979.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.4" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (8 samples, 0.11%)</title><rect x="1176.4" y="963.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.4" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (6 samples, 0.08%)</title><rect x="1176.4" y="947.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.4" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (5 samples, 0.07%)</title><rect x="1176.4" y="931.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.4" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (5 samples, 0.07%)</title><rect x="1176.4" y="915.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1179.4" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 0.05%)</title><rect x="1176.6" y="899.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.6" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (4 samples, 0.05%)</title><rect x="1176.6" y="883.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.6" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.04%)</title><rect x="1176.8" y="867.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.8" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1176.8" y="851.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.8" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.03%)</title><rect x="1176.8" y="835.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.8" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.03%)</title><rect x="1176.8" y="819.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1179.8" y="830.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.03%)</title><rect x="1176.8" y="803.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1179.8" y="814.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (2 samples, 0.03%)</title><rect x="1176.8" y="787.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.8" y="798.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (2 samples, 0.03%)</title><rect x="1177.4" y="947.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.4" y="958.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1177.4" y="931.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.4" y="942.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1177.4" y="915.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.4" y="926.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1177.4" y="899.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.4" y="910.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1177.4" y="883.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.4" y="894.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (2 samples, 0.03%)</title><rect x="1177.4" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.4" y="878.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (4 samples, 0.05%)</title><rect x="1178.2" y="1123.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.2" y="1134.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (4 samples, 0.05%)</title><rect x="1178.2" y="1107.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1181.2" y="1118.0"></text>
</g>
<g>
<title>NullCheckEliminator::iterate_one(BlockBegin*) (3 samples, 0.04%)</title><rect x="1178.4" y="1091.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.4" y="1102.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (10 samples, 0.14%)</title><rect x="1179.2" y="1139.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.2" y="1150.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (8 samples, 0.11%)</title><rect x="1179.2" y="1123.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.2" y="1134.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_call(LIR_OpJavaCall*) (3 samples, 0.04%)</title><rect x="1179.2" y="1107.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.2" y="1118.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_static_call_stub() (3 samples, 0.04%)</title><rect x="1179.2" y="1091.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.2" y="1102.0"></text>
</g>
<g>
<title>LIR_Assembler::process_debug_info(LIR_Op*) (3 samples, 0.04%)</title><rect x="1180.0" y="1107.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1183.0" y="1118.0"></text>
</g>
<g>
<title>LIR_Assembler::record_non_safepoint_debug_info() (2 samples, 0.03%)</title><rect x="1180.1" y="1091.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1183.1" y="1102.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (2 samples, 0.03%)</title><rect x="1180.1" y="1075.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.1" y="1086.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.03%)</title><rect x="1180.1" y="1059.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.1" y="1070.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_slow_case_stubs() (2 samples, 0.03%)</title><rect x="1180.5" y="1123.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1183.5" y="1134.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (27 samples, 0.37%)</title><rect x="1180.8" y="1139.0" width="4.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1183.8" y="1150.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (12 samples, 0.16%)</title><rect x="1180.8" y="1123.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.8" y="1134.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (12 samples, 0.16%)</title><rect x="1180.8" y="1107.0" width="1.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.8" y="1118.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (4 samples, 0.05%)</title><rect x="1181.0" y="1091.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.0" y="1102.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (4 samples, 0.05%)</title><rect x="1181.0" y="1075.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.0" y="1086.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (4 samples, 0.05%)</title><rect x="1181.0" y="1059.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.0" y="1070.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileCall(ProfileCall*) (2 samples, 0.03%)</title><rect x="1181.9" y="1091.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.9" y="1102.0"></text>
</g>
<g>
<title>LIRGenerator::profile_arguments(ProfileCall*) (2 samples, 0.03%)</title><rect x="1181.9" y="1075.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.9" y="1086.0"></text>
</g>
<g>
<title>LIRGenerator::do_ProfileInvoke(ProfileInvoke*) (2 samples, 0.03%)</title><rect x="1182.2" y="1091.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.2" y="1102.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (15 samples, 0.21%)</title><rect x="1182.7" y="1123.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.7" y="1134.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (3 samples, 0.04%)</title><rect x="1182.7" y="1107.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.7" y="1118.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) [clone .constprop.232] (3 samples, 0.04%)</title><rect x="1182.7" y="1091.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.7" y="1102.0"></text>
</g>
<g>
<title>LinearScanWalker::activate_current() (3 samples, 0.04%)</title><rect x="1182.7" y="1075.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.7" y="1086.0"></text>
</g>
<g>
<title>LinearScanWalker::alloc_free_reg(Interval*) (2 samples, 0.03%)</title><rect x="1182.7" y="1059.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.7" y="1070.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (4 samples, 0.05%)</title><rect x="1183.2" y="1107.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.2" y="1118.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (4 samples, 0.05%)</title><rect x="1183.2" y="1091.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.2" y="1102.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (3 samples, 0.04%)</title><rect x="1183.4" y="1075.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.4" y="1086.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (4 samples, 0.05%)</title><rect x="1183.9" y="1107.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.9" y="1118.0"></text>
</g>
<g>
<title>LinearScan::resolve_data_flow() (3 samples, 0.04%)</title><rect x="1184.5" y="1107.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.5" y="1118.0"></text>
</g>
<g>
<title>LinearScan::resolve_collect_mappings(BlockBegin*, BlockBegin*, MoveResolver&amp;) (2 samples, 0.03%)</title><rect x="1184.5" y="1091.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.5" y="1102.0"></text>
</g>
<g>
<title>Interval::split_child_at_op_id(int, LIR_OpVisitState::OprMode) (2 samples, 0.03%)</title><rect x="1184.5" y="1075.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.5" y="1086.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (3 samples, 0.04%)</title><rect x="1185.3" y="1155.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.3" y="1166.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.03%)</title><rect x="1185.3" y="1139.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.3" y="1150.0"></text>
</g>
<g>
<title>ciEnv::get_method_from_handle(Method*) (2 samples, 0.03%)</title><rect x="1186.0" y="1203.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.0" y="1214.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1186.0" y="1187.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1189.0" y="1198.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (2 samples, 0.03%)</title><rect x="1186.0" y="1171.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.0" y="1182.0"></text>
</g>
<g>
<title>NMethodSweeper::sweeper_loop() (4 samples, 0.05%)</title><rect x="1186.4" y="1235.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.4" y="1246.0"></text>
</g>
<g>
<title>NMethodSweeper::possibly_sweep() (4 samples, 0.05%)</title><rect x="1186.4" y="1219.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.4" y="1230.0"></text>
</g>
<g>
<title>NMethodSweeper::sweep_code_cache() (4 samples, 0.05%)</title><rect x="1186.4" y="1203.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.4" y="1214.0"></text>
</g>
<g>
<title>NMethodSweeper::process_compiled_method(CompiledMethod*) (3 samples, 0.04%)</title><rect x="1186.4" y="1187.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.4" y="1198.0"></text>
</g>
<g>
<title>CompiledMethod::cleanup_inline_caches_impl(bool, bool, bool) (2 samples, 0.03%)</title><rect x="1186.4" y="1171.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.4" y="1182.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (11 samples, 0.15%)</title><rect x="1187.1" y="1235.0" width="1.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="1246.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (11 samples, 0.15%)</title><rect x="1187.1" y="1219.0" width="1.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.1" y="1230.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (11 samples, 0.15%)</title><rect x="1187.1" y="1203.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="1214.0"></text>
</g>
<g>
<title>create_inline_record(nmethod*) (9 samples, 0.12%)</title><rect x="1187.4" y="1187.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1190.4" y="1198.0"></text>
</g>
<g>
<title>CompiledMethod::scope_desc_at(unsigned char*) (3 samples, 0.04%)</title><rect x="1187.7" y="1171.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.7" y="1182.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (2 samples, 0.03%)</title><rect x="1188.2" y="1171.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.2" y="1182.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (2 samples, 0.03%)</title><rect x="1188.2" y="1155.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.2" y="1166.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.03%)</title><rect x="1188.5" y="1171.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.5" y="1182.0"></text>
</g>
<g>
<title>VMThread::run() (6 samples, 0.08%)</title><rect x="1188.9" y="1267.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.9" y="1278.0"></text>
</g>
<g>
<title>VMThread::loop() (6 samples, 0.08%)</title><rect x="1188.9" y="1251.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.9" y="1262.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (3 samples, 0.04%)</title><rect x="1188.9" y="1235.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="1246.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.03%)</title><rect x="1189.4" y="1235.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.4" y="1246.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.03%)</title><rect x="1189.4" y="1219.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.4" y="1230.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.03%)</title><rect x="1189.4" y="1203.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="1214.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.03%)</title><rect x="1189.4" y="1187.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1192.4" y="1198.0"></text>
</g>
</g>
</svg>
