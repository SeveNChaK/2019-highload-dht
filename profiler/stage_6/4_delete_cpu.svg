<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1526" onload="init(evt)" viewBox="0 0 1200 1526" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1509"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1509"> </text>
<g id="frames">
<g>
<title>all (4,592 samples, 100.00%)</title><rect x="10.0" y="1475.0" width="1180.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="13.0" y="1486.0">all</text>
</g>
<g>
<title>InstanceKlass::klass_holder() const (2 samples, 0.04%)</title><rect x="10.0" y="1459.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="13.0" y="1470.0"></text>
</g>
<g>
<title>Klass::class_loader() const (2 samples, 0.04%)</title><rect x="10.5" y="1459.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="13.5" y="1470.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.8" y="1443.0" width="0.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="13.8" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.8" y="1427.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.8" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.8" y="1411.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.8" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.8" y="1395.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.8" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.8" y="1379.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.8" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.8" y="1363.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.8" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="10.8" y="1347.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.8" y="1358.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (9 samples, 0.20%)</title><rect x="11.0" y="1459.0" width="2.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.0" y="1470.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_objArray(int, int, Thread*) (2 samples, 0.04%)</title><rect x="11.0" y="1443.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="14.0" y="1454.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.04%)</title><rect x="11.0" y="1427.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="14.0" y="1438.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="11.0" y="1411.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="14.0" y="1422.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="11.3" y="1411.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="14.3" y="1422.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.02%)</title><rect x="11.5" y="1443.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="14.5" y="1454.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.13%)</title><rect x="11.8" y="1443.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="14.8" y="1454.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 0.13%)</title><rect x="11.8" y="1427.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="14.8" y="1438.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.13%)</title><rect x="11.8" y="1411.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="14.8" y="1422.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="11.8" y="1395.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="14.8" y="1406.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="11.8" y="1379.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="14.8" y="1390.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="12.1" y="1395.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.1" y="1406.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="12.3" y="1395.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.3" y="1406.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="12.6" y="1395.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="15.6" y="1406.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="12.8" y="1395.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="15.8" y="1406.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="12.8" y="1379.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="15.8" y="1390.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="12.8" y="1363.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="15.8" y="1374.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="12.8" y="1347.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="15.8" y="1358.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="12.8" y="1331.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="15.8" y="1342.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="12.8" y="1315.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="15.8" y="1326.0"></text>
</g>
<g>
<title>OtherRegionsTable::occupied() const (1 samples, 0.02%)</title><rect x="12.8" y="1299.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="15.8" y="1310.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="13.1" y="1379.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="16.1" y="1390.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="13.1" y="1363.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="16.1" y="1374.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (6 samples, 0.13%)</title><rect x="13.3" y="1459.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="16.3" y="1470.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.11%)</title><rect x="13.6" y="1443.0" width="1.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.6" y="1454.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.11%)</title><rect x="13.6" y="1427.0" width="1.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="16.6" y="1438.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 0.11%)</title><rect x="13.6" y="1411.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.6" y="1422.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="13.9" y="1395.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.9" y="1406.0"></text>
</g>
<g>
<title>G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const (1 samples, 0.02%)</title><rect x="14.1" y="1395.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.1" y="1406.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (2 samples, 0.04%)</title><rect x="14.4" y="1395.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="17.4" y="1406.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (1 samples, 0.02%)</title><rect x="14.4" y="1379.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="17.4" y="1390.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.02%)</title><rect x="14.6" y="1379.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="17.6" y="1390.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.02%)</title><rect x="14.6" y="1363.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="17.6" y="1374.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (27 samples, 0.59%)</title><rect x="14.9" y="1459.0" width="6.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="17.9" y="1470.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.02%)</title><rect x="15.1" y="1443.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="18.1" y="1454.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (24 samples, 0.52%)</title><rect x="15.4" y="1443.0" width="6.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="18.4" y="1454.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (24 samples, 0.52%)</title><rect x="15.4" y="1427.0" width="6.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="18.4" y="1438.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (23 samples, 0.50%)</title><rect x="15.4" y="1411.0" width="5.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="18.4" y="1422.0"></text>
</g>
<g>
<title>AllocTracer::send_allocation_in_new_tlab(Klass*, HeapWord*, unsigned long, unsigned long, Thread*) (2 samples, 0.04%)</title><rect x="16.2" y="1395.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="19.2" y="1406.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.02%)</title><rect x="16.2" y="1379.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="19.2" y="1390.0"></text>
</g>
<g>
<title>LeakProfiler::is_running() (1 samples, 0.02%)</title><rect x="16.4" y="1379.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.4" y="1390.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (3 samples, 0.07%)</title><rect x="16.7" y="1395.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="19.7" y="1406.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="17.5" y="1395.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="20.5" y="1406.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (13 samples, 0.28%)</title><rect x="17.7" y="1395.0" width="3.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="20.7" y="1406.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (3 samples, 0.07%)</title><rect x="18.5" y="1379.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="21.5" y="1390.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (2 samples, 0.04%)</title><rect x="19.3" y="1379.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="22.3" y="1390.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="19.5" y="1363.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="22.5" y="1374.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="19.5" y="1347.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="22.5" y="1358.0"></text>
</g>
<g>
<title>G1CollectedHeap::max_tlab_size() const (1 samples, 0.02%)</title><rect x="19.8" y="1379.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="22.8" y="1390.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (2 samples, 0.04%)</title><rect x="20.0" y="1379.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="23.0" y="1390.0"></text>
</g>
<g>
<title>CollectedHeap::fill_with_dummy_object(HeapWord*, HeapWord*, bool) (2 samples, 0.04%)</title><rect x="20.0" y="1363.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="23.0" y="1374.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.04%)</title><rect x="20.0" y="1347.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="23.0" y="1358.0"></text>
</g>
<g>
<title>__memset_sse2_unaligned_erms (2 samples, 0.04%)</title><rect x="20.5" y="1379.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="23.5" y="1390.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::fill(HeapWord*, HeapWord*, unsigned long) (1 samples, 0.02%)</title><rect x="21.0" y="1395.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="24.0" y="1406.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="21.3" y="1411.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="24.3" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="21.6" y="1443.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="24.6" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="21.6" y="1427.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="24.6" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="21.6" y="1411.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="24.6" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="21.6" y="1395.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="24.6" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="21.6" y="1379.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="24.6" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="21.6" y="1363.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="24.6" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="21.6" y="1347.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="24.6" y="1358.0"></text>
</g>
<g>
<title>Runtime1::counter_overflow(JavaThread*, int, Method*) (1 samples, 0.02%)</title><rect x="21.8" y="1459.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="24.8" y="1470.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="21.8" y="1443.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="24.8" y="1454.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.02%)</title><rect x="21.8" y="1427.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="24.8" y="1438.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (48 samples, 1.05%)</title><rect x="22.1" y="1459.0" width="12.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="25.1" y="1470.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="22.1" y="1443.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="25.1" y="1454.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (47 samples, 1.02%)</title><rect x="22.3" y="1443.0" width="12.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="25.3" y="1454.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (1 samples, 0.02%)</title><rect x="22.6" y="1427.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="25.6" y="1438.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (24 samples, 0.52%)</title><rect x="22.8" y="1427.0" width="6.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="25.8" y="1438.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (19 samples, 0.41%)</title><rect x="23.4" y="1411.0" width="4.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="26.4" y="1422.0"></text>
</g>
<g>
<title>SpinPause (3 samples, 0.07%)</title><rect x="28.2" y="1411.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="31.2" y="1422.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (20 samples, 0.44%)</title><rect x="29.0" y="1427.0" width="5.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="32.0" y="1438.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (18 samples, 0.39%)</title><rect x="29.3" y="1411.0" width="4.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="32.3" y="1422.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.74] (12 samples, 0.26%)</title><rect x="29.8" y="1395.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="32.8" y="1406.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="32.9" y="1395.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="35.9" y="1406.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="33.1" y="1395.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="36.1" y="1406.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (2 samples, 0.04%)</title><rect x="33.4" y="1395.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="36.4" y="1406.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="33.9" y="1411.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="36.9" y="1422.0"></text>
</g>
<g>
<title>ObjectSynchronizer::omAlloc(Thread*) (1 samples, 0.02%)</title><rect x="34.2" y="1427.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="37.2" y="1438.0"></text>
</g>
<g>
<title>[not_walkable] (18 samples, 0.39%)</title><rect x="34.4" y="1459.0" width="4.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="37.4" y="1470.0"></text>
</g>
<g>
<title>[not_walkable_Java] (27 samples, 0.59%)</title><rect x="39.0" y="1459.0" width="7.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="42.0" y="1470.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="39.0" y="1443.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="42.0" y="1454.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="39.3" y="1443.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="42.3" y="1454.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (13 samples, 0.28%)</title><rect x="39.6" y="1443.0" width="3.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="42.6" y="1454.0"></text>
</g>
<g>
<title>CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*) (1 samples, 0.02%)</title><rect x="39.6" y="1427.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="42.6" y="1438.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (11 samples, 0.24%)</title><rect x="39.8" y="1427.0" width="2.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="42.8" y="1438.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (7 samples, 0.15%)</title><rect x="40.1" y="1411.0" width="1.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="43.1" y="1422.0"></text>
</g>
<g>
<title>CodeBlob::is_zombie() const (1 samples, 0.02%)</title><rect x="40.3" y="1395.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="43.3" y="1406.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (4 samples, 0.09%)</title><rect x="40.6" y="1395.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="43.6" y="1406.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="41.4" y="1379.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="44.4" y="1390.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="41.6" y="1395.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="44.6" y="1406.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.02%)</title><rect x="41.9" y="1411.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="44.9" y="1422.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (2 samples, 0.04%)</title><rect x="42.1" y="1411.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="45.1" y="1422.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.02%)</title><rect x="42.4" y="1395.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="45.4" y="1406.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="42.6" y="1427.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="45.6" y="1438.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (3 samples, 0.07%)</title><rect x="42.9" y="1443.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="45.9" y="1454.0"></text>
</g>
<g>
<title>G1CardTable::is_in_young(oopDesc*) const (2 samples, 0.04%)</title><rect x="43.1" y="1427.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="46.1" y="1438.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="43.7" y="1443.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="46.7" y="1454.0"></text>
</g>
<g>
<title>SharedRuntime::on_slowpath_allocation_exit(JavaThread*) (5 samples, 0.11%)</title><rect x="43.9" y="1443.0" width="1.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="46.9" y="1454.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="45.2" y="1443.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="48.2" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="45.2" y="1427.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="48.2" y="1438.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="45.2" y="1411.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="48.2" y="1422.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="45.5" y="1427.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="48.5" y="1438.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="45.7" y="1411.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="48.7" y="1422.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="46.0" y="1459.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="49.0" y="1470.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="46.0" y="1443.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="49.0" y="1454.0"></text>
</g>
<g>
<title>__fxstat64 (2 samples, 0.04%)</title><rect x="46.0" y="1427.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="49.0" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.2" y="1411.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="49.2" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.2" y="1395.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="49.2" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.2" y="1379.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="49.2" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.2" y="1363.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="49.2" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.2" y="1347.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="49.2" y="1358.0"></text>
</g>
<g>
<title>_IO_new_file_fopen (1 samples, 0.02%)</title><rect x="46.5" y="1443.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="49.5" y="1454.0"></text>
</g>
<g>
<title>__GI___open64 (1 samples, 0.02%)</title><rect x="46.7" y="1443.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="49.7" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.7" y="1427.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="49.7" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.7" y="1411.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="49.7" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.7" y="1395.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="49.7" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.7" y="1379.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="49.7" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.7" y="1363.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="49.7" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.7" y="1347.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="49.7" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.7" y="1331.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="49.7" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="46.7" y="1315.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="49.7" y="1326.0"></text>
</g>
<g>
<title>__close_nocancel (1 samples, 0.02%)</title><rect x="47.0" y="1443.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="50.0" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="47.0" y="1427.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="50.0" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="47.0" y="1411.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="50.0" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="47.0" y="1395.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="50.0" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="47.0" y="1379.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="50.0" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="47.0" y="1363.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="50.0" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="47.0" y="1347.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="50.0" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="47.0" y="1331.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="50.0" y="1342.0"></text>
</g>
<g>
<title>[unknown_Java] (30 samples, 0.65%)</title><rect x="47.3" y="1459.0" width="7.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="50.3" y="1470.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="50.9" y="1443.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="53.9" y="1454.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="51.1" y="1443.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="54.1" y="1454.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.02%)</title><rect x="51.1" y="1427.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="54.1" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="51.4" y="1443.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="54.4" y="1454.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="51.4" y="1427.0" width="0.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="54.4" y="1438.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="51.4" y="1411.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="54.4" y="1422.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (13 samples, 0.28%)</title><rect x="51.6" y="1443.0" width="3.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="54.6" y="1454.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="51.6" y="1427.0" width="3.4" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="54.6" y="1438.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="51.6" y="1411.0" width="3.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="54.6" y="1422.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="51.6" y="1395.0" width="3.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="54.6" y="1406.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="51.6" y="1379.0" width="3.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="54.6" y="1390.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="51.6" y="1363.0" width="3.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="54.6" y="1374.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="51.6" y="1347.0" width="3.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="54.6" y="1358.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="51.6" y="1331.0" width="3.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="54.6" y="1342.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="51.6" y="1315.0" width="3.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="54.6" y="1326.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (10 samples, 0.22%)</title><rect x="55.0" y="1459.0" width="2.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="58.0" y="1470.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="55.7" y="1443.0" width="1.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="58.7" y="1454.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="55.7" y="1427.0" width="1.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="58.7" y="1438.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="55.7" y="1411.0" width="1.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="58.7" y="1422.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="55.7" y="1395.0" width="1.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="58.7" y="1406.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="56.0" y="1379.0" width="1.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="59.0" y="1390.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="56.0" y="1363.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="59.0" y="1374.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="56.0" y="1347.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="59.0" y="1358.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="56.3" y="1331.0" width="1.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="59.3" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="57.3" y="1315.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="60.3" y="1326.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="57.5" y="1459.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="60.5" y="1470.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.02%)</title><rect x="57.8" y="1459.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="60.8" y="1470.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="58.1" y="1459.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="61.1" y="1470.0"></text>
</g>
<g>
<title>java/lang/Thread.run (2,212 samples, 48.17%)</title><rect x="58.3" y="1459.0" width="568.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="61.3" y="1470.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2,212 samples, 48.17%)</title><rect x="58.3" y="1443.0" width="568.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.3" y="1454.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2,212 samples, 48.17%)</title><rect x="58.3" y="1427.0" width="568.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="61.3" y="1438.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="58.8" y="1411.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="61.8" y="1422.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="58.8" y="1395.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="61.8" y="1406.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="58.8" y="1379.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="61.8" y="1390.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="58.8" y="1363.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="61.8" y="1374.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="58.8" y="1347.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="61.8" y="1358.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="58.8" y="1331.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="61.8" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="59.1" y="1315.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="62.1" y="1326.0"></text>
</g>
<g>
<title>itable stub (10 samples, 0.22%)</title><rect x="59.3" y="1411.0" width="2.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="62.3" y="1422.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.07%)</title><rect x="61.9" y="1411.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="64.9" y="1422.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.07%)</title><rect x="61.9" y="1395.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="64.9" y="1406.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (3 samples, 0.07%)</title><rect x="61.9" y="1379.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="64.9" y="1390.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="61.9" y="1363.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="64.9" y="1374.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="62.2" y="1363.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="65.2" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.2" y="1347.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="65.2" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.2" y="1331.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="65.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.2" y="1315.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="65.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.2" y="1299.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="65.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.2" y="1283.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="65.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.2" y="1267.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="65.2" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.2" y="1251.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="65.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.2" y="1235.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="65.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.2" y="1219.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="65.2" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.2" y="1203.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="65.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.2" y="1187.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="65.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.2" y="1171.0" width="0.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="65.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="62.2" y="1155.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="65.2" y="1166.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="62.4" y="1363.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="65.4" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (509 samples, 11.08%)</title><rect x="62.7" y="1411.0" width="130.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="65.7" y="1422.0">java/util/concur..</text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="63.4" y="1395.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="66.4" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (503 samples, 10.95%)</title><rect x="63.7" y="1395.0" width="129.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="66.7" y="1406.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (501 samples, 10.91%)</title><rect x="64.0" y="1379.0" width="128.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="67.0" y="1390.0">java/util/concur..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="64.2" y="1363.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="67.2" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.02%)</title><rect x="64.2" y="1347.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="67.2" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$128/1181434552.apply (499 samples, 10.87%)</title><rect x="64.5" y="1363.0" width="128.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="67.5" y="1374.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$2 (498 samples, 10.84%)</title><rect x="64.7" y="1347.0" width="128.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="67.7" y="1358.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsyncImpl (498 samples, 10.84%)</title><rect x="64.7" y="1331.0" width="128.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="67.7" y="1342.0">jdk/internal/net..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (1 samples, 0.02%)</title><rect x="65.0" y="1315.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="68.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="65.0" y="1299.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="68.0" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsync (477 samples, 10.39%)</title><rect x="65.2" y="1315.0" width="122.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="68.2" y="1326.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl (477 samples, 10.39%)</title><rect x="65.2" y="1299.0" width="122.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="68.2" y="1310.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkPermissions (2 samples, 0.04%)</title><rect x="65.2" y="1283.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="68.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.method (2 samples, 0.04%)</title><rect x="65.2" y="1267.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="68.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.responseAsyncImpl0 (475 samples, 10.34%)</title><rect x="65.8" y="1283.0" width="122.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="68.8" y="1294.0">jdk/internal/ne..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="66.0" y="1267.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="69.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="66.0" y="1251.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/1923243529.get$Lambda (2 samples, 0.04%)</title><rect x="66.0" y="1235.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="69.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/354122190.get$Lambda (1 samples, 0.02%)</title><rect x="66.5" y="1235.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="69.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (217 samples, 4.73%)</title><rect x="66.8" y="1267.0" width="55.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="69.8" y="1278.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (217 samples, 4.73%)</title><rect x="66.8" y="1251.0" width="55.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="69.8" y="1262.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (212 samples, 4.62%)</title><rect x="66.8" y="1235.0" width="54.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="69.8" y="1246.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="66.8" y="1219.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.02%)</title><rect x="66.8" y="1203.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.02%)</title><rect x="66.8" y="1187.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="69.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.02%)</title><rect x="66.8" y="1171.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="69.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.getProbe (1 samples, 0.02%)</title><rect x="66.8" y="1155.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="69.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.02%)</title><rect x="67.0" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/2067260339.apply (1 samples, 0.02%)</title><rect x="67.0" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="70.0" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$217/2067260339.apply (210 samples, 4.57%)</title><rect x="67.3" y="1219.0" width="54.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="70.3" y="1230.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$9 (210 samples, 4.57%)</title><rect x="67.3" y="1203.0" width="54.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.3" y="1214.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (210 samples, 4.57%)</title><rect x="67.3" y="1187.0" width="54.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.3" y="1198.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/354122190.apply (210 samples, 4.57%)</title><rect x="67.3" y="1171.0" width="54.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.3" y="1182.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (210 samples, 4.57%)</title><rect x="67.3" y="1155.0" width="54.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="70.3" y="1166.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (2 samples, 0.04%)</title><rect x="67.3" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="70.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (2 samples, 0.04%)</title><rect x="67.3" y="1123.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (2 samples, 0.04%)</title><rect x="67.3" y="1107.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="70.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$241/435352876.apply (2 samples, 0.04%)</title><rect x="67.3" y="1091.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (2 samples, 0.04%)</title><rect x="67.3" y="1075.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (2 samples, 0.04%)</title><rect x="67.3" y="1059.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="70.3" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/1923243529.apply (2 samples, 0.04%)</title><rect x="67.3" y="1043.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="70.3" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (2 samples, 0.04%)</title><rect x="67.3" y="1027.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="70.3" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="67.3" y="1011.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="70.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="67.3" y="995.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$269/19789958.apply (2 samples, 0.04%)</title><rect x="67.3" y="979.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (2 samples, 0.04%)</title><rect x="67.3" y="963.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (2 samples, 0.04%)</title><rect x="67.3" y="947.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="70.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (1 samples, 0.02%)</title><rect x="67.6" y="931.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="70.6" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="67.6" y="915.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="70.6" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="67.6" y="899.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="70.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$275/352039824.get$Lambda (1 samples, 0.02%)</title><rect x="67.6" y="883.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="70.6" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$275/352039824.&lt;init&gt; (1 samples, 0.02%)</title><rect x="67.6" y="867.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="70.6" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (2 samples, 0.04%)</title><rect x="67.8" y="1139.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="70.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (2 samples, 0.04%)</title><rect x="67.8" y="1123.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="70.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (2 samples, 0.04%)</title><rect x="67.8" y="1107.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="70.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.04%)</title><rect x="67.8" y="1091.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="70.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (206 samples, 4.49%)</title><rect x="68.3" y="1139.0" width="53.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="71.3" y="1150.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (183 samples, 3.99%)</title><rect x="68.3" y="1123.0" width="47.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="71.3" y="1134.0">java..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (183 samples, 3.99%)</title><rect x="68.3" y="1107.0" width="47.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="71.3" y="1118.0">java..</text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="68.8" y="1091.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="71.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (2 samples, 0.04%)</title><rect x="69.4" y="1091.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="72.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.04%)</title><rect x="69.4" y="1075.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="72.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="69.6" y="1059.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="72.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="69.6" y="1043.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="72.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="69.6" y="1027.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="72.6" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="69.6" y="1011.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="72.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="69.6" y="995.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="72.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$237/1679310185.apply (176 samples, 3.83%)</title><rect x="69.9" y="1091.0" width="45.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="72.9" y="1102.0">jdk/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.lambda$sendHeadersAsync$4 (172 samples, 3.75%)</title><rect x="70.9" y="1075.0" width="44.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="73.9" y="1086.0">jdk/..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7 samples, 0.15%)</title><rect x="71.4" y="1059.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="74.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.02%)</title><rect x="71.7" y="1043.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="71.7" y="1027.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="71.7" y="1011.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="74.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (5 samples, 0.11%)</title><rect x="71.9" y="1043.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="74.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="72.7" y="1027.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="75.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="72.7" y="1011.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="75.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="73.0" y="995.0" width="0.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="76.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="73.0" y="979.0" width="0.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="76.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="73.0" y="963.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="76.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="73.0" y="947.0" width="0.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="76.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (3 samples, 0.07%)</title><rect x="73.2" y="1059.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="76.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (3 samples, 0.07%)</title><rect x="73.2" y="1043.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="76.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="73.5" y="1027.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="73.5" y="1011.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="76.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.02%)</title><rect x="73.7" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="76.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="73.7" y="1011.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="76.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="73.7" y="995.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="76.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="73.7" y="979.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="76.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (12 samples, 0.26%)</title><rect x="74.0" y="1059.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="77.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.appendToOutgoing (12 samples, 0.26%)</title><rect x="74.0" y="1043.0" width="3.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.0" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.add (1 samples, 0.02%)</title><rect x="74.0" y="1027.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="77.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.offerLast (1 samples, 0.02%)</title><rect x="74.0" y="1011.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="77.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.24%)</title><rect x="74.2" y="1027.0" width="2.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (11 samples, 0.24%)</title><rect x="74.2" y="1011.0" width="2.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="77.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="74.2" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="77.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="74.2" y="979.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="74.2" y="963.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="77.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.02%)</title><rect x="74.2" y="947.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="77.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="74.2" y="931.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="74.2" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="77.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="74.2" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="77.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="74.2" y="883.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="77.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="74.2" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="77.2" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="74.2" y="851.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="77.2" y="862.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="74.2" y="835.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="77.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (10 samples, 0.22%)</title><rect x="74.5" y="995.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="77.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (10 samples, 0.22%)</title><rect x="74.5" y="979.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.5" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (9 samples, 0.20%)</title><rect x="74.5" y="963.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (9 samples, 0.20%)</title><rect x="74.5" y="947.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="77.5" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (6 samples, 0.13%)</title><rect x="75.3" y="931.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="78.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (6 samples, 0.13%)</title><rect x="75.3" y="915.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="78.3" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (6 samples, 0.13%)</title><rect x="75.3" y="899.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.3" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (6 samples, 0.13%)</title><rect x="75.3" y="883.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="78.3" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (6 samples, 0.13%)</title><rect x="75.3" y="867.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="78.3" y="878.0"></text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (6 samples, 0.13%)</title><rect x="75.3" y="851.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="78.3" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (6 samples, 0.13%)</title><rect x="75.3" y="835.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="78.3" y="846.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (6 samples, 0.13%)</title><rect x="75.3" y="819.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="78.3" y="830.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (6 samples, 0.13%)</title><rect x="75.3" y="803.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="78.3" y="814.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (6 samples, 0.13%)</title><rect x="75.3" y="787.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="78.3" y="798.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (6 samples, 0.13%)</title><rect x="75.3" y="771.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="78.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="75.3" y="755.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="78.3" y="766.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="75.3" y="739.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="78.3" y="750.0"></text>
</g>
<g>
<title>__GI___writev (6 samples, 0.13%)</title><rect x="75.3" y="723.0" width="1.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="78.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="75.3" y="707.0" width="1.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="78.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="75.3" y="691.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="78.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="75.3" y="675.0" width="1.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="78.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="75.3" y="659.0" width="1.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="78.3" y="670.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="75.3" y="643.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="78.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="75.3" y="627.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="78.3" y="638.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="75.3" y="611.0" width="1.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="78.3" y="622.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="75.3" y="595.0" width="1.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="78.3" y="606.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="75.3" y="579.0" width="1.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="78.3" y="590.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="75.3" y="563.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="78.3" y="574.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="75.3" y="547.0" width="1.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="78.3" y="558.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="75.5" y="531.0" width="1.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="78.5" y="542.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="75.5" y="515.0" width="1.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="78.5" y="526.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="75.5" y="499.0" width="1.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="78.5" y="510.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="75.5" y="483.0" width="1.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="78.5" y="494.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="75.8" y="467.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="78.8" y="478.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="75.8" y="451.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="78.8" y="462.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="75.8" y="435.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="78.8" y="446.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="75.8" y="419.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="78.8" y="430.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="75.8" y="403.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="78.8" y="414.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="75.8" y="387.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="78.8" y="398.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="75.8" y="371.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="78.8" y="382.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="75.8" y="355.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="78.8" y="366.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="75.8" y="339.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="78.8" y="350.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="75.8" y="323.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="78.8" y="334.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="75.8" y="307.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="78.8" y="318.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="75.8" y="291.0" width="1.0" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="78.8" y="302.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="75.8" y="275.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="78.8" y="286.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="76.0" y="259.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="79.0" y="270.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="76.0" y="243.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="79.0" y="254.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="76.0" y="227.0" width="0.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="79.0" y="238.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="76.0" y="211.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="79.0" y="222.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="76.0" y="195.0" width="0.8" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="79.0" y="206.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="76.0" y="179.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="79.0" y="190.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="76.0" y="163.0" width="0.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="79.0" y="174.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="76.0" y="147.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="79.0" y="158.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="76.0" y="131.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="79.0" y="142.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="76.0" y="115.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="79.0" y="126.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="76.0" y="99.0" width="0.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="79.0" y="110.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="76.0" y="83.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="79.0" y="94.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="76.3" y="67.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="79.3" y="78.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="76.3" y="51.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="79.3" y="62.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="76.3" y="35.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="79.3" y="46.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="76.8" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="79.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connectFlows (55 samples, 1.20%)</title><rect x="77.1" y="1059.0" width="14.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscriber (2 samples, 0.04%)</title><rect x="77.1" y="1043.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="80.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (53 samples, 1.15%)</title><rect x="77.6" y="1043.0" width="13.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="80.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (6 samples, 0.13%)</title><rect x="78.1" y="1027.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="81.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (4 samples, 0.09%)</title><rect x="78.4" y="1011.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="81.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (3 samples, 0.07%)</title><rect x="78.6" y="995.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="81.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="78.9" y="979.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="81.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.02%)</title><rect x="78.9" y="963.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="81.9" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.02%)</title><rect x="78.9" y="947.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="81.9" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.02%)</title><rect x="78.9" y="931.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="81.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.9" y="915.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="81.9" y="926.0"></text>
</g>
<g>
<title>write (1 samples, 0.02%)</title><rect x="78.9" y="899.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="81.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.9" y="883.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="81.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.9" y="867.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="81.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.9" y="851.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="81.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.9" y="835.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="81.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.9" y="819.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="81.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.9" y="803.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="81.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.9" y="787.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="81.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.9" y="771.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="81.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.9" y="755.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="81.9" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.9" y="739.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="81.9" y="750.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="78.9" y="723.0" width="0.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="81.9" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="79.1" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.02%)</title><rect x="79.4" y="1011.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="82.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (45 samples, 0.98%)</title><rect x="79.6" y="1027.0" width="11.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="82.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (45 samples, 0.98%)</title><rect x="79.6" y="1011.0" width="11.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="82.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (5 samples, 0.11%)</title><rect x="79.6" y="995.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="82.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.07%)</title><rect x="80.2" y="979.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="83.2" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.07%)</title><rect x="80.2" y="963.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="83.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (29 samples, 0.63%)</title><rect x="80.9" y="995.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (29 samples, 0.63%)</title><rect x="80.9" y="979.0" width="7.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="83.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (29 samples, 0.63%)</title><rect x="80.9" y="963.0" width="7.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="83.9" y="974.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="81.4" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="84.4" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="81.4" y="931.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.4" y="942.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="81.4" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="84.4" y="926.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="81.4" y="899.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.4" y="910.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (26 samples, 0.57%)</title><rect x="81.7" y="947.0" width="6.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="84.7" y="958.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (26 samples, 0.57%)</title><rect x="81.7" y="931.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.54%)</title><rect x="81.7" y="915.0" width="6.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="84.7" y="926.0"></text>
</g>
<g>
<title>write (25 samples, 0.54%)</title><rect x="81.7" y="899.0" width="6.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="84.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.52%)</title><rect x="82.0" y="883.0" width="6.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="85.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.52%)</title><rect x="82.0" y="867.0" width="6.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="85.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.52%)</title><rect x="82.0" y="851.0" width="6.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="85.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.48%)</title><rect x="82.5" y="835.0" width="5.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="85.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.44%)</title><rect x="83.0" y="819.0" width="5.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="86.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.41%)</title><rect x="83.2" y="803.0" width="4.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="86.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.37%)</title><rect x="83.7" y="787.0" width="4.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="86.7" y="798.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.30%)</title><rect x="84.5" y="771.0" width="3.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="87.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.26%)</title><rect x="85.0" y="755.0" width="3.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="88.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.22%)</title><rect x="85.5" y="739.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="88.5" y="750.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.20%)</title><rect x="85.8" y="723.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="88.8" y="734.0"></text>
</g>
<g>
<title>write (1 samples, 0.02%)</title><rect x="88.1" y="915.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="91.1" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.&lt;init&gt; (6 samples, 0.13%)</title><rect x="88.4" y="995.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="91.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.02%)</title><rect x="89.7" y="979.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="92.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (5 samples, 0.11%)</title><rect x="89.9" y="995.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (3 samples, 0.07%)</title><rect x="89.9" y="979.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="92.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (3 samples, 0.07%)</title><rect x="89.9" y="963.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="92.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (3 samples, 0.07%)</title><rect x="89.9" y="947.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="92.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (3 samples, 0.07%)</title><rect x="89.9" y="931.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="92.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (3 samples, 0.07%)</title><rect x="89.9" y="915.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="92.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (3 samples, 0.07%)</title><rect x="89.9" y="899.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="92.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (3 samples, 0.07%)</title><rect x="89.9" y="883.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (3 samples, 0.07%)</title><rect x="89.9" y="867.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="92.9" y="878.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (3 samples, 0.07%)</title><rect x="89.9" y="851.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.9" y="862.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (3 samples, 0.07%)</title><rect x="89.9" y="835.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="92.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="89.9" y="819.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="92.9" y="830.0"></text>
</g>
<g>
<title>write (3 samples, 0.07%)</title><rect x="89.9" y="803.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="92.9" y="814.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="89.9" y="787.0" width="0.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="92.9" y="798.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="89.9" y="771.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="92.9" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="90.2" y="755.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="93.2" y="766.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="90.2" y="739.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="93.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="90.2" y="723.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="93.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="90.2" y="707.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="93.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="90.2" y="691.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="93.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="90.2" y="675.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="93.2" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (2 samples, 0.04%)</title><rect x="90.7" y="979.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="93.7" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.set (1 samples, 0.02%)</title><rect x="90.9" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="93.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="90.9" y="947.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="93.9" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="90.9" y="931.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="93.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="90.9" y="915.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="93.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="90.9" y="899.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="93.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="90.9" y="883.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="93.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="90.9" y="867.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="93.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="90.9" y="851.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="93.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.headers (93 samples, 2.03%)</title><rect x="91.2" y="1059.0" width="23.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.2" y="1070.0">j..</text>
</g>
<g>
<title>java/lang/StringBuilder.append (1 samples, 0.02%)</title><rect x="91.2" y="1043.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="94.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.02%)</title><rect x="91.2" y="1027.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="94.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="91.2" y="1011.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="94.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (1 samples, 0.02%)</title><rect x="91.2" y="995.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders0 (62 samples, 1.35%)</title><rect x="91.5" y="1043.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.04%)</title><rect x="91.5" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="94.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="91.5" y="1011.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="94.5" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.02%)</title><rect x="92.0" y="1027.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.0" y="1038.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.and (1 samples, 0.02%)</title><rect x="92.2" y="1027.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="92.2" y="1011.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="95.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="92.2" y="995.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.2" y="1006.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$257/916024249.get$Lambda (1 samples, 0.02%)</title><rect x="92.2" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="95.2" y="990.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$257/916024249.&lt;init&gt; (1 samples, 0.02%)</title><rect x="92.2" y="963.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="95.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectCookies (2 samples, 0.04%)</title><rect x="92.5" y="1027.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.5" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.04%)</title><rect x="92.5" y="1011.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="95.5" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.04%)</title><rect x="92.5" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="95.5" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.04%)</title><rect x="92.5" y="979.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="95.5" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="92.5" y="963.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.5" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.04%)</title><rect x="92.5" y="947.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="95.5" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="92.7" y="931.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.7" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="92.7" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="95.7" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="92.7" y="899.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="95.7" y="910.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="92.7" y="883.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="95.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="92.7" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="95.7" y="878.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="92.7" y="851.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="95.7" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (20 samples, 0.44%)</title><rect x="93.0" y="1027.0" width="5.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="96.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (4 samples, 0.09%)</title><rect x="93.0" y="1011.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="96.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (4 samples, 0.09%)</title><rect x="93.0" y="995.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="96.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.02%)</title><rect x="93.0" y="979.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="96.0" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (3 samples, 0.07%)</title><rect x="93.3" y="979.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="96.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.04%)</title><rect x="93.5" y="963.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="93.8" y="947.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="96.8" y="958.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.04%)</title><rect x="94.0" y="1011.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.0" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.next (2 samples, 0.04%)</title><rect x="94.0" y="995.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.0" y="1006.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$UnmodifiableEntry.&lt;init&gt; (1 samples, 0.02%)</title><rect x="94.0" y="979.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="97.0" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.02%)</title><rect x="94.3" y="979.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.3" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.next (1 samples, 0.02%)</title><rect x="94.3" y="963.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="97.3" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.02%)</title><rect x="94.3" y="947.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.3" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="94.3" y="931.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.3" y="942.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet.iterator (8 samples, 0.17%)</title><rect x="94.5" y="1011.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="97.5" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap$UnmodifiableEntrySet$1.&lt;init&gt; (8 samples, 0.17%)</title><rect x="94.5" y="995.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="97.5" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntrySet.iterator (8 samples, 0.17%)</title><rect x="94.5" y="979.0" width="2.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.5" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap$EntryIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="95.6" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="98.6" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="95.6" y="947.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="98.6" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (2 samples, 0.04%)</title><rect x="96.1" y="963.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.1" y="974.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.entrySet (1 samples, 0.02%)</title><rect x="96.6" y="1011.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="99.6" y="1022.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate$$Lambda$257/916024249.test (5 samples, 0.11%)</title><rect x="96.9" y="1011.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.9" y="1022.0"></text>
</g>
<g>
<title>java/util/function/BiPredicate.lambda$and$0 (5 samples, 0.11%)</title><rect x="96.9" y="995.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="99.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$77/1002191352.test (5 samples, 0.11%)</title><rect x="96.9" y="979.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="99.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$10 (5 samples, 0.11%)</title><rect x="96.9" y="963.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="99.9" y="974.0"></text>
</g>
<g>
<title>java/util/function/Predicate$$Lambda$66/1426329391.test (5 samples, 0.11%)</title><rect x="96.9" y="947.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="99.9" y="958.0"></text>
</g>
<g>
<title>java/util/function/Predicate.lambda$negate$1 (5 samples, 0.11%)</title><rect x="96.9" y="931.0" width="1.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="99.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$65/360067785.test (5 samples, 0.11%)</title><rect x="96.9" y="915.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="99.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$3 (5 samples, 0.11%)</title><rect x="96.9" y="899.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="99.9" y="910.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.07%)</title><rect x="96.9" y="883.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="99.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="96.9" y="867.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="99.9" y="878.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="96.9" y="851.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="99.9" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="97.1" y="867.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="100.1" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="97.4" y="851.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="100.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="97.4" y="835.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="100.4" y="846.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="97.4" y="819.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="100.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="97.6" y="883.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="100.6" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="97.6" y="867.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="100.6" y="878.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="97.9" y="851.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="100.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.build (36 samples, 0.78%)</title><rect x="98.1" y="1027.0" width="9.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="101.1" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (36 samples, 0.78%)</title><rect x="98.1" y="1011.0" width="9.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="101.1" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (36 samples, 0.78%)</title><rect x="98.1" y="995.0" width="9.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="101.1" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (3 samples, 0.07%)</title><rect x="98.4" y="979.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="101.4" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (3 samples, 0.07%)</title><rect x="98.4" y="963.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="101.4" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (3 samples, 0.07%)</title><rect x="98.4" y="947.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="101.4" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (2 samples, 0.04%)</title><rect x="99.2" y="979.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="102.2" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (29 samples, 0.63%)</title><rect x="99.7" y="979.0" width="7.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="102.7" y="990.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (28 samples, 0.61%)</title><rect x="99.7" y="963.0" width="7.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="102.7" y="974.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (27 samples, 0.59%)</title><rect x="99.9" y="947.0" width="7.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="102.9" y="958.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (3 samples, 0.07%)</title><rect x="100.5" y="931.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="103.5" y="942.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.02%)</title><rect x="101.0" y="915.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="104.0" y="926.0"></text>
</g>
<g>
<title>java/lang/String.trim (8 samples, 0.17%)</title><rect x="101.2" y="931.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="104.2" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (8 samples, 0.17%)</title><rect x="101.2" y="915.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="104.2" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.17%)</title><rect x="101.2" y="899.0" width="2.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="104.2" y="910.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (8 samples, 0.17%)</title><rect x="101.2" y="883.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="104.2" y="894.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="102.5" y="867.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="105.5" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/510109769.test (2 samples, 0.04%)</title><rect x="102.8" y="867.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="105.8" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="103.3" y="931.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="106.3" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="103.3" y="915.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="106.3" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.get$Lambda (1 samples, 0.02%)</title><rect x="103.3" y="899.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="106.3" y="910.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.&lt;init&gt; (1 samples, 0.02%)</title><rect x="103.3" y="883.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.3" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (5 samples, 0.11%)</title><rect x="103.5" y="931.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="106.5" y="942.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.accept (3 samples, 0.07%)</title><rect x="103.8" y="915.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="106.8" y="926.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (3 samples, 0.07%)</title><rect x="103.8" y="899.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="106.8" y="910.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.02%)</title><rect x="103.8" y="883.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="106.8" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.02%)</title><rect x="103.8" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="106.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="103.8" y="851.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="106.8" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="103.8" y="835.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="106.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="103.8" y="819.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="106.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="103.8" y="803.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="106.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="103.8" y="787.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="106.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="103.8" y="771.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="106.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="103.8" y="755.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="106.8" y="766.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="104.1" y="883.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="107.1" y="894.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="104.3" y="867.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.3" y="878.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="104.3" y="851.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="107.3" y="862.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="104.3" y="835.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="107.3" y="846.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="104.3" y="819.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="107.3" y="830.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementAt (1 samples, 0.02%)</title><rect x="104.6" y="915.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="107.6" y="926.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="104.8" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="107.8" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (7 samples, 0.15%)</title><rect x="105.1" y="931.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="108.1" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (1 samples, 0.02%)</title><rect x="105.8" y="915.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="108.8" y="926.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (3 samples, 0.07%)</title><rect x="106.1" y="915.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="109.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="106.1" y="899.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="109.1" y="910.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="106.1" y="883.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.1" y="894.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.07%)</title><rect x="106.1" y="867.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.1" y="878.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="106.4" y="851.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.4" y="862.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="106.4" y="835.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="109.4" y="846.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="106.9" y="963.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="109.9" y="974.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (1 samples, 0.02%)</title><rect x="107.1" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.hostString (7 samples, 0.15%)</title><rect x="107.4" y="1043.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/Integer.toString (1 samples, 0.02%)</title><rect x="107.6" y="1027.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="110.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (1 samples, 0.02%)</title><rect x="107.6" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (5 samples, 0.11%)</title><rect x="107.9" y="1027.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="110.9" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (5 samples, 0.11%)</title><rect x="107.9" y="1011.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="110.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22429093.invoke (5 samples, 0.11%)</title><rect x="107.9" y="995.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="110.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (5 samples, 0.11%)</title><rect x="107.9" y="979.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="110.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixCoder (1 samples, 0.02%)</title><rect x="107.9" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="110.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="107.9" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="110.9" y="958.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.04%)</title><rect x="108.2" y="963.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.2" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="108.2" y="947.0" width="0.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="111.2" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="108.2" y="931.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="111.2" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="108.2" y="915.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="111.2" y="926.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="108.4" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="111.4" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.collectHeaders1 (1 samples, 0.02%)</title><rect x="108.4" y="931.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="111.4" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle.internalMemberName (1 samples, 0.02%)</title><rect x="108.7" y="963.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="111.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="108.7" y="947.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.7" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="108.9" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="108.9" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.requestURI (7 samples, 0.15%)</title><rect x="109.2" y="1043.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="112.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="109.2" y="1027.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="112.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.getPathAndQuery (5 samples, 0.11%)</title><rect x="109.4" y="1027.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="109.4" y="1011.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="112.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (3 samples, 0.07%)</title><rect x="109.4" y="995.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/22429093.invoke (3 samples, 0.07%)</title><rect x="109.4" y="979.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="112.4" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="109.4" y="963.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="112.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.04%)</title><rect x="109.4" y="947.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="112.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.04%)</title><rect x="109.4" y="931.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.4" y="942.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="109.7" y="915.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="112.7" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="110.0" y="947.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.02%)</title><rect x="110.0" y="931.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="113.0" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (1 samples, 0.02%)</title><rect x="110.0" y="915.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="113.0" y="926.0"></text>
</g>
<g>
<title>java/net/URI.getRawPath (1 samples, 0.02%)</title><rect x="110.2" y="1011.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="113.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.encode (1 samples, 0.02%)</title><rect x="110.5" y="1011.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.method (1 samples, 0.02%)</title><rect x="110.7" y="1027.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="113.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (15 samples, 0.33%)</title><rect x="111.0" y="1043.0" width="3.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.0" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="111.0" y="1027.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="114.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="111.2" y="1011.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="114.2" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="111.2" y="995.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="114.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="111.2" y="979.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="114.2" y="990.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="111.5" y="1027.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="114.5" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="111.5" y="1011.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="114.5" y="1022.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="112.0" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="115.0" y="1006.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="112.0" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="115.0" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (10 samples, 0.22%)</title><rect x="112.3" y="1027.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="115.3" y="1038.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="112.5" y="1011.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="115.5" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (4 samples, 0.09%)</title><rect x="113.0" y="1011.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="116.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.09%)</title><rect x="113.0" y="995.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="116.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (4 samples, 0.09%)</title><rect x="113.0" y="979.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="116.0" y="990.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="113.0" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="116.0" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.07%)</title><rect x="113.3" y="963.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="116.3" y="974.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="113.8" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="116.8" y="958.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (3 samples, 0.07%)</title><rect x="114.1" y="1011.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="117.1" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateLeft (1 samples, 0.02%)</title><rect x="114.1" y="995.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="117.1" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.rotateRight (2 samples, 0.04%)</title><rect x="114.3" y="995.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="117.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.requests (1 samples, 0.02%)</title><rect x="114.8" y="1043.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="117.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="115.1" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="118.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="115.1" y="1075.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="118.1" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (23 samples, 0.50%)</title><rect x="115.4" y="1123.0" width="5.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="118.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (15 samples, 0.33%)</title><rect x="116.9" y="1107.0" width="3.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="119.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (3 samples, 0.07%)</title><rect x="117.2" y="1091.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="120.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (2 samples, 0.04%)</title><rect x="117.4" y="1075.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.4" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.set (1 samples, 0.02%)</title><rect x="117.9" y="1091.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="120.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.22%)</title><rect x="118.2" y="1091.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="121.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (10 samples, 0.22%)</title><rect x="118.2" y="1075.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="121.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.04%)</title><rect x="118.2" y="1059.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="121.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.04%)</title><rect x="118.2" y="1043.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.04%)</title><rect x="118.2" y="1027.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.04%)</title><rect x="118.2" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="121.2" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="118.2" y="995.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="121.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="118.2" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title><rect x="118.2" y="963.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="121.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.04%)</title><rect x="118.2" y="947.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.04%)</title><rect x="118.2" y="931.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="121.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.04%)</title><rect x="118.2" y="915.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="121.2" y="926.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="118.2" y="899.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="121.2" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (8 samples, 0.17%)</title><rect x="118.7" y="1059.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="121.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (8 samples, 0.17%)</title><rect x="118.7" y="1043.0" width="2.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="121.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.13%)</title><rect x="118.7" y="1027.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="121.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (6 samples, 0.13%)</title><rect x="118.7" y="1011.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="121.7" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6 samples, 0.13%)</title><rect x="118.7" y="995.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="121.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (1 samples, 0.02%)</title><rect x="119.0" y="979.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="122.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1 samples, 0.02%)</title><rect x="119.0" y="963.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="122.0" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (2 samples, 0.04%)</title><rect x="119.2" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="122.2" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (1 samples, 0.02%)</title><rect x="119.5" y="963.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="119.5" y="947.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="122.5" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="119.5" y="931.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="122.5" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.02%)</title><rect x="119.5" y="915.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.5" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (2 samples, 0.04%)</title><rect x="119.7" y="979.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.7" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.02%)</title><rect x="119.7" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.7" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (1 samples, 0.02%)</title><rect x="119.7" y="947.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="122.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.02%)</title><rect x="120.0" y="963.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="123.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isDone (1 samples, 0.02%)</title><rect x="120.0" y="947.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="123.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (2 samples, 0.04%)</title><rect x="120.2" y="1027.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="123.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.compareAndSet (1 samples, 0.02%)</title><rect x="120.2" y="1011.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="123.2" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (1 samples, 0.02%)</title><rect x="120.5" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="123.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.&lt;init&gt; (2 samples, 0.04%)</title><rect x="120.8" y="1107.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="123.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (5 samples, 0.11%)</title><rect x="121.3" y="1235.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="124.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (5 samples, 0.11%)</title><rect x="121.3" y="1219.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="124.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (5 samples, 0.11%)</title><rect x="121.3" y="1203.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="124.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (2 samples, 0.04%)</title><rect x="121.8" y="1187.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="124.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (1 samples, 0.02%)</title><rect x="122.3" y="1187.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="125.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.07%)</title><rect x="122.6" y="1267.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="125.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="122.8" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="125.8" y="1262.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="122.8" y="1235.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="125.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (1 samples, 0.02%)</title><rect x="123.1" y="1251.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.establishExchange (251 samples, 5.47%)</title><rect x="123.3" y="1267.0" width="64.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="126.3" y="1278.0">jdk/int..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.07%)</title><rect x="123.3" y="1251.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.07%)</title><rect x="123.3" y="1235.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="126.3" y="1246.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="123.3" y="1219.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="126.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$215/1547869107.apply (2 samples, 0.04%)</title><rect x="123.6" y="1219.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$establishExchange$2 (1 samples, 0.02%)</title><rect x="123.8" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="126.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (4 samples, 0.09%)</title><rect x="124.1" y="1251.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (4 samples, 0.09%)</title><rect x="124.1" y="1235.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="124.9" y="1219.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="127.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="124.9" y="1203.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.get (242 samples, 5.27%)</title><rect x="125.1" y="1251.0" width="62.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.1" y="1262.0">jdk/in..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="125.1" y="1235.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="128.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="125.1" y="1219.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="128.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$160/1778891811.get$Lambda (2 samples, 0.04%)</title><rect x="125.1" y="1203.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.handle (220 samples, 4.79%)</title><rect x="125.6" y="1235.0" width="56.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="128.6" y="1246.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandleStage (220 samples, 4.79%)</title><rect x="125.6" y="1219.0" width="56.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="128.6" y="1230.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (220 samples, 4.79%)</title><rect x="125.6" y="1203.0" width="56.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.6" y="1214.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.11%)</title><rect x="126.1" y="1187.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.11%)</title><rect x="126.1" y="1171.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="129.1" y="1182.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="126.4" y="1155.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="129.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$160/1778891811.apply (2 samples, 0.04%)</title><rect x="126.9" y="1155.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="129.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$160/1778891811.apply (213 samples, 4.64%)</title><rect x="127.4" y="1187.0" width="54.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.4" y="1198.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$get$0 (213 samples, 4.64%)</title><rect x="127.4" y="1171.0" width="54.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.4" y="1182.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createExchangeImpl (213 samples, 4.64%)</title><rect x="127.4" y="1155.0" width="54.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="130.4" y="1166.0">jdk/i..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApply (105 samples, 2.29%)</title><rect x="127.4" y="1139.0" width="27.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="130.4" y="1150.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (105 samples, 2.29%)</title><rect x="127.4" y="1123.0" width="27.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.4" y="1134.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (105 samples, 2.29%)</title><rect x="127.4" y="1107.0" width="27.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.4" y="1118.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (2 samples, 0.04%)</title><rect x="127.4" y="1091.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.4" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (2 samples, 0.04%)</title><rect x="127.4" y="1075.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.convEndian (1 samples, 0.02%)</title><rect x="127.7" y="1059.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="130.7" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl$$Lambda$208/1774108670.apply (99 samples, 2.16%)</title><rect x="127.9" y="1091.0" width="25.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="130.9" y="1102.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.lambda$createExchangeImpl$1 (99 samples, 2.16%)</title><rect x="127.9" y="1075.0" width="25.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="130.9" y="1086.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.h2Upgrade (99 samples, 2.16%)</title><rect x="127.9" y="1059.0" width="25.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="130.9" y="1070.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.setH2Upgrade (99 samples, 2.16%)</title><rect x="127.9" y="1043.0" width="25.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.9" y="1054.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getSettingsString (83 samples, 1.81%)</title><rect x="127.9" y="1027.0" width="21.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="130.9" y="1038.0">j..</text>
</g>
<g>
<title>java/util/Base64$Encoder.encodeToString (3 samples, 0.07%)</title><rect x="128.2" y="1011.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.2" y="1022.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode (3 samples, 0.07%)</title><rect x="128.2" y="995.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.2" y="1006.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.encode0 (1 samples, 0.02%)</title><rect x="128.2" y="979.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="131.2" y="990.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.outLength (2 samples, 0.04%)</title><rect x="128.5" y="979.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.5" y="990.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.withoutPadding (2 samples, 0.04%)</title><rect x="129.0" y="1011.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="132.0" y="1022.0"></text>
</g>
<g>
<title>java/util/Base64$Encoder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="129.2" y="995.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.2" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getClientSettings (67 samples, 1.46%)</title><rect x="129.5" y="1011.0" width="17.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="132.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getParameter (62 samples, 1.35%)</title><rect x="129.5" y="995.0" width="15.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="132.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getIntegerNetProperty (62 samples, 1.35%)</title><rect x="129.5" y="979.0" width="15.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="132.5" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/341748265.linkToTargetMethod (1 samples, 0.02%)</title><rect x="129.7" y="963.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="132.7" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="129.7" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="132.7" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/146370526.get$Lambda (1 samples, 0.02%)</title><rect x="129.7" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="132.7" y="942.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (60 samples, 1.31%)</title><rect x="130.0" y="963.0" width="15.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="133.0" y="974.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="130.3" y="947.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="133.3" y="958.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (44 samples, 0.96%)</title><rect x="130.5" y="947.0" width="11.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="133.5" y="958.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (3 samples, 0.07%)</title><rect x="131.8" y="931.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="134.8" y="942.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (3 samples, 0.07%)</title><rect x="131.8" y="915.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="134.8" y="926.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="132.6" y="931.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="135.6" y="942.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="132.8" y="931.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="135.8" y="942.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (9 samples, 0.20%)</title><rect x="133.1" y="931.0" width="2.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="136.1" y="942.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (2 samples, 0.04%)</title><rect x="133.6" y="915.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="136.6" y="926.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.02%)</title><rect x="134.1" y="915.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="137.1" y="926.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.02%)</title><rect x="134.4" y="915.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="137.4" y="926.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="134.4" y="899.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="137.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="134.6" y="915.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="137.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="134.6" y="899.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="137.6" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="134.6" y="883.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="137.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="134.6" y="867.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="137.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="134.6" y="851.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="137.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="134.6" y="835.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="137.6" y="846.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.04%)</title><rect x="134.9" y="915.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="137.9" y="926.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="135.4" y="931.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="138.4" y="942.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.04%)</title><rect x="135.7" y="931.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="138.7" y="942.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.04%)</title><rect x="136.2" y="931.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="139.2" y="942.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="136.7" y="931.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="139.7" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (1 samples, 0.02%)</title><rect x="136.9" y="931.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="139.9" y="942.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="137.2" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="140.2" y="942.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="137.5" y="931.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="140.5" y="942.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (5 samples, 0.11%)</title><rect x="137.7" y="931.0" width="1.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="140.7" y="942.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.02%)</title><rect x="137.7" y="915.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="140.7" y="926.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.07%)</title><rect x="138.0" y="915.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="141.0" y="926.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="138.2" y="899.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="141.2" y="910.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (1 samples, 0.02%)</title><rect x="138.2" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="141.2" y="894.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="138.5" y="899.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="141.5" y="910.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="138.7" y="915.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="141.7" y="926.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (11 samples, 0.24%)</title><rect x="139.0" y="931.0" width="2.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="142.0" y="942.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.04%)</title><rect x="139.5" y="915.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="142.5" y="926.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (2 samples, 0.04%)</title><rect x="139.5" y="899.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="142.5" y="910.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (4 samples, 0.09%)</title><rect x="140.0" y="915.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="143.0" y="926.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.07%)</title><rect x="141.1" y="915.0" width="0.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="144.1" y="926.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.07%)</title><rect x="141.1" y="899.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="144.1" y="910.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="141.1" y="883.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="144.1" y="894.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.04%)</title><rect x="141.1" y="867.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="144.1" y="878.0"></text>
</g>
<g>
<title>nmethod::is_zombie() const (1 samples, 0.02%)</title><rect x="141.6" y="883.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="144.6" y="894.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.04%)</title><rect x="141.8" y="947.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="144.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$61/146370526.run (12 samples, 0.26%)</title><rect x="142.3" y="947.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$getIntegerNetProperty$11 (12 samples, 0.26%)</title><rect x="142.3" y="931.0" width="3.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="145.3" y="942.0"></text>
</g>
<g>
<title>sun/net/NetProperties.getInteger (12 samples, 0.26%)</title><rect x="142.3" y="915.0" width="3.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="145.3" y="926.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.02%)</title><rect x="142.6" y="899.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="145.6" y="910.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (9 samples, 0.20%)</title><rect x="142.9" y="899.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="145.9" y="910.0"></text>
</g>
<g>
<title>java/lang/System.checkKey (4 samples, 0.09%)</title><rect x="142.9" y="883.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.9" y="894.0"></text>
</g>
<g>
<title>java/lang/String.equals (3 samples, 0.07%)</title><rect x="143.1" y="867.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="146.1" y="878.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.11%)</title><rect x="143.9" y="883.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.9" y="894.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.09%)</title><rect x="144.1" y="867.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="147.1" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.07%)</title><rect x="144.4" y="851.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="147.4" y="862.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (1 samples, 0.02%)</title><rect x="145.2" y="899.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (1 samples, 0.02%)</title><rect x="145.2" y="883.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="148.2" y="894.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="145.2" y="867.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="148.2" y="878.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="145.2" y="851.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="148.2" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (4 samples, 0.09%)</title><rect x="145.4" y="995.0" width="1.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="148.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.&lt;init&gt; (4 samples, 0.09%)</title><rect x="145.4" y="979.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="148.4" y="990.0"></text>
</g>
<g>
<title>java/util/Arrays.fill (1 samples, 0.02%)</title><rect x="146.2" y="963.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.setParameter (1 samples, 0.02%)</title><rect x="146.5" y="995.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="149.5" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/frame/SettingsFrame.toByteArray (10 samples, 0.22%)</title><rect x="146.7" y="1011.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="149.7" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.22%)</title><rect x="146.7" y="995.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="149.7" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (10 samples, 0.22%)</title><rect x="146.7" y="979.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="149.7" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (7 samples, 0.15%)</title><rect x="147.5" y="963.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="150.5" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (7 samples, 0.15%)</title><rect x="147.5" y="947.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="150.5" y="958.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (5 samples, 0.11%)</title><rect x="147.5" y="931.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.5" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.07%)</title><rect x="147.5" y="915.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="150.5" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="147.5" y="899.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="150.5" y="910.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="148.0" y="899.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="151.0" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="148.2" y="915.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.2" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="148.2" y="899.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.2" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="148.8" y="931.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.8" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="149.0" y="915.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="152.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="149.0" y="899.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="152.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="149.0" y="883.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="152.0" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (16 samples, 0.35%)</title><rect x="149.3" y="1027.0" width="4.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.3" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="149.3" y="1011.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="152.3" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (15 samples, 0.33%)</title><rect x="149.5" y="1011.0" width="3.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="152.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="150.0" y="995.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="150.0" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="153.0" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="150.0" y="963.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="153.0" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap$Entry.&lt;init&gt; (4 samples, 0.09%)</title><rect x="150.3" y="995.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.3" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (6 samples, 0.13%)</title><rect x="151.3" y="995.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="154.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.13%)</title><rect x="151.3" y="979.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="154.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (6 samples, 0.13%)</title><rect x="151.3" y="963.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="154.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="151.3" y="947.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="154.3" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (5 samples, 0.11%)</title><rect x="151.6" y="947.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.6" y="958.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="152.6" y="931.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.6" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.fixAfterInsertion (2 samples, 0.04%)</title><rect x="152.9" y="995.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="155.9" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.setColor (2 samples, 0.04%)</title><rect x="152.9" y="979.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$316/2105483381.apply (4 samples, 0.09%)</title><rect x="153.4" y="1091.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (4 samples, 0.09%)</title><rect x="153.4" y="1075.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (4 samples, 0.09%)</title><rect x="153.4" y="1059.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="156.4" y="1070.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1 samples, 0.02%)</title><rect x="153.9" y="1043.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.9" y="1054.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.02%)</title><rect x="153.9" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="156.9" y="1038.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.02%)</title><rect x="153.9" y="1011.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="156.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="153.9" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="156.9" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="154.2" y="1043.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="157.2" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (108 samples, 2.35%)</title><rect x="154.4" y="1139.0" width="27.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="157.4" y="1150.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (99 samples, 2.16%)</title><rect x="154.7" y="1123.0" width="25.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="157.7" y="1134.0">j..</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="155.2" y="1107.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="158.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="155.4" y="1107.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="158.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="155.4" y="1091.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="158.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$162/690075973.get$Lambda (2 samples, 0.04%)</title><rect x="155.4" y="1075.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.4" y="1086.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.04%)</title><rect x="156.0" y="1107.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="159.0" y="1118.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.04%)</title><rect x="156.0" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="159.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.&lt;init&gt; (3 samples, 0.07%)</title><rect x="156.5" y="1107.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="159.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (1 samples, 0.02%)</title><rect x="157.0" y="1091.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="160.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.&lt;init&gt; (8 samples, 0.17%)</title><rect x="157.2" y="1107.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="160.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.13%)</title><rect x="157.2" y="1091.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="160.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.13%)</title><rect x="157.2" y="1075.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.get$Lambda (6 samples, 0.13%)</title><rect x="157.2" y="1059.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="160.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.&lt;init&gt; (6 samples, 0.13%)</title><rect x="157.2" y="1043.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="160.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="158.5" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="161.5" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.02%)</title><rect x="158.8" y="1091.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="161.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.02%)</title><rect x="158.8" y="1075.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="161.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="159.0" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="159.0" y="1075.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="162.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.02%)</title><rect x="159.0" y="1059.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.0" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.&lt;init&gt; (2 samples, 0.04%)</title><rect x="159.3" y="1107.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.synchronizedScheduler (1 samples, 0.02%)</title><rect x="159.6" y="1091.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.&lt;init&gt; (1 samples, 0.02%)</title><rect x="159.6" y="1075.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="162.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="159.6" y="1059.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="162.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.getConnection (6 samples, 0.13%)</title><rect x="159.8" y="1107.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="162.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.getConnection (6 samples, 0.13%)</title><rect x="159.8" y="1091.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="162.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.findConnection (6 samples, 0.13%)</title><rect x="159.8" y="1075.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="162.8" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.09%)</title><rect x="159.8" y="1059.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="162.8" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="159.8" y="1043.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.02%)</title><rect x="159.8" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="162.8" y="1038.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.02%)</title><rect x="159.8" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="162.8" y="1022.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.02%)</title><rect x="159.8" y="995.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="162.8" y="1006.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.02%)</title><rect x="159.8" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="162.8" y="990.0"></text>
</g>
<g>
<title>java/net/Inet4Address.equals (1 samples, 0.02%)</title><rect x="159.8" y="963.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="162.8" y="974.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.07%)</title><rect x="160.1" y="1043.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="163.1" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (3 samples, 0.07%)</title><rect x="160.1" y="1027.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.1" y="1038.0"></text>
</g>
<g>
<title>java/util/Objects.hash (3 samples, 0.07%)</title><rect x="160.1" y="1011.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="163.1" y="1022.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (3 samples, 0.07%)</title><rect x="160.1" y="995.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.1" y="1006.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.02%)</title><rect x="160.3" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="163.3" y="990.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.hashCode (1 samples, 0.02%)</title><rect x="160.3" y="963.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.3" y="974.0"></text>
</g>
<g>
<title>java/net/Inet4Address.hashCode (1 samples, 0.02%)</title><rect x="160.3" y="947.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.3" y="958.0"></text>
</g>
<g>
<title>java/net/InetAddress.holder (1 samples, 0.02%)</title><rect x="160.3" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="163.3" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (1 samples, 0.02%)</title><rect x="160.6" y="979.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="163.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.remove (2 samples, 0.04%)</title><rect x="160.8" y="1059.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="163.8" y="1070.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.04%)</title><rect x="160.8" y="1043.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="163.8" y="1054.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.04%)</title><rect x="160.8" y="1027.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="163.8" y="1038.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.04%)</title><rect x="160.8" y="1011.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="163.8" y="1022.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (2 samples, 0.04%)</title><rect x="160.8" y="995.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="163.8" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.getAddress (70 samples, 1.52%)</title><rect x="161.4" y="1107.0" width="17.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="164.4" y="1118.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (70 samples, 1.52%)</title><rect x="161.4" y="1091.0" width="17.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="164.4" y="1102.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="161.6" y="1075.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="164.6" y="1086.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="161.9" y="1075.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="164.9" y="1086.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="162.1" y="1075.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="165.1" y="1086.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (55 samples, 1.20%)</title><rect x="162.4" y="1075.0" width="14.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="165.4" y="1086.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.02%)</title><rect x="163.7" y="1059.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="166.7" y="1070.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (2 samples, 0.04%)</title><rect x="163.9" y="1059.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="166.9" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="164.4" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="167.4" y="1070.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.02%)</title><rect x="164.4" y="1043.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="167.4" y="1054.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="164.7" y="1059.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="167.7" y="1070.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (14 samples, 0.30%)</title><rect x="165.0" y="1059.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="168.0" y="1070.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.02%)</title><rect x="165.2" y="1043.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="168.2" y="1054.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.04%)</title><rect x="165.5" y="1043.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="168.5" y="1054.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.02%)</title><rect x="166.0" y="1043.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="169.0" y="1054.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.02%)</title><rect x="166.2" y="1043.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="169.2" y="1054.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 0.11%)</title><rect x="166.5" y="1043.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="169.5" y="1054.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="166.8" y="1027.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="169.8" y="1038.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (3 samples, 0.07%)</title><rect x="167.0" y="1027.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="170.0" y="1038.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.02%)</title><rect x="167.8" y="1043.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="170.8" y="1054.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.04%)</title><rect x="168.0" y="1043.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="171.0" y="1054.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.04%)</title><rect x="168.5" y="1059.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="171.5" y="1070.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (2 samples, 0.04%)</title><rect x="169.1" y="1059.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="172.1" y="1070.0"></text>
</g>
<g>
<title>RegisterMap::RegisterMap(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="169.6" y="1059.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="172.6" y="1070.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.02%)</title><rect x="169.8" y="1059.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="172.8" y="1070.0"></text>
</g>
<g>
<title>os::current_stack_pointer() (1 samples, 0.02%)</title><rect x="170.1" y="1059.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="173.1" y="1070.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.02%)</title><rect x="170.3" y="1059.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="173.3" y="1070.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (6 samples, 0.13%)</title><rect x="170.6" y="1059.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="173.6" y="1070.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (2 samples, 0.04%)</title><rect x="170.9" y="1043.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="173.9" y="1054.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.07%)</title><rect x="171.4" y="1043.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="174.4" y="1054.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.07%)</title><rect x="171.4" y="1027.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="174.4" y="1038.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (17 samples, 0.37%)</title><rect x="172.1" y="1059.0" width="4.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="175.1" y="1070.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="173.2" y="1043.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="176.2" y="1054.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (7 samples, 0.15%)</title><rect x="173.4" y="1043.0" width="1.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="176.4" y="1054.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (3 samples, 0.07%)</title><rect x="174.5" y="1027.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="177.5" y="1038.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (5 samples, 0.11%)</title><rect x="175.2" y="1043.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="178.2" y="1054.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.02%)</title><rect x="175.5" y="1027.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="178.5" y="1038.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (3 samples, 0.07%)</title><rect x="175.7" y="1027.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="178.7" y="1038.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.07%)</title><rect x="175.7" y="1011.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="178.7" y="1022.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.07%)</title><rect x="175.7" y="995.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="178.7" y="1006.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="176.5" y="1075.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="179.5" y="1086.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.02%)</title><rect x="176.8" y="1075.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="179.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl$$Lambda$166/752533844.run (7 samples, 0.15%)</title><rect x="177.0" y="1075.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="180.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.lambda$getAddress$5 (7 samples, 0.15%)</title><rect x="177.0" y="1059.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="180.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="177.0" y="1043.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="180.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="177.0" y="1027.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="180.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="177.0" y="1011.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="180.0" y="1022.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.&lt;init&gt; (6 samples, 0.13%)</title><rect x="177.3" y="1043.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.3" y="1054.0"></text>
</g>
<g>
<title>java/net/InetAddress.getByName (6 samples, 0.13%)</title><rect x="177.3" y="1027.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="180.3" y="1038.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.13%)</title><rect x="177.3" y="1011.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="180.3" y="1022.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName (6 samples, 0.13%)</title><rect x="177.3" y="995.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="180.3" y="1006.0"></text>
</g>
<g>
<title>java/net/InetAddress.getAllByName0 (6 samples, 0.13%)</title><rect x="177.3" y="979.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="180.3" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.07%)</title><rect x="177.5" y="963.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="180.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="177.5" y="947.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="180.5" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="177.5" y="931.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="180.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.spread (1 samples, 0.02%)</title><rect x="178.1" y="947.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="181.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="178.3" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="181.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap$Iter.advance (1 samples, 0.02%)</title><rect x="178.3" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListSet.iterator (1 samples, 0.02%)</title><rect x="178.6" y="963.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="181.6" y="974.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="178.6" y="947.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="181.6" y="958.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.04%)</title><rect x="178.8" y="1075.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="181.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.07%)</title><rect x="179.3" y="1107.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="182.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (3 samples, 0.07%)</title><rect x="179.3" y="1091.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (2 samples, 0.04%)</title><rect x="179.6" y="1075.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (2 samples, 0.04%)</title><rect x="179.6" y="1059.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="182.6" y="1070.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.02%)</title><rect x="179.9" y="1043.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="182.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (8 samples, 0.17%)</title><rect x="180.1" y="1123.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="183.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (7 samples, 0.15%)</title><rect x="180.1" y="1107.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="183.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (7 samples, 0.15%)</title><rect x="180.1" y="1091.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="183.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (7 samples, 0.15%)</title><rect x="180.1" y="1075.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (7 samples, 0.15%)</title><rect x="180.1" y="1059.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.&lt;init&gt; (4 samples, 0.09%)</title><rect x="180.9" y="1043.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="181.9" y="1107.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="184.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.02%)</title><rect x="181.9" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="184.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (3 samples, 0.07%)</title><rect x="182.2" y="1235.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="185.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (3 samples, 0.07%)</title><rect x="182.2" y="1219.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="185.2" y="1230.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="182.7" y="1203.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="185.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ExchangeImpl.createHttp1Exchange (5 samples, 0.11%)</title><rect x="182.9" y="1235.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="185.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (4 samples, 0.09%)</title><rect x="183.2" y="1219.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="186.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (4 samples, 0.09%)</title><rect x="183.2" y="1203.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.07%)</title><rect x="183.2" y="1187.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.07%)</title><rect x="183.2" y="1171.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="186.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.07%)</title><rect x="183.2" y="1155.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="186.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.version (1 samples, 0.02%)</title><rect x="183.7" y="1139.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="186.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="184.0" y="1187.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="187.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="184.0" y="1171.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="187.0" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="184.0" y="1155.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="187.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (11 samples, 0.24%)</title><rect x="184.2" y="1235.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="187.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyFor (10 samples, 0.22%)</title><rect x="184.5" y="1219.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="187.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.07%)</title><rect x="184.5" y="1203.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="187.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.length (3 samples, 0.07%)</title><rect x="184.5" y="1187.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="187.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/Integer.stringSize (3 samples, 0.07%)</title><rect x="184.5" y="1171.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.5" y="1182.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="185.3" y="1203.0" width="0.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="188.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2Connection.keyString (6 samples, 0.13%)</title><rect x="185.5" y="1203.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1033393279.linkToTargetMethod (6 samples, 0.13%)</title><rect x="185.5" y="1187.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="188.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1762434755.invoke (6 samples, 0.13%)</title><rect x="185.5" y="1171.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.09%)</title><rect x="185.8" y="1155.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="188.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1494898829.invoke (1 samples, 0.02%)</title><rect x="186.8" y="1155.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="189.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="186.8" y="1139.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="189.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.02%)</title><rect x="186.8" y="1123.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="189.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="186.8" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="189.8" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="186.8" y="1091.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="189.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Logger.log (1 samples, 0.02%)</title><rect x="187.1" y="1235.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/System$Logger.log (1 samples, 0.02%)</title><rect x="187.1" y="1219.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="190.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http2ClientImpl.getConnectionFor (2 samples, 0.04%)</title><rect x="187.3" y="1251.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="190.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.requestFilters (19 samples, 0.41%)</title><rect x="187.8" y="1315.0" width="4.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="190.8" y="1326.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (4 samples, 0.09%)</title><rect x="188.6" y="1299.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="191.6" y="1310.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (4 samples, 0.09%)</title><rect x="188.6" y="1283.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="191.6" y="1294.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (4 samples, 0.09%)</title><rect x="188.6" y="1267.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="191.6" y="1278.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (4 samples, 0.09%)</title><rect x="188.6" y="1251.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="191.6" y="1262.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (4 samples, 0.09%)</title><rect x="188.6" y="1235.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="191.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (2 samples, 0.04%)</title><rect x="189.1" y="1219.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="192.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="189.1" y="1203.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="192.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="189.1" y="1187.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="192.1" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="189.1" y="1171.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="192.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="189.1" y="1155.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="192.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="189.1" y="1139.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="192.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="189.1" y="1123.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="192.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="189.1" y="1107.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="192.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.request (10 samples, 0.22%)</title><rect x="189.6" y="1299.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter$Cache.get (4 samples, 0.09%)</title><rect x="189.6" y="1283.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.6" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (6 samples, 0.13%)</title><rect x="190.6" y="1283.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="193.6" y="1294.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (3 samples, 0.07%)</title><rect x="191.2" y="1267.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="194.2" y="1278.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.07%)</title><rect x="191.2" y="1251.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="194.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="191.7" y="1235.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="194.7" y="1246.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="191.7" y="1219.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="194.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.client (1 samples, 0.02%)</title><rect x="191.9" y="1267.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="194.9" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/RedirectFilter.request (2 samples, 0.04%)</title><rect x="192.2" y="1299.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="195.2" y="1310.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="192.7" y="1379.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="195.7" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$135/1926427287.get (2 samples, 0.04%)</title><rect x="193.0" y="1395.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="196.0" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (4 samples, 0.09%)</title><rect x="193.5" y="1411.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.5" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (4 samples, 0.09%)</title><rect x="193.5" y="1395.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.5" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (3 samples, 0.07%)</title><rect x="193.7" y="1379.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.7" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.04%)</title><rect x="194.0" y="1363.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="197.0" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (2 samples, 0.04%)</title><rect x="194.0" y="1347.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="194.0" y="1331.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="197.0" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="194.2" y="1315.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="197.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="194.2" y="1299.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="197.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="194.2" y="1283.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="197.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.04%)</title><rect x="194.5" y="1411.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="197.5" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.04%)</title><rect x="194.5" y="1395.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="197.5" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.02%)</title><rect x="194.8" y="1379.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="197.8" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (342 samples, 7.45%)</title><rect x="195.0" y="1411.0" width="87.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.0" y="1422.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.take (329 samples, 7.16%)</title><rect x="196.8" y="1395.0" width="84.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="199.8" y="1406.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (226 samples, 4.92%)</title><rect x="198.1" y="1379.0" width="58.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="201.1" y="1390.0">java/u..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="198.1" y="1363.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="201.1" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="198.1" y="1347.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="201.1" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="198.1" y="1331.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="201.1" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (4 samples, 0.09%)</title><rect x="198.4" y="1363.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="201.4" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="199.1" y="1347.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_V (1 samples, 0.02%)</title><rect x="199.1" y="1331.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="202.1" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="199.1" y="1315.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="202.1" y="1326.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="199.1" y="1299.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="202.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.checkInterruptWhileWaiting (4 samples, 0.09%)</title><rect x="199.4" y="1363.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="202.4" y="1374.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (4 samples, 0.09%)</title><rect x="199.4" y="1347.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="202.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.04%)</title><rect x="199.6" y="1331.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="202.6" y="1342.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (1 samples, 0.02%)</title><rect x="199.6" y="1315.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="202.6" y="1326.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="199.9" y="1315.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="202.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="200.2" y="1331.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="203.2" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.07%)</title><rect x="200.4" y="1363.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.4" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.07%)</title><rect x="200.4" y="1347.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="203.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.07%)</title><rect x="200.4" y="1331.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="203.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (23 samples, 0.50%)</title><rect x="201.2" y="1363.0" width="5.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="204.2" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.getState (1 samples, 0.02%)</title><rect x="201.2" y="1347.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="204.2" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (22 samples, 0.48%)</title><rect x="201.4" y="1347.0" width="5.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="204.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (20 samples, 0.44%)</title><rect x="201.4" y="1331.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="204.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (19 samples, 0.41%)</title><rect x="201.7" y="1315.0" width="4.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.7" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (19 samples, 0.41%)</title><rect x="201.7" y="1299.0" width="4.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="204.7" y="1310.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.13%)</title><rect x="201.7" y="1283.0" width="1.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="204.7" y="1294.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="202.2" y="1267.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="205.2" y="1278.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="202.5" y="1267.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="205.5" y="1278.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="202.7" y="1267.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="205.7" y="1278.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (13 samples, 0.28%)</title><rect x="203.2" y="1283.0" width="3.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="206.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.24%)</title><rect x="203.8" y="1267.0" width="2.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="206.8" y="1278.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.24%)</title><rect x="203.8" y="1251.0" width="2.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="206.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.24%)</title><rect x="203.8" y="1235.0" width="2.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="206.8" y="1246.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.24%)</title><rect x="203.8" y="1219.0" width="2.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="206.8" y="1230.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.24%)</title><rect x="203.8" y="1203.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="206.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.22%)</title><rect x="204.0" y="1187.0" width="2.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="207.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.22%)</title><rect x="204.0" y="1171.0" width="2.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="207.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.22%)</title><rect x="204.0" y="1155.0" width="2.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="207.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (2 samples, 0.04%)</title><rect x="206.6" y="1331.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.6" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.isOnSyncQueue (2 samples, 0.04%)</title><rect x="207.1" y="1363.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="210.1" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.findNodeFromTail (1 samples, 0.02%)</title><rect x="207.4" y="1347.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="210.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (189 samples, 4.12%)</title><rect x="207.6" y="1363.0" width="48.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.6" y="1374.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (189 samples, 4.12%)</title><rect x="207.6" y="1347.0" width="48.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="210.6" y="1358.0">jdk/..</text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="208.4" y="1331.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="211.4" y="1342.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.02%)</title><rect x="208.9" y="1331.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="211.9" y="1342.0"></text>
</g>
<g>
<title>Unsafe_Park (73 samples, 1.59%)</title><rect x="209.2" y="1331.0" width="18.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="212.2" y="1342.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.07%)</title><rect x="211.7" y="1315.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="214.7" y="1326.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (2 samples, 0.04%)</title><rect x="212.5" y="1315.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="215.5" y="1326.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="213.0" y="1315.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="216.0" y="1326.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="213.3" y="1315.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="216.3" y="1326.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (29 samples, 0.63%)</title><rect x="213.5" y="1315.0" width="7.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="216.5" y="1326.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (13 samples, 0.28%)</title><rect x="216.6" y="1299.0" width="3.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="219.6" y="1310.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="219.9" y="1299.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="222.9" y="1310.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="220.2" y="1299.0" width="0.8" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="223.2" y="1310.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (2 samples, 0.04%)</title><rect x="221.0" y="1315.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="224.0" y="1326.0"></text>
</g>
<g>
<title>__lll_unlock_wake (10 samples, 0.22%)</title><rect x="221.5" y="1315.0" width="2.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="224.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.22%)</title><rect x="221.5" y="1299.0" width="2.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="224.5" y="1310.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.22%)</title><rect x="221.5" y="1283.0" width="2.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="224.5" y="1294.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.20%)</title><rect x="221.7" y="1267.0" width="2.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="224.7" y="1278.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="222.3" y="1251.0" width="1.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="225.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="222.3" y="1235.0" width="1.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="225.3" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="223.5" y="1219.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="226.5" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="223.5" y="1203.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="226.5" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="223.8" y="1187.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="226.8" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="223.8" y="1171.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="226.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="223.8" y="1155.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="226.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="223.8" y="1139.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="226.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="223.8" y="1123.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="226.8" y="1134.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.07%)</title><rect x="224.1" y="1315.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="227.1" y="1326.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (2 samples, 0.04%)</title><rect x="224.8" y="1315.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="227.8" y="1326.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="225.3" y="1315.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="228.3" y="1326.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="226.1" y="1315.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="229.1" y="1326.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.02%)</title><rect x="226.4" y="1315.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="229.4" y="1326.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="226.6" y="1315.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="229.6" y="1326.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.09%)</title><rect x="226.9" y="1315.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="229.9" y="1326.0"></text>
</g>
<g>
<title>[unknown] (107 samples, 2.33%)</title><rect x="227.9" y="1331.0" width="27.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="230.9" y="1342.0">[..</text>
</g>
<g>
<title>__pthread_cleanup_pop (1 samples, 0.02%)</title><rect x="227.9" y="1315.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="230.9" y="1326.0"></text>
</g>
<g>
<title>__pthread_cond_wait (94 samples, 2.05%)</title><rect x="228.2" y="1315.0" width="24.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="231.2" y="1326.0">_..</text>
</g>
<g>
<title>[unknown] (84 samples, 1.83%)</title><rect x="230.7" y="1299.0" width="21.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="233.7" y="1310.0">[..</text>
</g>
<g>
<title>[unknown] (84 samples, 1.83%)</title><rect x="230.7" y="1283.0" width="21.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="233.7" y="1294.0">[..</text>
</g>
<g>
<title>[unknown] (77 samples, 1.68%)</title><rect x="232.5" y="1267.0" width="19.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="235.5" y="1278.0"></text>
</g>
<g>
<title>[unknown] (76 samples, 1.66%)</title><rect x="232.8" y="1251.0" width="19.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="235.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 1.61%)</title><rect x="233.3" y="1235.0" width="19.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="236.3" y="1246.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 1.55%)</title><rect x="234.1" y="1219.0" width="18.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="237.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.35%)</title><rect x="236.4" y="1203.0" width="15.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="239.4" y="1214.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.15%)</title><rect x="238.7" y="1187.0" width="13.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="241.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 1.07%)</title><rect x="239.7" y="1171.0" width="12.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="242.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="251.8" y="1155.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="254.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="251.8" y="1139.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="254.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="251.8" y="1123.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="254.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="251.8" y="1107.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="254.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="251.8" y="1091.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="254.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="252.1" y="1075.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="255.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="252.1" y="1059.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="255.1" y="1070.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.07%)</title><rect x="252.3" y="1315.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="255.3" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="252.8" y="1299.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="255.8" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="252.8" y="1283.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="255.8" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="252.8" y="1267.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="255.8" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="252.8" y="1251.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="255.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="252.8" y="1235.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="255.8" y="1246.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="253.1" y="1315.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="256.1" y="1326.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="253.3" y="1315.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="256.3" y="1326.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (6 samples, 0.13%)</title><rect x="253.6" y="1315.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="256.6" y="1326.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="255.1" y="1315.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="258.1" y="1326.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.07%)</title><rect x="255.4" y="1331.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="258.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lockInterruptibly (48 samples, 1.05%)</title><rect x="256.2" y="1379.0" width="12.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="259.2" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireInterruptibly (48 samples, 1.05%)</title><rect x="256.2" y="1363.0" width="12.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="259.2" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="256.2" y="1347.0" width="0.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="259.2" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="256.2" y="1331.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="259.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="256.2" y="1315.0" width="0.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="259.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="256.4" y="1347.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="259.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.doAcquireInterruptibly (39 samples, 0.85%)</title><rect x="256.7" y="1347.0" width="10.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.7" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (3 samples, 0.07%)</title><rect x="259.0" y="1331.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="262.0" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="259.0" y="1315.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="262.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="259.0" y="1299.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="262.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="259.0" y="1283.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="262.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.02%)</title><rect x="259.0" y="1267.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="262.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (2 samples, 0.04%)</title><rect x="259.3" y="1315.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="262.3" y="1326.0"></text>
</g>
<g>
<title>g1_post_barrier_slow (1 samples, 0.02%)</title><rect x="259.3" y="1299.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="262.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="259.5" y="1299.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="262.5" y="1310.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="259.5" y="1283.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="262.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/Class.cast (1 samples, 0.02%)</title><rect x="259.5" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (10 samples, 0.22%)</title><rect x="259.8" y="1331.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="262.8" y="1342.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (1 samples, 0.02%)</title><rect x="259.8" y="1315.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="262.8" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (9 samples, 0.20%)</title><rect x="260.0" y="1315.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="263.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (6 samples, 0.13%)</title><rect x="260.5" y="1299.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="263.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="262.1" y="1299.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="265.1" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="262.1" y="1283.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="265.1" y="1294.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="262.1" y="1267.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="265.1" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="262.1" y="1251.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="265.1" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="262.1" y="1235.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="265.1" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="262.1" y="1219.0" width="0.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="265.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="262.1" y="1203.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="265.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="262.1" y="1187.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="265.1" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="262.1" y="1171.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="265.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setHead (3 samples, 0.07%)</title><rect x="262.3" y="1331.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="265.3" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (13 samples, 0.28%)</title><rect x="263.1" y="1331.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="266.1" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (13 samples, 0.28%)</title><rect x="263.1" y="1315.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="266.1" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (7 samples, 0.15%)</title><rect x="263.1" y="1299.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="266.1" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.07%)</title><rect x="264.1" y="1283.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="267.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (6 samples, 0.13%)</title><rect x="264.9" y="1299.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="267.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.07%)</title><rect x="265.7" y="1283.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="268.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="266.5" y="1331.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="269.5" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (7 samples, 0.15%)</title><rect x="266.7" y="1347.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="269.7" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (7 samples, 0.15%)</title><rect x="266.7" y="1331.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="269.7" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="267.2" y="1315.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="270.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (2 samples, 0.04%)</title><rect x="267.5" y="1315.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="270.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.04%)</title><rect x="268.0" y="1315.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="271.0" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (50 samples, 1.09%)</title><rect x="268.5" y="1379.0" width="12.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.5" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (49 samples, 1.07%)</title><rect x="268.8" y="1363.0" width="12.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="271.8" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (49 samples, 1.07%)</title><rect x="268.8" y="1347.0" width="12.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="271.8" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (49 samples, 1.07%)</title><rect x="268.8" y="1331.0" width="12.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="271.8" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (49 samples, 1.07%)</title><rect x="268.8" y="1315.0" width="12.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="271.8" y="1326.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="268.8" y="1299.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="271.8" y="1310.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="269.0" y="1299.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="272.0" y="1310.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.26%)</title><rect x="269.3" y="1299.0" width="3.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="272.3" y="1310.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="269.8" y="1283.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="272.8" y="1294.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (3 samples, 0.07%)</title><rect x="270.1" y="1283.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="273.1" y="1294.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="270.8" y="1283.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="273.8" y="1294.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.07%)</title><rect x="271.1" y="1283.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="274.1" y="1294.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="271.9" y="1283.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="274.9" y="1294.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="272.4" y="1299.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="275.4" y="1310.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (34 samples, 0.74%)</title><rect x="272.6" y="1299.0" width="8.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="275.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.74%)</title><rect x="272.6" y="1283.0" width="8.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="275.6" y="1294.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.74%)</title><rect x="272.6" y="1267.0" width="8.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="275.6" y="1278.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.72%)</title><rect x="272.9" y="1251.0" width="8.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="275.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.72%)</title><rect x="272.9" y="1235.0" width="8.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="275.9" y="1246.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.72%)</title><rect x="272.9" y="1219.0" width="8.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="275.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.70%)</title><rect x="273.1" y="1203.0" width="8.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="276.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.61%)</title><rect x="274.2" y="1187.0" width="7.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="277.2" y="1198.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.61%)</title><rect x="274.2" y="1171.0" width="7.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="277.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (5 samples, 0.11%)</title><rect x="281.4" y="1395.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.4" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (5 samples, 0.11%)</title><rect x="281.4" y="1379.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="284.4" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (2 samples, 0.04%)</title><rect x="282.1" y="1363.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="285.1" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (2 samples, 0.04%)</title><rect x="282.1" y="1347.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="282.1" y="1331.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.1" y="1342.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.04%)</title><rect x="282.1" y="1315.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="285.1" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="282.1" y="1299.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="285.1" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="282.1" y="1283.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="285.1" y="1294.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="282.1" y="1267.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="285.1" y="1278.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="282.1" y="1251.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="285.1" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="282.1" y="1235.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="285.1" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="282.1" y="1219.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="285.1" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="282.1" y="1203.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="285.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="282.1" y="1187.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="285.1" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="282.1" y="1171.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="285.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (1 samples, 0.02%)</title><rect x="282.6" y="1395.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.6" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$256/808714778.run (428 samples, 9.32%)</title><rect x="282.9" y="1411.0" width="110.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="285.9" y="1422.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (426 samples, 9.28%)</title><rect x="283.4" y="1395.0" width="109.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.4" y="1406.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (423 samples, 9.21%)</title><rect x="284.2" y="1379.0" width="108.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="287.2" y="1390.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$Http1WriteSubscription.request (419 samples, 9.12%)</title><rect x="285.2" y="1363.0" width="107.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.2" y="1374.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (418 samples, 9.10%)</title><rect x="285.5" y="1347.0" width="107.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.5" y="1358.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (418 samples, 9.10%)</title><rect x="285.5" y="1331.0" width="107.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="288.5" y="1342.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (418 samples, 9.10%)</title><rect x="285.5" y="1315.0" width="107.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.5" y="1326.0">jdk/internal/..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="285.5" y="1299.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="285.5" y="1283.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="288.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="285.5" y="1267.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="285.5" y="1251.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="288.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="285.5" y="1235.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="288.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.02%)</title><rect x="285.5" y="1219.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="285.5" y="1203.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.5" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="285.5" y="1187.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="288.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (417 samples, 9.08%)</title><rect x="285.7" y="1299.0" width="107.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="288.7" y="1310.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (417 samples, 9.08%)</title><rect x="285.7" y="1283.0" width="107.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.7" y="1294.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (417 samples, 9.08%)</title><rect x="285.7" y="1267.0" width="107.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="288.7" y="1278.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher$WriteTask.run (416 samples, 9.06%)</title><rect x="286.0" y="1251.0" width="106.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.0" y="1262.0">jdk/internal/..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getOutgoing (86 samples, 1.87%)</title><rect x="286.2" y="1235.0" width="22.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.2" y="1246.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (68 samples, 1.48%)</title><rect x="287.3" y="1219.0" width="17.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.3" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (68 samples, 1.48%)</title><rect x="287.3" y="1203.0" width="17.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="290.3" y="1214.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="287.3" y="1187.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="290.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.run (67 samples, 1.46%)</title><rect x="287.5" y="1187.0" width="17.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="290.5" y="1198.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="288.3" y="1171.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="291.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (60 samples, 1.31%)</title><rect x="288.6" y="1171.0" width="15.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="291.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (43 samples, 0.94%)</title><rect x="288.6" y="1155.0" width="11.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="288.8" y="1139.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="291.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.02%)</title><rect x="288.8" y="1123.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="291.8" y="1134.0"></text>
</g>
<g>
<title>java/util/function/Function$$Lambda$33/1620303253.apply (1 samples, 0.02%)</title><rect x="289.1" y="1139.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="292.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$269/19789958.apply (11 samples, 0.24%)</title><rect x="289.3" y="1139.0" width="2.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="292.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="289.6" y="1123.0" width="0.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="292.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="289.6" y="1107.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="292.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="289.6" y="1091.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="292.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$sendRequestBody$6 (9 samples, 0.20%)</title><rect x="289.8" y="1123.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="292.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.getResponseAsync (9 samples, 0.20%)</title><rect x="289.8" y="1107.0" width="2.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="292.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (1 samples, 0.02%)</title><rect x="290.4" y="1091.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readHeadersAsync (6 samples, 0.13%)</title><rect x="290.6" y="1091.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="290.6" y="1075.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="290.6" y="1059.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="293.6" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$275/352039824.get$Lambda (2 samples, 0.04%)</title><rect x="290.6" y="1043.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="293.6" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$275/352039824.&lt;init&gt; (1 samples, 0.02%)</title><rect x="290.9" y="1027.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="293.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenApplyAsync (4 samples, 0.09%)</title><rect x="291.1" y="1075.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="294.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyStage (4 samples, 0.09%)</title><rect x="291.1" y="1059.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.1" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniApplyNow (4 samples, 0.09%)</title><rect x="291.1" y="1043.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="294.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.&lt;init&gt; (1 samples, 0.02%)</title><rect x="291.1" y="1027.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="294.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="291.4" y="1027.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.02%)</title><rect x="291.4" y="1011.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.4" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.02%)</title><rect x="291.4" y="995.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="294.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$275/352039824.apply (1 samples, 0.02%)</title><rect x="291.4" y="979.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="294.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (1 samples, 0.02%)</title><rect x="291.4" y="963.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="294.4" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$316/2105483381.apply (2 samples, 0.04%)</title><rect x="291.6" y="1027.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.04%)</title><rect x="291.6" y="1011.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="294.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (2 samples, 0.04%)</title><rect x="291.6" y="995.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="294.6" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/10694432.apply (29 samples, 0.63%)</title><rect x="292.2" y="1139.0" width="7.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (29 samples, 0.63%)</title><rect x="292.2" y="1123.0" width="7.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.2" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (29 samples, 0.63%)</title><rect x="292.2" y="1107.0" width="7.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.2" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (29 samples, 0.63%)</title><rect x="292.2" y="1091.0" width="7.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (29 samples, 0.63%)</title><rect x="292.2" y="1075.0" width="7.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.2" y="1086.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1 samples, 0.02%)</title><rect x="292.2" y="1059.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.2" y="1070.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1 samples, 0.02%)</title><rect x="292.2" y="1043.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.2" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="292.2" y="1027.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.2" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="292.2" y="1011.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.2" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/2619171.get (1 samples, 0.02%)</title><rect x="292.2" y="995.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="295.2" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.&lt;init&gt; (1 samples, 0.02%)</title><rect x="292.2" y="979.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.2" y="990.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.&lt;init&gt; (1 samples, 0.02%)</title><rect x="292.2" y="963.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.2" y="974.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="292.2" y="947.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.2" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (28 samples, 0.61%)</title><rect x="292.4" y="1059.0" width="7.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.4" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="292.4" y="1043.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="292.4" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.4" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.02%)</title><rect x="292.4" y="1011.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/102085371.run (27 samples, 0.59%)</title><rect x="292.7" y="1043.0" width="6.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="295.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (27 samples, 0.59%)</title><rect x="292.7" y="1027.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.7" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (6 samples, 0.13%)</title><rect x="292.9" y="1011.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="295.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.13%)</title><rect x="292.9" y="995.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="295.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (6 samples, 0.13%)</title><rect x="292.9" y="979.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (6 samples, 0.13%)</title><rect x="292.9" y="963.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="295.9" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (6 samples, 0.13%)</title><rect x="292.9" y="947.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.9" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (6 samples, 0.13%)</title><rect x="292.9" y="931.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.9" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (6 samples, 0.13%)</title><rect x="292.9" y="915.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.9" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (6 samples, 0.13%)</title><rect x="292.9" y="899.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.9" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (6 samples, 0.13%)</title><rect x="292.9" y="883.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="295.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (6 samples, 0.13%)</title><rect x="292.9" y="867.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="295.9" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (6 samples, 0.13%)</title><rect x="292.9" y="851.0" width="1.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="295.9" y="862.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1531363542.run (4 samples, 0.09%)</title><rect x="292.9" y="835.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.9" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (4 samples, 0.09%)</title><rect x="292.9" y="819.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="295.9" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (4 samples, 0.09%)</title><rect x="292.9" y="803.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.9" y="814.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.02%)</title><rect x="292.9" y="787.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="295.9" y="798.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.02%)</title><rect x="292.9" y="771.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="295.9" y="782.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.02%)</title><rect x="292.9" y="755.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.9" y="766.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.02%)</title><rect x="292.9" y="739.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.9" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (3 samples, 0.07%)</title><rect x="293.2" y="787.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.2" y="798.0"></text>
</g>
<g>
<title>java/time/Instant.now (1 samples, 0.02%)</title><rect x="293.2" y="771.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.2" y="782.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (1 samples, 0.02%)</title><rect x="293.2" y="755.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="296.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="293.2" y="739.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.2" y="750.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="293.2" y="723.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="296.2" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="293.2" y="707.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="296.2" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (2 samples, 0.04%)</title><rect x="293.4" y="771.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.4" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (2 samples, 0.04%)</title><rect x="293.4" y="755.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.4" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (2 samples, 0.04%)</title><rect x="293.4" y="739.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="296.4" y="750.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (1 samples, 0.02%)</title><rect x="293.4" y="723.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="296.4" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (1 samples, 0.02%)</title><rect x="293.4" y="707.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="296.4" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="293.4" y="691.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.4" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (1 samples, 0.02%)</title><rect x="293.4" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.4" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.02%)</title><rect x="293.7" y="723.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.7" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (1 samples, 0.02%)</title><rect x="293.7" y="707.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.7" y="718.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (1 samples, 0.02%)</title><rect x="293.7" y="691.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.7" y="702.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (1 samples, 0.02%)</title><rect x="293.7" y="675.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="296.7" y="686.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (1 samples, 0.02%)</title><rect x="293.7" y="659.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="296.7" y="670.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (1 samples, 0.02%)</title><rect x="293.7" y="643.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.7" y="654.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.02%)</title><rect x="293.7" y="627.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="296.7" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="293.7" y="611.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="296.7" y="622.0"></text>
</g>
<g>
<title>write (1 samples, 0.02%)</title><rect x="293.7" y="595.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="296.7" y="606.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="293.7" y="579.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="296.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="293.7" y="563.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="296.7" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="293.7" y="547.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="296.7" y="558.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="293.7" y="531.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="296.7" y="542.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="293.7" y="515.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="296.7" y="526.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="293.7" y="499.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="296.7" y="510.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="293.7" y="483.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="296.7" y="494.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="293.7" y="467.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="296.7" y="478.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$299/1271326018.accept (1 samples, 0.02%)</title><rect x="294.0" y="835.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="297.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (1 samples, 0.02%)</title><rect x="294.0" y="819.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="297.0" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (1 samples, 0.02%)</title><rect x="294.0" y="803.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.0" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/839104394.accept (1 samples, 0.02%)</title><rect x="294.0" y="787.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.0" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.02%)</title><rect x="294.0" y="771.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="297.0" y="782.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (1 samples, 0.02%)</title><rect x="294.0" y="755.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="297.0" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (1 samples, 0.02%)</title><rect x="294.2" y="835.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="297.2" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (1 samples, 0.02%)</title><rect x="294.2" y="819.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.2" y="830.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (1 samples, 0.02%)</title><rect x="294.2" y="803.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="297.2" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (1 samples, 0.02%)</title><rect x="294.2" y="787.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="297.2" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (1 samples, 0.02%)</title><rect x="294.2" y="771.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="297.2" y="782.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.02%)</title><rect x="294.2" y="755.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.2" y="766.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (19 samples, 0.41%)</title><rect x="294.5" y="1011.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (19 samples, 0.41%)</title><rect x="294.5" y="995.0" width="4.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (19 samples, 0.41%)</title><rect x="294.5" y="979.0" width="4.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="297.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (19 samples, 0.41%)</title><rect x="294.5" y="963.0" width="4.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="297.5" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (19 samples, 0.41%)</title><rect x="294.5" y="947.0" width="4.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="297.5" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="294.5" y="931.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="297.5" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="294.5" y="915.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.5" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (18 samples, 0.39%)</title><rect x="294.7" y="931.0" width="4.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="297.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="294.7" y="915.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="297.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="294.7" y="899.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="297.7" y="910.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="294.7" y="883.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="297.7" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C(JavaThread*) (1 samples, 0.02%)</title><rect x="295.0" y="883.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="298.0" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::handle_exception_C_helper(JavaThread*, nmethod*&amp;) (1 samples, 0.02%)</title><rect x="295.0" y="867.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="298.0" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeThrowable (13 samples, 0.28%)</title><rect x="295.2" y="915.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="298.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.encodeThrowable (13 samples, 0.28%)</title><rect x="295.2" y="899.0" width="3.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletionException.&lt;init&gt; (13 samples, 0.28%)</title><rect x="295.2" y="883.0" width="3.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="298.2" y="894.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (13 samples, 0.28%)</title><rect x="295.2" y="867.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.2" y="878.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (13 samples, 0.28%)</title><rect x="295.2" y="851.0" width="3.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="298.2" y="862.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (13 samples, 0.28%)</title><rect x="295.2" y="835.0" width="3.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.2" y="846.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (12 samples, 0.26%)</title><rect x="295.5" y="819.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (12 samples, 0.26%)</title><rect x="295.5" y="803.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.5" y="814.0"></text>
</g>
<g>
<title>Java_java_lang_Throwable_fillInStackTrace (12 samples, 0.26%)</title><rect x="295.5" y="787.0" width="3.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="298.5" y="798.0"></text>
</g>
<g>
<title>JVM_FillInStackTrace (12 samples, 0.26%)</title><rect x="295.5" y="771.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="298.5" y="782.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;) (12 samples, 0.26%)</title><rect x="295.5" y="755.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="298.5" y="766.0"></text>
</g>
<g>
<title>java_lang_Throwable::fill_in_stack_trace(Handle, methodHandle const&amp;, Thread*) (12 samples, 0.26%)</title><rect x="295.5" y="739.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="298.5" y="750.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="296.5" y="723.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="299.5" y="734.0"></text>
</g>
<g>
<title>BacktraceBuilder::BacktraceBuilder(Thread*) (1 samples, 0.02%)</title><rect x="296.8" y="723.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="299.8" y="734.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.02%)</title><rect x="296.8" y="707.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="299.8" y="718.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (1 samples, 0.02%)</title><rect x="296.8" y="691.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="299.8" y="702.0"></text>
</g>
<g>
<title>BacktraceBuilder::push(Method*, int, Thread*) (4 samples, 0.09%)</title><rect x="297.0" y="723.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="300.0" y="734.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;2670710ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)1, 2670710ul&gt;::oop_access_barrier(oopDesc*, long, oopDesc*) (1 samples, 0.02%)</title><rect x="297.5" y="707.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="300.5" y="718.0"></text>
</g>
<g>
<title>BacktraceBuilder::expand(Thread*) (1 samples, 0.02%)</title><rect x="297.8" y="707.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="300.8" y="718.0"></text>
</g>
<g>
<title>ObjArrayKlass::allocate(int, Thread*) (1 samples, 0.02%)</title><rect x="297.8" y="691.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="300.8" y="702.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="297.8" y="675.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="300.8" y="686.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="297.8" y="659.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="300.8" y="670.0"></text>
</g>
<g>
<title>Klass::java_mirror() const (2 samples, 0.04%)</title><rect x="298.1" y="723.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="301.1" y="734.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$306/1537821975.accept (3 samples, 0.07%)</title><rect x="298.6" y="915.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="301.6" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (3 samples, 0.07%)</title><rect x="298.6" y="899.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.6" y="910.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (3 samples, 0.07%)</title><rect x="298.6" y="883.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="301.6" y="894.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.remove (3 samples, 0.07%)</title><rect x="298.6" y="867.0" width="0.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="301.6" y="878.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (2 samples, 0.04%)</title><rect x="298.8" y="851.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="301.8" y="862.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (2 samples, 0.04%)</title><rect x="298.8" y="835.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="301.8" y="846.0"></text>
</g>
<g>
<title>JVM_IHashCode (2 samples, 0.04%)</title><rect x="298.8" y="819.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="301.8" y="830.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="298.8" y="803.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="301.8" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="299.1" y="803.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="302.1" y="814.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (1 samples, 0.02%)</title><rect x="299.3" y="1011.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (15 samples, 0.33%)</title><rect x="299.6" y="1155.0" width="3.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="302.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (15 samples, 0.33%)</title><rect x="299.6" y="1139.0" width="3.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="302.6" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (3 samples, 0.07%)</title><rect x="299.6" y="1123.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="302.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.02%)</title><rect x="299.6" y="1107.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="302.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.02%)</title><rect x="299.6" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="302.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.02%)</title><rect x="299.6" y="1075.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="302.6" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadLocalRandom.getProbe (1 samples, 0.02%)</title><rect x="299.6" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="302.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="299.9" y="1107.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="302.9" y="1118.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="299.9" y="1091.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="302.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$241/435352876.apply (12 samples, 0.26%)</title><rect x="300.4" y="1123.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="303.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$7 (11 samples, 0.24%)</title><rect x="300.6" y="1107.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="303.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkFor407 (11 samples, 0.24%)</title><rect x="300.6" y="1091.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$140/1923243529.apply (9 samples, 0.20%)</title><rect x="300.6" y="1075.0" width="2.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="303.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.sendRequestBody (9 samples, 0.20%)</title><rect x="300.6" y="1059.0" width="2.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="300.6" y="1043.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="303.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="300.6" y="1027.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="303.6" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$269/19789958.get$Lambda (1 samples, 0.02%)</title><rect x="300.6" y="1011.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="303.6" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$269/19789958.&lt;init&gt; (1 samples, 0.02%)</title><rect x="300.6" y="995.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="303.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (4 samples, 0.09%)</title><rect x="300.9" y="1043.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.9" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (4 samples, 0.09%)</title><rect x="300.9" y="1027.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="303.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (4 samples, 0.09%)</title><rect x="300.9" y="1011.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="303.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (4 samples, 0.09%)</title><rect x="300.9" y="995.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="303.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendBodyAsync (4 samples, 0.09%)</title><rect x="301.9" y="1043.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="304.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.completeSubscriber (2 samples, 0.04%)</title><rect x="301.9" y="1027.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="304.9" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber$1.&lt;init&gt; (2 samples, 0.04%)</title><rect x="301.9" y="1011.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="304.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (2 samples, 0.04%)</title><rect x="301.9" y="995.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="304.9" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request.continueRequest (2 samples, 0.04%)</title><rect x="302.4" y="1027.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.4" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Request$FixedContentSubscriber.&lt;init&gt; (2 samples, 0.04%)</title><rect x="302.4" y="1011.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="305.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1BodySubscriber.&lt;init&gt; (1 samples, 0.02%)</title><rect x="302.7" y="995.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="305.7" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$143/354122190.apply (2 samples, 0.04%)</title><rect x="302.9" y="1075.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="305.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$responseAsyncImpl0$8 (2 samples, 0.04%)</title><rect x="302.9" y="1059.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="305.9" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.sendHeadersAsync (2 samples, 0.04%)</title><rect x="302.9" y="1043.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.9" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="302.9" y="1027.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="305.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.02%)</title><rect x="303.5" y="1155.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="306.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="303.5" y="1139.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (1 samples, 0.02%)</title><rect x="303.7" y="1155.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="306.7" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (1 samples, 0.02%)</title><rect x="303.7" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.7" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="303.7" y="1123.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (1 samples, 0.02%)</title><rect x="303.7" y="1107.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (1 samples, 0.02%)</title><rect x="303.7" y="1091.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="306.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (1 samples, 0.02%)</title><rect x="303.7" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="306.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (1 samples, 0.02%)</title><rect x="303.7" y="1059.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="306.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="303.7" y="1043.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="303.7" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.7" y="1038.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="303.7" y="1011.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="306.7" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="303.7" y="995.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="306.7" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="303.7" y="979.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="306.7" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="303.7" y="963.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="306.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="303.7" y="947.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="306.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="303.7" y="931.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="306.7" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="303.7" y="915.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="306.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="303.7" y="899.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="306.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="303.7" y="883.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="306.7" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$$Lambda$272/492460363.get (3 samples, 0.07%)</title><rect x="304.0" y="1171.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="307.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.pollFirst (13 samples, 0.28%)</title><rect x="304.7" y="1219.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="307.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="304.7" y="1203.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="307.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="304.7" y="1187.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="307.7" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlink (11 samples, 0.24%)</title><rect x="305.3" y="1203.0" width="2.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="308.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (1 samples, 0.02%)</title><rect x="305.5" y="1187.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.unlinkLast (9 samples, 0.20%)</title><rect x="305.8" y="1187.0" width="2.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="305.8" y="1171.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="308.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="305.8" y="1155.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="308.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.skipDeletedSuccessors (2 samples, 0.04%)</title><rect x="306.0" y="1171.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="309.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.updateHead (4 samples, 0.09%)</title><rect x="306.5" y="1171.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="309.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.updateTail (2 samples, 0.04%)</title><rect x="307.6" y="1171.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.6" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="307.8" y="1155.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="310.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="307.8" y="1139.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="310.8" y="1150.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="307.8" y="1123.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="308.1" y="1219.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="311.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.hasOutgoing (1 samples, 0.02%)</title><rect x="308.3" y="1235.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="311.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.isEmpty (1 samples, 0.02%)</title><rect x="308.3" y="1219.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="311.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentLinkedDeque.peekFirst (1 samples, 0.02%)</title><rect x="308.3" y="1203.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="311.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (328 samples, 7.14%)</title><rect x="308.6" y="1235.0" width="84.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="311.6" y="1246.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onNext (328 samples, 7.14%)</title><rect x="308.6" y="1219.0" width="84.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="311.6" y="1230.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onNext (328 samples, 7.14%)</title><rect x="308.6" y="1203.0" width="84.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.6" y="1214.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.tryFlushCurrent (328 samples, 7.14%)</title><rect x="308.6" y="1187.0" width="84.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.6" y="1198.0">jdk/intern..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$268/1289772263.run (2 samples, 0.04%)</title><rect x="308.9" y="1171.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="311.9" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.requestMore (2 samples, 0.04%)</title><rect x="308.9" y="1155.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="311.9" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.requestMore (2 samples, 0.04%)</title><rect x="308.9" y="1139.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="311.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.writeAvailable (323 samples, 7.03%)</title><rect x="309.4" y="1171.0" width="83.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="312.4" y="1182.0">jdk/inter..</text>
</g>
<g>
<title>java/nio/channels/SocketChannel.write (310 samples, 6.75%)</title><rect x="309.4" y="1155.0" width="79.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="312.4" y="1166.0">java/nio/..</text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.write (310 samples, 6.75%)</title><rect x="309.4" y="1139.0" width="79.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.4" y="1150.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.isBlocking (2 samples, 0.04%)</title><rect x="309.6" y="1123.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="312.6" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="309.9" y="1107.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="312.9" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (307 samples, 6.69%)</title><rect x="310.1" y="1123.0" width="78.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="313.1" y="1134.0">sun/nio/c..</text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write (307 samples, 6.69%)</title><rect x="310.1" y="1107.0" width="78.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="313.1" y="1118.0">sun/nio/c..</text>
</g>
<g>
<title>java/nio/DirectByteBuffer.address (2 samples, 0.04%)</title><rect x="310.9" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="313.9" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setBuffer (6 samples, 0.13%)</title><rect x="311.4" y="1091.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="314.4" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (3 samples, 0.07%)</title><rect x="311.9" y="1075.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="314.9" y="1086.0"></text>
</g>
<g>
<title>unsafe_arraycopy (1 samples, 0.02%)</title><rect x="312.7" y="1075.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="315.7" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/IOVecWrapper.setShadow (1 samples, 0.02%)</title><rect x="313.0" y="1091.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="316.0" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.writev (290 samples, 6.32%)</title><rect x="313.2" y="1091.0" width="74.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="316.2" y="1102.0">sun/nio/..</text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.writev0 (290 samples, 6.32%)</title><rect x="313.2" y="1075.0" width="74.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="316.2" y="1086.0">sun/nio/..</text>
</g>
<g>
<title>Java_sun_nio_ch_FileDispatcherImpl_writev0 (3 samples, 0.07%)</title><rect x="314.3" y="1059.0" width="0.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="317.3" y="1070.0"></text>
</g>
<g>
<title>[unknown] (280 samples, 6.10%)</title><rect x="315.0" y="1059.0" width="72.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="318.0" y="1070.0">[unknown]</text>
</g>
<g>
<title>[unknown] (280 samples, 6.10%)</title><rect x="315.0" y="1043.0" width="72.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="318.0" y="1054.0">[unknown]</text>
</g>
<g>
<title>__GI___writev (280 samples, 6.10%)</title><rect x="315.0" y="1027.0" width="72.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="318.0" y="1038.0">__GI___w..</text>
</g>
<g>
<title>[unknown] (280 samples, 6.10%)</title><rect x="315.0" y="1011.0" width="72.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="318.0" y="1022.0">[unknown]</text>
</g>
<g>
<title>[unknown] (280 samples, 6.10%)</title><rect x="315.0" y="995.0" width="72.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="318.0" y="1006.0">[unknown]</text>
</g>
<g>
<title>[unknown] (279 samples, 6.08%)</title><rect x="315.3" y="979.0" width="71.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="318.3" y="990.0">[unknown]</text>
</g>
<g>
<title>[unknown] (279 samples, 6.08%)</title><rect x="315.3" y="963.0" width="71.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="318.3" y="974.0">[unknown]</text>
</g>
<g>
<title>[unknown] (278 samples, 6.05%)</title><rect x="315.5" y="947.0" width="71.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="318.5" y="958.0">[unknown]</text>
</g>
<g>
<title>[unknown] (274 samples, 5.97%)</title><rect x="316.6" y="931.0" width="70.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="319.6" y="942.0">[unknown]</text>
</g>
<g>
<title>[unknown] (267 samples, 5.81%)</title><rect x="318.4" y="915.0" width="68.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="321.4" y="926.0">[unknown]</text>
</g>
<g>
<title>[unknown] (257 samples, 5.60%)</title><rect x="320.9" y="899.0" width="66.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="323.9" y="910.0">[unknown]</text>
</g>
<g>
<title>[unknown] (256 samples, 5.57%)</title><rect x="321.2" y="883.0" width="65.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="324.2" y="894.0">[unknown]</text>
</g>
<g>
<title>[unknown] (256 samples, 5.57%)</title><rect x="321.2" y="867.0" width="65.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="324.2" y="878.0">[unknown]</text>
</g>
<g>
<title>[unknown] (254 samples, 5.53%)</title><rect x="321.7" y="851.0" width="65.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="324.7" y="862.0">[unknown]</text>
</g>
<g>
<title>[unknown] (253 samples, 5.51%)</title><rect x="322.0" y="835.0" width="65.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="325.0" y="846.0">[unknown]</text>
</g>
<g>
<title>[unknown] (242 samples, 5.27%)</title><rect x="324.8" y="819.0" width="62.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="327.8" y="830.0">[unkno..</text>
</g>
<g>
<title>[unknown] (239 samples, 5.20%)</title><rect x="325.6" y="803.0" width="61.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="328.6" y="814.0">[unkno..</text>
</g>
<g>
<title>[unknown] (231 samples, 5.03%)</title><rect x="327.6" y="787.0" width="59.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="330.6" y="798.0">[unkno..</text>
</g>
<g>
<title>[unknown] (216 samples, 4.70%)</title><rect x="331.5" y="771.0" width="55.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="334.5" y="782.0">[unkn..</text>
</g>
<g>
<title>[unknown] (198 samples, 4.31%)</title><rect x="336.1" y="755.0" width="50.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="339.1" y="766.0">[unkn..</text>
</g>
<g>
<title>[unknown] (193 samples, 4.20%)</title><rect x="337.4" y="739.0" width="49.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="340.4" y="750.0">[unkn..</text>
</g>
<g>
<title>[unknown] (192 samples, 4.18%)</title><rect x="337.6" y="723.0" width="49.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="340.6" y="734.0">[unkn..</text>
</g>
<g>
<title>[unknown] (186 samples, 4.05%)</title><rect x="339.2" y="707.0" width="47.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="342.2" y="718.0">[unk..</text>
</g>
<g>
<title>[unknown] (180 samples, 3.92%)</title><rect x="340.7" y="691.0" width="46.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="343.7" y="702.0">[unk..</text>
</g>
<g>
<title>[unknown] (170 samples, 3.70%)</title><rect x="343.3" y="675.0" width="43.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="346.3" y="686.0">[unk..</text>
</g>
<g>
<title>[unknown] (161 samples, 3.51%)</title><rect x="345.6" y="659.0" width="41.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="348.6" y="670.0">[un..</text>
</g>
<g>
<title>[unknown] (153 samples, 3.33%)</title><rect x="347.7" y="643.0" width="39.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="350.7" y="654.0">[un..</text>
</g>
<g>
<title>[unknown] (137 samples, 2.98%)</title><rect x="351.8" y="627.0" width="35.2" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="354.8" y="638.0">[un..</text>
</g>
<g>
<title>[unknown] (129 samples, 2.81%)</title><rect x="353.8" y="611.0" width="33.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="356.8" y="622.0">[u..</text>
</g>
<g>
<title>[unknown] (119 samples, 2.59%)</title><rect x="356.4" y="595.0" width="30.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="359.4" y="606.0">[u..</text>
</g>
<g>
<title>[unknown] (113 samples, 2.46%)</title><rect x="357.9" y="579.0" width="29.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="360.9" y="590.0">[u..</text>
</g>
<g>
<title>[unknown] (109 samples, 2.37%)</title><rect x="359.0" y="563.0" width="28.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="362.0" y="574.0">[u..</text>
</g>
<g>
<title>[unknown] (105 samples, 2.29%)</title><rect x="360.0" y="547.0" width="27.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="363.0" y="558.0">[..</text>
</g>
<g>
<title>[unknown] (105 samples, 2.29%)</title><rect x="360.0" y="531.0" width="27.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="363.0" y="542.0">[..</text>
</g>
<g>
<title>[unknown] (101 samples, 2.20%)</title><rect x="361.0" y="515.0" width="26.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="364.0" y="526.0">[..</text>
</g>
<g>
<title>[unknown] (98 samples, 2.13%)</title><rect x="361.8" y="499.0" width="25.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="364.8" y="510.0">[..</text>
</g>
<g>
<title>[unknown] (96 samples, 2.09%)</title><rect x="362.3" y="483.0" width="24.7" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="365.3" y="494.0">[..</text>
</g>
<g>
<title>[unknown] (93 samples, 2.03%)</title><rect x="363.1" y="467.0" width="23.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="366.1" y="478.0">[..</text>
</g>
<g>
<title>[unknown] (90 samples, 1.96%)</title><rect x="363.8" y="451.0" width="23.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="366.8" y="462.0">[..</text>
</g>
<g>
<title>[unknown] (79 samples, 1.72%)</title><rect x="366.7" y="435.0" width="20.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="369.7" y="446.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 1.61%)</title><rect x="368.0" y="419.0" width="19.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="371.0" y="430.0"></text>
</g>
<g>
<title>[unknown] (71 samples, 1.55%)</title><rect x="368.7" y="403.0" width="18.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="371.7" y="414.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 1.22%)</title><rect x="372.6" y="387.0" width="14.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="375.6" y="398.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.89%)</title><rect x="376.4" y="371.0" width="10.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="379.4" y="382.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.83%)</title><rect x="377.2" y="355.0" width="9.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="380.2" y="366.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.78%)</title><rect x="377.7" y="339.0" width="9.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="380.7" y="350.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="386.7" y="323.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="389.7" y="334.0"></text>
</g>
<g>
<title>__GI___writev (1 samples, 0.02%)</title><rect x="387.0" y="1059.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="390.0" y="1070.0"></text>
</g>
<g>
<title>convertLongReturnVal (1 samples, 0.02%)</title><rect x="387.2" y="1059.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="390.2" y="1070.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="387.5" y="1059.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="390.5" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (5 samples, 0.11%)</title><rect x="387.7" y="1091.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="390.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="387.7" y="1075.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="390.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="387.7" y="1059.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="390.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="387.7" y="1043.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="390.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="387.7" y="1027.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="390.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="388.0" y="1075.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="391.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="388.0" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="391.0" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (3 samples, 0.07%)</title><rect x="388.3" y="1075.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="391.3" y="1086.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (13 samples, 0.28%)</title><rect x="389.0" y="1155.0" width="3.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="392.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/reflect/Array.newInstance (7 samples, 0.15%)</title><rect x="389.0" y="1139.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="392.0" y="1150.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (3 samples, 0.07%)</title><rect x="390.8" y="1139.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="393.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="390.8" y="1123.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="393.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="390.8" y="1107.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="393.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="390.8" y="1091.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="393.8" y="1102.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (2 samples, 0.04%)</title><rect x="391.1" y="1123.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="394.1" y="1134.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.02%)</title><rect x="391.3" y="1107.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="394.3" y="1118.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (2 samples, 0.04%)</title><rect x="391.6" y="1139.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.6" y="1150.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.02%)</title><rect x="392.1" y="1139.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="395.1" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (2 samples, 0.04%)</title><rect x="392.4" y="1171.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="395.4" y="1182.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.02%)</title><rect x="392.4" y="1155.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="395.4" y="1166.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="392.4" y="1139.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="395.4" y="1150.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.next (1 samples, 0.02%)</title><rect x="392.6" y="1155.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="395.6" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (493 samples, 10.74%)</title><rect x="392.9" y="1411.0" width="126.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="395.9" y="1422.0">jdk/internal/net..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (489 samples, 10.65%)</title><rect x="393.9" y="1395.0" width="125.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="396.9" y="1406.0">jdk/internal/ne..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (1 samples, 0.02%)</title><rect x="394.4" y="1379.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.4" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.02%)</title><rect x="394.4" y="1363.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.4" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.02%)</title><rect x="394.4" y="1347.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="397.4" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (270 samples, 5.88%)</title><rect x="394.7" y="1379.0" width="69.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="397.7" y="1390.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (270 samples, 5.88%)</title><rect x="394.7" y="1363.0" width="69.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.7" y="1374.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (270 samples, 5.88%)</title><rect x="394.7" y="1347.0" width="69.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.7" y="1358.0">jdk/int..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.checkRequestMore (25 samples, 0.54%)</title><rect x="394.9" y="1331.0" width="6.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="397.9" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.requestMore (25 samples, 0.54%)</title><rect x="394.9" y="1315.0" width="6.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="397.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (25 samples, 0.54%)</title><rect x="394.9" y="1299.0" width="6.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="397.9" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (25 samples, 0.54%)</title><rect x="394.9" y="1283.0" width="6.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (23 samples, 0.50%)</title><rect x="395.2" y="1267.0" width="5.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="398.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (23 samples, 0.50%)</title><rect x="395.2" y="1251.0" width="5.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="398.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (22 samples, 0.48%)</title><rect x="395.5" y="1235.0" width="5.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="398.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (22 samples, 0.48%)</title><rect x="395.5" y="1219.0" width="5.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="398.5" y="1230.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="396.0" y="1203.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="399.0" y="1214.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="396.0" y="1187.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="399.0" y="1198.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="396.0" y="1171.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="399.0" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (19 samples, 0.41%)</title><rect x="396.2" y="1203.0" width="4.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="399.2" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (16 samples, 0.35%)</title><rect x="397.0" y="1187.0" width="4.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="400.0" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (15 samples, 0.33%)</title><rect x="397.3" y="1171.0" width="3.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="400.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.33%)</title><rect x="397.3" y="1155.0" width="3.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="400.3" y="1166.0"></text>
</g>
<g>
<title>write (15 samples, 0.33%)</title><rect x="397.3" y="1139.0" width="3.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="400.3" y="1150.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.33%)</title><rect x="397.3" y="1123.0" width="3.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="400.3" y="1134.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.33%)</title><rect x="397.3" y="1107.0" width="3.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="400.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.30%)</title><rect x="397.5" y="1091.0" width="3.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="400.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.30%)</title><rect x="397.5" y="1075.0" width="3.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="400.5" y="1086.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.30%)</title><rect x="397.5" y="1059.0" width="3.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="400.5" y="1070.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="397.8" y="1043.0" width="3.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="400.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.24%)</title><rect x="398.3" y="1027.0" width="2.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="401.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.20%)</title><rect x="398.8" y="1011.0" width="2.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="401.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.20%)</title><rect x="398.8" y="995.0" width="2.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="401.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.17%)</title><rect x="399.1" y="979.0" width="2.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="402.1" y="990.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.17%)</title><rect x="399.1" y="963.0" width="2.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="402.1" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.debugState (1 samples, 0.02%)</title><rect x="401.1" y="1267.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="404.1" y="1278.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="401.1" y="1251.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="404.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (5 samples, 0.11%)</title><rect x="401.4" y="1331.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="404.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.get (3 samples, 0.07%)</title><rect x="401.9" y="1315.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="404.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.hasDemand (1 samples, 0.02%)</title><rect x="402.6" y="1331.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.6" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (238 samples, 5.18%)</title><rect x="402.9" y="1331.0" width="61.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="405.9" y="1342.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (2 samples, 0.04%)</title><rect x="402.9" y="1315.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (2 samples, 0.04%)</title><rect x="402.9" y="1299.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="405.9" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (2 samples, 0.04%)</title><rect x="402.9" y="1283.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="405.9" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand$$Lambda$231/937652650.applyAsLong (1 samples, 0.02%)</title><rect x="403.2" y="1267.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="406.2" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.02%)</title><rect x="403.2" y="1251.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="406.2" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (235 samples, 5.12%)</title><rect x="403.4" y="1315.0" width="60.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="406.4" y="1326.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (235 samples, 5.12%)</title><rect x="403.4" y="1299.0" width="60.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="406.4" y="1310.0">jdk/in..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (234 samples, 5.10%)</title><rect x="403.7" y="1283.0" width="60.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="406.7" y="1294.0">jdk/in..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (129 samples, 2.81%)</title><rect x="404.4" y="1267.0" width="33.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="407.4" y="1278.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.02%)</title><rect x="404.4" y="1251.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="407.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="404.4" y="1235.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="404.4" y="1219.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="407.4" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.02%)</title><rect x="404.4" y="1203.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="407.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (128 samples, 2.79%)</title><rect x="404.7" y="1251.0" width="32.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="407.7" y="1262.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (127 samples, 2.77%)</title><rect x="405.0" y="1235.0" width="32.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="408.0" y="1246.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (124 samples, 2.70%)</title><rect x="405.2" y="1219.0" width="31.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="408.2" y="1230.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (124 samples, 2.70%)</title><rect x="405.2" y="1203.0" width="31.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="408.2" y="1214.0">jd..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (124 samples, 2.70%)</title><rect x="405.2" y="1187.0" width="31.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="408.2" y="1198.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (123 samples, 2.68%)</title><rect x="405.5" y="1171.0" width="31.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="408.5" y="1182.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (107 samples, 2.33%)</title><rect x="405.5" y="1155.0" width="27.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="408.5" y="1166.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (107 samples, 2.33%)</title><rect x="405.5" y="1139.0" width="27.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="408.5" y="1150.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (100 samples, 2.18%)</title><rect x="405.5" y="1123.0" width="25.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="408.5" y="1134.0">j..</text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="405.7" y="1107.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="408.7" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="406.0" y="1107.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.02%)</title><rect x="406.0" y="1091.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="409.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (1 samples, 0.02%)</title><rect x="406.2" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="409.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.02%)</title><rect x="406.2" y="1091.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="409.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="406.2" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="409.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="406.2" y="1059.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="409.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$270/1071768064.apply (3 samples, 0.07%)</title><rect x="406.5" y="1107.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="409.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$wrapForUpgrade$10 (1 samples, 0.02%)</title><rect x="407.0" y="1091.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="410.0" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.checkForUpgradeAsync (1 samples, 0.02%)</title><rect x="407.0" y="1075.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="410.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/10694432.apply (75 samples, 1.63%)</title><rect x="407.3" y="1107.0" width="19.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="410.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (74 samples, 1.61%)</title><rect x="407.5" y="1091.0" width="19.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="410.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (73 samples, 1.59%)</title><rect x="407.8" y="1075.0" width="18.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="410.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (72 samples, 1.57%)</title><rect x="408.0" y="1059.0" width="18.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="411.0" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers$$Lambda$121/617487984.apply (4 samples, 0.09%)</title><rect x="408.0" y="1043.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="411.0" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodyHandlers.lambda$ofByteArray$12 (3 samples, 0.07%)</title><rect x="408.3" y="1027.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="411.3" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpResponse$BodySubscribers.ofByteArray (3 samples, 0.07%)</title><rect x="408.3" y="1011.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="411.3" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.&lt;init&gt; (3 samples, 0.07%)</title><rect x="408.3" y="995.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="411.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (66 samples, 1.44%)</title><rect x="409.1" y="1043.0" width="16.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="412.1" y="1054.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (24 samples, 0.52%)</title><rect x="409.3" y="1027.0" width="6.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="412.3" y="1038.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (5 samples, 0.11%)</title><rect x="409.3" y="1011.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="412.3" y="1022.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (1 samples, 0.02%)</title><rect x="410.1" y="995.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="413.1" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (1 samples, 0.02%)</title><rect x="410.1" y="979.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="413.1" y="990.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="410.1" y="963.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.1" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="410.1" y="947.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="413.1" y="958.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="410.1" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="413.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="410.1" y="915.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="413.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="410.1" y="899.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.1" y="910.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.02%)</title><rect x="410.4" y="995.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="413.4" y="1006.0"></text>
</g>
<g>
<title>java/util/Collection.stream (7 samples, 0.15%)</title><rect x="410.6" y="1011.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.6" y="1022.0"></text>
</g>
<g>
<title>java/util/List.spliterator (2 samples, 0.04%)</title><rect x="410.6" y="995.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="413.6" y="1006.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.&lt;init&gt; (2 samples, 0.04%)</title><rect x="410.6" y="979.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="413.6" y="990.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="410.6" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="413.6" y="974.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="410.9" y="963.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="413.9" y="974.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (5 samples, 0.11%)</title><rect x="411.1" y="995.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="414.1" y="1006.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="411.4" y="979.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="414.4" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (3 samples, 0.07%)</title><rect x="411.6" y="979.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="414.6" y="990.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (3 samples, 0.07%)</title><rect x="411.6" y="963.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="414.6" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (3 samples, 0.07%)</title><rect x="411.6" y="947.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="414.6" y="958.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (12 samples, 0.26%)</title><rect x="412.4" y="1011.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="415.4" y="1022.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (12 samples, 0.26%)</title><rect x="412.4" y="995.0" width="3.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.4" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (12 samples, 0.26%)</title><rect x="412.4" y="979.0" width="3.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="415.4" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (11 samples, 0.24%)</title><rect x="412.4" y="963.0" width="2.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="415.4" y="974.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (9 samples, 0.20%)</title><rect x="412.4" y="947.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="415.4" y="958.0"></text>
</g>
<g>
<title>java/util/ArrayList$ArrayListSpliterator.forEachRemaining (1 samples, 0.02%)</title><rect x="412.4" y="931.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="415.4" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (6 samples, 0.13%)</title><rect x="412.7" y="931.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="415.7" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.09%)</title><rect x="412.7" y="915.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="415.7" y="926.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (3 samples, 0.07%)</title><rect x="412.9" y="899.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="415.9" y="910.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.accept (3 samples, 0.07%)</title><rect x="412.9" y="883.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="415.9" y="894.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$281/1029278491.applyAsLong (2 samples, 0.04%)</title><rect x="412.9" y="867.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="415.9" y="878.0"></text>
</g>
<g>
<title>java/lang/Long.longValue (1 samples, 0.02%)</title><rect x="413.2" y="851.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="416.2" y="862.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.accept (1 samples, 0.02%)</title><rect x="413.4" y="867.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="416.4" y="878.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.accept (1 samples, 0.02%)</title><rect x="413.4" y="851.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="416.4" y="862.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.begin (1 samples, 0.02%)</title><rect x="413.7" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="416.7" y="926.0"></text>
</g>
<g>
<title>java/util/stream/Sink.begin (1 samples, 0.02%)</title><rect x="414.0" y="915.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="417.0" y="926.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.isKnown (2 samples, 0.04%)</title><rect x="414.2" y="931.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="417.2" y="942.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.04%)</title><rect x="414.7" y="947.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="417.7" y="958.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5.opWrapSink (2 samples, 0.04%)</title><rect x="414.7" y="931.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.7" y="942.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$5$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="415.0" y="915.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="418.0" y="926.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.&lt;init&gt; (1 samples, 0.02%)</title><rect x="415.0" y="899.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="418.0" y="910.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$287/1768070330.get (1 samples, 0.02%)</title><rect x="415.2" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="418.2" y="974.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.&lt;init&gt; (1 samples, 0.02%)</title><rect x="415.2" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.2" y="958.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.&lt;init&gt; (1 samples, 0.02%)</title><rect x="415.2" y="931.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="418.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="415.5" y="1027.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="418.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="415.5" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="418.5" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="415.5" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="418.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="415.5" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="418.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="415.5" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="418.5" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.&lt;init&gt; (3 samples, 0.07%)</title><rect x="415.8" y="1027.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="418.8" y="1038.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (2 samples, 0.04%)</title><rect x="416.0" y="1011.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="419.0" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (37 samples, 0.81%)</title><rect x="416.5" y="1027.0" width="9.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="419.5" y="1038.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="416.5" y="1011.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="419.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$292/102085371.run (36 samples, 0.78%)</title><rect x="416.8" y="1011.0" width="9.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="419.8" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$3 (35 samples, 0.76%)</title><rect x="417.0" y="995.0" width="9.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="417.3" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="417.3" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="420.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$299/1271326018.get$Lambda (1 samples, 0.02%)</title><rect x="417.3" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="420.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$299/1271326018.&lt;init&gt; (1 samples, 0.02%)</title><rect x="417.3" y="931.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="420.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="417.6" y="979.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="420.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="417.8" y="979.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="420.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="417.8" y="963.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="420.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="418.1" y="947.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="421.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="418.1" y="931.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.1" y="942.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.subscribe (2 samples, 0.04%)</title><rect x="418.3" y="979.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="418.3" y="963.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="421.3" y="974.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="418.3" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="421.3" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.04%)</title><rect x="418.3" y="931.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="421.3" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.04%)</title><rect x="418.3" y="915.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="421.3" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.04%)</title><rect x="418.3" y="899.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="421.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (2 samples, 0.04%)</title><rect x="418.3" y="883.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="421.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="418.3" y="867.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="421.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="418.3" y="851.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="421.3" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title><rect x="418.3" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="421.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.04%)</title><rect x="418.3" y="819.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="421.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.04%)</title><rect x="418.3" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.3" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.04%)</title><rect x="418.3" y="787.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="421.3" y="798.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.acquire (1 samples, 0.02%)</title><rect x="418.8" y="979.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="421.8" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.addTrailingOperation (16 samples, 0.35%)</title><rect x="419.1" y="979.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="422.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.add (16 samples, 0.35%)</title><rect x="419.1" y="963.0" width="4.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="422.1" y="974.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.put (14 samples, 0.30%)</title><rect x="419.1" y="947.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="422.1" y="958.0"></text>
</g>
<g>
<title>java/util/IdentityHashMap.hash (14 samples, 0.30%)</title><rect x="419.1" y="931.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="422.1" y="942.0"></text>
</g>
<g>
<title>java/lang/System.identityHashCode (14 samples, 0.30%)</title><rect x="419.1" y="915.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="422.1" y="926.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="419.1" y="899.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="422.1" y="910.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="419.4" y="899.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="422.4" y="910.0"></text>
</g>
<g>
<title>JVM_IHashCode (11 samples, 0.24%)</title><rect x="419.6" y="899.0" width="2.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="422.6" y="910.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="420.1" y="883.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="423.1" y="894.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="420.4" y="883.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="423.4" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (4 samples, 0.09%)</title><rect x="420.6" y="883.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="423.6" y="894.0"></text>
</g>
<g>
<title>BiasedLocking::revoke_and_rebias(Handle, bool, Thread*) (1 samples, 0.02%)</title><rect x="420.9" y="867.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="423.9" y="878.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (2 samples, 0.04%)</title><rect x="421.1" y="867.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="424.1" y="878.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="421.7" y="883.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="424.7" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (1 samples, 0.02%)</title><rect x="421.9" y="883.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="424.9" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="422.2" y="883.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="425.2" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::FastHashCode(Thread*, oopDesc*) (1 samples, 0.02%)</title><rect x="422.4" y="899.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="425.4" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="422.7" y="947.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="425.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (2 samples, 0.04%)</title><rect x="422.7" y="931.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="425.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (2 samples, 0.04%)</title><rect x="422.7" y="915.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="425.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="422.9" y="899.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="425.9" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="422.9" y="883.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="425.9" y="894.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.&lt;init&gt; (4 samples, 0.09%)</title><rect x="423.2" y="979.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="426.2" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.07%)</title><rect x="423.5" y="963.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.5" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/712256162.invoke (3 samples, 0.07%)</title><rect x="423.5" y="947.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="426.5" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.07%)</title><rect x="423.5" y="931.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="426.5" y="942.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (2 samples, 0.04%)</title><rect x="423.5" y="915.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="426.5" y="926.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.02%)</title><rect x="424.0" y="915.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="427.0" y="926.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent.getBodyParser (7 samples, 0.15%)</title><rect x="424.2" y="979.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="427.2" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.&lt;init&gt; (7 samples, 0.15%)</title><rect x="424.2" y="963.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="427.2" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.13%)</title><rect x="424.5" y="947.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="427.5" y="958.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/712256162.invoke (6 samples, 0.13%)</title><rect x="424.5" y="931.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="427.5" y="942.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.13%)</title><rect x="424.5" y="915.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="427.5" y="926.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.07%)</title><rect x="424.5" y="899.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="427.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="425.0" y="883.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="428.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="425.0" y="867.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="428.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="425.0" y="851.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="428.0" y="862.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (3 samples, 0.07%)</title><rect x="425.3" y="899.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="428.3" y="910.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.07%)</title><rect x="425.3" y="883.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="428.3" y="894.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="425.8" y="867.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="428.8" y="878.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseInfoImpl.&lt;init&gt; (2 samples, 0.04%)</title><rect x="426.0" y="1043.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="429.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$243/179650308.apply (18 samples, 0.39%)</title><rect x="426.5" y="1107.0" width="4.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="429.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$6 (16 samples, 0.35%)</title><rect x="427.1" y="1091.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="430.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseFilters (14 samples, 0.30%)</title><rect x="427.1" y="1075.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.1" y="1086.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (3 samples, 0.07%)</title><rect x="427.1" y="1059.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="430.1" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (3 samples, 0.07%)</title><rect x="427.1" y="1043.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="430.1" y="1054.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.checkForComodification (1 samples, 0.02%)</title><rect x="427.6" y="1027.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="430.6" y="1038.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (5 samples, 0.11%)</title><rect x="427.8" y="1059.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="430.8" y="1070.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (5 samples, 0.11%)</title><rect x="427.8" y="1043.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="430.8" y="1054.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (4 samples, 0.09%)</title><rect x="428.1" y="1027.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="431.1" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.response (6 samples, 0.13%)</title><rect x="429.1" y="1059.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.1" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AuthenticationFilter.getCache (6 samples, 0.13%)</title><rect x="429.1" y="1043.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="432.1" y="1054.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.get (4 samples, 0.09%)</title><rect x="429.6" y="1027.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="432.6" y="1038.0"></text>
</g>
<g>
<title>java/util/WeakHashMap.hash (3 samples, 0.07%)</title><rect x="429.9" y="1011.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/Object.hashCode (1 samples, 0.02%)</title><rect x="430.4" y="995.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="433.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.04%)</title><rect x="430.7" y="1075.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="433.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (2 samples, 0.04%)</title><rect x="430.7" y="1059.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="433.7" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (2 samples, 0.04%)</title><rect x="430.7" y="1043.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="433.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="430.7" y="1027.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="433.7" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="430.7" y="1011.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="433.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniHandle.tryFire (5 samples, 0.11%)</title><rect x="431.2" y="1123.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="434.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniHandle (5 samples, 0.11%)</title><rect x="431.2" y="1107.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="434.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="431.7" y="1091.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="434.7" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (1 samples, 0.02%)</title><rect x="431.7" y="1075.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="434.7" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$245/787288205.apply (2 samples, 0.04%)</title><rect x="431.9" y="1091.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="434.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsyncImpl$7 (2 samples, 0.04%)</title><rect x="431.9" y="1075.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="434.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.completedFuture (2 samples, 0.04%)</title><rect x="431.9" y="1059.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="434.9" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="432.2" y="1043.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="435.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.02%)</title><rect x="432.2" y="1027.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="435.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="432.2" y="1011.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="435.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="432.2" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="435.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (2 samples, 0.04%)</title><rect x="432.5" y="1123.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="435.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$275/352039824.apply (13 samples, 0.28%)</title><rect x="433.0" y="1155.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="436.0" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readHeadersAsync$0 (13 samples, 0.28%)</title><rect x="433.0" y="1139.0" width="3.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="436.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.unsubscribe (7 samples, 0.15%)</title><rect x="433.7" y="1123.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="436.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (3 samples, 0.07%)</title><rect x="435.5" y="1123.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="438.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="435.5" y="1107.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="438.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="435.5" y="1091.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="438.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="435.5" y="1075.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="438.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="435.8" y="1107.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="438.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.channel (1 samples, 0.02%)</title><rect x="435.8" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="438.8" y="1102.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.getLocalAddress (1 samples, 0.02%)</title><rect x="436.1" y="1091.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="439.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$316/2105483381.apply (3 samples, 0.07%)</title><rect x="436.3" y="1155.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="439.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (3 samples, 0.07%)</title><rect x="436.3" y="1139.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="439.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.02%)</title><rect x="436.3" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="439.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="436.6" y="1123.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="439.6" y="1134.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="436.8" y="1123.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="439.8" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$316/2105483381.apply (2 samples, 0.04%)</title><rect x="437.1" y="1219.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="440.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (2 samples, 0.04%)</title><rect x="437.1" y="1203.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="440.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (1 samples, 0.02%)</title><rect x="437.3" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="440.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (101 samples, 2.20%)</title><rect x="437.6" y="1267.0" width="25.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="440.6" y="1278.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.maybeStartHeaders (1 samples, 0.02%)</title><rect x="438.9" y="1251.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="441.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readResumeStatusLine (8 samples, 0.17%)</title><rect x="439.1" y="1251.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="442.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.04%)</title><rect x="440.2" y="1235.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="443.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="440.2" y="1219.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="443.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.04%)</title><rect x="440.2" y="1203.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.2" y="1214.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="440.4" y="1187.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="443.4" y="1198.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="440.7" y="1235.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="443.7" y="1246.0"></text>
</g>
<g>
<title>java/nio/Buffer.nextGetIndex (1 samples, 0.02%)</title><rect x="440.9" y="1219.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="443.9" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.readStatusLineFeed (11 samples, 0.24%)</title><rect x="441.2" y="1251.0" width="2.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="444.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.04%)</title><rect x="442.0" y="1235.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="445.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.04%)</title><rect x="442.0" y="1219.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="445.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (5 samples, 0.11%)</title><rect x="442.5" y="1235.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="445.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (5 samples, 0.11%)</title><rect x="442.5" y="1219.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="445.5" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="443.2" y="1203.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="446.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="443.5" y="1187.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="446.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="443.8" y="1235.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="446.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (35 samples, 0.76%)</title><rect x="444.0" y="1251.0" width="9.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="447.0" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (32 samples, 0.70%)</title><rect x="444.8" y="1235.0" width="8.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.8" y="1246.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (32 samples, 0.70%)</title><rect x="444.8" y="1219.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="447.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.13%)</title><rect x="445.3" y="1203.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="448.3" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.13%)</title><rect x="445.3" y="1187.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="448.3" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.get$Lambda (6 samples, 0.13%)</title><rect x="445.3" y="1171.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="448.3" y="1182.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.&lt;init&gt; (6 samples, 0.13%)</title><rect x="445.3" y="1155.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="448.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="446.6" y="1139.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="446.6" y="1123.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="449.6" y="1134.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (4 samples, 0.09%)</title><rect x="446.8" y="1203.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="449.8" y="1214.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.02%)</title><rect x="447.9" y="1203.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.9" y="1214.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="447.9" y="1187.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="450.9" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (13 samples, 0.28%)</title><rect x="448.1" y="1203.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="451.1" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (12 samples, 0.26%)</title><rect x="448.4" y="1187.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.4" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (12 samples, 0.26%)</title><rect x="448.4" y="1171.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="451.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (1 samples, 0.02%)</title><rect x="448.4" y="1155.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="451.4" y="1166.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.02%)</title><rect x="448.4" y="1139.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="451.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="448.4" y="1123.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="451.4" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="448.4" y="1107.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="451.4" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="448.4" y="1091.0" width="0.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="451.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.11%)</title><rect x="448.6" y="1155.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="451.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (5 samples, 0.11%)</title><rect x="448.6" y="1139.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="451.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.11%)</title><rect x="448.6" y="1123.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="451.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.11%)</title><rect x="448.6" y="1107.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="451.6" y="1118.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="448.9" y="1091.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="451.9" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="448.9" y="1075.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="451.9" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="448.9" y="1059.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="451.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="448.9" y="1043.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="451.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.04%)</title><rect x="449.2" y="1091.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="452.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$62/510109769.test (1 samples, 0.02%)</title><rect x="449.7" y="1091.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="452.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="449.9" y="1155.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="449.9" y="1139.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="452.9" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.get$Lambda (2 samples, 0.04%)</title><rect x="449.9" y="1123.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="452.9" y="1134.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.&lt;init&gt; (2 samples, 0.04%)</title><rect x="449.9" y="1107.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="452.9" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (2 samples, 0.04%)</title><rect x="450.4" y="1155.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.4" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.accept (2 samples, 0.04%)</title><rect x="450.4" y="1139.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="453.4" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.04%)</title><rect x="450.4" y="1123.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.02%)</title><rect x="450.4" y="1107.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="453.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.02%)</title><rect x="450.4" y="1091.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="453.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="450.4" y="1075.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.4" y="1086.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="450.4" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="453.4" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="450.7" y="1107.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="453.7" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="450.7" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="453.7" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="450.7" y="1075.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="453.7" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="450.7" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="453.7" y="1070.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="450.7" y="1043.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="453.7" y="1054.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="451.0" y="1155.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="454.0" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="451.2" y="1155.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="454.2" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (1 samples, 0.02%)</title><rect x="451.2" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="454.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="451.2" y="1123.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="454.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="451.2" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="451.2" y="1091.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="454.2" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="451.5" y="1203.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="454.5" y="1214.0"></text>
</g>
<g>
<title>java/util/AbstractMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="451.5" y="1187.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="454.5" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (5 samples, 0.11%)</title><rect x="451.7" y="1203.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="454.7" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (2 samples, 0.04%)</title><rect x="451.7" y="1187.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="454.7" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="452.2" y="1187.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="455.2" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeSet.&lt;init&gt; (2 samples, 0.04%)</title><rect x="452.5" y="1187.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="455.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="452.8" y="1171.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="455.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrSecondCR (41 samples, 0.89%)</title><rect x="453.0" y="1251.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="456.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (2 samples, 0.04%)</title><rect x="454.3" y="1235.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="457.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="454.3" y="1219.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="457.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="454.3" y="1203.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="457.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.addHeaderFromString (34 samples, 0.74%)</title><rect x="454.8" y="1235.0" width="8.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="457.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.02%)</title><rect x="457.4" y="1219.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="460.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="457.6" y="1219.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="460.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="457.9" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="460.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.11%)</title><rect x="458.2" y="1219.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="461.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (3 samples, 0.07%)</title><rect x="458.7" y="1203.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="461.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.07%)</title><rect x="458.7" y="1187.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="461.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (7 samples, 0.15%)</title><rect x="459.4" y="1219.0" width="1.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="462.4" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="459.7" y="1203.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="462.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="459.7" y="1187.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="462.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="459.7" y="1171.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="462.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (5 samples, 0.11%)</title><rect x="460.0" y="1203.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="463.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="460.7" y="1187.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="463.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="460.7" y="1171.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="463.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="460.7" y="1155.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="463.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="461.0" y="1139.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="464.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="461.0" y="1123.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="464.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.trim (3 samples, 0.07%)</title><rect x="461.2" y="1219.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="464.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (3 samples, 0.07%)</title><rect x="461.2" y="1203.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="464.2" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="462.0" y="1219.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.0" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="462.0" y="1203.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="465.0" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="462.3" y="1187.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="465.3" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="462.3" y="1171.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="465.3" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="462.3" y="1155.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="465.3" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.computeIfAbsent (4 samples, 0.09%)</title><rect x="462.5" y="1219.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="465.5" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.02%)</title><rect x="462.8" y="1203.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="465.8" y="1214.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.02%)</title><rect x="463.0" y="1203.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="466.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser$$Lambda$279/1275080702.apply (1 samples, 0.02%)</title><rect x="463.3" y="1203.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="466.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.lambda$addHeaderFromString$0 (1 samples, 0.02%)</title><rect x="463.3" y="1187.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="466.3" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="463.3" y="1171.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="466.3" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$222/1179046641.accept (1 samples, 0.02%)</title><rect x="463.5" y="1267.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="466.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.02%)</title><rect x="463.5" y="1251.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="466.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (1 samples, 0.02%)</title><rect x="463.8" y="1315.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="466.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (1 samples, 0.02%)</title><rect x="463.8" y="1299.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.8" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.compareAndSet (1 samples, 0.02%)</title><rect x="463.8" y="1283.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="466.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (216 samples, 4.70%)</title><rect x="464.1" y="1379.0" width="55.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="467.1" y="1390.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (1 samples, 0.02%)</title><rect x="464.1" y="1363.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.1" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (1 samples, 0.02%)</title><rect x="464.1" y="1347.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.1" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (1 samples, 0.02%)</title><rect x="464.1" y="1331.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.02%)</title><rect x="464.1" y="1315.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="467.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (1 samples, 0.02%)</title><rect x="464.1" y="1299.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="467.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="464.1" y="1283.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="467.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="464.1" y="1267.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="467.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.02%)</title><rect x="464.1" y="1251.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="467.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="464.1" y="1235.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="467.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.02%)</title><rect x="464.1" y="1219.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.1" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (1 samples, 0.02%)</title><rect x="464.1" y="1203.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="467.1" y="1214.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.02%)</title><rect x="464.1" y="1187.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.1" y="1198.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.02%)</title><rect x="464.1" y="1171.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="467.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$CompleteRestartableTask.run (215 samples, 4.68%)</title><rect x="464.3" y="1363.0" width="55.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="467.3" y="1374.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/PullPublisher$Subscription$PullTask.run (3 samples, 0.07%)</title><rect x="464.3" y="1347.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="467.3" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.tryDecrement (3 samples, 0.07%)</title><rect x="464.3" y="1331.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="467.3" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.decreaseAndGet (3 samples, 0.07%)</title><rect x="464.3" y="1315.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="467.3" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SynchronizedRestartableTask.run (212 samples, 4.62%)</title><rect x="465.1" y="1347.0" width="54.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="468.1" y="1358.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$204/1779842306.run (211 samples, 4.59%)</title><rect x="465.3" y="1331.0" width="54.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="468.3" y="1342.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.flush (211 samples, 4.59%)</title><rect x="465.3" y="1315.0" width="54.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="468.3" y="1326.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.handlePendingDelegate (203 samples, 4.42%)</title><rect x="466.1" y="1299.0" width="52.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="469.1" y="1310.0">jdk/i..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="467.4" y="1283.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="470.4" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="467.4" y="1267.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="470.4" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$226/1940626544.get$Lambda (1 samples, 0.02%)</title><rect x="467.4" y="1251.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="470.4" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$$Lambda$229/1799755707.get$Lambda (1 samples, 0.02%)</title><rect x="467.7" y="1251.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (4 samples, 0.09%)</title><rect x="467.9" y="1283.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="470.9" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.09%)</title><rect x="467.9" y="1267.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="470.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.09%)</title><rect x="467.9" y="1251.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="470.9" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onSubscribe (192 samples, 4.18%)</title><rect x="468.9" y="1283.0" width="49.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="471.9" y="1294.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseContent$FixedLengthBodyParser.onSubscribe (192 samples, 4.18%)</title><rect x="468.9" y="1267.0" width="49.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="471.9" y="1278.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$295/1531363542.run (88 samples, 1.92%)</title><rect x="468.9" y="1251.0" width="22.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="471.9" y="1262.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.clear (1 samples, 0.02%)</title><rect x="468.9" y="1235.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="471.9" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.onFinished (87 samples, 1.89%)</title><rect x="469.2" y="1235.0" width="22.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="472.2" y="1246.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (86 samples, 1.87%)</title><rect x="469.2" y="1219.0" width="22.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.2" y="1230.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (17 samples, 0.37%)</title><rect x="469.2" y="1203.0" width="4.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.2" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (3 samples, 0.07%)</title><rect x="469.2" y="1187.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="472.2" y="1198.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (3 samples, 0.07%)</title><rect x="469.2" y="1171.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="472.2" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (3 samples, 0.07%)</title><rect x="469.2" y="1155.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.2" y="1166.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.07%)</title><rect x="469.2" y="1139.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="472.2" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.07%)</title><rect x="469.2" y="1123.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="472.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="469.2" y="1107.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="472.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (3 samples, 0.07%)</title><rect x="469.2" y="1091.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="472.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (3 samples, 0.07%)</title><rect x="469.2" y="1075.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="472.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="469.7" y="1059.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="472.7" y="1070.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="469.7" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="472.7" y="1054.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="469.7" y="1027.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="472.7" y="1038.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.09%)</title><rect x="470.0" y="1187.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="473.0" y="1198.0"></text>
</g>
<g>
<title>java/util/List.spliterator (1 samples, 0.02%)</title><rect x="470.0" y="1171.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="473.0" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (3 samples, 0.07%)</title><rect x="470.2" y="1171.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="473.2" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (10 samples, 0.22%)</title><rect x="471.0" y="1187.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="474.0" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (10 samples, 0.22%)</title><rect x="471.0" y="1171.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="474.0" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (4 samples, 0.09%)</title><rect x="471.3" y="1155.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="474.3" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.isParallel (3 samples, 0.07%)</title><rect x="471.5" y="1139.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="474.5" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (4 samples, 0.09%)</title><rect x="472.3" y="1155.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="475.3" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (2 samples, 0.04%)</title><rect x="472.3" y="1139.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.3" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (2 samples, 0.04%)</title><rect x="472.3" y="1123.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="475.3" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (2 samples, 0.04%)</title><rect x="472.3" y="1107.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.3" y="1118.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (1 samples, 0.02%)</title><rect x="472.3" y="1091.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="475.3" y="1102.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.tryAdvance (1 samples, 0.02%)</title><rect x="472.3" y="1075.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="475.3" y="1086.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.accept (1 samples, 0.02%)</title><rect x="472.3" y="1059.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="475.3" y="1070.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$List12.get (1 samples, 0.02%)</title><rect x="472.3" y="1043.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.3" y="1054.0"></text>
</g>
<g>
<title>java/util/stream/Sink$ChainedReference.end (1 samples, 0.02%)</title><rect x="472.5" y="1091.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="475.5" y="1102.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$287/1768070330.get (1 samples, 0.02%)</title><rect x="472.8" y="1139.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="475.8" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef$$Lambda$52/2619171.get (1 samples, 0.02%)</title><rect x="473.1" y="1139.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="476.1" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfRef.&lt;init&gt; (1 samples, 0.02%)</title><rect x="473.1" y="1123.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="476.1" y="1134.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink.&lt;init&gt; (1 samples, 0.02%)</title><rect x="473.1" y="1107.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="476.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (1 samples, 0.02%)</title><rect x="473.3" y="1155.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (66 samples, 1.44%)</title><rect x="473.6" y="1203.0" width="16.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="476.6" y="1214.0"></text>
</g>
<g>
<title>java/time/Instant.now (2 samples, 0.04%)</title><rect x="473.6" y="1187.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.6" y="1198.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (2 samples, 0.04%)</title><rect x="473.6" y="1171.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="476.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (2 samples, 0.04%)</title><rect x="473.6" y="1155.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.6" y="1166.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (1 samples, 0.02%)</title><rect x="473.8" y="1139.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="476.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.returnToPool (64 samples, 1.39%)</title><rect x="474.1" y="1187.0" width="16.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="477.1" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (10 samples, 0.22%)</title><rect x="474.1" y="1171.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="477.1" y="1182.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.02%)</title><rect x="474.3" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="477.3" y="1166.0"></text>
</g>
<g>
<title>java/time/Instant.truncatedTo (6 samples, 0.13%)</title><rect x="474.6" y="1155.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="477.6" y="1166.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.02%)</title><rect x="475.1" y="1139.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="478.1" y="1150.0"></text>
</g>
<g>
<title>java/time/Duration.toNanos (2 samples, 0.04%)</title><rect x="475.4" y="1139.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="478.4" y="1150.0"></text>
</g>
<g>
<title>java/time/Instant.plusNanos (1 samples, 0.02%)</title><rect x="475.9" y="1139.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="478.9" y="1150.0"></text>
</g>
<g>
<title>java/time/Instant.plus (1 samples, 0.02%)</title><rect x="475.9" y="1123.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.9" y="1134.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (1 samples, 0.02%)</title><rect x="476.1" y="1155.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="479.1" y="1166.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (1 samples, 0.02%)</title><rect x="476.1" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="479.1" y="1150.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="476.1" y="1123.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.1" y="1134.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (1 samples, 0.02%)</title><rect x="476.1" y="1107.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.1" y="1118.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.next (1 samples, 0.02%)</title><rect x="476.4" y="1155.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="479.4" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.putConnection (8 samples, 0.17%)</title><rect x="476.7" y="1171.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="479.7" y="1182.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.15%)</title><rect x="476.7" y="1155.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="479.7" y="1166.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="476.7" y="1139.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="479.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.equals (1 samples, 0.02%)</title><rect x="476.9" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="479.9" y="1134.0"></text>
</g>
<g>
<title>java/util/Objects.equals (1 samples, 0.02%)</title><rect x="476.9" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="479.9" y="1118.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.equals (1 samples, 0.02%)</title><rect x="476.9" y="1091.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="479.9" y="1102.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress$InetSocketAddressHolder.equals (1 samples, 0.02%)</title><rect x="476.9" y="1075.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="479.9" y="1086.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.11%)</title><rect x="477.2" y="1139.0" width="1.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="480.2" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.hashCode (4 samples, 0.09%)</title><rect x="477.4" y="1123.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="480.4" y="1134.0"></text>
</g>
<g>
<title>java/util/Objects.hash (3 samples, 0.07%)</title><rect x="477.7" y="1107.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="480.7" y="1118.0"></text>
</g>
<g>
<title>java/util/Arrays.hashCode (3 samples, 0.07%)</title><rect x="477.7" y="1091.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="480.7" y="1102.0"></text>
</g>
<g>
<title>java/net/InetSocketAddress.hashCode (1 samples, 0.02%)</title><rect x="478.2" y="1075.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="481.2" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/PlainHttpConnection.cacheKey (1 samples, 0.02%)</title><rect x="478.5" y="1155.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="481.5" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CacheKey.&lt;init&gt; (1 samples, 0.02%)</title><rect x="478.5" y="1139.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.registerCleanupTrigger (46 samples, 1.00%)</title><rect x="478.7" y="1171.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="481.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.connectFlows (46 samples, 1.00%)</title><rect x="478.7" y="1155.0" width="11.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="481.7" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.subscribe (7 samples, 0.15%)</title><rect x="478.7" y="1139.0" width="1.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="481.7" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (7 samples, 0.15%)</title><rect x="478.7" y="1123.0" width="1.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="481.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.onSubscribe (7 samples, 0.15%)</title><rect x="478.7" y="1107.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="481.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (2 samples, 0.04%)</title><rect x="478.7" y="1091.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="481.7" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (2 samples, 0.04%)</title><rect x="478.7" y="1075.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="481.7" y="1086.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (2 samples, 0.04%)</title><rect x="478.7" y="1059.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="481.7" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (1 samples, 0.02%)</title><rect x="479.0" y="1043.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="482.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="479.0" y="1027.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="482.0" y="1038.0"></text>
</g>
<g>
<title>write (1 samples, 0.02%)</title><rect x="479.0" y="1011.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="482.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="479.0" y="995.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="482.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="479.0" y="979.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="482.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="479.0" y="963.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="482.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="479.0" y="947.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="482.0" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="479.0" y="931.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="482.0" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="479.0" y="915.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="482.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="479.0" y="899.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="482.0" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="479.0" y="883.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="482.0" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="479.0" y="867.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="482.0" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="479.0" y="851.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="482.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="479.0" y="835.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="482.0" y="846.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.&lt;init&gt; (4 samples, 0.09%)</title><rect x="479.2" y="1091.0" width="1.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$WriteSubscription.dropSubscription (1 samples, 0.02%)</title><rect x="480.3" y="1091.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="483.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange$Http1Publisher.subscribe (3 samples, 0.07%)</title><rect x="480.5" y="1139.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="483.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.onSubscribe (2 samples, 0.04%)</title><rect x="480.5" y="1123.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="483.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (1 samples, 0.02%)</title><rect x="481.0" y="1123.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="484.0" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.subscribe (36 samples, 0.78%)</title><rect x="481.3" y="1139.0" width="9.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="484.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher.subscribe (36 samples, 0.78%)</title><rect x="481.3" y="1123.0" width="9.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="484.3" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalSubscribe (32 samples, 0.70%)</title><rect x="482.1" y="1107.0" width="8.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.1" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.registerEvent (32 samples, 0.70%)</title><rect x="482.1" y="1091.0" width="8.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="485.1" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.register (32 samples, 0.70%)</title><rect x="482.1" y="1075.0" width="8.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="485.1" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="482.8" y="1059.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="485.8" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="482.8" y="1043.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="485.8" y="1054.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="482.8" y="1027.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.8" y="1038.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="482.8" y="1011.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="485.8" y="1022.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="482.8" y="995.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="485.8" y="1006.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="482.8" y="979.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="485.8" y="990.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="482.8" y="963.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="485.8" y="974.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.wakeup (28 samples, 0.61%)</title><rect x="483.1" y="1059.0" width="7.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="486.1" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.write1 (27 samples, 0.59%)</title><rect x="483.3" y="1043.0" width="7.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="486.3" y="1054.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_IOUtil_write1 (1 samples, 0.02%)</title><rect x="483.3" y="1027.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="486.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.54%)</title><rect x="483.6" y="1027.0" width="6.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="486.6" y="1038.0"></text>
</g>
<g>
<title>write (25 samples, 0.54%)</title><rect x="483.6" y="1011.0" width="6.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="486.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.54%)</title><rect x="483.6" y="995.0" width="6.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="486.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.54%)</title><rect x="483.6" y="979.0" width="6.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="486.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.52%)</title><rect x="483.9" y="963.0" width="6.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="486.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.50%)</title><rect x="484.1" y="947.0" width="5.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="487.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.50%)</title><rect x="484.1" y="931.0" width="5.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="487.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.48%)</title><rect x="484.4" y="915.0" width="5.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="487.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.48%)</title><rect x="484.4" y="899.0" width="5.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="487.4" y="910.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.37%)</title><rect x="485.6" y="883.0" width="4.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="488.6" y="894.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.33%)</title><rect x="486.2" y="867.0" width="3.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="489.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.30%)</title><rect x="486.4" y="851.0" width="3.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="489.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="486.7" y="835.0" width="3.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="489.7" y="846.0"></text>
</g>
<g>
<title>write (1 samples, 0.02%)</title><rect x="490.0" y="1027.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="493.0" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (1 samples, 0.02%)</title><rect x="490.3" y="1107.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="493.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (1 samples, 0.02%)</title><rect x="490.3" y="1091.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="493.3" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.set (1 samples, 0.02%)</title><rect x="490.3" y="1075.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.3" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.isOpen (3 samples, 0.07%)</title><rect x="490.5" y="1203.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="493.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.add (1 samples, 0.02%)</title><rect x="490.5" y="1187.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="493.5" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.isFinished (2 samples, 0.04%)</title><rect x="490.8" y="1187.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="493.8" y="1198.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (2 samples, 0.04%)</title><rect x="490.8" y="1171.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="493.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.logTrace (1 samples, 0.02%)</title><rect x="491.3" y="1219.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.3" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.02%)</title><rect x="491.3" y="1203.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$299/1271326018.accept (12 samples, 0.26%)</title><rect x="491.6" y="1251.0" width="3.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="494.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$1 (12 samples, 0.26%)</title><rect x="491.6" y="1235.0" width="3.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="494.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$BodyReader.onComplete (12 samples, 0.26%)</title><rect x="491.6" y="1219.0" width="3.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="494.6" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (9 samples, 0.20%)</title><rect x="491.8" y="1203.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="494.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (9 samples, 0.20%)</title><rect x="491.8" y="1187.0" width="2.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="494.8" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (8 samples, 0.17%)</title><rect x="492.1" y="1171.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="495.1" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (8 samples, 0.17%)</title><rect x="492.1" y="1155.0" width="2.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="495.1" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (5 samples, 0.11%)</title><rect x="492.1" y="1139.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="495.1" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (5 samples, 0.11%)</title><rect x="492.1" y="1123.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="495.1" y="1134.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="492.3" y="1107.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="495.3" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$304/1783417676.accept (1 samples, 0.02%)</title><rect x="492.6" y="1107.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="495.6" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$306/1537821975.accept (2 samples, 0.04%)</title><rect x="492.8" y="1107.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="495.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$304/1783417676.accept (1 samples, 0.02%)</title><rect x="493.4" y="1139.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="496.4" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$2 (1 samples, 0.02%)</title><rect x="493.4" y="1123.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="496.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$ClientRefCountTracker.tryRelease (1 samples, 0.02%)</title><rect x="493.4" y="1107.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="496.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.unreference (1 samples, 0.02%)</title><rect x="493.4" y="1091.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="496.4" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.facade (1 samples, 0.02%)</title><rect x="493.4" y="1075.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="496.4" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations$$Lambda$306/1537821975.accept (2 samples, 0.04%)</title><rect x="493.6" y="1139.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="496.6" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.lambda$add$0 (2 samples, 0.04%)</title><rect x="493.6" y="1123.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="496.6" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection$TrailingOperations.remove (2 samples, 0.04%)</title><rect x="493.6" y="1107.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="496.6" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.isDone (1 samples, 0.02%)</title><rect x="494.1" y="1203.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.1" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$224/839104394.accept (1 samples, 0.02%)</title><rect x="494.4" y="1203.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="497.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.advance (1 samples, 0.02%)</title><rect x="494.4" y="1187.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="497.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onComplete (85 samples, 1.85%)</title><rect x="494.6" y="1251.0" width="21.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="497.6" y="1262.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.complete (85 samples, 1.85%)</title><rect x="494.6" y="1235.0" width="21.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="497.6" y="1246.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onComplete (82 samples, 1.79%)</title><rect x="495.2" y="1219.0" width="21.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.2" y="1230.0">j..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (75 samples, 1.63%)</title><rect x="495.4" y="1203.0" width="19.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="498.4" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (75 samples, 1.63%)</title><rect x="495.4" y="1187.0" width="19.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="498.4" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (75 samples, 1.63%)</title><rect x="495.4" y="1171.0" width="19.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="498.4" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (75 samples, 1.63%)</title><rect x="495.4" y="1155.0" width="19.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (2 samples, 0.04%)</title><rect x="495.4" y="1139.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.4" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="495.4" y="1123.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="498.4" y="1134.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="495.4" y="1107.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="498.4" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$308/830188074.accept (1 samples, 0.02%)</title><rect x="495.7" y="1107.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="498.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$308/830188074.accept (73 samples, 1.59%)</title><rect x="495.9" y="1139.0" width="18.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="498.9" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.lambda$readBody$4 (73 samples, 1.59%)</title><rect x="495.9" y="1123.0" width="18.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="498.9" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (72 samples, 1.57%)</title><rect x="496.2" y="1107.0" width="18.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="499.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (3 samples, 0.07%)</title><rect x="496.2" y="1091.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.07%)</title><rect x="496.2" y="1075.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="499.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.07%)</title><rect x="496.2" y="1059.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="499.2" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (69 samples, 1.50%)</title><rect x="497.0" y="1091.0" width="17.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (11 samples, 0.24%)</title><rect x="497.2" y="1075.0" width="2.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="500.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="497.2" y="1059.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="500.2" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$316/2105483381.apply (10 samples, 0.22%)</title><rect x="497.5" y="1059.0" width="2.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.5" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$3 (10 samples, 0.22%)</title><rect x="497.5" y="1043.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.&lt;init&gt; (10 samples, 0.22%)</title><rect x="497.5" y="1027.0" width="2.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.5" y="1038.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (5 samples, 0.11%)</title><rect x="498.5" y="1011.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="501.5" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.connection (3 samples, 0.07%)</title><rect x="499.0" y="995.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="502.0" y="1006.0"></text>
</g>
<g>
<title>java/util/Optional.ofNullable (1 samples, 0.02%)</title><rect x="499.8" y="1011.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.8" y="1022.0"></text>
</g>
<g>
<title>java/util/Optional.of (1 samples, 0.02%)</title><rect x="499.8" y="995.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="502.8" y="1006.0"></text>
</g>
<g>
<title>java/util/Optional.&lt;init&gt; (1 samples, 0.02%)</title><rect x="499.8" y="979.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="502.8" y="990.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="499.8" y="963.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="502.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniRelay.tryFire (1 samples, 0.02%)</title><rect x="500.0" y="1075.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="503.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="500.0" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="503.0" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (53 samples, 1.15%)</title><rect x="500.3" y="1075.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="503.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (52 samples, 1.13%)</title><rect x="500.6" y="1059.0" width="13.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="503.6" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (51 samples, 1.11%)</title><rect x="500.6" y="1043.0" width="13.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="503.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (47 samples, 1.02%)</title><rect x="500.6" y="1027.0" width="12.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="503.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (47 samples, 1.02%)</title><rect x="500.6" y="1011.0" width="12.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.6" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (2 samples, 0.04%)</title><rect x="500.6" y="995.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="503.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandle.fullFence (1 samples, 0.02%)</title><rect x="500.6" y="979.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="503.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="500.6" y="963.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="503.6" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (1 samples, 0.02%)</title><rect x="500.8" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="503.8" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.setRelease (1 samples, 0.02%)</title><rect x="500.8" y="963.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="503.8" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (45 samples, 0.98%)</title><rect x="501.1" y="995.0" width="11.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="504.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.tryLockPhase (1 samples, 0.02%)</title><rect x="501.3" y="979.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="501.3" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.3" y="974.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="501.3" y="947.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.3" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (43 samples, 0.94%)</title><rect x="501.6" y="979.0" width="11.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.6" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (42 samples, 0.91%)</title><rect x="501.8" y="963.0" width="10.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="504.8" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (42 samples, 0.91%)</title><rect x="501.8" y="947.0" width="10.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="504.8" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (9 samples, 0.20%)</title><rect x="502.1" y="931.0" width="2.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="505.1" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="502.4" y="915.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="505.4" y="926.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="502.6" y="915.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="505.6" y="926.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="503.1" y="915.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="506.1" y="926.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="503.4" y="915.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="506.4" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="503.6" y="915.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="506.6" y="926.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="504.2" y="915.0" width="0.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="507.2" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="504.4" y="931.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="507.4" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="504.7" y="931.0" width="0.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="507.7" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (30 samples, 0.65%)</title><rect x="504.9" y="931.0" width="7.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="507.9" y="942.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.59%)</title><rect x="505.7" y="915.0" width="6.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="508.7" y="926.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.59%)</title><rect x="505.7" y="899.0" width="6.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="508.7" y="910.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.57%)</title><rect x="505.9" y="883.0" width="6.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="508.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.54%)</title><rect x="506.2" y="867.0" width="6.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="509.2" y="878.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.54%)</title><rect x="506.2" y="851.0" width="6.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="509.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (24 samples, 0.52%)</title><rect x="506.5" y="835.0" width="6.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="509.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.46%)</title><rect x="507.2" y="819.0" width="5.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="510.2" y="830.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.46%)</title><rect x="507.2" y="803.0" width="5.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="510.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (4 samples, 0.09%)</title><rect x="512.6" y="1027.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="515.6" y="1038.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="512.9" y="1011.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="515.9" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$$Lambda$311/703709478.accept (1 samples, 0.02%)</title><rect x="513.1" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="516.1" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$137/1219858729.accept (1 samples, 0.02%)</title><rect x="513.4" y="1011.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="516.4" y="1022.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange$$Lambda$314/1210631065.accept (1 samples, 0.02%)</title><rect x="513.7" y="1043.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.7" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.lambda$readBodyAsync$0 (1 samples, 0.02%)</title><rect x="513.7" y="1027.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="516.7" y="1038.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.07%)</title><rect x="513.9" y="1075.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="516.9" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.join (6 samples, 0.13%)</title><rect x="514.7" y="1203.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="517.7" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.02%)</title><rect x="515.2" y="1187.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="518.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (3 samples, 0.07%)</title><rect x="515.5" y="1187.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="518.5" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.04%)</title><rect x="515.7" y="1171.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="518.7" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getCompletionCause (1 samples, 0.02%)</title><rect x="516.2" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.2" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpConnection.closeOrReturnToCache (1 samples, 0.02%)</title><rect x="516.2" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="519.2" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Http1BodySubscriber.onSubscribe (7 samples, 0.15%)</title><rect x="516.5" y="1251.0" width="1.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="519.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ResponseSubscribers$ByteArraySubscriber.onSubscribe (6 samples, 0.13%)</title><rect x="516.7" y="1235.0" width="1.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="519.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (6 samples, 0.13%)</title><rect x="516.7" y="1219.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand.increase (2 samples, 0.04%)</title><rect x="517.3" y="1203.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="520.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.getAndAccumulate (2 samples, 0.04%)</title><rect x="517.3" y="1187.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Demand$$Lambda$231/937652650.applyAsLong (2 samples, 0.04%)</title><rect x="517.3" y="1171.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="520.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="517.5" y="1155.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="520.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="517.5" y="1139.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="520.5" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="517.5" y="1123.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="520.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="517.8" y="1203.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="520.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (2 samples, 0.04%)</title><rect x="517.8" y="1187.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (2 samples, 0.04%)</title><rect x="517.8" y="1171.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="520.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.04%)</title><rect x="517.8" y="1155.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (2 samples, 0.04%)</title><rect x="517.8" y="1139.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.02%)</title><rect x="517.8" y="1123.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="517.8" y="1107.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="520.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="517.8" y="1091.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="517.8" y="1075.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="520.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="517.8" y="1059.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="520.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="517.8" y="1043.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="520.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="517.8" y="1027.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="520.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="518.0" y="1123.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="518.0" y="1107.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="521.0" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="518.0" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.0" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetTail (1 samples, 0.02%)</title><rect x="518.0" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="518.0" y="1059.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="521.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="518.0" y="1043.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="521.0" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.tryAsyncReceive (5 samples, 0.11%)</title><rect x="518.3" y="1299.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1AsyncDelegateSubscription.request (1 samples, 0.02%)</title><rect x="518.5" y="1283.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.5" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$Receiver.accept (3 samples, 0.07%)</title><rect x="518.8" y="1283.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (3 samples, 0.07%)</title><rect x="518.8" y="1267.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response$HeadersReader.handle (3 samples, 0.07%)</title><rect x="518.8" y="1251.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (1 samples, 0.02%)</title><rect x="518.8" y="1235.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="518.8" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.8" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.02%)</title><rect x="518.8" y="1203.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (1 samples, 0.02%)</title><rect x="518.8" y="1187.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="521.8" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="518.8" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.run (1 samples, 0.02%)</title><rect x="518.8" y="1155.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniApply.tryFire (1 samples, 0.02%)</title><rect x="518.8" y="1139.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="521.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (1 samples, 0.02%)</title><rect x="518.8" y="1123.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="521.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (1 samples, 0.02%)</title><rect x="518.8" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="521.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.tryFire (1 samples, 0.02%)</title><rect x="518.8" y="1091.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="521.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange$$Lambda$133/10694432.apply (1 samples, 0.02%)</title><rect x="518.8" y="1075.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="521.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.lambda$responseAsync0$4 (1 samples, 0.02%)</title><rect x="518.8" y="1059.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.8" y="1070.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.readBodyAsync (1 samples, 0.02%)</title><rect x="518.8" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="521.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Exchange.readBodyAsync (1 samples, 0.02%)</title><rect x="518.8" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="521.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1Response.readBody (1 samples, 0.02%)</title><rect x="518.8" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="521.8" y="1022.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValueAsLong (1 samples, 0.02%)</title><rect x="518.8" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="521.8" y="1006.0"></text>
</g>
<g>
<title>java/util/stream/LongPipeline.findFirst (1 samples, 0.02%)</title><rect x="518.8" y="979.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="521.8" y="990.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (1 samples, 0.02%)</title><rect x="518.8" y="963.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="521.8" y="974.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (1 samples, 0.02%)</title><rect x="518.8" y="947.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="521.8" y="958.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.parse (2 samples, 0.04%)</title><rect x="519.1" y="1235.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.1" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1HeaderParser.resumeOrEndHeaders (1 samples, 0.02%)</title><rect x="519.3" y="1219.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.3" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (1 samples, 0.02%)</title><rect x="519.3" y="1203.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="522.3" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.02%)</title><rect x="519.3" y="1187.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="522.3" y="1198.0"></text>
</g>
<g>
<title>java/util/HashMap.forEach (1 samples, 0.02%)</title><rect x="519.3" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.3" y="1182.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (1 samples, 0.02%)</title><rect x="519.3" y="1155.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.3" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.02%)</title><rect x="519.3" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="522.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.trim (1 samples, 0.02%)</title><rect x="519.3" y="1123.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (1 samples, 0.02%)</title><rect x="519.3" y="1107.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="522.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="519.3" y="1091.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="519.3" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="522.3" y="1086.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="519.3" y="1059.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="522.3" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.run (417 samples, 9.08%)</title><rect x="519.6" y="1411.0" width="107.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="522.6" y="1422.0">ru/mail/polis..</text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="519.8" y="1395.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="522.8" y="1406.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$343/480297865.run (415 samples, 9.04%)</title><rect x="520.1" y="1395.0" width="106.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.1" y="1406.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.lambda$entity$2 (413 samples, 8.99%)</title><rect x="520.6" y="1379.0" width="106.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.6" y="1390.0">ru/mail/polis..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.delete (371 samples, 8.08%)</title><rect x="521.9" y="1363.0" width="95.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="524.9" y="1374.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="523.4" y="1347.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.4" y="1358.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="523.4" y="1331.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.4" y="1342.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="523.4" y="1315.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="526.4" y="1326.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="523.4" y="1299.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.4" y="1310.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="523.4" y="1283.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.4" y="1294.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="523.4" y="1267.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="526.4" y="1278.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="523.4" y="1251.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.4" y="1262.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="523.4" y="1235.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="526.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.02%)</title><rect x="523.7" y="1347.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.7" y="1358.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.remove (20 samples, 0.44%)</title><rect x="523.9" y="1347.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="526.9" y="1358.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.remove (20 samples, 0.44%)</title><rect x="523.9" y="1331.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="526.9" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (3 samples, 0.07%)</title><rect x="523.9" y="1315.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (3 samples, 0.07%)</title><rect x="523.9" y="1299.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="526.9" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (3 samples, 0.07%)</title><rect x="523.9" y="1283.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="526.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.02%)</title><rect x="524.2" y="1267.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="527.2" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="524.2" y="1251.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="527.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="524.2" y="1235.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="527.2" y="1246.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="524.5" y="1267.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="527.5" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.remove (17 samples, 0.37%)</title><rect x="524.7" y="1315.0" width="4.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="527.7" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (17 samples, 0.37%)</title><rect x="524.7" y="1299.0" width="4.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="527.7" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (17 samples, 0.37%)</title><rect x="524.7" y="1283.0" width="4.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="527.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (14 samples, 0.30%)</title><rect x="525.5" y="1267.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="528.5" y="1278.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.30%)</title><rect x="525.5" y="1251.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="528.5" y="1262.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (14 samples, 0.30%)</title><rect x="525.5" y="1235.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="528.5" y="1246.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (4 samples, 0.09%)</title><rect x="526.0" y="1219.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="529.0" y="1230.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (4 samples, 0.09%)</title><rect x="527.0" y="1219.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="530.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="527.8" y="1203.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="530.8" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="527.8" y="1187.0" width="0.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="530.8" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="527.8" y="1171.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="530.8" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="527.8" y="1155.0" width="0.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="530.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="527.8" y="1139.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="530.8" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="527.8" y="1123.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="530.8" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="527.8" y="1107.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="530.8" y="1118.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.07%)</title><rect x="528.0" y="1219.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="531.0" y="1230.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="528.8" y="1219.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="531.8" y="1230.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.ix (1 samples, 0.02%)</title><rect x="528.8" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="531.8" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (40 samples, 0.87%)</title><rect x="529.1" y="1347.0" width="10.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="532.1" y="1358.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.next (1 samples, 0.02%)</title><rect x="529.8" y="1331.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="532.8" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 0.02%)</title><rect x="529.8" y="1315.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="532.8" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapEntryIterator.next (1 samples, 0.02%)</title><rect x="529.8" y="1299.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.8" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap$SubMapIterator.nextEntry (1 samples, 0.02%)</title><rect x="529.8" y="1283.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.8" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="529.8" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="532.8" y="1278.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2.iterator (3 samples, 0.07%)</title><rect x="530.1" y="1331.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.1" y="1342.0"></text>
</g>
<g>
<title>java/util/AbstractMap$2$1.&lt;init&gt; (3 samples, 0.07%)</title><rect x="530.1" y="1315.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.1" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (3 samples, 0.07%)</title><rect x="530.1" y="1299.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="533.1" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.absLowest (3 samples, 0.07%)</title><rect x="530.1" y="1283.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.1" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap.getCeilingEntry (3 samples, 0.07%)</title><rect x="530.1" y="1267.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/Long.compareTo (1 samples, 0.02%)</title><rect x="530.1" y="1251.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="533.1" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (2 samples, 0.04%)</title><rect x="530.4" y="1251.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="533.4" y="1262.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="530.4" y="1235.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="533.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="530.4" y="1219.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.4" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="530.4" y="1203.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="533.4" y="1214.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="530.9" y="1331.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="533.9" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (1 samples, 0.02%)</title><rect x="530.9" y="1315.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="533.9" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.15%)</title><rect x="531.1" y="1331.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="534.1" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (7 samples, 0.15%)</title><rect x="531.1" y="1315.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="534.1" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="532.2" y="1299.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="535.2" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (3 samples, 0.07%)</title><rect x="532.2" y="1283.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="535.2" y="1294.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="532.4" y="1267.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="535.4" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.next (1 samples, 0.02%)</title><rect x="532.9" y="1331.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="535.9" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.02%)</title><rect x="532.9" y="1315.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="535.9" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="532.9" y="1299.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="535.9" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeMap$Values.iterator (3 samples, 0.07%)</title><rect x="533.2" y="1331.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="536.2" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap$ValueIterator.&lt;init&gt; (3 samples, 0.07%)</title><rect x="533.2" y="1315.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="536.2" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.&lt;init&gt; (3 samples, 0.07%)</title><rect x="533.2" y="1299.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="536.2" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (5 samples, 0.11%)</title><rect x="534.0" y="1331.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.0" y="1342.0"></text>
</g>
<g>
<title>java/util/TreeMap.tailMap (5 samples, 0.11%)</title><rect x="534.0" y="1315.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="537.0" y="1326.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap.&lt;init&gt; (5 samples, 0.11%)</title><rect x="534.0" y="1299.0" width="1.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="537.0" y="1310.0"></text>
</g>
<g>
<title>java/util/TreeMap$NavigableSubMap.&lt;init&gt; (5 samples, 0.11%)</title><rect x="534.0" y="1283.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="537.0" y="1294.0"></text>
</g>
<g>
<title>java/util/TreeMap.compare (4 samples, 0.09%)</title><rect x="534.2" y="1267.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="537.2" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap$AscendingSubMap$AscendingEntrySetView.iterator (2 samples, 0.04%)</title><rect x="534.7" y="1251.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="537.7" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.firstReplica (16 samples, 0.35%)</title><rect x="535.2" y="1331.0" width="4.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.2" y="1342.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.hashBytes (16 samples, 0.35%)</title><rect x="535.2" y="1315.0" width="4.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="538.2" y="1326.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractHashFunction.newHasher (4 samples, 0.09%)</title><rect x="535.2" y="1299.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="538.2" y="1310.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction.newHasher (4 samples, 0.09%)</title><rect x="535.2" y="1283.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="538.2" y="1294.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.&lt;init&gt; (4 samples, 0.09%)</title><rect x="535.2" y="1267.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="538.2" y="1278.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (4 samples, 0.09%)</title><rect x="535.2" y="1251.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="538.2" y="1262.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.&lt;init&gt; (4 samples, 0.09%)</title><rect x="535.2" y="1235.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="538.2" y="1246.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 0.04%)</title><rect x="535.2" y="1219.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.2" y="1230.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="535.2" y="1203.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="538.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="535.2" y="1187.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="538.2" y="1198.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="535.5" y="1187.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="538.5" y="1198.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="535.5" y="1171.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.5" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="535.5" y="1155.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="538.5" y="1166.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="535.5" y="1139.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="538.5" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.flip (2 samples, 0.04%)</title><rect x="535.8" y="1219.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="538.8" y="1230.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.hash (9 samples, 0.20%)</title><rect x="536.3" y="1299.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.3" y="1310.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.makeHash (7 samples, 0.15%)</title><rect x="536.3" y="1283.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="539.3" y="1294.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.13%)</title><rect x="536.5" y="1267.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="539.5" y="1278.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (6 samples, 0.13%)</title><rect x="536.5" y="1251.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="539.5" y="1262.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (6 samples, 0.13%)</title><rect x="536.5" y="1235.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="539.5" y="1246.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (6 samples, 0.13%)</title><rect x="536.5" y="1219.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="539.5" y="1230.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="537.0" y="1203.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="540.0" y="1214.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="537.3" y="1187.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="540.3" y="1198.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="537.6" y="1187.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="540.6" y="1198.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="537.6" y="1171.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="540.6" y="1182.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.04%)</title><rect x="537.6" y="1155.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="540.6" y="1166.0"></text>
</g>
<g>
<title>com/google/common/hash/Murmur3_128HashFunction$Murmur3_128Hasher.processRemaining (2 samples, 0.04%)</title><rect x="538.1" y="1283.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="541.1" y="1294.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="538.3" y="1267.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.3" y="1278.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (1 samples, 0.02%)</title><rect x="538.3" y="1251.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="541.3" y="1262.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytes (3 samples, 0.07%)</title><rect x="538.6" y="1299.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.6" y="1310.0"></text>
</g>
<g>
<title>com/google/common/hash/AbstractStreamingHasher.putBytesInternal (2 samples, 0.04%)</title><rect x="538.6" y="1283.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="541.6" y="1294.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (2 samples, 0.04%)</title><rect x="538.6" y="1267.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="541.6" y="1278.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="538.8" y="1251.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="541.8" y="1262.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.order (1 samples, 0.02%)</title><rect x="539.1" y="1283.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="542.1" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.executeIfProxied (50 samples, 1.09%)</title><rect x="539.4" y="1347.0" width="12.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="542.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.13%)</title><rect x="539.4" y="1331.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="542.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (6 samples, 0.13%)</title><rect x="539.4" y="1315.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="542.4" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$276/573076665.get$Lambda (6 samples, 0.13%)</title><rect x="539.4" y="1299.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="542.4" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$276/573076665.&lt;init&gt; (6 samples, 0.13%)</title><rect x="539.4" y="1283.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="542.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.exceptionally (9 samples, 0.20%)</title><rect x="540.9" y="1331.0" width="2.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="543.9" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniExceptionallyStage (9 samples, 0.20%)</title><rect x="540.9" y="1315.0" width="2.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="543.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.&lt;init&gt; (7 samples, 0.15%)</title><rect x="540.9" y="1299.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="543.9" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (3 samples, 0.07%)</title><rect x="541.4" y="1283.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="544.4" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.replicas (1 samples, 0.02%)</title><rect x="542.2" y="1283.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="545.2" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getResponsesFromReplicas (1 samples, 0.02%)</title><rect x="542.4" y="1283.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="545.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.unipush (2 samples, 0.04%)</title><rect x="542.7" y="1299.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="545.7" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.tryPushStack (1 samples, 0.02%)</title><rect x="543.0" y="1283.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="546.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="543.0" y="1267.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="543.0" y="1251.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="546.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.runAsync (35 samples, 0.76%)</title><rect x="543.2" y="1331.0" width="9.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="546.2" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.asyncRunStage (35 samples, 0.76%)</title><rect x="543.2" y="1315.0" width="9.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="546.2" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (34 samples, 0.74%)</title><rect x="543.5" y="1299.0" width="8.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="546.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (34 samples, 0.74%)</title><rect x="543.5" y="1283.0" width="8.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="546.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalPush (34 samples, 0.74%)</title><rect x="543.5" y="1267.0" width="8.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="546.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.lockedPush (1 samples, 0.02%)</title><rect x="543.7" y="1251.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.tryLockPhase (1 samples, 0.02%)</title><rect x="544.0" y="1251.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="547.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="544.0" y="1235.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="547.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="544.0" y="1219.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="547.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="1203.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="547.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="1187.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="547.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="1171.0" width="0.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="547.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="1155.0" width="0.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="547.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="1139.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="547.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="1123.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="547.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="1107.0" width="0.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="547.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="1091.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="547.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="1075.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="547.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="1059.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="547.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="1043.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="547.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="1027.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="547.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="1011.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="547.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="995.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="547.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="544.0" y="979.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="547.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (31 samples, 0.68%)</title><rect x="544.2" y="1251.0" width="8.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="547.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (31 samples, 0.68%)</title><rect x="544.2" y="1235.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="547.2" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (31 samples, 0.68%)</title><rect x="544.2" y="1219.0" width="8.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="547.2" y="1230.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="544.5" y="1203.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="547.5" y="1214.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.17%)</title><rect x="545.0" y="1203.0" width="2.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="548.0" y="1214.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (4 samples, 0.09%)</title><rect x="545.0" y="1187.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="548.0" y="1198.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.07%)</title><rect x="546.0" y="1187.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="549.0" y="1198.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="546.8" y="1187.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="549.8" y="1198.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (20 samples, 0.44%)</title><rect x="547.1" y="1203.0" width="5.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="550.1" y="1214.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.39%)</title><rect x="547.6" y="1187.0" width="4.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="550.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.39%)</title><rect x="547.6" y="1171.0" width="4.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="550.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.35%)</title><rect x="548.1" y="1155.0" width="4.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="551.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.35%)</title><rect x="548.1" y="1139.0" width="4.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="551.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.35%)</title><rect x="548.1" y="1123.0" width="4.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="551.1" y="1134.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.33%)</title><rect x="548.3" y="1107.0" width="3.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="551.3" y="1118.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.30%)</title><rect x="548.6" y="1091.0" width="3.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="551.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.30%)</title><rect x="548.6" y="1075.0" width="3.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="551.6" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getResponsesFromReplicas (253 samples, 5.51%)</title><rect x="552.2" y="1347.0" width="65.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="555.2" y="1358.0">ru/mail..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (8 samples, 0.17%)</title><rect x="552.5" y="1331.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="555.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/157683534.invoke (8 samples, 0.17%)</title><rect x="552.5" y="1315.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="555.5" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (7 samples, 0.15%)</title><rect x="552.7" y="1299.0" width="1.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="555.7" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.02%)</title><rect x="552.7" y="1283.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="555.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.mixLen (1 samples, 0.02%)</title><rect x="553.0" y="1283.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="556.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="553.0" y="1267.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="556.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="553.0" y="1251.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="556.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (2 samples, 0.04%)</title><rect x="553.2" y="1283.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.2" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.04%)</title><rect x="553.2" y="1267.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="556.2" y="1278.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (1 samples, 0.02%)</title><rect x="553.7" y="1283.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="556.7" y="1294.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (1 samples, 0.02%)</title><rect x="554.0" y="1283.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="557.0" y="1294.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="554.3" y="1283.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="557.3" y="1294.0"></text>
</g>
<g>
<title>java/net/URI.create (35 samples, 0.76%)</title><rect x="554.5" y="1331.0" width="9.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="557.5" y="1342.0"></text>
</g>
<g>
<title>java/net/URI.&lt;init&gt; (35 samples, 0.76%)</title><rect x="554.5" y="1315.0" width="9.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="557.5" y="1326.0"></text>
</g>
<g>
<title>java/net/URI$Parser.&lt;init&gt; (1 samples, 0.02%)</title><rect x="554.5" y="1299.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="557.5" y="1310.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parse (34 samples, 0.74%)</title><rect x="554.8" y="1299.0" width="8.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="557.8" y="1310.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChar (3 samples, 0.07%)</title><rect x="555.0" y="1283.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="558.0" y="1294.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (3 samples, 0.07%)</title><rect x="555.0" y="1267.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="558.0" y="1278.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.07%)</title><rect x="555.0" y="1251.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="558.0" y="1262.0"></text>
</g>
<g>
<title>java/net/URI.match (2 samples, 0.04%)</title><rect x="555.3" y="1235.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="558.3" y="1246.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.04%)</title><rect x="555.3" y="1219.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="558.3" y="1230.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (2 samples, 0.04%)</title><rect x="555.8" y="1283.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="558.8" y="1294.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.04%)</title><rect x="555.8" y="1267.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="558.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.04%)</title><rect x="555.8" y="1251.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="558.8" y="1262.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHierarchical (26 samples, 0.57%)</title><rect x="556.3" y="1283.0" width="6.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="559.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="556.3" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="559.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="556.3" y="1251.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="559.3" y="1262.0"></text>
</g>
<g>
<title>java/net/URI$Parser.checkChars (5 samples, 0.11%)</title><rect x="556.6" y="1267.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.6" y="1278.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (5 samples, 0.11%)</title><rect x="556.6" y="1251.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="559.6" y="1262.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.02%)</title><rect x="557.6" y="1235.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="560.6" y="1246.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseAuthority (13 samples, 0.28%)</title><rect x="557.9" y="1267.0" width="3.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="560.9" y="1278.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseServer (9 samples, 0.20%)</title><rect x="557.9" y="1251.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="560.9" y="1262.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (1 samples, 0.02%)</title><rect x="558.1" y="1235.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="561.1" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="558.1" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="561.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="558.1" y="1203.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="561.1" y="1214.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (1 samples, 0.02%)</title><rect x="558.1" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="561.1" y="1198.0"></text>
</g>
<g>
<title>java/net/URI$Parser.parseHostname (5 samples, 0.11%)</title><rect x="558.4" y="1235.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="561.4" y="1246.0"></text>
</g>
<g>
<title>java/net/URI$Parser.at (2 samples, 0.04%)</title><rect x="558.4" y="1219.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="561.4" y="1230.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (3 samples, 0.07%)</title><rect x="558.9" y="1219.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="561.9" y="1230.0"></text>
</g>
<g>
<title>java/net/URI.match (1 samples, 0.02%)</title><rect x="559.1" y="1203.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.1" y="1214.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="559.4" y="1203.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="562.4" y="1214.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.04%)</title><rect x="559.7" y="1235.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.7" y="1246.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (4 samples, 0.09%)</title><rect x="560.2" y="1251.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="563.2" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="560.9" y="1235.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="563.9" y="1246.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (7 samples, 0.15%)</title><rect x="561.2" y="1267.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="564.2" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.09%)</title><rect x="562.0" y="1251.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.0" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.09%)</title><rect x="562.0" y="1235.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="565.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="562.5" y="1219.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="565.5" y="1230.0"></text>
</g>
<g>
<title>java/net/URI$Parser.scan (2 samples, 0.04%)</title><rect x="563.0" y="1283.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="566.0" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="563.0" y="1267.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="566.0" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="563.3" y="1267.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.3" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="563.3" y="1251.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="566.3" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="563.3" y="1235.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="566.3" y="1246.0"></text>
</g>
<g>
<title>java/net/http/HttpRequest.newBuilder (6 samples, 0.13%)</title><rect x="563.5" y="1331.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="566.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.&lt;init&gt; (6 samples, 0.13%)</title><rect x="563.5" y="1315.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (5 samples, 0.11%)</title><rect x="563.8" y="1299.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="566.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.04%)</title><rect x="563.8" y="1283.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="566.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.04%)</title><rect x="563.8" y="1267.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="566.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (2 samples, 0.04%)</title><rect x="563.8" y="1251.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="566.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (3 samples, 0.07%)</title><rect x="564.3" y="1283.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="567.3" y="1294.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (3 samples, 0.07%)</title><rect x="564.3" y="1267.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="567.3" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.next (1 samples, 0.02%)</title><rect x="565.1" y="1331.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.1" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="565.3" y="1331.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="568.3" y="1342.0"></text>
</g>
<g>
<title>java/util/AbstractList.&lt;init&gt; (1 samples, 0.02%)</title><rect x="565.3" y="1315.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.3" y="1326.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.&lt;init&gt; (1 samples, 0.02%)</title><rect x="565.3" y="1299.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="565.3" y="1283.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.3" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList.remove (1 samples, 0.02%)</title><rect x="565.6" y="1331.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="568.6" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList.fastRemove (1 samples, 0.02%)</title><rect x="565.6" y="1315.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="568.6" y="1326.0"></text>
</g>
<g>
<title>G1BarrierSet::invalidate(MemRegion) (1 samples, 0.02%)</title><rect x="565.6" y="1299.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="568.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientFacade.sendAsync (151 samples, 3.29%)</title><rect x="565.8" y="1331.0" width="38.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="568.8" y="1342.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (151 samples, 3.29%)</title><rect x="565.8" y="1315.0" width="38.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="568.8" y="1326.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (151 samples, 3.29%)</title><rect x="565.8" y="1299.0" width="38.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="568.8" y="1310.0">jdk..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.sendAsync (151 samples, 3.29%)</title><rect x="565.8" y="1283.0" width="38.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="568.8" y="1294.0">jdk..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="565.8" y="1267.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="568.8" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenComplete (1 samples, 0.02%)</title><rect x="566.1" y="1267.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="569.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="566.1" y="1251.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="566.1" y="1235.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="566.1" y="1219.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="569.1" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (99 samples, 2.16%)</title><rect x="566.3" y="1267.0" width="25.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="569.3" y="1278.0">j..</text>
</g>
<g>
<title>java/net/http/HttpHeaders.firstValue (14 samples, 0.30%)</title><rect x="567.1" y="1251.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="570.1" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.allValues (2 samples, 0.04%)</title><rect x="567.1" y="1235.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="570.1" y="1246.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.get (2 samples, 0.04%)</title><rect x="567.1" y="1219.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="570.1" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.get (2 samples, 0.04%)</title><rect x="567.1" y="1203.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="570.1" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (2 samples, 0.04%)</title><rect x="567.1" y="1187.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="570.1" y="1198.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (2 samples, 0.04%)</title><rect x="567.1" y="1171.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="570.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="567.4" y="1155.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="570.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="567.4" y="1139.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="570.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="567.4" y="1123.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="570.4" y="1134.0"></text>
</g>
<g>
<title>java/util/Collection.stream (4 samples, 0.09%)</title><rect x="567.6" y="1235.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="570.6" y="1246.0"></text>
</g>
<g>
<title>java/util/List.spliterator (3 samples, 0.07%)</title><rect x="567.6" y="1219.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="570.6" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.02%)</title><rect x="568.4" y="1219.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.4" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$Head.&lt;init&gt; (1 samples, 0.02%)</title><rect x="568.4" y="1203.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="571.4" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (1 samples, 0.02%)</title><rect x="568.4" y="1187.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="571.4" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (1 samples, 0.02%)</title><rect x="568.4" y="1171.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="571.4" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.findFirst (8 samples, 0.17%)</title><rect x="568.6" y="1235.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.6" y="1246.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (8 samples, 0.17%)</title><rect x="568.6" y="1219.0" width="2.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="571.6" y="1230.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (1 samples, 0.02%)</title><rect x="568.9" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="571.9" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindOp.evaluateSequential (6 samples, 0.13%)</title><rect x="569.2" y="1203.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="572.2" y="1214.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (4 samples, 0.09%)</title><rect x="569.4" y="1187.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="572.4" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (4 samples, 0.09%)</title><rect x="569.4" y="1171.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="572.4" y="1182.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyIntoWithCancel (4 samples, 0.09%)</title><rect x="569.4" y="1155.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="572.4" y="1166.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEachWithCancel (4 samples, 0.09%)</title><rect x="569.4" y="1139.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.4" y="1150.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong$$Lambda$287/1768070330.get (1 samples, 0.02%)</title><rect x="570.4" y="1187.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="573.4" y="1198.0"></text>
</g>
<g>
<title>java/util/stream/FindOps$FindSink$OfLong.&lt;init&gt; (1 samples, 0.02%)</title><rect x="570.4" y="1171.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="573.4" y="1182.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (11 samples, 0.24%)</title><rect x="570.7" y="1251.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="573.7" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (11 samples, 0.24%)</title><rect x="570.7" y="1235.0" width="2.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="573.7" y="1246.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (2 samples, 0.04%)</title><rect x="570.7" y="1219.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="573.7" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (2 samples, 0.04%)</title><rect x="570.7" y="1203.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="573.7" y="1214.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="570.7" y="1187.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="573.7" y="1198.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (1 samples, 0.02%)</title><rect x="571.0" y="1187.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="574.0" y="1198.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableMap.forEach (9 samples, 0.20%)</title><rect x="571.2" y="1219.0" width="2.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="574.2" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (9 samples, 0.20%)</title><rect x="571.2" y="1203.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="574.2" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (9 samples, 0.20%)</title><rect x="571.2" y="1187.0" width="2.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="574.2" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (8 samples, 0.17%)</title><rect x="571.5" y="1171.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="574.5" y="1182.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (7 samples, 0.15%)</title><rect x="571.5" y="1155.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="574.5" y="1166.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.accept (7 samples, 0.15%)</title><rect x="571.5" y="1139.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="574.5" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (6 samples, 0.13%)</title><rect x="571.7" y="1123.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="574.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.trim (2 samples, 0.04%)</title><rect x="571.7" y="1107.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="574.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (2 samples, 0.04%)</title><rect x="571.7" y="1091.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="574.7" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="572.2" y="1107.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.2" y="1118.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="572.2" y="1091.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="575.2" y="1102.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="572.5" y="1075.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="575.5" y="1086.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="572.5" y="1059.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="575.5" y="1070.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="572.5" y="1043.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="575.5" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$64/107456312.test (2 samples, 0.04%)</title><rect x="572.8" y="1107.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="575.8" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$2 (2 samples, 0.04%)</title><rect x="572.8" y="1091.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="575.8" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1473611564.test (2 samples, 0.04%)</title><rect x="572.8" y="1075.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="575.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (2 samples, 0.04%)</title><rect x="572.8" y="1059.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="575.8" y="1070.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.02%)</title><rect x="572.8" y="1043.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="575.8" y="1054.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.02%)</title><rect x="572.8" y="1027.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="575.8" y="1038.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.02%)</title><rect x="572.8" y="1011.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="575.8" y="1022.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="572.8" y="995.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="575.8" y="1006.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="572.8" y="979.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="575.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="572.8" y="963.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="575.8" y="974.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="572.8" y="947.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="575.8" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (1 samples, 0.02%)</title><rect x="572.8" y="931.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="575.8" y="942.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="573.0" y="1043.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.0" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="573.3" y="1155.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="576.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="573.3" y="1139.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="576.3" y="1150.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.get$Lambda (1 samples, 0.02%)</title><rect x="573.3" y="1123.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="576.3" y="1134.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.&lt;init&gt; (1 samples, 0.02%)</title><rect x="573.3" y="1107.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="576.3" y="1118.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.hasNext (1 samples, 0.02%)</title><rect x="573.3" y="1091.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="576.3" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkURI (1 samples, 0.02%)</title><rect x="573.5" y="1251.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="576.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.retrieveProxy (66 samples, 1.44%)</title><rect x="573.8" y="1251.0" width="16.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="576.8" y="1262.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector.select (66 samples, 1.44%)</title><rect x="573.8" y="1235.0" width="16.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="576.8" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.02%)</title><rect x="573.8" y="1219.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="576.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.toLowerCase (1 samples, 0.02%)</title><rect x="573.8" y="1203.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="576.8" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="573.8" y="1187.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="576.8" y="1198.0"></text>
</g>
<g>
<title>java/security/AccessController.doPrivileged (65 samples, 1.42%)</title><rect x="574.0" y="1219.0" width="16.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="577.0" y="1230.0"></text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="574.3" y="1203.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="577.3" y="1214.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="574.6" y="1203.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="577.6" y="1214.0"></text>
</g>
<g>
<title>JVM_DoPrivileged (40 samples, 0.87%)</title><rect x="574.8" y="1203.0" width="10.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="577.8" y="1214.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="576.6" y="1187.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="579.6" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="576.9" y="1187.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="579.9" y="1198.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.02%)</title><rect x="576.9" y="1171.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="579.9" y="1182.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (10 samples, 0.22%)</title><rect x="577.1" y="1187.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="580.1" y="1198.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.02%)</title><rect x="577.1" y="1171.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="580.1" y="1182.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.04%)</title><rect x="577.4" y="1171.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="580.4" y="1182.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.07%)</title><rect x="577.9" y="1171.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="580.9" y="1182.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.02%)</title><rect x="578.2" y="1155.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="581.2" y="1166.0"></text>
</g>
<g>
<title>ThreadShadow::clear_pending_exception() (1 samples, 0.02%)</title><rect x="578.4" y="1155.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="581.4" y="1166.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (3 samples, 0.07%)</title><rect x="578.7" y="1171.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="581.7" y="1182.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="579.4" y="1171.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="582.4" y="1182.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="579.7" y="1187.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="582.7" y="1198.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (3 samples, 0.07%)</title><rect x="580.0" y="1187.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="583.0" y="1198.0"></text>
</g>
<g>
<title>PcDescContainer::find_pc_desc_internal(unsigned char*, bool, PcDescSearch const&amp;) (1 samples, 0.02%)</title><rect x="580.7" y="1187.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="583.7" y="1198.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.197] (1 samples, 0.02%)</title><rect x="581.0" y="1187.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="584.0" y="1198.0"></text>
</g>
<g>
<title>frame::is_interpreted_frame() const (1 samples, 0.02%)</title><rect x="581.2" y="1187.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="584.2" y="1198.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (5 samples, 0.11%)</title><rect x="581.5" y="1187.0" width="1.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="584.5" y="1198.0"></text>
</g>
<g>
<title>CompiledMethod::is_compiled() const (1 samples, 0.02%)</title><rect x="581.8" y="1171.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="584.8" y="1182.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (3 samples, 0.07%)</title><rect x="582.0" y="1171.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="585.0" y="1182.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (3 samples, 0.07%)</title><rect x="582.0" y="1155.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="585.0" y="1166.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (3 samples, 0.07%)</title><rect x="582.0" y="1139.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="585.0" y="1150.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (9 samples, 0.20%)</title><rect x="582.8" y="1187.0" width="2.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="585.8" y="1198.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="583.6" y="1171.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="586.6" y="1182.0"></text>
</g>
<g>
<title>Method::is_ignored_by_security_stack_walk() const (2 samples, 0.04%)</title><rect x="583.8" y="1171.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="586.8" y="1182.0"></text>
</g>
<g>
<title>Klass::is_subclass_of(Klass const*) const (1 samples, 0.02%)</title><rect x="584.1" y="1155.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="587.1" y="1166.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (3 samples, 0.07%)</title><rect x="584.3" y="1171.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="587.3" y="1182.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.02%)</title><rect x="584.3" y="1155.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="587.3" y="1166.0"></text>
</g>
<g>
<title>frame::frame(long*, long*, long*, unsigned char*) (2 samples, 0.04%)</title><rect x="584.6" y="1155.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="587.6" y="1166.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (2 samples, 0.04%)</title><rect x="584.6" y="1139.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="587.6" y="1150.0"></text>
</g>
<g>
<title>CodeHeap::find_blob_unsafe(void*) const (2 samples, 0.04%)</title><rect x="584.6" y="1123.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="587.6" y="1134.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="585.1" y="1203.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="588.1" y="1214.0"></text>
</g>
<g>
<title>Java_java_security_AccessController_doPrivileged__Ljava_security_PrivilegedAction_2 (1 samples, 0.02%)</title><rect x="585.4" y="1203.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="588.4" y="1214.0"></text>
</g>
<g>
<title>PrivilegedElement::initialize(vframeStream*, oopDesc*, PrivilegedElement*, Thread*) (1 samples, 0.02%)</title><rect x="585.6" y="1203.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="588.6" y="1214.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.04%)</title><rect x="585.9" y="1203.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="588.9" y="1214.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.02%)</title><rect x="586.4" y="1203.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="589.4" y="1214.0"></text>
</g>
<g>
<title>os::os_exception_wrapper(void (*)(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*), JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.02%)</title><rect x="586.6" y="1203.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="589.6" y="1214.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (13 samples, 0.28%)</title><rect x="586.9" y="1203.0" width="3.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="589.9" y="1214.0"></text>
</g>
<g>
<title>sun/net/spi/DefaultProxySelector$4.run (12 samples, 0.26%)</title><rect x="587.2" y="1187.0" width="3.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.04%)</title><rect x="587.2" y="1171.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="590.2" y="1182.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="587.2" y="1155.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.2" y="1166.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.04%)</title><rect x="587.2" y="1139.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.04%)</title><rect x="587.2" y="1123.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.2" y="1134.0"></text>
</g>
<g>
<title>sun/net/NetProperties.get (10 samples, 0.22%)</title><rect x="587.7" y="1171.0" width="2.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="590.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/System.getProperty (5 samples, 0.11%)</title><rect x="587.7" y="1155.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="590.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/System.checkKey (1 samples, 0.02%)</title><rect x="587.7" y="1139.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="590.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="587.7" y="1123.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="590.7" y="1134.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (4 samples, 0.09%)</title><rect x="587.9" y="1139.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="590.9" y="1150.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (3 samples, 0.07%)</title><rect x="588.2" y="1123.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="591.2" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (3 samples, 0.07%)</title><rect x="588.2" y="1107.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="591.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.07%)</title><rect x="588.2" y="1091.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="591.2" y="1102.0"></text>
</g>
<g>
<title>java/util/Properties.getProperty (5 samples, 0.11%)</title><rect x="589.0" y="1155.0" width="1.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="592.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap.get (5 samples, 0.11%)</title><rect x="589.0" y="1139.0" width="1.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="592.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.02%)</title><rect x="589.5" y="1123.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="592.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="589.5" y="1107.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="592.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="589.7" y="1123.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="592.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="589.7" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="592.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="590.0" y="1107.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="593.0" y="1118.0"></text>
</g>
<g>
<title>vframeStream::vframeStream(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="590.2" y="1203.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="593.2" y="1214.0"></text>
</g>
<g>
<title>vframeStreamCommon::security_get_caller_frame(int) (1 samples, 0.02%)</title><rect x="590.5" y="1203.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="593.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.&lt;init&gt; (2 samples, 0.04%)</title><rect x="590.7" y="1251.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="593.7" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="591.0" y="1235.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="594.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.isValidName (2 samples, 0.04%)</title><rect x="591.3" y="1251.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="594.3" y="1262.0"></text>
</g>
<g>
<title>java/util/AbstractList$RandomAccessSpliterator.characteristics (2 samples, 0.04%)</title><rect x="591.3" y="1235.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.method (2 samples, 0.04%)</title><rect x="591.8" y="1267.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="594.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestImpl.&lt;init&gt; (2 samples, 0.04%)</title><rect x="591.8" y="1251.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="594.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.&lt;init&gt; (26 samples, 0.57%)</title><rect x="592.3" y="1267.0" width="6.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="595.3" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Exchange.&lt;init&gt; (1 samples, 0.02%)</title><rect x="592.8" y="1251.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="595.8" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="592.8" y="1235.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.8" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.getDebugLogger (1 samples, 0.02%)</title><rect x="592.8" y="1219.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="595.8" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.createHttpLogger (1 samples, 0.02%)</title><rect x="592.8" y="1203.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="595.8" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.levelEnabledFor (1 samples, 0.02%)</title><rect x="592.8" y="1187.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="595.8" y="1198.0"></text>
</g>
<g>
<title>sun/util/logging/internal/LoggingProviderImpl$JULWrapper.isLoggable (1 samples, 0.02%)</title><rect x="592.8" y="1171.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="595.8" y="1182.0"></text>
</g>
<g>
<title>java/util/logging/Logger.isLoggable (1 samples, 0.02%)</title><rect x="592.8" y="1155.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="595.8" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (2 samples, 0.04%)</title><rect x="593.1" y="1251.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="596.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.filterChain (21 samples, 0.46%)</title><rect x="593.6" y="1251.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.6" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/FilterFactory.getFilterChain (21 samples, 0.46%)</title><rect x="593.6" y="1235.0" width="5.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="596.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor (3 samples, 0.07%)</title><rect x="594.3" y="1219.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="597.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/Class.getConstructor0 (1 samples, 0.02%)</title><rect x="594.3" y="1203.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="597.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.getExecutableSharedParameterTypes (1 samples, 0.02%)</title><rect x="594.3" y="1187.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="597.3" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.copyConstructor (2 samples, 0.04%)</title><rect x="594.6" y="1203.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="597.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/reflect/ReflectAccess.copyConstructor (1 samples, 0.02%)</title><rect x="594.6" y="1187.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="597.6" y="1198.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.copy (1 samples, 0.02%)</title><rect x="594.6" y="1171.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="597.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/reflect/ReflectionFactory.langReflectAccess (1 samples, 0.02%)</title><rect x="594.9" y="1187.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="597.9" y="1198.0"></text>
</g>
<g>
<title>java/lang/reflect/Constructor.newInstance (11 samples, 0.24%)</title><rect x="595.1" y="1219.0" width="2.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.1" y="1230.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.checkAccess (7 samples, 0.15%)</title><rect x="595.1" y="1203.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="598.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.verifyAccess (7 samples, 0.15%)</title><rect x="595.1" y="1187.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="598.1" y="1198.0"></text>
</g>
<g>
<title>java/lang/reflect/AccessibleObject.slowVerifyAccess (7 samples, 0.15%)</title><rect x="595.1" y="1171.0" width="1.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="598.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyMemberAccess (7 samples, 0.15%)</title><rect x="595.1" y="1155.0" width="1.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="598.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.isSameClassPackage (1 samples, 0.02%)</title><rect x="596.4" y="1139.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="599.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/Class.getPackageName (1 samples, 0.02%)</title><rect x="596.4" y="1123.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="599.4" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/Reflection.verifyModuleAccess (1 samples, 0.02%)</title><rect x="596.7" y="1139.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="599.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/Class.getModule (1 samples, 0.02%)</title><rect x="596.7" y="1123.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="599.7" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor7.newInstance (1 samples, 0.02%)</title><rect x="596.9" y="1203.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="599.9" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/reflect/GeneratedConstructorAccessor8.newInstance (1 samples, 0.02%)</title><rect x="597.2" y="1203.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="600.2" y="1214.0"></text>
</g>
<g>
<title>vtable stub (2 samples, 0.04%)</title><rect x="597.4" y="1203.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="600.4" y="1214.0"></text>
</g>
<g>
<title>java/util/AbstractSequentialList.iterator (2 samples, 0.04%)</title><rect x="597.9" y="1219.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="600.9" y="1230.0"></text>
</g>
<g>
<title>java/util/AbstractList.listIterator (2 samples, 0.04%)</title><rect x="597.9" y="1203.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.9" y="1214.0"></text>
</g>
<g>
<title>java/util/LinkedList.listIterator (2 samples, 0.04%)</title><rect x="597.9" y="1187.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="600.9" y="1198.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.&lt;init&gt; (2 samples, 0.04%)</title><rect x="597.9" y="1171.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="600.9" y="1182.0"></text>
</g>
<g>
<title>java/util/LinkedList.node (2 samples, 0.04%)</title><rect x="597.9" y="1155.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="600.9" y="1166.0"></text>
</g>
<g>
<title>java/util/LinkedList.add (2 samples, 0.04%)</title><rect x="598.5" y="1219.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="601.5" y="1230.0"></text>
</g>
<g>
<title>java/util/LinkedList.linkLast (2 samples, 0.04%)</title><rect x="598.5" y="1203.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="601.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync (22 samples, 0.48%)</title><rect x="599.0" y="1267.0" width="5.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="602.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeAsync (17 samples, 0.37%)</title><rect x="599.0" y="1251.0" width="4.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="602.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncSupply.&lt;init&gt; (2 samples, 0.04%)</title><rect x="599.0" y="1235.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="602.0" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (1 samples, 0.02%)</title><rect x="599.2" y="1219.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="602.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (15 samples, 0.33%)</title><rect x="599.5" y="1235.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="602.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (13 samples, 0.28%)</title><rect x="600.0" y="1219.0" width="3.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="600.0" y="1203.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="603.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (6 samples, 0.13%)</title><rect x="600.3" y="1203.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="603.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.13%)</title><rect x="600.3" y="1187.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="603.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.13%)</title><rect x="600.3" y="1171.0" width="1.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="603.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (6 samples, 0.13%)</title><rect x="600.3" y="1155.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (6 samples, 0.13%)</title><rect x="600.3" y="1139.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="603.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (6 samples, 0.13%)</title><rect x="600.3" y="1123.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="603.3" y="1134.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.02%)</title><rect x="600.3" y="1107.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="603.3" y="1118.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="600.5" y="1107.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="603.5" y="1118.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="600.5" y="1091.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="603.5" y="1102.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="600.8" y="1107.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="603.8" y="1118.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.07%)</title><rect x="601.0" y="1107.0" width="0.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="604.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="601.0" y="1091.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="604.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="601.0" y="1075.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="604.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="601.0" y="1059.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="604.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="601.0" y="1043.0" width="0.8" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="604.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="601.0" y="1027.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="604.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="601.3" y="1011.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="604.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="601.5" y="995.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="604.5" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="601.5" y="979.0" width="0.3" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="604.5" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.02%)</title><rect x="601.8" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="604.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.getAndIncrement (1 samples, 0.02%)</title><rect x="602.1" y="1203.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="605.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="602.3" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="602.3" y="1187.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="605.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.02%)</title><rect x="602.3" y="1171.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="605.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (1 samples, 0.02%)</title><rect x="602.3" y="1155.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="602.6" y="1203.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="605.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="602.6" y="1187.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.04%)</title><rect x="602.6" y="1171.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="605.6" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.04%)</title><rect x="602.6" y="1155.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="605.6" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="602.8" y="1139.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="605.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="602.8" y="1123.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="605.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="602.8" y="1107.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="605.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="603.1" y="1203.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.1" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="603.1" y="1187.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.1" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="603.1" y="1171.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="606.1" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/MultiExchange.responseAsync0 (5 samples, 0.11%)</title><rect x="603.3" y="1251.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.thenCompose (5 samples, 0.11%)</title><rect x="603.3" y="1235.0" width="1.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="606.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniComposeStage (5 samples, 0.11%)</title><rect x="603.3" y="1219.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="606.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompose.&lt;init&gt; (3 samples, 0.07%)</title><rect x="603.6" y="1203.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="606.6" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (3 samples, 0.07%)</title><rect x="603.6" y="1187.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="606.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="604.4" y="1203.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="607.4" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/MinimalFuture.newIncompleteFuture (1 samples, 0.02%)</title><rect x="604.4" y="1187.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="607.4" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.DELETE (2 samples, 0.04%)</title><rect x="604.6" y="1331.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="607.6" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.PUT (1 samples, 0.02%)</title><rect x="605.1" y="1331.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="608.1" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.method0 (1 samples, 0.02%)</title><rect x="605.1" y="1315.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="608.1" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.build (20 samples, 0.44%)</title><rect x="605.4" y="1331.0" width="5.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="608.4" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ImmutableHttpRequest.&lt;init&gt; (20 samples, 0.44%)</title><rect x="605.4" y="1315.0" width="5.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.4" y="1326.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.of (19 samples, 0.41%)</title><rect x="605.7" y="1299.0" width="4.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="608.7" y="1310.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.headersOf (19 samples, 0.41%)</title><rect x="605.7" y="1283.0" width="4.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="608.7" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="605.7" y="1267.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="608.7" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="605.7" y="1251.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="608.7" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.get$Lambda (1 samples, 0.02%)</title><rect x="605.7" y="1235.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="608.7" y="1246.0"></text>
</g>
<g>
<title>java/util/AbstractMap.isEmpty (2 samples, 0.04%)</title><rect x="605.9" y="1267.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="608.9" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.size (2 samples, 0.04%)</title><rect x="605.9" y="1251.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="608.9" y="1262.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="605.9" y="1235.0" width="0.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="608.9" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (1 samples, 0.02%)</title><rect x="606.2" y="1235.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="609.2" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.&lt;init&gt; (3 samples, 0.07%)</title><rect x="606.4" y="1267.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="609.4" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.forEach (13 samples, 0.28%)</title><rect x="607.2" y="1267.0" width="3.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="610.2" y="1278.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$116/1701768838.accept (11 samples, 0.24%)</title><rect x="607.2" y="1251.0" width="2.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.2" y="1262.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (11 samples, 0.24%)</title><rect x="607.2" y="1235.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.2" y="1246.0"></text>
</g>
<g>
<title>java/lang/Iterable.forEach (2 samples, 0.04%)</title><rect x="607.2" y="1219.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.2" y="1230.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (2 samples, 0.04%)</title><rect x="607.2" y="1203.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="610.2" y="1214.0"></text>
</g>
<g>
<title>java/lang/String.trim (5 samples, 0.11%)</title><rect x="607.7" y="1219.0" width="1.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="610.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.trim (4 samples, 0.09%)</title><rect x="608.0" y="1203.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="611.0" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="608.0" y="1187.0" width="0.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="608.0" y="1171.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="611.0" y="1182.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="608.2" y="1155.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="611.2" y="1166.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="608.5" y="1171.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.5" y="1182.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="608.7" y="1187.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="611.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="609.0" y="1219.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.0" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="609.0" y="1203.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="612.0" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.get$Lambda (1 samples, 0.02%)</title><rect x="609.0" y="1187.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="612.0" y="1198.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.&lt;init&gt; (1 samples, 0.02%)</title><rect x="609.0" y="1171.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="612.0" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (3 samples, 0.07%)</title><rect x="609.3" y="1219.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="612.3" y="1230.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders$$Lambda$117/168396211.accept (2 samples, 0.04%)</title><rect x="609.5" y="1203.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.5" y="1214.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$0 (2 samples, 0.04%)</title><rect x="609.5" y="1187.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="612.5" y="1198.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="609.5" y="1171.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="612.5" y="1182.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.02%)</title><rect x="609.5" y="1155.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="612.5" y="1166.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="609.5" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="612.5" y="1150.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.02%)</title><rect x="609.5" y="1123.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.5" y="1134.0"></text>
</g>
<g>
<title>jint_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="609.5" y="1107.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="612.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1473611564.test (1 samples, 0.02%)</title><rect x="609.8" y="1171.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (1 samples, 0.02%)</title><rect x="609.8" y="1155.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="612.8" y="1166.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (1 samples, 0.02%)</title><rect x="609.8" y="1139.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.8" y="1150.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (1 samples, 0.02%)</title><rect x="609.8" y="1123.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="612.8" y="1134.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (1 samples, 0.02%)</title><rect x="609.8" y="1107.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="612.8" y="1118.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (1 samples, 0.02%)</title><rect x="609.8" y="1091.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.8" y="1102.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (1 samples, 0.02%)</title><rect x="609.8" y="1075.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="612.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (1 samples, 0.02%)</title><rect x="609.8" y="1059.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="612.8" y="1070.0"></text>
</g>
<g>
<title>java/net/http/HttpHeaders.lambda$headersOf$1 (1 samples, 0.02%)</title><rect x="610.0" y="1251.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.0" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (1 samples, 0.02%)</title><rect x="610.3" y="1251.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.3" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (7 samples, 0.15%)</title><rect x="610.5" y="1331.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.5" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.setHeader (7 samples, 0.15%)</title><rect x="610.5" y="1315.0" width="1.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="613.5" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpRequestBuilderImpl.checkNameAndValue (3 samples, 0.07%)</title><rect x="610.5" y="1299.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="613.5" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils$$Lambda$63/1473611564.test (3 samples, 0.07%)</title><rect x="610.5" y="1283.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="613.5" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.lambda$static$1 (3 samples, 0.07%)</title><rect x="610.5" y="1267.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.5" y="1278.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.contains (3 samples, 0.07%)</title><rect x="610.5" y="1251.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="613.5" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeSet.contains (3 samples, 0.07%)</title><rect x="610.5" y="1235.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="613.5" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.containsKey (3 samples, 0.07%)</title><rect x="610.5" y="1219.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.5" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntry (3 samples, 0.07%)</title><rect x="610.5" y="1203.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="613.5" y="1214.0"></text>
</g>
<g>
<title>java/util/TreeMap.getEntryUsingComparator (3 samples, 0.07%)</title><rect x="610.5" y="1187.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="610.8" y="1171.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="613.8" y="1182.0"></text>
</g>
<g>
<title>java/lang/String$CaseInsensitiveComparator.compare (2 samples, 0.04%)</title><rect x="610.8" y="1155.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="613.8" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.compareToCI (2 samples, 0.04%)</title><rect x="610.8" y="1139.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="613.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="610.8" y="1123.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="613.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="610.8" y="1107.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.04%)</title><rect x="610.8" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="613.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.02%)</title><rect x="611.0" y="1075.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="614.0" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/HttpHeadersBuilder.setHeader (4 samples, 0.09%)</title><rect x="611.3" y="1299.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="614.3" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="611.3" y="1283.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="614.3" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="611.3" y="1267.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="614.3" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap.put (1 samples, 0.02%)</title><rect x="612.1" y="1283.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="615.1" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.getFirstResponses (19 samples, 0.41%)</title><rect x="612.3" y="1331.0" width="4.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/559451992.linkToTargetMethod (6 samples, 0.13%)</title><rect x="612.3" y="1315.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="615.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/650122648.invokeStatic (6 samples, 0.13%)</title><rect x="612.3" y="1299.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="615.3" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils$$Lambda$139/1298738395.get$Lambda (6 samples, 0.13%)</title><rect x="612.3" y="1283.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.3" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils$$Lambda$139/1298738395.&lt;init&gt; (5 samples, 0.11%)</title><rect x="612.6" y="1267.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="615.6" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.02%)</title><rect x="613.9" y="1315.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.9" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="613.9" y="1299.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="616.9" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.&lt;init&gt; (1 samples, 0.02%)</title><rect x="614.1" y="1315.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="617.1" y="1326.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="614.1" y="1299.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="617.1" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.orTimeout (8 samples, 0.17%)</title><rect x="614.4" y="1315.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="617.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Delayer.delay (7 samples, 0.15%)</title><rect x="614.6" y="1299.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="617.6" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.schedule (7 samples, 0.15%)</title><rect x="614.6" y="1283.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="617.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.&lt;init&gt; (1 samples, 0.02%)</title><rect x="614.6" y="1267.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="617.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.&lt;init&gt; (1 samples, 0.02%)</title><rect x="614.6" y="1251.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="617.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.delayedExecute (4 samples, 0.09%)</title><rect x="614.9" y="1267.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="617.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (1 samples, 0.02%)</title><rect x="615.2" y="1251.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="618.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.add (1 samples, 0.02%)</title><rect x="615.2" y="1235.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="618.2" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (1 samples, 0.02%)</title><rect x="615.2" y="1219.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="618.2" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftUp (1 samples, 0.02%)</title><rect x="615.2" y="1203.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="618.2" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.setIndex (1 samples, 0.02%)</title><rect x="615.2" y="1187.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="618.2" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.canRunInCurrentRunState (1 samples, 0.02%)</title><rect x="615.4" y="1251.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="618.4" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.isShutdown (1 samples, 0.02%)</title><rect x="615.4" y="1235.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="618.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.offer (1 samples, 0.02%)</title><rect x="615.4" y="1219.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="618.4" y="1230.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="615.7" y="1251.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="618.7" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="615.7" y="1235.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="618.7" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="615.7" y="1219.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="618.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="615.7" y="1203.0" width="0.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="618.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="615.7" y="1187.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="618.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="615.7" y="1171.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="618.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="615.7" y="1155.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="618.7" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="615.7" y="1139.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="618.7" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="615.7" y="1123.0" width="0.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="618.7" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor.triggerTime (2 samples, 0.04%)</title><rect x="615.9" y="1267.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="618.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.whenCompleteAsync (1 samples, 0.02%)</title><rect x="616.4" y="1315.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="619.4" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenCompleteStage (1 samples, 0.02%)</title><rect x="616.4" y="1299.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="619.4" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.&lt;init&gt; (1 samples, 0.02%)</title><rect x="616.4" y="1283.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="619.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.&lt;init&gt; (1 samples, 0.02%)</title><rect x="616.4" y="1267.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="619.4" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.&lt;init&gt; (2 samples, 0.04%)</title><rect x="616.7" y="1315.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.7" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.setArray (2 samples, 0.04%)</title><rect x="616.7" y="1299.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="619.7" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.toNanos (1 samples, 0.02%)</title><rect x="617.0" y="1283.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="620.0" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/MetaRequest.&lt;init&gt; (37 samples, 0.81%)</title><rect x="617.2" y="1363.0" width="9.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="620.2" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.11%)</title><rect x="618.8" y="1347.0" width="1.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="621.8" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="619.0" y="1331.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="622.0" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="619.0" y="1315.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="622.0" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="619.0" y="1299.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="622.0" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="619.0" y="1283.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="622.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="619.0" y="1267.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="622.0" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="619.0" y="1251.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="622.0" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="619.0" y="1235.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="622.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="619.3" y="1331.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="622.3" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="619.5" y="1331.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="622.5" y="1342.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.04%)</title><rect x="619.5" y="1315.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="622.5" y="1326.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (11 samples, 0.24%)</title><rect x="620.0" y="1347.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.0" y="1358.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (11 samples, 0.24%)</title><rect x="620.0" y="1331.0" width="2.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="623.0" y="1342.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="621.3" y="1315.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="624.3" y="1326.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="621.3" y="1299.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="624.3" y="1310.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="621.3" y="1283.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="624.3" y="1294.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="621.3" y="1267.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="624.3" y="1278.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="621.3" y="1251.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="624.3" y="1262.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="621.6" y="1267.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="624.6" y="1278.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="621.8" y="1315.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="624.8" y="1326.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.07%)</title><rect x="622.1" y="1315.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="625.1" y="1326.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="622.9" y="1347.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="625.9" y="1358.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="622.9" y="1331.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="625.9" y="1342.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="622.9" y="1315.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="625.9" y="1326.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="623.1" y="1299.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.1" y="1310.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="623.1" y="1283.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="626.1" y="1294.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.28%)</title><rect x="623.4" y="1347.0" width="3.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="626.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (8 samples, 0.17%)</title><rect x="623.4" y="1331.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="626.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (5 samples, 0.11%)</title><rect x="624.2" y="1315.0" width="1.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="627.2" y="1326.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="625.2" y="1299.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="628.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.04%)</title><rect x="625.4" y="1331.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="628.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="625.7" y="1315.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="628.7" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="626.0" y="1331.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="629.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.02%)</title><rect x="626.0" y="1315.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="629.0" y="1326.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.04%)</title><rect x="626.2" y="1331.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="629.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="626.2" y="1315.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="629.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="626.2" y="1299.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="626.2" y="1283.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="629.2" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinWorkerThread.run (948 samples, 20.64%)</title><rect x="626.7" y="1459.0" width="243.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="629.7" y="1470.0">java/util/concurrent/ForkJoinWor..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.runWorker (948 samples, 20.64%)</title><rect x="626.7" y="1443.0" width="243.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="629.7" y="1454.0">java/util/concurrent/ForkJoinPoo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.scan (810 samples, 17.64%)</title><rect x="629.6" y="1427.0" width="208.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="632.6" y="1438.0">java/util/concurrent/ForkJo..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (1 samples, 0.02%)</title><rect x="632.1" y="1411.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="635.1" y="1422.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (1 samples, 0.02%)</title><rect x="632.1" y="1395.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="635.1" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.topLevelExec (795 samples, 17.31%)</title><rect x="632.4" y="1411.0" width="204.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="635.4" y="1422.0">java/util/concurrent/ForkJo..</text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.nextLocalTask (4 samples, 0.09%)</title><rect x="632.4" y="1395.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="635.4" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_L (1 samples, 0.02%)</title><rect x="633.1" y="1379.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.1" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAndSet (1 samples, 0.02%)</title><rect x="633.1" y="1363.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="636.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.runtimeTypeCheck (1 samples, 0.02%)</title><rect x="633.1" y="1347.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="636.1" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.poll (2 samples, 0.04%)</title><rect x="633.4" y="1395.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="636.4" y="1406.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LI_L (1 samples, 0.02%)</title><rect x="633.7" y="1379.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="636.7" y="1390.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.getAcquire (1 samples, 0.02%)</title><rect x="633.7" y="1363.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="636.7" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.doExec (789 samples, 17.18%)</title><rect x="633.9" y="1395.0" width="202.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="636.9" y="1406.0">java/util/concurrent/ForkJ..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.exec (308 samples, 6.71%)</title><rect x="634.9" y="1379.0" width="79.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="637.9" y="1390.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$AsyncRun.run (307 samples, 6.69%)</title><rect x="635.2" y="1363.0" width="78.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="638.2" y="1374.0">java/util..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (7 samples, 0.15%)</title><rect x="635.5" y="1347.0" width="1.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="638.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="636.7" y="1331.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="639.7" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/VarForm.getMemberName (1 samples, 0.02%)</title><rect x="636.7" y="1315.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="639.7" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (1 samples, 0.02%)</title><rect x="637.0" y="1331.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.0" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$276/573076665.run (299 samples, 6.51%)</title><rect x="637.3" y="1347.0" width="76.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="640.3" y="1358.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$executeIfProxied$10 (298 samples, 6.49%)</title><rect x="637.5" y="1331.0" width="76.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="640.5" y="1342.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="638.0" y="1315.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="641.0" y="1326.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="638.3" y="1315.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.3" y="1326.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.09%)</title><rect x="638.3" y="1299.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="641.3" y="1310.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.09%)</title><rect x="638.3" y="1283.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="641.3" y="1294.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="638.5" y="1267.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="641.5" y="1278.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="638.8" y="1251.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="641.8" y="1262.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="638.8" y="1235.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.8" y="1246.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.04%)</title><rect x="638.8" y="1219.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="641.8" y="1230.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (2 samples, 0.04%)</title><rect x="638.8" y="1203.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="641.8" y="1214.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.sendResponse (1 samples, 0.02%)</title><rect x="639.1" y="1187.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="642.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.02%)</title><rect x="639.3" y="1315.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.3" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/LSMDao.remove (71 samples, 1.55%)</title><rect x="639.6" y="1315.0" width="18.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="642.6" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.remove (70 samples, 1.52%)</title><rect x="639.8" y="1299.0" width="18.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="642.8" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (1 samples, 0.02%)</title><rect x="640.6" y="1283.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="643.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock (6 samples, 0.13%)</title><rect x="640.9" y="1283.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="643.9" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireShared (6 samples, 0.13%)</title><rect x="640.9" y="1267.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="643.9" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.tryAcquireShared (6 samples, 0.13%)</title><rect x="640.9" y="1251.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="643.9" y="1262.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (3 samples, 0.07%)</title><rect x="641.4" y="1235.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="644.4" y="1246.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="641.6" y="1219.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="644.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntryAfterMiss (1 samples, 0.02%)</title><rect x="641.6" y="1203.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="644.6" y="1214.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.setInitialValue (1 samples, 0.02%)</title><rect x="641.9" y="1219.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="644.9" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantReadWriteLock$Sync.fullTryAcquireShared (1 samples, 0.02%)</title><rect x="642.1" y="1235.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="645.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (1 samples, 0.02%)</title><rect x="642.1" y="1219.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="645.1" y="1230.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.remove (59 samples, 1.28%)</title><rect x="642.4" y="1283.0" width="15.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="645.4" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.put (56 samples, 1.22%)</title><rect x="642.7" y="1267.0" width="14.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="645.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.doPut (56 samples, 1.22%)</title><rect x="642.7" y="1251.0" width="14.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="645.7" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentSkipListMap.cpr (50 samples, 1.09%)</title><rect x="644.2" y="1235.0" width="12.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="647.2" y="1246.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (3 samples, 0.07%)</title><rect x="645.5" y="1219.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="648.5" y="1230.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (42 samples, 0.91%)</title><rect x="646.3" y="1219.0" width="10.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="649.3" y="1230.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.compareTo (41 samples, 0.89%)</title><rect x="646.5" y="1203.0" width="10.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="649.5" y="1214.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (9 samples, 0.20%)</title><rect x="646.8" y="1187.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="649.8" y="1198.0"></text>
</g>
<g>
<title>java/nio/Buffer.remaining (15 samples, 0.33%)</title><rect x="649.1" y="1187.0" width="3.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="652.1" y="1198.0"></text>
</g>
<g>
<title>java/nio/BufferMismatch.mismatch (10 samples, 0.22%)</title><rect x="652.9" y="1187.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.9" y="1198.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (6 samples, 0.13%)</title><rect x="655.5" y="1187.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.5" y="1198.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkIndex (6 samples, 0.13%)</title><rect x="655.5" y="1171.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="658.5" y="1182.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Row.getValue (1 samples, 0.02%)</title><rect x="657.0" y="1267.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.0" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/Value.getData (1 samples, 0.02%)</title><rect x="657.3" y="1267.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.3" y="1278.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="657.3" y="1251.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="660.3" y="1262.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.02%)</title><rect x="657.3" y="1235.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="660.3" y="1246.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="657.3" y="1219.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="660.3" y="1230.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="657.3" y="1203.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="660.3" y="1214.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="657.3" y="1187.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="660.3" y="1198.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="657.3" y="1171.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="660.3" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="657.3" y="1155.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.3" y="1166.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="657.3" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.3" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTablePool.setToFlush (1 samples, 0.02%)</title><rect x="657.6" y="1283.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="660.6" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/alex/MemTable.sizeInBytes (1 samples, 0.02%)</title><rect x="657.6" y="1267.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="660.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.get (1 samples, 0.02%)</title><rect x="657.6" y="1251.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="660.6" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.sendResponse (219 samples, 4.77%)</title><rect x="657.8" y="1315.0" width="56.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="660.8" y="1326.0">ru/mai..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (219 samples, 4.77%)</title><rect x="657.8" y="1299.0" width="56.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="660.8" y="1310.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="657.8" y="1283.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="660.8" y="1294.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (209 samples, 4.55%)</title><rect x="658.1" y="1283.0" width="53.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="661.1" y="1294.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.22%)</title><rect x="658.1" y="1267.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="661.1" y="1278.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="659.6" y="1251.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="662.6" y="1262.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.07%)</title><rect x="659.9" y="1251.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.9" y="1262.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.07%)</title><rect x="659.9" y="1235.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="662.9" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.07%)</title><rect x="659.9" y="1219.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="662.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="660.4" y="1203.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="663.4" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (199 samples, 4.33%)</title><rect x="660.6" y="1267.0" width="51.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="663.6" y="1278.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (198 samples, 4.31%)</title><rect x="660.9" y="1251.0" width="50.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="663.9" y="1262.0">one/n..</text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="661.7" y="1235.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="664.7" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (193 samples, 4.20%)</title><rect x="661.9" y="1235.0" width="49.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="664.9" y="1246.0">one/n..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="661.9" y="1219.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="664.9" y="1230.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.02%)</title><rect x="661.9" y="1203.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="664.9" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (192 samples, 4.18%)</title><rect x="662.2" y="1219.0" width="49.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="665.2" y="1230.0">one/n..</text>
</g>
<g>
<title>[unknown] (11 samples, 0.24%)</title><rect x="663.2" y="1203.0" width="2.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="666.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.24%)</title><rect x="663.2" y="1187.0" width="2.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="666.2" y="1198.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.11%)</title><rect x="663.2" y="1171.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="666.2" y="1182.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="663.5" y="1155.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="666.5" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="664.0" y="1155.0" width="0.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="667.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="664.0" y="1139.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="667.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="664.0" y="1123.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="667.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="664.0" y="1107.0" width="0.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="667.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="664.0" y="1091.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="667.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="664.0" y="1075.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="667.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="664.0" y="1059.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="667.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="664.0" y="1043.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="667.0" y="1054.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="664.2" y="1155.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="667.2" y="1166.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.02%)</title><rect x="664.2" y="1139.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="667.2" y="1150.0"></text>
</g>
<g>
<title>__send (5 samples, 0.11%)</title><rect x="664.5" y="1171.0" width="1.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="667.5" y="1182.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="665.8" y="1171.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="668.8" y="1182.0"></text>
</g>
<g>
<title>__send (177 samples, 3.85%)</title><rect x="666.0" y="1203.0" width="45.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="669.0" y="1214.0">__send</text>
</g>
<g>
<title>[unknown] (176 samples, 3.83%)</title><rect x="666.3" y="1187.0" width="45.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="669.3" y="1198.0">[unk..</text>
</g>
<g>
<title>[unknown] (176 samples, 3.83%)</title><rect x="666.3" y="1171.0" width="45.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="669.3" y="1182.0">[unk..</text>
</g>
<g>
<title>[unknown] (173 samples, 3.77%)</title><rect x="667.1" y="1155.0" width="44.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="670.1" y="1166.0">[unk..</text>
</g>
<g>
<title>[unknown] (173 samples, 3.77%)</title><rect x="667.1" y="1139.0" width="44.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="670.1" y="1150.0">[unk..</text>
</g>
<g>
<title>[unknown] (172 samples, 3.75%)</title><rect x="667.3" y="1123.0" width="44.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="670.3" y="1134.0">[unk..</text>
</g>
<g>
<title>[unknown] (169 samples, 3.68%)</title><rect x="668.1" y="1107.0" width="43.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="671.1" y="1118.0">[unk..</text>
</g>
<g>
<title>[unknown] (164 samples, 3.57%)</title><rect x="669.4" y="1091.0" width="42.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="672.4" y="1102.0">[unk..</text>
</g>
<g>
<title>[unknown] (164 samples, 3.57%)</title><rect x="669.4" y="1075.0" width="42.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="672.4" y="1086.0">[unk..</text>
</g>
<g>
<title>[unknown] (155 samples, 3.38%)</title><rect x="671.7" y="1059.0" width="39.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="674.7" y="1070.0">[un..</text>
</g>
<g>
<title>[unknown] (151 samples, 3.29%)</title><rect x="672.7" y="1043.0" width="38.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="675.7" y="1054.0">[un..</text>
</g>
<g>
<title>[unknown] (144 samples, 3.14%)</title><rect x="674.5" y="1027.0" width="37.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="677.5" y="1038.0">[un..</text>
</g>
<g>
<title>[unknown] (138 samples, 3.01%)</title><rect x="676.1" y="1011.0" width="35.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="679.1" y="1022.0">[un..</text>
</g>
<g>
<title>[unknown] (132 samples, 2.87%)</title><rect x="677.6" y="995.0" width="33.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="680.6" y="1006.0">[u..</text>
</g>
<g>
<title>[unknown] (127 samples, 2.77%)</title><rect x="678.9" y="979.0" width="32.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="681.9" y="990.0">[u..</text>
</g>
<g>
<title>[unknown] (121 samples, 2.64%)</title><rect x="680.4" y="963.0" width="31.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="683.4" y="974.0">[u..</text>
</g>
<g>
<title>[unknown] (116 samples, 2.53%)</title><rect x="681.7" y="947.0" width="29.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="684.7" y="958.0">[u..</text>
</g>
<g>
<title>[unknown] (113 samples, 2.46%)</title><rect x="682.5" y="931.0" width="29.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="685.5" y="942.0">[u..</text>
</g>
<g>
<title>[unknown] (109 samples, 2.37%)</title><rect x="683.5" y="915.0" width="28.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="686.5" y="926.0">[u..</text>
</g>
<g>
<title>[unknown] (107 samples, 2.33%)</title><rect x="684.0" y="899.0" width="27.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="687.0" y="910.0">[..</text>
</g>
<g>
<title>[unknown] (103 samples, 2.24%)</title><rect x="685.1" y="883.0" width="26.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="688.1" y="894.0">[..</text>
</g>
<g>
<title>[unknown] (86 samples, 1.87%)</title><rect x="689.4" y="867.0" width="22.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="692.4" y="878.0">[..</text>
</g>
<g>
<title>[unknown] (83 samples, 1.81%)</title><rect x="690.2" y="851.0" width="21.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="693.2" y="862.0">[..</text>
</g>
<g>
<title>[unknown] (75 samples, 1.63%)</title><rect x="692.3" y="835.0" width="19.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="695.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (69 samples, 1.50%)</title><rect x="693.8" y="819.0" width="17.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="696.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (68 samples, 1.48%)</title><rect x="694.1" y="803.0" width="17.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="697.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (66 samples, 1.44%)</title><rect x="694.6" y="787.0" width="16.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="697.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (63 samples, 1.37%)</title><rect x="695.3" y="771.0" width="16.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="698.3" y="782.0"></text>
</g>
<g>
<title>[unknown] (55 samples, 1.20%)</title><rect x="697.4" y="755.0" width="14.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="700.4" y="766.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 1.13%)</title><rect x="698.2" y="739.0" width="13.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="701.2" y="750.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 1.09%)</title><rect x="698.7" y="723.0" width="12.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="701.7" y="734.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 1.05%)</title><rect x="699.2" y="707.0" width="12.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="702.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.02%)</title><rect x="699.4" y="691.0" width="12.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="702.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.91%)</title><rect x="700.7" y="675.0" width="10.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="703.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.81%)</title><rect x="702.0" y="659.0" width="9.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="705.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.78%)</title><rect x="702.3" y="643.0" width="9.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="705.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.68%)</title><rect x="703.6" y="627.0" width="7.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="706.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.54%)</title><rect x="705.1" y="611.0" width="6.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="708.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.46%)</title><rect x="706.1" y="595.0" width="5.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="709.1" y="606.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.44%)</title><rect x="706.4" y="579.0" width="5.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="709.4" y="590.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="711.0" y="563.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="714.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="711.3" y="547.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="714.3" y="558.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="711.5" y="1235.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="714.5" y="1246.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="711.5" y="1219.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="714.5" y="1230.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="711.5" y="1203.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="714.5" y="1214.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.17%)</title><rect x="711.8" y="1283.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.8" y="1294.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.09%)</title><rect x="712.8" y="1267.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="715.8" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="712.8" y="1251.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="715.8" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="713.1" y="1251.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="716.1" y="1262.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.07%)</title><rect x="713.1" y="1235.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="716.1" y="1246.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="713.3" y="1219.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="716.3" y="1230.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="713.6" y="1219.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="716.6" y="1230.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.02%)</title><rect x="713.8" y="1283.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="716.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.02%)</title><rect x="713.8" y="1267.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="716.8" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Completion.exec (474 samples, 10.32%)</title><rect x="714.1" y="1379.0" width="121.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="717.1" y="1390.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (471 samples, 10.26%)</title><rect x="714.9" y="1363.0" width="121.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="717.9" y="1374.0">java/util/concu..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postFire (52 samples, 1.13%)</title><rect x="715.6" y="1347.0" width="13.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="718.6" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (52 samples, 1.13%)</title><rect x="715.6" y="1331.0" width="13.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="718.6" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniExceptionally.tryFire (3 samples, 0.07%)</title><rect x="715.9" y="1315.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="718.9" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (47 samples, 1.02%)</title><rect x="716.7" y="1315.0" width="12.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="719.7" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (47 samples, 1.02%)</title><rect x="716.7" y="1299.0" width="12.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="719.7" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (13 samples, 0.28%)</title><rect x="716.7" y="1283.0" width="3.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="719.7" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (12 samples, 0.26%)</title><rect x="716.7" y="1267.0" width="3.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="719.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.cancel (11 samples, 0.24%)</title><rect x="716.9" y="1251.0" width="2.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="719.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/FutureTask.cancel (2 samples, 0.04%)</title><rect x="716.9" y="1235.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="719.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.remove (9 samples, 0.20%)</title><rect x="717.4" y="1235.0" width="2.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="720.4" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.remove (9 samples, 0.20%)</title><rect x="717.4" y="1219.0" width="2.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="720.4" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftDown (1 samples, 0.02%)</title><rect x="717.7" y="1203.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="720.7" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.siftUp (2 samples, 0.04%)</title><rect x="717.9" y="1203.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="720.9" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo (2 samples, 0.04%)</title><rect x="717.9" y="1187.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="720.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$ScheduledFutureTask.compareTo (1 samples, 0.02%)</title><rect x="718.2" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="721.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (5 samples, 0.11%)</title><rect x="718.5" y="1203.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="721.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 0.09%)</title><rect x="718.7" y="1187.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="721.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="719.2" y="1171.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="722.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="719.2" y="1155.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="722.2" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="719.2" y="1139.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="722.2" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="719.2" y="1123.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="722.2" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="719.2" y="1107.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="722.2" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="719.2" y="1091.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="722.2" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="719.2" y="1075.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="722.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="719.5" y="1171.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="722.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.tryTerminate (1 samples, 0.02%)</title><rect x="719.7" y="1267.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="722.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (34 samples, 0.74%)</title><rect x="720.0" y="1283.0" width="8.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="723.0" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (30 samples, 0.65%)</title><rect x="720.0" y="1267.0" width="7.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.0" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (30 samples, 0.65%)</title><rect x="720.0" y="1251.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="723.0" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (30 samples, 0.65%)</title><rect x="720.0" y="1235.0" width="7.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LIL_V (1 samples, 0.02%)</title><rect x="720.8" y="1219.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="723.8" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$Array.setRelease (1 samples, 0.02%)</title><rect x="720.8" y="1203.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="723.8" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (26 samples, 0.57%)</title><rect x="721.0" y="1219.0" width="6.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="724.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (25 samples, 0.54%)</title><rect x="721.3" y="1203.0" width="6.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="724.3" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (25 samples, 0.54%)</title><rect x="721.3" y="1187.0" width="6.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="724.3" y="1198.0"></text>
</g>
<g>
<title>Unsafe_Unpark (6 samples, 0.13%)</title><rect x="721.5" y="1171.0" width="1.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="724.5" y="1182.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="721.8" y="1155.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="724.8" y="1166.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="722.1" y="1155.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="725.1" y="1166.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="722.3" y="1155.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="725.3" y="1166.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.04%)</title><rect x="722.6" y="1155.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="725.6" y="1166.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="723.1" y="1171.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="726.1" y="1182.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (17 samples, 0.37%)</title><rect x="723.3" y="1171.0" width="4.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="726.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.35%)</title><rect x="723.6" y="1155.0" width="4.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="726.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.35%)</title><rect x="723.6" y="1139.0" width="4.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="726.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.35%)</title><rect x="723.6" y="1123.0" width="4.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="726.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.35%)</title><rect x="723.6" y="1107.0" width="4.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="726.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.35%)</title><rect x="723.6" y="1091.0" width="4.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="726.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="724.4" y="1075.0" width="3.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="727.4" y="1086.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="724.4" y="1059.0" width="3.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="727.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="724.4" y="1043.0" width="3.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="727.4" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (2 samples, 0.04%)</title><rect x="727.7" y="1267.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="730.7" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (2 samples, 0.04%)</title><rect x="728.2" y="1267.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="731.2" y="1278.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="728.2" y="1251.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="731.2" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$Canceller.accept (1 samples, 0.02%)</title><rect x="728.5" y="1251.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="731.5" y="1262.0"></text>
</g>
<g>
<title>vtable stub (1 samples, 0.02%)</title><rect x="728.7" y="1315.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="731.7" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (416 samples, 9.06%)</title><rect x="729.0" y="1347.0" width="106.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="732.0" y="1358.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (8 samples, 0.17%)</title><rect x="729.8" y="1331.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="732.8" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinTask.compareAndSetForkJoinTaskTag (8 samples, 0.17%)</title><rect x="729.8" y="1315.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="732.8" y="1326.0"></text>
</g>
<g>
<title>itable stub (4 samples, 0.09%)</title><rect x="730.3" y="1299.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="733.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$138/1317987687.accept (2 samples, 0.04%)</title><rect x="731.3" y="1299.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="734.3" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$$Lambda$138/1317987687.accept (1 samples, 0.02%)</title><rect x="731.8" y="1331.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="734.8" y="1342.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$345/1849404456.accept (200 samples, 4.36%)</title><rect x="732.1" y="1331.0" width="51.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="735.1" y="1342.0">ru/ma..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="732.1" y="1315.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="735.1" y="1326.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (1 samples, 0.02%)</title><rect x="732.1" y="1299.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="735.1" y="1310.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) [clone .part.83] (1 samples, 0.02%)</title><rect x="732.1" y="1283.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="735.1" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$delete$8 (198 samples, 4.31%)</title><rect x="732.3" y="1315.0" width="50.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="735.3" y="1326.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.sendResponseIfNecessary (7 samples, 0.15%)</title><rect x="732.9" y="1299.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="735.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/Integer.valueOf (1 samples, 0.02%)</title><rect x="733.4" y="1283.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="736.4" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService$$Lambda$350/2019693715.get (4 samples, 0.09%)</title><rect x="733.6" y="1283.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="736.6" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.lambda$delete$7 (4 samples, 0.09%)</title><rect x="733.6" y="1267.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="736.6" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="734.1" y="1251.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="737.1" y="1262.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.sendResponse (189 samples, 4.12%)</title><rect x="734.7" y="1299.0" width="48.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="737.7" y="1310.0">ru/m..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (189 samples, 4.12%)</title><rect x="734.7" y="1283.0" width="48.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="737.7" y="1294.0">one/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="735.4" y="1267.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="738.4" y="1278.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (176 samples, 3.83%)</title><rect x="735.7" y="1267.0" width="45.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="738.7" y="1278.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.11%)</title><rect x="735.7" y="1251.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="738.7" y="1262.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.04%)</title><rect x="736.5" y="1235.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="739.5" y="1246.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.02%)</title><rect x="736.5" y="1219.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="739.5" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="736.7" y="1219.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="739.7" y="1230.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.02%)</title><rect x="736.7" y="1203.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="739.7" y="1214.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (1 samples, 0.02%)</title><rect x="736.7" y="1187.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.7" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (171 samples, 3.72%)</title><rect x="737.0" y="1251.0" width="43.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="740.0" y="1262.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (171 samples, 3.72%)</title><rect x="737.0" y="1235.0" width="43.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="740.0" y="1246.0">one/..</text>
</g>
<g>
<title>_complete_monitor_locking_Java (1 samples, 0.02%)</title><rect x="737.5" y="1219.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="740.5" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (166 samples, 3.61%)</title><rect x="737.7" y="1219.0" width="42.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="740.7" y="1230.0">one/..</text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (3 samples, 0.07%)</title><rect x="738.0" y="1203.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="741.0" y="1214.0"></text>
</g>
<g>
<title>ExceptionMark::~ExceptionMark() (1 samples, 0.02%)</title><rect x="738.8" y="1203.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="741.8" y="1214.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (4 samples, 0.09%)</title><rect x="739.0" y="1203.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="742.0" y="1214.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.02%)</title><rect x="739.0" y="1187.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="742.0" y="1198.0"></text>
</g>
<g>
<title>ObjectSynchronizer::slow_exit(oopDesc*, BasicLock*, Thread*) (2 samples, 0.04%)</title><rect x="739.3" y="1187.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="742.3" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::exit(bool, Thread*) (2 samples, 0.04%)</title><rect x="739.3" y="1171.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="742.3" y="1182.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="739.8" y="1187.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="742.8" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (157 samples, 3.42%)</title><rect x="740.0" y="1203.0" width="40.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.0" y="1214.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.02%)</title><rect x="740.3" y="1187.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="743.3" y="1198.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="740.6" y="1187.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="743.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="740.6" y="1171.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="743.6" y="1182.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.04%)</title><rect x="740.6" y="1155.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="743.6" y="1166.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="740.8" y="1139.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="743.8" y="1150.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="740.8" y="1123.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="743.8" y="1134.0"></text>
</g>
<g>
<title>__send (1 samples, 0.02%)</title><rect x="741.1" y="1155.0" width="0.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="744.1" y="1166.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="741.3" y="1187.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="744.3" y="1198.0"></text>
</g>
<g>
<title>__send (151 samples, 3.29%)</title><rect x="741.6" y="1187.0" width="38.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="744.6" y="1198.0">__s..</text>
</g>
<g>
<title>[unknown] (151 samples, 3.29%)</title><rect x="741.6" y="1171.0" width="38.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="744.6" y="1182.0">[un..</text>
</g>
<g>
<title>[unknown] (151 samples, 3.29%)</title><rect x="741.6" y="1155.0" width="38.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="744.6" y="1166.0">[un..</text>
</g>
<g>
<title>[unknown] (149 samples, 3.24%)</title><rect x="742.1" y="1139.0" width="38.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="745.1" y="1150.0">[un..</text>
</g>
<g>
<title>[unknown] (149 samples, 3.24%)</title><rect x="742.1" y="1123.0" width="38.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="745.1" y="1134.0">[un..</text>
</g>
<g>
<title>[unknown] (149 samples, 3.24%)</title><rect x="742.1" y="1107.0" width="38.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="745.1" y="1118.0">[un..</text>
</g>
<g>
<title>[unknown] (148 samples, 3.22%)</title><rect x="742.4" y="1091.0" width="38.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="745.4" y="1102.0">[un..</text>
</g>
<g>
<title>[unknown] (145 samples, 3.16%)</title><rect x="743.1" y="1075.0" width="37.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="746.1" y="1086.0">[un..</text>
</g>
<g>
<title>[unknown] (144 samples, 3.14%)</title><rect x="743.4" y="1059.0" width="37.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="746.4" y="1070.0">[un..</text>
</g>
<g>
<title>[unknown] (130 samples, 2.83%)</title><rect x="747.0" y="1043.0" width="33.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="750.0" y="1054.0">[u..</text>
</g>
<g>
<title>[unknown] (126 samples, 2.74%)</title><rect x="748.0" y="1027.0" width="32.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="751.0" y="1038.0">[u..</text>
</g>
<g>
<title>[unknown] (121 samples, 2.64%)</title><rect x="749.3" y="1011.0" width="31.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="752.3" y="1022.0">[u..</text>
</g>
<g>
<title>[unknown] (111 samples, 2.42%)</title><rect x="751.9" y="995.0" width="28.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="754.9" y="1006.0">[u..</text>
</g>
<g>
<title>[unknown] (103 samples, 2.24%)</title><rect x="753.9" y="979.0" width="26.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="756.9" y="990.0">[..</text>
</g>
<g>
<title>[unknown] (100 samples, 2.18%)</title><rect x="754.7" y="963.0" width="25.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="757.7" y="974.0">[..</text>
</g>
<g>
<title>[unknown] (97 samples, 2.11%)</title><rect x="755.5" y="947.0" width="24.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="758.5" y="958.0">[..</text>
</g>
<g>
<title>[unknown] (95 samples, 2.07%)</title><rect x="756.0" y="931.0" width="24.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="759.0" y="942.0">[..</text>
</g>
<g>
<title>[unknown] (92 samples, 2.00%)</title><rect x="756.8" y="915.0" width="23.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="759.8" y="926.0">[..</text>
</g>
<g>
<title>[unknown] (89 samples, 1.94%)</title><rect x="757.5" y="899.0" width="22.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="760.5" y="910.0">[..</text>
</g>
<g>
<title>[unknown] (82 samples, 1.79%)</title><rect x="759.3" y="883.0" width="21.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="762.3" y="894.0">[..</text>
</g>
<g>
<title>[unknown] (80 samples, 1.74%)</title><rect x="759.8" y="867.0" width="20.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="762.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 1.52%)</title><rect x="762.4" y="851.0" width="18.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="765.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (70 samples, 1.52%)</title><rect x="762.4" y="835.0" width="18.0" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="765.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (62 samples, 1.35%)</title><rect x="764.5" y="819.0" width="15.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="767.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 1.31%)</title><rect x="765.0" y="803.0" width="15.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="768.0" y="814.0"></text>
</g>
<g>
<title>[unknown] (60 samples, 1.31%)</title><rect x="765.0" y="787.0" width="15.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="768.0" y="798.0"></text>
</g>
<g>
<title>[unknown] (58 samples, 1.26%)</title><rect x="765.5" y="771.0" width="14.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="768.5" y="782.0"></text>
</g>
<g>
<title>[unknown] (56 samples, 1.22%)</title><rect x="766.0" y="755.0" width="14.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="769.0" y="766.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.15%)</title><rect x="766.8" y="739.0" width="13.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="769.8" y="750.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.11%)</title><rect x="767.3" y="723.0" width="13.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="770.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.11%)</title><rect x="767.3" y="707.0" width="13.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="770.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.11%)</title><rect x="767.3" y="691.0" width="13.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="770.3" y="702.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.11%)</title><rect x="767.3" y="675.0" width="13.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="770.3" y="686.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 1.05%)</title><rect x="768.1" y="659.0" width="12.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="771.1" y="670.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.91%)</title><rect x="769.6" y="643.0" width="10.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="772.6" y="654.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.89%)</title><rect x="769.9" y="627.0" width="10.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="772.9" y="638.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.78%)</title><rect x="771.1" y="611.0" width="9.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="774.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.63%)</title><rect x="772.9" y="595.0" width="7.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="775.9" y="606.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.59%)</title><rect x="773.5" y="579.0" width="6.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="776.5" y="590.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.54%)</title><rect x="774.0" y="563.0" width="6.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="777.0" y="574.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="779.4" y="547.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="782.4" y="558.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="779.6" y="531.0" width="0.8" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="782.6" y="542.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="779.9" y="515.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="782.9" y="526.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="780.4" y="1219.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="783.4" y="1230.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="780.4" y="1203.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="783.4" y="1214.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="780.6" y="1203.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="783.6" y="1214.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="780.6" y="1187.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="783.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.17%)</title><rect x="780.9" y="1267.0" width="2.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.9" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="782.7" y="1251.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="785.7" y="1262.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="782.7" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="785.7" y="1246.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (1 samples, 0.02%)</title><rect x="783.0" y="1267.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="786.0" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpService.sendResponseIfNecessary (1 samples, 0.02%)</title><rect x="783.2" y="1315.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="786.2" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils$$Lambda$139/1298738395.accept (204 samples, 4.44%)</title><rect x="783.5" y="1331.0" width="52.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="786.5" y="1342.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/service/alex/HttpServiceUtils.lambda$getFirstResponses$0 (204 samples, 4.44%)</title><rect x="783.5" y="1315.0" width="52.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="786.5" y="1326.0">ru/ma..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.info (186 samples, 4.05%)</title><rect x="783.7" y="1299.0" width="47.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="786.7" y="1310.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.filterAndLog_1 (185 samples, 4.03%)</title><rect x="784.0" y="1283.0" width="47.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="787.0" y="1294.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.buildLoggingEventAndAppend (185 samples, 4.03%)</title><rect x="784.0" y="1267.0" width="47.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="787.0" y="1278.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.callAppenders (183 samples, 3.99%)</title><rect x="784.2" y="1251.0" width="47.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="787.2" y="1262.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/Logger.appendLoopOnAppenders (183 samples, 3.99%)</title><rect x="784.2" y="1235.0" width="47.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="787.2" y="1246.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/spi/AppenderAttachableImpl.appendLoopOnAppenders (181 samples, 3.94%)</title><rect x="784.8" y="1219.0" width="46.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="787.8" y="1230.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/UnsynchronizedAppenderBase.doAppend (181 samples, 3.94%)</title><rect x="784.8" y="1203.0" width="46.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="787.8" y="1214.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.append (170 samples, 3.70%)</title><rect x="785.3" y="1187.0" width="43.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="788.3" y="1198.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.subAppend (170 samples, 3.70%)</title><rect x="785.3" y="1171.0" width="43.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="788.3" y="1182.0">ch/q..</text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.prepareForDeferredProcessing (32 samples, 0.70%)</title><rect x="785.3" y="1155.0" width="8.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="788.3" y="1166.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (27 samples, 0.59%)</title><rect x="785.5" y="1139.0" width="7.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="788.5" y="1150.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (26 samples, 0.57%)</title><rect x="785.8" y="1123.0" width="6.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="788.8" y="1134.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.arrayFormat (26 samples, 0.57%)</title><rect x="785.8" y="1107.0" width="6.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="788.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="785.8" y="1091.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="788.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="785.8" y="1075.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="788.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="785.8" y="1059.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="788.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="786.0" y="1091.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="789.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="786.0" y="1075.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="789.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="786.0" y="1059.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="789.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (3 samples, 0.07%)</title><rect x="786.3" y="1091.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.3" y="1102.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (3 samples, 0.07%)</title><rect x="786.3" y="1075.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="789.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.04%)</title><rect x="786.3" y="1059.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="789.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (1 samples, 0.02%)</title><rect x="786.3" y="1043.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="789.3" y="1054.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="786.6" y="1043.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="789.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="786.8" y="1059.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="789.8" y="1070.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (1 samples, 0.02%)</title><rect x="787.1" y="1091.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="790.1" y="1102.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.deeplyAppendParameter (20 samples, 0.44%)</title><rect x="787.3" y="1091.0" width="5.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="790.3" y="1102.0"></text>
</g>
<g>
<title>org/slf4j/helpers/MessageFormatter.safeObjectAppend (19 samples, 0.41%)</title><rect x="787.6" y="1075.0" width="4.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="790.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (2 samples, 0.04%)</title><rect x="787.6" y="1059.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="790.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="787.6" y="1043.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="790.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.02%)</title><rect x="787.8" y="1027.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="790.8" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpResponseImpl.toString (17 samples, 0.37%)</title><rect x="788.1" y="1059.0" width="4.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="791.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (13 samples, 0.28%)</title><rect x="788.4" y="1043.0" width="3.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="791.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (13 samples, 0.28%)</title><rect x="788.4" y="1027.0" width="3.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="791.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (6 samples, 0.13%)</title><rect x="788.9" y="1011.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="791.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="789.6" y="995.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="792.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="789.6" y="979.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="792.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="789.6" y="963.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="792.6" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="789.6" y="947.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="792.6" y="958.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="789.6" y="931.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="792.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="789.6" y="915.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="792.6" y="926.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (1 samples, 0.02%)</title><rect x="789.9" y="995.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="792.9" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="790.2" y="995.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="793.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (4 samples, 0.09%)</title><rect x="790.4" y="1011.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.getCoder (1 samples, 0.02%)</title><rect x="790.4" y="995.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="793.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="790.7" y="995.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="793.7" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="790.7" y="979.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="793.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.04%)</title><rect x="790.9" y="995.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="791.2" y="979.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.2" y="990.0"></text>
</g>
<g>
<title>java/lang/Integer.getChars (1 samples, 0.02%)</title><rect x="791.4" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (3 samples, 0.07%)</title><rect x="791.7" y="1043.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="794.7" y="1054.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getMDCPropertyMap (3 samples, 0.07%)</title><rect x="792.5" y="1139.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="795.5" y="1150.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/util/LogbackMDCAdapter.getPropertyMap (1 samples, 0.02%)</title><rect x="793.0" y="1123.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="796.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (1 samples, 0.02%)</title><rect x="793.0" y="1107.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (1 samples, 0.02%)</title><rect x="793.0" y="1091.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="796.0" y="1102.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getThreadName (1 samples, 0.02%)</title><rect x="793.2" y="1139.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="796.2" y="1150.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.02%)</title><rect x="793.2" y="1123.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="796.2" y="1134.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (91 samples, 1.98%)</title><rect x="793.5" y="1155.0" width="23.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.5" y="1166.0">c..</text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.flush (4 samples, 0.09%)</title><rect x="793.8" y="1139.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="796.8" y="1150.0"></text>
</g>
<g>
<title>java/io/PrintStream.flush (3 samples, 0.07%)</title><rect x="794.0" y="1123.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="797.0" y="1134.0"></text>
</g>
<g>
<title>ch/qos/logback/core/joran/spi/ConsoleTarget$1.write (72 samples, 1.57%)</title><rect x="794.8" y="1139.0" width="18.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="797.8" y="1150.0"></text>
</g>
<g>
<title>java/io/FilterOutputStream.write (72 samples, 1.57%)</title><rect x="794.8" y="1123.0" width="18.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="797.8" y="1134.0"></text>
</g>
<g>
<title>java/io/PrintStream.write (72 samples, 1.57%)</title><rect x="794.8" y="1107.0" width="18.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="797.8" y="1118.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.flush (1 samples, 0.02%)</title><rect x="795.3" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.3" y="1102.0"></text>
</g>
<g>
<title>java/io/BufferedOutputStream.write (69 samples, 1.50%)</title><rect x="795.6" y="1091.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="798.6" y="1102.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.write (68 samples, 1.48%)</title><rect x="795.6" y="1075.0" width="17.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.6" y="1086.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (68 samples, 1.48%)</title><rect x="795.6" y="1059.0" width="17.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="798.6" y="1070.0"></text>
</g>
<g>
<title>Java_java_io_FileOutputStream_writeBytes (30 samples, 0.65%)</title><rect x="795.8" y="1043.0" width="7.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="798.8" y="1054.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (2 samples, 0.04%)</title><rect x="796.6" y="1027.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="799.6" y="1038.0"></text>
</g>
<g>
<title>jni_GetObjectField (2 samples, 0.04%)</title><rect x="797.1" y="1027.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="800.1" y="1038.0"></text>
</g>
<g>
<title>writeBytes (23 samples, 0.50%)</title><rect x="797.6" y="1027.0" width="5.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="800.6" y="1038.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.02%)</title><rect x="797.9" y="1011.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="800.9" y="1022.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="798.1" y="1011.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="801.1" y="1022.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.02%)</title><rect x="798.4" y="1011.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="801.4" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.02%)</title><rect x="798.6" y="1011.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="801.6" y="1022.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (2 samples, 0.04%)</title><rect x="798.9" y="1011.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="801.9" y="1022.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="799.4" y="1011.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="802.4" y="1022.0"></text>
</g>
<g>
<title>jni_ExceptionOccurred (2 samples, 0.04%)</title><rect x="799.7" y="1011.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="802.7" y="1022.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.09%)</title><rect x="800.2" y="1011.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="803.2" y="1022.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="800.4" y="995.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="803.4" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (1 samples, 0.02%)</title><rect x="800.7" y="995.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="803.7" y="1006.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="800.9" y="995.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="803.9" y="1006.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.02%)</title><rect x="800.9" y="979.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="803.9" y="990.0"></text>
</g>
<g>
<title>jni_GetObjectField (7 samples, 0.15%)</title><rect x="801.2" y="1011.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="804.2" y="1022.0"></text>
</g>
<g>
<title>AccessBarrierSupport::resolve_unknown_oop_ref_strength(unsigned long, oopDesc*, long) (2 samples, 0.04%)</title><rect x="801.7" y="995.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="804.7" y="1006.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;802934ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)3, 802934ul&gt;::oop_access_barrier(oopDesc*, long) (1 samples, 0.02%)</title><rect x="802.2" y="995.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="805.2" y="1006.0"></text>
</g>
<g>
<title>java_lang_ref_Reference::is_referent_field(oopDesc*, long) (1 samples, 0.02%)</title><rect x="802.2" y="979.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="805.2" y="990.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="802.5" y="995.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="805.5" y="1006.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="802.7" y="995.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="805.7" y="1006.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.02%)</title><rect x="803.0" y="1011.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="806.0" y="1022.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="803.3" y="1011.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="806.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (37 samples, 0.81%)</title><rect x="803.5" y="1043.0" width="9.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="806.5" y="1054.0"></text>
</g>
<g>
<title>write (37 samples, 0.81%)</title><rect x="803.5" y="1027.0" width="9.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="806.5" y="1038.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.78%)</title><rect x="803.8" y="1011.0" width="9.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="806.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.78%)</title><rect x="803.8" y="995.0" width="9.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="806.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.76%)</title><rect x="804.0" y="979.0" width="9.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="807.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.76%)</title><rect x="804.0" y="963.0" width="9.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="807.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.74%)</title><rect x="804.3" y="947.0" width="8.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="807.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.63%)</title><rect x="805.6" y="931.0" width="7.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="808.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.61%)</title><rect x="805.8" y="915.0" width="7.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="808.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.50%)</title><rect x="807.1" y="899.0" width="5.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="810.1" y="910.0"></text>
</g>
<g>
<title>[unknown] (22 samples, 0.48%)</title><rect x="807.4" y="883.0" width="5.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="810.4" y="894.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.41%)</title><rect x="808.1" y="867.0" width="4.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="811.1" y="878.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.26%)</title><rect x="809.9" y="851.0" width="3.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="812.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="812.8" y="835.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="815.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="812.8" y="819.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="815.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="812.8" y="803.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="815.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="812.8" y="787.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="815.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="812.8" y="771.0" width="0.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="815.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="812.8" y="755.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="815.8" y="766.0"></text>
</g>
<g>
<title>java/io/FileOutputStream.writeBytes (1 samples, 0.02%)</title><rect x="813.0" y="1075.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="816.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (8 samples, 0.17%)</title><rect x="813.3" y="1139.0" width="2.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="816.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (7 samples, 0.15%)</title><rect x="813.5" y="1123.0" width="1.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="816.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (6 samples, 0.13%)</title><rect x="813.5" y="1107.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="816.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.parkAndCheckInterrupt (6 samples, 0.13%)</title><rect x="813.5" y="1091.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="816.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (6 samples, 0.13%)</title><rect x="813.5" y="1075.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="816.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (6 samples, 0.13%)</title><rect x="813.5" y="1059.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="816.5" y="1070.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.04%)</title><rect x="813.5" y="1043.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="816.5" y="1054.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.02%)</title><rect x="813.8" y="1027.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="816.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="813.8" y="1011.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="816.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="813.8" y="995.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="816.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="813.8" y="979.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="816.8" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="813.8" y="963.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="816.8" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="813.8" y="947.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="816.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="814.1" y="1043.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="817.1" y="1054.0"></text>
</g>
<g>
<title>__pthread_cond_wait (3 samples, 0.07%)</title><rect x="814.1" y="1027.0" width="0.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="817.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="814.3" y="1011.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="817.3" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="814.3" y="995.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="817.3" y="1006.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="814.3" y="979.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="817.3" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="814.3" y="963.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="817.3" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="814.3" y="947.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="817.3" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="814.3" y="931.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="817.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="814.3" y="915.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="817.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="814.3" y="899.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="817.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="814.6" y="883.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="817.6" y="894.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.02%)</title><rect x="814.8" y="1027.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="817.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="815.1" y="1107.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="818.1" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="815.1" y="1091.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.getExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="815.1" y="1075.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="818.1" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (6 samples, 0.13%)</title><rect x="815.3" y="1139.0" width="1.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="818.3" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (6 samples, 0.13%)</title><rect x="815.3" y="1123.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="818.3" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (5 samples, 0.11%)</title><rect x="815.3" y="1107.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="818.3" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.09%)</title><rect x="815.6" y="1091.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="818.6" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.09%)</title><rect x="815.6" y="1075.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="818.6" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.09%)</title><rect x="815.6" y="1059.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="818.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="815.9" y="1043.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="818.9" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="815.9" y="1027.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="818.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="815.9" y="1011.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="818.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="815.9" y="995.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="818.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="815.9" y="979.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="818.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="816.1" y="963.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="819.1" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="816.1" y="947.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="819.1" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="816.1" y="931.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="819.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.tryRelease (1 samples, 0.02%)</title><rect x="816.6" y="1107.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="819.6" y="1118.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.encode (47 samples, 1.02%)</title><rect x="816.9" y="1155.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.9" y="1166.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (43 samples, 0.94%)</title><rect x="816.9" y="1139.0" width="11.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="819.9" y="1150.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (43 samples, 0.94%)</title><rect x="816.9" y="1123.0" width="11.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="819.9" y="1134.0"></text>
</g>
<g>
<title>ch/qos/logback/core/util/CachingDateFormatter.format (21 samples, 0.46%)</title><rect x="817.1" y="1107.0" width="5.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="820.1" y="1118.0"></text>
</g>
<g>
<title>java/text/DateFormat.format (19 samples, 0.41%)</title><rect x="817.7" y="1091.0" width="4.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="820.7" y="1102.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (19 samples, 0.41%)</title><rect x="817.7" y="1075.0" width="4.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="820.7" y="1086.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.format (18 samples, 0.39%)</title><rect x="817.9" y="1059.0" width="4.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="820.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (4 samples, 0.09%)</title><rect x="818.4" y="1043.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="818.4" y="1027.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="821.4" y="1038.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (2 samples, 0.04%)</title><rect x="818.9" y="1027.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="821.9" y="1038.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.subFormat (7 samples, 0.15%)</title><rect x="819.5" y="1043.0" width="1.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="822.5" y="1054.0"></text>
</g>
<g>
<title>java/text/SimpleDateFormat.zeroPaddingNumber (5 samples, 0.11%)</title><rect x="820.0" y="1027.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.0" y="1038.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (2 samples, 0.04%)</title><rect x="820.5" y="1011.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="823.5" y="1022.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 0.04%)</title><rect x="820.5" y="995.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.5" y="1006.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.02%)</title><rect x="820.7" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="823.7" y="990.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.02%)</title><rect x="821.0" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="824.0" y="1022.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.format (1 samples, 0.02%)</title><rect x="821.0" y="995.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="824.0" y="1006.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.subformat (1 samples, 0.02%)</title><rect x="821.0" y="979.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="824.0" y="990.0"></text>
</g>
<g>
<title>java/text/DecimalFormat.append (1 samples, 0.02%)</title><rect x="821.0" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="824.0" y="974.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.length (1 samples, 0.02%)</title><rect x="821.0" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.0" y="958.0"></text>
</g>
<g>
<title>java/util/Calendar.setTime (5 samples, 0.11%)</title><rect x="821.3" y="1043.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="824.3" y="1054.0"></text>
</g>
<g>
<title>java/util/Calendar.setTimeInMillis (5 samples, 0.11%)</title><rect x="821.3" y="1027.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="824.3" y="1038.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (5 samples, 0.11%)</title><rect x="821.3" y="1011.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="824.3" y="1022.0"></text>
</g>
<g>
<title>java/util/GregorianCalendar.computeFields (5 samples, 0.11%)</title><rect x="821.3" y="995.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="824.3" y="1006.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (3 samples, 0.07%)</title><rect x="821.8" y="979.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="824.8" y="990.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getOffsets (3 samples, 0.07%)</title><rect x="821.8" y="963.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="824.8" y="974.0"></text>
</g>
<g>
<title>sun/util/calendar/ZoneInfo.getTransitionIndex (2 samples, 0.04%)</title><rect x="822.0" y="947.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="825.0" y="958.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.append (21 samples, 0.46%)</title><rect x="822.5" y="1107.0" width="5.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="825.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (19 samples, 0.41%)</title><rect x="823.0" y="1091.0" width="4.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="826.0" y="1102.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.getFormattedMessage (1 samples, 0.02%)</title><rect x="823.3" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="826.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (7 samples, 0.15%)</title><rect x="823.6" y="1075.0" width="1.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="826.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="823.8" y="1059.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="826.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="823.8" y="1043.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="826.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="823.8" y="1027.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="826.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="823.8" y="1011.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="826.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="823.8" y="995.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="826.8" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="824.1" y="979.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="827.1" y="990.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.newCapacity (1 samples, 0.02%)</title><rect x="824.3" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="827.3" y="1070.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="824.6" y="1059.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="827.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (10 samples, 0.22%)</title><rect x="825.4" y="1075.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="828.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.04%)</title><rect x="826.4" y="1059.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (4 samples, 0.09%)</title><rect x="826.9" y="1059.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="829.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.coder (3 samples, 0.07%)</title><rect x="827.2" y="1043.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.2" y="1054.0"></text>
</g>
<g>
<title>ch/qos/logback/core/encoder/LayoutWrappingEncoder.convertToBytes (4 samples, 0.09%)</title><rect x="827.9" y="1139.0" width="1.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="830.9" y="1150.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/layout/TTLLLayout.doLayout (1 samples, 0.02%)</title><rect x="827.9" y="1123.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="830.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.07%)</title><rect x="828.2" y="1123.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="831.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (3 samples, 0.07%)</title><rect x="828.2" y="1107.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="831.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.04%)</title><rect x="828.2" y="1091.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="831.2" y="1102.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.04%)</title><rect x="828.2" y="1075.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="831.2" y="1086.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="828.4" y="1059.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="831.4" y="1070.0"></text>
</g>
<g>
<title>java/nio/charset/Charset.defaultCharset (1 samples, 0.02%)</title><rect x="828.7" y="1091.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="831.7" y="1102.0"></text>
</g>
<g>
<title>ch/qos/logback/core/OutputStreamAppender.writeBytes (2 samples, 0.04%)</title><rect x="829.0" y="1187.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.0" y="1198.0"></text>
</g>
<g>
<title>java/lang/Boolean.equals (3 samples, 0.07%)</title><rect x="829.5" y="1187.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="832.5" y="1198.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.04%)</title><rect x="830.2" y="1187.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="833.2" y="1198.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.set (2 samples, 0.04%)</title><rect x="830.8" y="1187.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="833.8" y="1198.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.set (2 samples, 0.04%)</title><rect x="830.8" y="1171.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.8" y="1182.0"></text>
</g>
<g>
<title>ch/qos/logback/classic/spi/LoggingEvent.&lt;init&gt; (1 samples, 0.02%)</title><rect x="831.3" y="1251.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="834.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.complete (14 samples, 0.30%)</title><rect x="831.5" y="1299.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.completeValue (1 samples, 0.02%)</title><rect x="831.5" y="1283.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.5" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="831.5" y="1267.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="834.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="831.5" y="1251.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="834.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.postComplete (13 samples, 0.28%)</title><rect x="831.8" y="1283.0" width="3.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="834.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniWhenComplete.tryFire (13 samples, 0.28%)</title><rect x="831.8" y="1267.0" width="3.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="834.8" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture.uniWhenComplete (13 samples, 0.28%)</title><rect x="831.8" y="1251.0" width="3.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="834.8" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/CompletableFuture$UniCompletion.claim (13 samples, 0.28%)</title><rect x="831.8" y="1235.0" width="3.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="834.8" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.execute (12 samples, 0.26%)</title><rect x="832.0" y="1219.0" width="3.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="835.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.externalSubmit (12 samples, 0.26%)</title><rect x="832.0" y="1203.0" width="3.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="835.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool$WorkQueue.push (10 samples, 0.22%)</title><rect x="832.6" y="1187.0" width="2.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="835.6" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (9 samples, 0.20%)</title><rect x="832.8" y="1171.0" width="2.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="835.8" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (8 samples, 0.17%)</title><rect x="833.1" y="1155.0" width="2.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="836.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (8 samples, 0.17%)</title><rect x="833.1" y="1139.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="836.1" y="1150.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="833.1" y="1123.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="836.1" y="1134.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="833.1" y="1107.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="836.1" y="1118.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="833.3" y="1123.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="836.3" y="1134.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.13%)</title><rect x="833.6" y="1123.0" width="1.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="836.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="833.6" y="1107.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="836.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="833.6" y="1091.0" width="1.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="836.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="833.6" y="1075.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="836.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="833.6" y="1059.0" width="1.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="836.6" y="1070.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="833.6" y="1043.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="836.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="833.8" y="1027.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="836.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="833.8" y="1011.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="836.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="834.1" y="995.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="837.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/CopyOnWriteArrayList.add (3 samples, 0.07%)</title><rect x="835.1" y="1299.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="838.1" y="1310.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (3 samples, 0.07%)</title><rect x="835.1" y="1283.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="838.1" y="1294.0"></text>
</g>
<g>
<title>vtable stub (3 samples, 0.07%)</title><rect x="835.9" y="1379.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="838.9" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/ForkJoinPool.signalWork (4 samples, 0.09%)</title><rect x="836.7" y="1411.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="839.7" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 0.09%)</title><rect x="836.7" y="1395.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="839.7" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 0.09%)</title><rect x="836.7" y="1379.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="839.7" y="1390.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.09%)</title><rect x="836.7" y="1363.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="839.7" y="1374.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="836.7" y="1347.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="839.7" y="1358.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="836.7" y="1331.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="839.7" y="1342.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="836.7" y="1315.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="839.7" y="1326.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="836.7" y="1299.0" width="1.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="839.7" y="1310.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="836.7" y="1283.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="839.7" y="1294.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="836.7" y="1267.0" width="1.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="839.7" y="1278.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="836.9" y="1251.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="839.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="836.9" y="1235.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="839.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (81 samples, 1.76%)</title><rect x="837.7" y="1427.0" width="20.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="840.7" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (2 samples, 0.04%)</title><rect x="837.7" y="1411.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="840.7" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="838.0" y="1395.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="841.0" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (79 samples, 1.72%)</title><rect x="838.2" y="1411.0" width="20.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="841.2" y="1422.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="838.5" y="1395.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="841.5" y="1406.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.04%)</title><rect x="838.7" y="1395.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="841.7" y="1406.0"></text>
</g>
<g>
<title>Unsafe_Park (35 samples, 0.76%)</title><rect x="839.2" y="1395.0" width="9.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="842.2" y="1406.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="840.5" y="1379.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="843.5" y="1390.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (4 samples, 0.09%)</title><rect x="840.8" y="1379.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="843.8" y="1390.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="841.8" y="1379.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="844.8" y="1390.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (6 samples, 0.13%)</title><rect x="842.1" y="1379.0" width="1.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="845.1" y="1390.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.02%)</title><rect x="843.1" y="1363.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="846.1" y="1374.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="843.3" y="1363.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="846.3" y="1374.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="843.6" y="1379.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="846.6" y="1390.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.02%)</title><rect x="843.9" y="1379.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="846.9" y="1390.0"></text>
</g>
<g>
<title>__lll_unlock_wake (8 samples, 0.17%)</title><rect x="844.1" y="1379.0" width="2.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="847.1" y="1390.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="844.4" y="1363.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="847.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="844.4" y="1347.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="847.4" y="1358.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="845.1" y="1331.0" width="1.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="848.1" y="1342.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="845.1" y="1315.0" width="1.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="848.1" y="1326.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="845.4" y="1299.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="848.4" y="1310.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.04%)</title><rect x="846.2" y="1379.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="849.2" y="1390.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="846.7" y="1379.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="849.7" y="1390.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="846.9" y="1379.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="849.9" y="1390.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="847.2" y="1379.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="850.2" y="1390.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="847.5" y="1379.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="850.5" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="847.5" y="1363.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="850.5" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="847.5" y="1347.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="850.5" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="847.5" y="1331.0" width="0.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="850.5" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="847.5" y="1315.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="850.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="847.5" y="1299.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="850.5" y="1310.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="847.7" y="1379.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="850.7" y="1390.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="848.0" y="1379.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="851.0" y="1390.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.87%)</title><rect x="848.2" y="1395.0" width="10.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="851.2" y="1406.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="848.2" y="1379.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="851.2" y="1390.0"></text>
</g>
<g>
<title>__pthread_cond_wait (38 samples, 0.83%)</title><rect x="848.5" y="1379.0" width="9.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="851.5" y="1390.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.72%)</title><rect x="849.8" y="1363.0" width="8.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="852.8" y="1374.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.72%)</title><rect x="849.8" y="1347.0" width="8.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="852.8" y="1358.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.65%)</title><rect x="850.5" y="1331.0" width="7.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="853.5" y="1342.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.65%)</title><rect x="850.5" y="1315.0" width="7.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="853.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.61%)</title><rect x="851.1" y="1299.0" width="7.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="854.1" y="1310.0"></text>
</g>
<g>
<title>[unknown] (26 samples, 0.57%)</title><rect x="851.6" y="1283.0" width="6.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="854.6" y="1294.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.44%)</title><rect x="853.1" y="1267.0" width="5.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="856.1" y="1278.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.41%)</title><rect x="853.4" y="1251.0" width="4.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="856.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.33%)</title><rect x="854.4" y="1235.0" width="3.9" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="857.4" y="1246.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="858.3" y="1379.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="861.3" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkUntil (44 samples, 0.96%)</title><rect x="858.5" y="1427.0" width="11.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="861.5" y="1438.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.setBlocker (1 samples, 0.02%)</title><rect x="858.5" y="1411.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="861.5" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (43 samples, 0.94%)</title><rect x="858.8" y="1411.0" width="11.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.8" y="1422.0"></text>
</g>
<g>
<title>Unsafe_Park (14 samples, 0.30%)</title><rect x="858.8" y="1395.0" width="3.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="861.8" y="1406.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="858.8" y="1379.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="861.8" y="1390.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (2 samples, 0.04%)</title><rect x="859.0" y="1379.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="862.0" y="1390.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="859.3" y="1363.0" width="0.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="862.3" y="1374.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="859.5" y="1379.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="862.5" y="1390.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="859.8" y="1379.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="862.8" y="1390.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.09%)</title><rect x="860.1" y="1379.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="863.1" y="1390.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="860.1" y="1363.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="863.1" y="1374.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="860.1" y="1347.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="863.1" y="1358.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="860.1" y="1331.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="863.1" y="1342.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="860.1" y="1315.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="863.1" y="1326.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="860.3" y="1299.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="863.3" y="1310.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.02%)</title><rect x="861.1" y="1379.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="864.1" y="1390.0"></text>
</g>
<g>
<title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="861.3" y="1379.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="864.3" y="1390.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="861.6" y="1379.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="864.6" y="1390.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (2 samples, 0.04%)</title><rect x="861.9" y="1379.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="864.9" y="1390.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="862.4" y="1395.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="865.4" y="1406.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (27 samples, 0.59%)</title><rect x="862.6" y="1395.0" width="7.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="865.6" y="1406.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.44%)</title><rect x="864.4" y="1379.0" width="5.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="867.4" y="1390.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.44%)</title><rect x="864.4" y="1363.0" width="5.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="867.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.41%)</title><rect x="864.7" y="1347.0" width="4.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="867.7" y="1358.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.39%)</title><rect x="864.9" y="1331.0" width="4.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="867.9" y="1342.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.39%)</title><rect x="864.9" y="1315.0" width="4.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="867.9" y="1326.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.33%)</title><rect x="865.7" y="1299.0" width="3.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="868.7" y="1310.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="866.2" y="1283.0" width="3.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="869.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.24%)</title><rect x="866.7" y="1267.0" width="2.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="869.7" y="1278.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.20%)</title><rect x="867.2" y="1251.0" width="2.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="870.2" y="1262.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="869.6" y="1395.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="872.6" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="869.8" y="1427.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="872.8" y="1438.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="870.1" y="1427.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="873.1" y="1438.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="870.1" y="1411.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="873.1" y="1422.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="870.1" y="1395.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="873.1" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.run (399 samples, 8.69%)</title><rect x="870.3" y="1459.0" width="102.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.3" y="1470.0">jdk/internal..</text>
</g>
<g>
<title>java/nio/channels/SelectionKey.attachment (1 samples, 0.02%)</title><rect x="873.2" y="1443.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="876.2" y="1454.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (5 samples, 0.11%)</title><rect x="873.4" y="1443.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="876.4" y="1454.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.findKey (5 samples, 0.11%)</title><rect x="873.4" y="1427.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="876.4" y="1438.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.hasNext (1 samples, 0.02%)</title><rect x="874.4" y="1411.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="877.4" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.11%)</title><rect x="874.7" y="1443.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="877.7" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (5 samples, 0.11%)</title><rect x="874.7" y="1427.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="877.7" y="1438.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.09%)</title><rect x="875.0" y="1411.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.0" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (4 samples, 0.09%)</title><rect x="875.0" y="1395.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="878.0" y="1406.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (1 samples, 0.02%)</title><rect x="875.7" y="1379.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="878.7" y="1390.0"></text>
</g>
<g>
<title>java/util/ArrayList.clear (3 samples, 0.07%)</title><rect x="876.0" y="1443.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="879.0" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (119 samples, 2.59%)</title><rect x="876.8" y="1443.0" width="30.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="879.8" y="1454.0">ja..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$250/1207502110.accept (115 samples, 2.50%)</title><rect x="876.8" y="1427.0" width="29.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="879.8" y="1438.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$3 (115 samples, 2.50%)</title><rect x="876.8" y="1411.0" width="29.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="879.8" y="1422.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.handleEvent (115 samples, 2.50%)</title><rect x="876.8" y="1395.0" width="29.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="879.8" y="1406.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.handle (115 samples, 2.50%)</title><rect x="876.8" y="1379.0" width="29.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="879.8" y="1390.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadEvent.signalEvent (115 samples, 2.50%)</title><rect x="876.8" y="1363.0" width="29.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="879.8" y="1374.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (6 samples, 0.13%)</title><rect x="876.8" y="1347.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="879.8" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (5 samples, 0.11%)</title><rect x="877.0" y="1331.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="880.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (3 samples, 0.07%)</title><rect x="877.3" y="1315.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="880.3" y="1326.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="877.5" y="1299.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="880.5" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="877.5" y="1283.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="880.5" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="877.5" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="880.5" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.02%)</title><rect x="877.8" y="1299.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="880.8" y="1310.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="877.8" y="1283.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="880.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowEvent.channel (1 samples, 0.02%)</title><rect x="878.0" y="1315.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.0" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.signalReadable (109 samples, 2.37%)</title><rect x="878.3" y="1347.0" width="28.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.3" y="1358.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (109 samples, 2.37%)</title><rect x="878.3" y="1331.0" width="28.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="881.3" y="1342.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (109 samples, 2.37%)</title><rect x="878.3" y="1315.0" width="28.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="881.3" y="1326.0">jd..</text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="878.3" y="1299.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="878.3" y="1283.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="881.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="878.3" y="1267.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="881.3" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.02%)</title><rect x="878.3" y="1251.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="878.3" y="1235.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="881.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="878.3" y="1219.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.02%)</title><rect x="878.3" y="1203.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="881.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="878.3" y="1187.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="881.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="878.3" y="1171.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="881.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="878.3" y="1155.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="881.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.02%)</title><rect x="878.3" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="881.3" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (108 samples, 2.35%)</title><rect x="878.6" y="1299.0" width="27.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="881.6" y="1310.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (108 samples, 2.35%)</title><rect x="878.6" y="1283.0" width="27.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="881.6" y="1294.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/2053696460.run (106 samples, 2.31%)</title><rect x="878.6" y="1267.0" width="27.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="881.6" y="1278.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (106 samples, 2.31%)</title><rect x="878.6" y="1251.0" width="27.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="881.6" y="1262.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (15 samples, 0.33%)</title><rect x="879.6" y="1235.0" width="3.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="882.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (15 samples, 0.33%)</title><rect x="879.6" y="1219.0" width="3.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="882.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (15 samples, 0.33%)</title><rect x="879.6" y="1203.0" width="3.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="882.6" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.33%)</title><rect x="879.6" y="1187.0" width="3.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.6" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (15 samples, 0.33%)</title><rect x="879.6" y="1171.0" width="3.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.6" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (14 samples, 0.30%)</title><rect x="879.8" y="1155.0" width="3.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="882.8" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (14 samples, 0.30%)</title><rect x="879.8" y="1139.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="882.8" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (14 samples, 0.30%)</title><rect x="879.8" y="1123.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="882.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (12 samples, 0.26%)</title><rect x="879.8" y="1107.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="882.8" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 0.26%)</title><rect x="879.8" y="1091.0" width="3.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="882.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 0.26%)</title><rect x="879.8" y="1075.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.8" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 0.26%)</title><rect x="879.8" y="1059.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="882.8" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 0.26%)</title><rect x="879.8" y="1043.0" width="3.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="882.8" y="1054.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 0.26%)</title><rect x="879.8" y="1027.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="882.8" y="1038.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="879.8" y="1011.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="882.8" y="1022.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.02%)</title><rect x="880.1" y="1011.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="883.1" y="1022.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="880.1" y="995.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="883.1" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.02%)</title><rect x="880.4" y="1011.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="883.4" y="1022.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (9 samples, 0.20%)</title><rect x="880.6" y="1011.0" width="2.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="883.6" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.20%)</title><rect x="880.6" y="995.0" width="2.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="883.6" y="1006.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.20%)</title><rect x="880.6" y="979.0" width="2.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="883.6" y="990.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="881.4" y="963.0" width="1.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="884.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="881.4" y="947.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="884.4" y="958.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="881.4" y="931.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="884.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="881.6" y="915.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="884.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="881.9" y="899.0" width="1.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="884.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="881.9" y="883.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="884.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="882.7" y="867.0" width="0.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="885.7" y="878.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="882.7" y="851.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="885.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="882.7" y="835.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="885.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="882.7" y="819.0" width="0.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="885.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="882.9" y="1107.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="885.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="882.9" y="1091.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="885.9" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="882.9" y="1075.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="885.9" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="883.2" y="1107.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="886.2" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="883.2" y="1091.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="886.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="883.2" y="1075.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="886.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.02%)</title><rect x="883.2" y="1059.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="886.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="883.2" y="1043.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="886.2" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="883.2" y="1027.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="886.2" y="1038.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.02%)</title><rect x="883.4" y="1235.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="886.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (84 samples, 1.83%)</title><rect x="883.7" y="1235.0" width="21.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="886.7" y="1246.0">j..</text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.append (4 samples, 0.09%)</title><rect x="884.5" y="1219.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="887.5" y="1230.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="884.5" y="1203.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="887.5" y="1214.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="884.7" y="1203.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="887.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="884.7" y="1187.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="887.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="884.7" y="1171.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="887.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="884.7" y="1155.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="887.7" y="1166.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.02%)</title><rect x="885.0" y="1203.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="888.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (1 samples, 0.02%)</title><rect x="885.2" y="1203.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="888.2" y="1214.0"></text>
</g>
<g>
<title>java/util/List.of (1 samples, 0.02%)</title><rect x="885.2" y="1187.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="888.2" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SliceBufferSource.getBuffer (3 samples, 0.07%)</title><rect x="885.5" y="1219.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="888.5" y="1230.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="885.7" y="1203.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="888.7" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (74 samples, 1.61%)</title><rect x="886.3" y="1219.0" width="19.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="889.3" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="886.3" y="1203.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="889.3" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="886.3" y="1187.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="889.3" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.04%)</title><rect x="886.3" y="1171.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="889.3" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.04%)</title><rect x="886.3" y="1155.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="889.3" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="886.5" y="1139.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="889.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="886.5" y="1123.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="889.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="886.5" y="1107.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.5" y="1118.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (72 samples, 1.57%)</title><rect x="886.8" y="1203.0" width="18.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="889.8" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (71 samples, 1.55%)</title><rect x="887.0" y="1187.0" width="18.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.0" y="1198.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (7 samples, 0.15%)</title><rect x="887.0" y="1171.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="890.0" y="1182.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="887.0" y="1155.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.0" y="1166.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.02%)</title><rect x="887.0" y="1139.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (1 samples, 0.02%)</title><rect x="887.0" y="1123.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.0" y="1134.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (6 samples, 0.13%)</title><rect x="887.3" y="1155.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="890.3" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (5 samples, 0.11%)</title><rect x="887.5" y="1139.0" width="1.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.5" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemoryChecks (5 samples, 0.11%)</title><rect x="887.5" y="1123.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.5" y="1134.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitivePointer (4 samples, 0.09%)</title><rect x="887.5" y="1107.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPointer (1 samples, 0.02%)</title><rect x="887.5" y="1091.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.5" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkNativeAddress (1 samples, 0.02%)</title><rect x="887.5" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.5" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkPrimitiveArray (3 samples, 0.07%)</title><rect x="887.8" y="1091.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="890.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/Class.getComponentType (3 samples, 0.07%)</title><rect x="887.8" y="1075.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="890.8" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkSize (1 samples, 0.02%)</title><rect x="888.6" y="1107.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="891.6" y="1118.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.flip (1 samples, 0.02%)</title><rect x="888.8" y="1171.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="891.8" y="1182.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.listOf (1 samples, 0.02%)</title><rect x="888.8" y="1155.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.8" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (57 samples, 1.24%)</title><rect x="889.1" y="1171.0" width="14.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="892.1" y="1182.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (57 samples, 1.24%)</title><rect x="889.1" y="1155.0" width="14.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="892.1" y="1166.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (57 samples, 1.24%)</title><rect x="889.1" y="1139.0" width="14.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="892.1" y="1150.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.11%)</title><rect x="889.6" y="1123.0" width="13.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="892.6" y="1134.0"></text>
</g>
<g>
<title>read (51 samples, 1.11%)</title><rect x="889.6" y="1107.0" width="13.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="892.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.02%)</title><rect x="890.6" y="1091.0" width="12.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="893.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.02%)</title><rect x="890.6" y="1075.0" width="12.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="893.6" y="1086.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.96%)</title><rect x="891.4" y="1059.0" width="11.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="894.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.96%)</title><rect x="891.4" y="1043.0" width="11.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="894.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.96%)</title><rect x="891.4" y="1027.0" width="11.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="894.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.91%)</title><rect x="891.9" y="1011.0" width="10.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="894.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (38 samples, 0.83%)</title><rect x="892.9" y="995.0" width="9.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="895.9" y="1006.0"></text>
</g>
<g>
<title>[unknown] (34 samples, 0.74%)</title><rect x="894.0" y="979.0" width="8.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="897.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 0.68%)</title><rect x="894.7" y="963.0" width="8.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="897.7" y="974.0"></text>
</g>
<g>
<title>[unknown] (28 samples, 0.61%)</title><rect x="895.5" y="947.0" width="7.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="898.5" y="958.0"></text>
</g>
<g>
<title>[unknown] (25 samples, 0.54%)</title><rect x="896.3" y="931.0" width="6.4" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="899.3" y="942.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.35%)</title><rect x="898.6" y="915.0" width="4.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="901.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.24%)</title><rect x="899.9" y="899.0" width="2.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="902.9" y="910.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.24%)</title><rect x="899.9" y="883.0" width="2.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="902.9" y="894.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="900.9" y="867.0" width="1.8" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="903.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="902.2" y="851.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="905.2" y="862.0"></text>
</g>
<g>
<title>__GI___errno_location (1 samples, 0.02%)</title><rect x="902.7" y="1123.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="905.7" y="1134.0"></text>
</g>
<g>
<title>convertReturnVal (1 samples, 0.02%)</title><rect x="903.0" y="1123.0" width="0.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="906.0" y="1134.0"></text>
</g>
<g>
<title>fdval (1 samples, 0.02%)</title><rect x="903.2" y="1123.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="906.2" y="1134.0"></text>
</g>
<g>
<title>read (1 samples, 0.02%)</title><rect x="903.5" y="1123.0" width="0.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="906.5" y="1134.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (6 samples, 0.13%)</title><rect x="903.7" y="1171.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="906.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="904.0" y="1155.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="907.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="904.0" y="1139.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="907.0" y="1150.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$BufferCache.get (4 samples, 0.09%)</title><rect x="904.3" y="1155.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="907.3" y="1166.0"></text>
</g>
<g>
<title>java/nio/MappedByteBuffer.rewind (1 samples, 0.02%)</title><rect x="904.8" y="1139.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="907.8" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.checkOffset (1 samples, 0.02%)</title><rect x="905.0" y="1139.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="908.0" y="1150.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Utils.remaining (2 samples, 0.04%)</title><rect x="905.3" y="1235.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="908.3" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (1 samples, 0.02%)</title><rect x="905.8" y="1267.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="908.8" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$TryEndDeferredCompleter.complete (1 samples, 0.02%)</title><rect x="906.0" y="1267.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$255/1881289294.accept (4 samples, 0.09%)</title><rect x="906.3" y="1427.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$5 (4 samples, 0.09%)</title><rect x="906.3" y="1411.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="909.3" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$249/797003816.run (4 samples, 0.09%)</title><rect x="906.3" y="1395.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="909.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.lambda$run$2 (4 samples, 0.09%)</title><rect x="906.3" y="1379.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="909.3" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.resetInterestOps (4 samples, 0.09%)</title><rect x="906.3" y="1363.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="909.3" y="1374.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.07%)</title><rect x="906.3" y="1347.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.3" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="906.3" y="1331.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="909.3" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="906.3" y="1315.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="909.3" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="906.3" y="1299.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.3" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (2 samples, 0.04%)</title><rect x="906.6" y="1331.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="909.6" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.interestOps (1 samples, 0.02%)</title><rect x="907.1" y="1347.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="910.1" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.channel (1 samples, 0.02%)</title><rect x="907.1" y="1331.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="910.1" y="1342.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (2 samples, 0.04%)</title><rect x="907.3" y="1443.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.3" y="1454.0"></text>
</g>
<g>
<title>java/util/ArrayList$Itr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="907.6" y="1427.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="910.6" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.hasNext (2 samples, 0.04%)</title><rect x="907.8" y="1443.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="910.8" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="908.4" y="1443.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="911.4" y="1454.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (1 samples, 0.02%)</title><rect x="908.4" y="1427.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="911.4" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.forEach (17 samples, 0.37%)</title><rect x="908.6" y="1443.0" width="4.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="911.6" y="1454.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.evaluate (17 samples, 0.37%)</title><rect x="908.6" y="1427.0" width="4.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="911.6" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.sourceSpliterator (4 samples, 0.09%)</title><rect x="908.6" y="1411.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="911.6" y="1422.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="908.6" y="1395.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="911.6" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.getOpFlags (2 samples, 0.04%)</title><rect x="909.1" y="1395.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="912.1" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.evaluateSequential (13 samples, 0.28%)</title><rect x="909.6" y="1411.0" width="3.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="912.6" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp.evaluateSequential (13 samples, 0.28%)</title><rect x="909.6" y="1395.0" width="3.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="912.6" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapAndCopyInto (13 samples, 0.28%)</title><rect x="909.6" y="1379.0" width="3.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="912.6" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.copyInto (12 samples, 0.26%)</title><rect x="909.6" y="1363.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="912.6" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap$KeySpliterator.forEachRemaining (10 samples, 0.22%)</title><rect x="909.6" y="1347.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="912.6" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (1 samples, 0.02%)</title><rect x="910.2" y="1331.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.2" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2$1.accept (7 samples, 0.15%)</title><rect x="910.4" y="1331.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="913.4" y="1342.0"></text>
</g>
<g>
<title>java/util/stream/ForEachOps$ForEachOp$OfRef.accept (4 samples, 0.09%)</title><rect x="910.9" y="1315.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="913.9" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager$$Lambda$248/222394847.accept (4 samples, 0.09%)</title><rect x="910.9" y="1299.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.9" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (4 samples, 0.09%)</title><rect x="910.9" y="1283.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="913.9" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (3 samples, 0.07%)</title><rect x="911.2" y="1267.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="914.2" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="911.4" y="1251.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="914.4" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="911.4" y="1235.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="914.4" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment$$Lambda$247/1268019334.test (1 samples, 0.02%)</title><rect x="912.0" y="1315.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.0" y="1326.0"></text>
</g>
<g>
<title>java/util/Spliterator.getExactSizeIfKnown (2 samples, 0.04%)</title><rect x="912.2" y="1347.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="915.2" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.estimateSize (2 samples, 0.04%)</title><rect x="912.2" y="1331.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="915.2" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap$HashMapSpliterator.getFence (2 samples, 0.04%)</title><rect x="912.2" y="1315.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="915.2" y="1326.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.wrapSink (1 samples, 0.02%)</title><rect x="912.7" y="1363.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="915.7" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/AsyncTriggerEvent.handle (55 samples, 1.20%)</title><rect x="913.0" y="1443.0" width="14.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="916.0" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$186/1814106346.run (48 samples, 1.05%)</title><rect x="913.0" y="1427.0" width="12.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="916.0" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handleSubscribeEvent (48 samples, 1.05%)</title><rect x="913.0" y="1411.0" width="12.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="916.0" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/Log.channel (1 samples, 0.02%)</title><rect x="913.2" y="1395.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.2" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 1.00%)</title><rect x="913.5" y="1395.0" width="11.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="916.5" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (46 samples, 1.00%)</title><rect x="913.5" y="1379.0" width="11.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="916.5" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (3 samples, 0.07%)</title><rect x="913.5" y="1363.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="916.5" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.07%)</title><rect x="913.5" y="1347.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="916.5" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (3 samples, 0.07%)</title><rect x="913.5" y="1331.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="916.5" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.07%)</title><rect x="913.5" y="1315.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="916.5" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (3 samples, 0.07%)</title><rect x="913.5" y="1299.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="916.5" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (3 samples, 0.07%)</title><rect x="913.5" y="1283.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="916.5" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (3 samples, 0.07%)</title><rect x="913.5" y="1267.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="916.5" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (3 samples, 0.07%)</title><rect x="913.5" y="1251.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="916.5" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (3 samples, 0.07%)</title><rect x="913.5" y="1235.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="916.5" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (3 samples, 0.07%)</title><rect x="913.5" y="1219.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="916.5" y="1230.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="913.5" y="1203.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="916.5" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (1 samples, 0.02%)</title><rect x="914.0" y="1203.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="917.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler$SchedulableTask.run (43 samples, 0.94%)</title><rect x="914.3" y="1363.0" width="11.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="917.3" y="1374.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$SocketFlowTask.run (43 samples, 0.94%)</title><rect x="914.3" y="1347.0" width="11.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="917.3" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription$$Lambda$181/2053696460.run (39 samples, 0.85%)</title><rect x="914.8" y="1331.0" width="10.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="917.8" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (39 samples, 0.85%)</title><rect x="914.8" y="1315.0" width="10.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="917.8" y="1326.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (2 samples, 0.04%)</title><rect x="914.8" y="1299.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="917.8" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onNext (2 samples, 0.04%)</title><rect x="914.8" y="1283.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="917.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver.asyncReceive (1 samples, 0.02%)</title><rect x="915.0" y="1267.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="915.0" y="1251.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="918.0" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (1 samples, 0.02%)</title><rect x="915.0" y="1235.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.0" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="915.0" y="1219.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="918.0" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="915.0" y="1203.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="918.0" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (1 samples, 0.02%)</title><rect x="915.0" y="1187.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="918.0" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (1 samples, 0.02%)</title><rect x="915.0" y="1171.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="918.0" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="915.0" y="1155.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="918.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="915.0" y="1139.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="918.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="915.0" y="1123.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="918.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="915.0" y="1107.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="918.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="915.0" y="1091.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="918.0" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="915.0" y="1075.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="918.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="915.0" y="1059.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="918.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="915.0" y="1043.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="918.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="915.0" y="1027.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="918.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="915.0" y="1011.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="918.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="915.0" y="995.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="918.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="915.0" y="979.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="918.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (30 samples, 0.65%)</title><rect x="915.3" y="1299.0" width="7.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="918.3" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="917.9" y="1283.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="920.9" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="917.9" y="1267.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="920.9" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="917.9" y="1251.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="920.9" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.compareAndSet (4 samples, 0.09%)</title><rect x="918.1" y="1283.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.1" y="1294.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.09%)</title><rect x="918.1" y="1267.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="921.1" y="1278.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.09%)</title><rect x="918.1" y="1251.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="921.1" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.dropSubscription (1 samples, 0.02%)</title><rect x="919.2" y="1283.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="922.2" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.signalOnSubscribe (13 samples, 0.28%)</title><rect x="919.4" y="1283.0" width="3.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="922.4" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$CleanupTrigger.onSubscribe (5 samples, 0.11%)</title><rect x="919.7" y="1267.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="922.7" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$ReadSubscription.request (5 samples, 0.11%)</title><rect x="919.7" y="1251.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="922.7" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.request (5 samples, 0.11%)</title><rect x="919.7" y="1235.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="922.7" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.resumeReadEvent (5 samples, 0.11%)</title><rect x="919.7" y="1219.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="922.7" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.resumeEvent (5 samples, 0.11%)</title><rect x="919.7" y="1203.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="922.7" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl.eventUpdated (4 samples, 0.09%)</title><rect x="919.9" y="1187.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="922.9" y="1198.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorManager.eventUpdated (4 samples, 0.09%)</title><rect x="919.9" y="1171.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="922.9" y="1182.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.keyFor (1 samples, 0.02%)</title><rect x="920.2" y="1155.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="923.2" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (2 samples, 0.04%)</title><rect x="920.4" y="1155.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="923.4" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="920.7" y="1139.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.7" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="920.7" y="1123.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="923.7" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="920.7" y="1107.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="923.7" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/Http1AsyncReceiver$Http1TubeSubscriber.onSubscribe (7 samples, 0.15%)</title><rect x="921.0" y="1267.0" width="1.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="924.0" y="1278.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.11%)</title><rect x="921.5" y="1251.0" width="1.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="924.5" y="1262.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/SequentialScheduler.runOrSchedule (5 samples, 0.11%)</title><rect x="921.5" y="1235.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="924.5" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.11%)</title><rect x="921.5" y="1219.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="924.5" y="1230.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.11%)</title><rect x="921.5" y="1203.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="924.5" y="1214.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (5 samples, 0.11%)</title><rect x="921.5" y="1187.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="924.5" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (3 samples, 0.07%)</title><rect x="921.5" y="1171.0" width="0.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="924.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="921.5" y="1155.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="924.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="921.5" y="1139.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="924.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (2 samples, 0.04%)</title><rect x="921.5" y="1123.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="924.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.04%)</title><rect x="921.5" y="1107.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="924.5" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.04%)</title><rect x="921.5" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="924.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (2 samples, 0.04%)</title><rect x="921.5" y="1075.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="924.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="922.0" y="1155.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="925.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="922.0" y="1139.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.0" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="922.0" y="1123.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="925.0" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="922.0" y="1107.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.0" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="922.0" y="1091.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.0" y="1102.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="922.0" y="1075.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="925.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="922.0" y="1059.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="925.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="922.0" y="1043.0" width="0.2" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="925.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="922.0" y="1027.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="925.0" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="922.0" y="1011.0" width="0.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="925.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="922.0" y="995.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="925.0" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="922.0" y="979.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="925.0" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="922.0" y="963.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="925.0" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="922.0" y="947.0" width="0.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="925.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="922.2" y="1171.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="922.2" y="1155.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="925.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.addWaiter (1 samples, 0.02%)</title><rect x="922.2" y="1139.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="925.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.02%)</title><rect x="922.2" y="1123.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="925.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="922.2" y="1107.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="925.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="922.2" y="1091.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.2" y="1102.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="922.2" y="1075.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="925.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="922.5" y="1139.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="925.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="922.5" y="1123.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="925.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractOwnableSynchronizer.setExclusiveOwnerThread (1 samples, 0.02%)</title><rect x="922.5" y="1107.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="925.5" y="1118.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.on (1 samples, 0.02%)</title><rect x="922.8" y="1283.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="925.8" y="1294.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube.readAvailable (7 samples, 0.15%)</title><rect x="923.0" y="1299.0" width="1.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="926.0" y="1310.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.read (7 samples, 0.15%)</title><rect x="923.0" y="1283.0" width="1.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="926.0" y="1294.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.15%)</title><rect x="923.0" y="1267.0" width="1.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="926.0" y="1278.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.read (7 samples, 0.15%)</title><rect x="923.0" y="1251.0" width="1.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="926.0" y="1262.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.put (3 samples, 0.07%)</title><rect x="923.0" y="1235.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="926.0" y="1246.0"></text>
</g>
<g>
<title>java/nio/DirectByteBuffer.get (3 samples, 0.07%)</title><rect x="923.0" y="1219.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="926.0" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.copyMemory (3 samples, 0.07%)</title><rect x="923.0" y="1203.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="926.0" y="1214.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.02%)</title><rect x="923.5" y="1187.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="926.5" y="1198.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.readIntoNativeBuffer (2 samples, 0.04%)</title><rect x="923.8" y="1235.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="926.8" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketDispatcher.read (1 samples, 0.02%)</title><rect x="924.0" y="1219.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="927.0" y="1230.0"></text>
</g>
<g>
<title>sun/nio/ch/FileDispatcherImpl.read0 (1 samples, 0.02%)</title><rect x="924.0" y="1203.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="927.0" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="924.0" y="1187.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="927.0" y="1198.0"></text>
</g>
<g>
<title>read (1 samples, 0.02%)</title><rect x="924.0" y="1171.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="927.0" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="924.0" y="1155.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="927.0" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="924.0" y="1139.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="927.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="924.0" y="1123.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="927.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="924.0" y="1107.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="927.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="924.0" y="1091.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="927.0" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="924.0" y="1075.0" width="0.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="927.0" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="924.0" y="1059.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="927.0" y="1070.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.getTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="924.3" y="1235.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="927.3" y="1246.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal.get (1 samples, 0.02%)</title><rect x="924.3" y="1219.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/ThreadLocal$ThreadLocalMap.getEntry (1 samples, 0.02%)</title><rect x="924.3" y="1203.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="927.3" y="1214.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.offerFirstTemporaryDirectBuffer (1 samples, 0.02%)</title><rect x="924.6" y="1235.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="927.6" y="1246.0"></text>
</g>
<g>
<title>sun/nio/ch/Util.isBufferTooLarge (1 samples, 0.02%)</title><rect x="924.6" y="1219.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="927.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.read (2 samples, 0.04%)</title><rect x="924.8" y="1331.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="927.8" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber$$Lambda$191/880351495.run (7 samples, 0.15%)</title><rect x="925.3" y="1427.0" width="1.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="928.3" y="1438.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalWriteSubscriber.startSubscription (7 samples, 0.15%)</title><rect x="925.3" y="1411.0" width="1.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="928.3" y="1422.0"></text>
</g>
<g>
<title>java/time/Instant.until (1 samples, 0.02%)</title><rect x="925.3" y="1395.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="928.3" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (5 samples, 0.11%)</title><rect x="925.6" y="1395.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="928.6" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (5 samples, 0.11%)</title><rect x="925.6" y="1379.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="928.6" y="1390.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (4 samples, 0.09%)</title><rect x="925.8" y="1363.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="928.8" y="1374.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (1 samples, 0.02%)</title><rect x="926.1" y="1347.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="929.1" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.02%)</title><rect x="926.4" y="1347.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.4" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.02%)</title><rect x="926.4" y="1331.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="929.4" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (1 samples, 0.02%)</title><rect x="926.6" y="1347.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="929.6" y="1358.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="926.6" y="1331.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="929.6" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (1 samples, 0.02%)</title><rect x="926.6" y="1315.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="929.6" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (1 samples, 0.02%)</title><rect x="926.6" y="1299.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="929.6" y="1310.0"></text>
</g>
<g>
<title>jdk/internal/net/http/SocketTube$InternalReadPublisher$InternalReadSubscription.handlePending (1 samples, 0.02%)</title><rect x="926.9" y="1395.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="929.9" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReference.getAndSet (1 samples, 0.02%)</title><rect x="926.9" y="1379.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="929.9" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (16 samples, 0.35%)</title><rect x="927.1" y="1443.0" width="4.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="930.1" y="1454.0"></text>
</g>
<g>
<title>java/time/Instant.now (7 samples, 0.15%)</title><rect x="927.1" y="1427.0" width="1.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="930.1" y="1438.0"></text>
</g>
<g>
<title>java/time/Clock$SystemClock.instant (7 samples, 0.15%)</title><rect x="927.1" y="1411.0" width="1.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="930.1" y="1422.0"></text>
</g>
<g>
<title>java/time/Instant.ofEpochSecond (1 samples, 0.02%)</title><rect x="927.1" y="1395.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="930.1" y="1406.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.02%)</title><rect x="927.1" y="1379.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="930.1" y="1390.0"></text>
</g>
<g>
<title>jdk/internal/misc/VM.getNanoTimeAdjustment (6 samples, 0.13%)</title><rect x="927.4" y="1395.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="930.4" y="1406.0"></text>
</g>
<g>
<title>JVM_GetNanoTimeAdjustment (6 samples, 0.13%)</title><rect x="927.4" y="1379.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="930.4" y="1390.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="927.6" y="1363.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="930.6" y="1374.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="927.9" y="1363.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="930.9" y="1374.0"></text>
</g>
<g>
<title>os::javaTimeSystemUTC(long&amp;, long&amp;) (3 samples, 0.07%)</title><rect x="928.1" y="1363.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="931.1" y="1374.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="928.4" y="1347.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="931.4" y="1358.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="928.7" y="1347.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="931.7" y="1358.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool.purgeExpiredConnectionsAndReturnNextDeadline (9 samples, 0.20%)</title><rect x="928.9" y="1427.0" width="2.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="931.9" y="1438.0"></text>
</g>
<g>
<title>itable stub (1 samples, 0.02%)</title><rect x="928.9" y="1411.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="931.9" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.forEach (1 samples, 0.02%)</title><rect x="929.2" y="1411.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="932.2" y="1422.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.02%)</title><rect x="929.4" y="1411.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="932.4" y="1422.0"></text>
</g>
<g>
<title>jdk/internal/net/http/ConnectionPool$ExpiryList.purgeUntil (6 samples, 0.13%)</title><rect x="929.7" y="1411.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="932.7" y="1422.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.next (1 samples, 0.02%)</title><rect x="929.7" y="1395.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="932.7" y="1406.0"></text>
</g>
<g>
<title>java/util/LinkedList$ListItr.previous (1 samples, 0.02%)</title><rect x="929.7" y="1379.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="932.7" y="1390.0"></text>
</g>
<g>
<title>java/util/LinkedList.descendingIterator (5 samples, 0.11%)</title><rect x="929.9" y="1395.0" width="1.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="932.9" y="1406.0"></text>
</g>
<g>
<title>java/util/LinkedList$DescendingIterator.&lt;init&gt; (5 samples, 0.11%)</title><rect x="929.9" y="1379.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="932.9" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="931.0" y="1363.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="934.0" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="931.0" y="1347.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="934.0" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="931.0" y="1331.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="934.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$DelegatingExecutor.execute (1 samples, 0.02%)</title><rect x="931.2" y="1443.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="934.2" y="1454.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.events (4 samples, 0.09%)</title><rect x="931.5" y="1443.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="934.5" y="1454.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 0.02%)</title><rect x="931.5" y="1427.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="934.5" y="1438.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="931.5" y="1411.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="934.5" y="1422.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_unlocking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="931.5" y="1395.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="934.5" y="1406.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.02%)</title><rect x="931.5" y="1379.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="934.5" y="1390.0"></text>
</g>
<g>
<title>java/util/Collection.stream (1 samples, 0.02%)</title><rect x="931.7" y="1427.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="934.7" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/StreamSupport.stream (1 samples, 0.02%)</title><rect x="931.7" y="1411.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="934.7" y="1422.0"></text>
</g>
<g>
<title>_new_instance_Java (1 samples, 0.02%)</title><rect x="931.7" y="1395.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="934.7" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.filter (2 samples, 0.04%)</title><rect x="932.0" y="1427.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.0" y="1438.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$2.&lt;init&gt; (2 samples, 0.04%)</title><rect x="932.0" y="1411.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="935.0" y="1422.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline$StatelessOp.&lt;init&gt; (2 samples, 0.04%)</title><rect x="932.0" y="1395.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="935.0" y="1406.0"></text>
</g>
<g>
<title>java/util/stream/ReferencePipeline.&lt;init&gt; (2 samples, 0.04%)</title><rect x="932.0" y="1379.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="935.0" y="1390.0"></text>
</g>
<g>
<title>java/util/stream/AbstractPipeline.&lt;init&gt; (2 samples, 0.04%)</title><rect x="932.0" y="1363.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="935.0" y="1374.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.combineOpFlags (2 samples, 0.04%)</title><rect x="932.0" y="1347.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="935.0" y="1358.0"></text>
</g>
<g>
<title>java/util/stream/StreamOpFlag.getMask (2 samples, 0.04%)</title><rect x="932.0" y="1331.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="935.0" y="1342.0"></text>
</g>
<g>
<title>jdk/internal/net/http/HttpClientImpl$SelectorAttachment.register (20 samples, 0.44%)</title><rect x="932.5" y="1443.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.5" y="1454.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="934.8" y="1427.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="937.8" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="934.8" y="1411.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="937.8" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="934.8" y="1395.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="937.8" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelectableChannel.register (9 samples, 0.20%)</title><rect x="935.1" y="1427.0" width="2.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="938.1" y="1438.0"></text>
</g>
<g>
<title>java/nio/channels/SelectionKey.attach (3 samples, 0.07%)</title><rect x="936.1" y="1411.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="939.1" y="1422.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.getAndSet (3 samples, 0.07%)</title><rect x="936.1" y="1395.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="939.1" y="1406.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.valueCheck (1 samples, 0.02%)</title><rect x="936.6" y="1379.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="939.6" y="1390.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.isOpen (2 samples, 0.04%)</title><rect x="936.9" y="1411.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="939.9" y="1422.0"></text>
</g>
<g>
<title>java/util/HashSet.add (1 samples, 0.02%)</title><rect x="937.4" y="1427.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="940.4" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.02%)</title><rect x="937.4" y="1411.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.4" y="1422.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.02%)</title><rect x="937.4" y="1395.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="940.4" y="1406.0"></text>
</g>
<g>
<title>jdk/internal/net/http/common/DebugLogger.log (1 samples, 0.02%)</title><rect x="937.7" y="1443.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="940.7" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.select (129 samples, 2.81%)</title><rect x="937.9" y="1443.0" width="33.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="940.9" y="1454.0">su..</text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (129 samples, 2.81%)</title><rect x="937.9" y="1427.0" width="33.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="940.9" y="1438.0">su..</text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (126 samples, 2.74%)</title><rect x="937.9" y="1411.0" width="32.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="940.9" y="1422.0">su..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1395.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="940.9" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1379.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="940.9" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1363.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="940.9" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1347.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="940.9" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1331.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="940.9" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1315.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="940.9" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1299.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="940.9" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1283.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="940.9" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1267.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="940.9" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1251.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="940.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1235.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="940.9" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1219.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="940.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1203.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="940.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="937.9" y="1187.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="940.9" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="938.2" y="1395.0" width="0.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="941.2" y="1406.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.02%)</title><rect x="938.4" y="1395.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="941.4" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="938.4" y="1379.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="941.4" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="938.4" y="1363.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="941.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="938.4" y="1347.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="941.4" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (57 samples, 1.24%)</title><rect x="938.7" y="1395.0" width="14.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="941.7" y="1406.0"></text>
</g>
<g>
<title>Java_sun_nio_ch_EPoll_wait (3 samples, 0.07%)</title><rect x="938.7" y="1379.0" width="0.8" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="941.7" y="1390.0"></text>
</g>
<g>
<title>[unknown] (52 samples, 1.13%)</title><rect x="939.5" y="1379.0" width="13.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="942.5" y="1390.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.02%)</title><rect x="939.5" y="1363.0" width="0.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="942.5" y="1374.0"></text>
</g>
<g>
<title>epoll_wait (51 samples, 1.11%)</title><rect x="939.7" y="1363.0" width="13.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="942.7" y="1374.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.11%)</title><rect x="939.7" y="1347.0" width="13.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="942.7" y="1358.0"></text>
</g>
<g>
<title>[unknown] (51 samples, 1.11%)</title><rect x="939.7" y="1331.0" width="13.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="942.7" y="1342.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 1.05%)</title><rect x="940.5" y="1315.0" width="12.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="943.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.02%)</title><rect x="940.7" y="1299.0" width="12.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="943.7" y="1310.0"></text>
</g>
<g>
<title>[unknown] (46 samples, 1.00%)</title><rect x="941.0" y="1283.0" width="11.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="944.0" y="1294.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.89%)</title><rect x="942.3" y="1267.0" width="10.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="945.3" y="1278.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.59%)</title><rect x="945.9" y="1251.0" width="6.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="948.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.44%)</title><rect x="947.7" y="1235.0" width="5.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="950.7" y="1246.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.37%)</title><rect x="948.4" y="1219.0" width="4.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="951.4" y="1230.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.20%)</title><rect x="950.5" y="1203.0" width="2.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="953.5" y="1214.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="952.8" y="1379.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="955.8" y="1390.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.02%)</title><rect x="953.1" y="1379.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="956.1" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (48 samples, 1.05%)</title><rect x="953.3" y="1395.0" width="12.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="956.3" y="1406.0"></text>
</g>
<g>
<title>java/util/HashMap.get (3 samples, 0.07%)</title><rect x="953.3" y="1379.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="956.3" y="1390.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.07%)</title><rect x="953.3" y="1363.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="956.3" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.clearInterrupt (38 samples, 0.83%)</title><rect x="954.1" y="1379.0" width="9.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="957.1" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/IOUtil.drain (37 samples, 0.81%)</title><rect x="954.4" y="1363.0" width="9.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="957.4" y="1374.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (1 samples, 0.02%)</title><rect x="954.6" y="1347.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="957.6" y="1358.0"></text>
</g>
<g>
<title>read (1 samples, 0.02%)</title><rect x="954.6" y="1331.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="957.6" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="954.6" y="1315.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="957.6" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="954.6" y="1299.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="957.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="954.6" y="1283.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="957.6" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="954.6" y="1267.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="957.6" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="954.6" y="1251.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="957.6" y="1262.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.65%)</title><rect x="954.9" y="1347.0" width="7.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="957.9" y="1358.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.20%)</title><rect x="954.9" y="1331.0" width="2.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="957.9" y="1342.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="954.9" y="1315.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="957.9" y="1326.0"></text>
</g>
<g>
<title>read (2 samples, 0.04%)</title><rect x="954.9" y="1299.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="957.9" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="954.9" y="1283.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="957.9" y="1294.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="954.9" y="1267.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="957.9" y="1278.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="954.9" y="1251.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="957.9" y="1262.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="954.9" y="1235.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="957.9" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="954.9" y="1219.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="957.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="954.9" y="1203.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="957.9" y="1214.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="954.9" y="1187.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="957.9" y="1198.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="954.9" y="1171.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="957.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="955.1" y="1155.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="958.1" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="955.1" y="1139.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="958.1" y="1150.0"></text>
</g>
<g>
<title>read (7 samples, 0.15%)</title><rect x="955.4" y="1315.0" width="1.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="958.4" y="1326.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="955.4" y="1299.0" width="1.8" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="958.4" y="1310.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="955.4" y="1283.0" width="1.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="958.4" y="1294.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="955.4" y="1267.0" width="1.8" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="958.4" y="1278.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="955.4" y="1251.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="958.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="955.6" y="1235.0" width="1.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="958.6" y="1246.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="955.6" y="1219.0" width="1.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="958.6" y="1230.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="955.6" y="1203.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="958.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="955.6" y="1187.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="958.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="956.4" y="1171.0" width="0.8" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="959.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="956.4" y="1155.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="959.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="956.9" y="1139.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="959.9" y="1150.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="957.2" y="1331.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="960.2" y="1342.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.96] (1 samples, 0.02%)</title><rect x="957.2" y="1315.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="960.2" y="1326.0"></text>
</g>
<g>
<title>read (1 samples, 0.02%)</title><rect x="957.2" y="1299.0" width="0.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="960.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="957.2" y="1283.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="960.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="957.2" y="1267.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="960.2" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="957.2" y="1251.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="960.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="957.2" y="1235.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="960.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="957.2" y="1219.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="960.2" y="1230.0"></text>
</g>
<g>
<title>read (20 samples, 0.44%)</title><rect x="957.4" y="1331.0" width="5.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="960.4" y="1342.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.44%)</title><rect x="957.4" y="1315.0" width="5.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="960.4" y="1326.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.44%)</title><rect x="957.4" y="1299.0" width="5.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="960.4" y="1310.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.41%)</title><rect x="957.7" y="1283.0" width="4.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="960.7" y="1294.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.41%)</title><rect x="957.7" y="1267.0" width="4.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="960.7" y="1278.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.41%)</title><rect x="957.7" y="1251.0" width="4.9" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="960.7" y="1262.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.39%)</title><rect x="958.0" y="1235.0" width="4.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="961.0" y="1246.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.39%)</title><rect x="958.0" y="1219.0" width="4.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="961.0" y="1230.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.28%)</title><rect x="959.2" y="1203.0" width="3.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="962.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.15%)</title><rect x="960.8" y="1187.0" width="1.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="963.8" y="1198.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="961.6" y="1171.0" width="1.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="964.6" y="1182.0"></text>
</g>
<g>
<title>read (5 samples, 0.11%)</title><rect x="962.6" y="1347.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="965.6" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processReadyEvents (7 samples, 0.15%)</title><rect x="963.9" y="1379.0" width="1.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="966.9" y="1390.0"></text>
</g>
<g>
<title>java/util/HashSet.add (5 samples, 0.11%)</title><rect x="963.9" y="1363.0" width="1.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="966.9" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.put (5 samples, 0.11%)</title><rect x="963.9" y="1347.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="966.9" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (5 samples, 0.11%)</title><rect x="963.9" y="1331.0" width="1.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="966.9" y="1342.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (4 samples, 0.09%)</title><rect x="964.1" y="1315.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="967.1" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.nioReadyOps (1 samples, 0.02%)</title><rect x="965.2" y="1363.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="968.2" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (1 samples, 0.02%)</title><rect x="965.2" y="1347.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="968.2" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateAndSetReadyOps (1 samples, 0.02%)</title><rect x="965.4" y="1363.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="968.4" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateAndSetReadyOps (1 samples, 0.02%)</title><rect x="965.4" y="1347.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.4" y="1358.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateReadyOps (1 samples, 0.02%)</title><rect x="965.4" y="1331.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="968.4" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.isConnected (1 samples, 0.02%)</title><rect x="965.4" y="1315.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="968.4" y="1326.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (4 samples, 0.09%)</title><rect x="965.7" y="1395.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="968.7" y="1406.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.registeredEvents (1 samples, 0.02%)</title><rect x="966.2" y="1379.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="969.2" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/SocketChannelImpl.translateInterestOps (1 samples, 0.02%)</title><rect x="966.2" y="1363.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="969.2" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectionKeyImpl.translateInterestOps (1 samples, 0.02%)</title><rect x="966.4" y="1379.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="969.4" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (8 samples, 0.17%)</title><rect x="966.7" y="1395.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="969.7" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (8 samples, 0.17%)</title><rect x="966.7" y="1379.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.7" y="1390.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (8 samples, 0.17%)</title><rect x="966.7" y="1363.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="969.7" y="1374.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (8 samples, 0.17%)</title><rect x="966.7" y="1347.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="969.7" y="1358.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (8 samples, 0.17%)</title><rect x="966.7" y="1331.0" width="2.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.7" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.end (4 samples, 0.09%)</title><rect x="968.8" y="1395.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.8" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.end (4 samples, 0.09%)</title><rect x="968.8" y="1379.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="971.8" y="1390.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (4 samples, 0.09%)</title><rect x="968.8" y="1363.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="971.8" y="1374.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (4 samples, 0.09%)</title><rect x="968.8" y="1347.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="971.8" y="1358.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (4 samples, 0.09%)</title><rect x="968.8" y="1331.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="971.8" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (2 samples, 0.04%)</title><rect x="969.8" y="1395.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="972.8" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancelledKeys (2 samples, 0.04%)</title><rect x="969.8" y="1379.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="972.8" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processEvents (3 samples, 0.07%)</title><rect x="970.3" y="1411.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="973.3" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.selectNow (6 samples, 0.13%)</title><rect x="971.1" y="1443.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.1" y="1454.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.lockAndDoSelect (6 samples, 0.13%)</title><rect x="971.1" y="1427.0" width="1.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.1" y="1438.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.doSelect (6 samples, 0.13%)</title><rect x="971.1" y="1411.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="974.1" y="1422.0"></text>
</g>
<g>
<title>sun/nio/ch/EPoll.wait (4 samples, 0.09%)</title><rect x="971.1" y="1395.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="974.1" y="1406.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="971.3" y="1379.0" width="0.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="974.3" y="1390.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.07%)</title><rect x="971.3" y="1363.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="974.3" y="1374.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="971.3" y="1347.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="974.3" y="1358.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="971.3" y="1331.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="974.3" y="1342.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="971.6" y="1315.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="974.6" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="971.6" y="1299.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="974.6" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="971.6" y="1283.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="974.6" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="971.8" y="1267.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="974.8" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="971.8" y="1251.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="974.8" y="1262.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.begin (1 samples, 0.02%)</title><rect x="972.1" y="1395.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="975.1" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.begin (1 samples, 0.02%)</title><rect x="972.1" y="1379.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="975.1" y="1390.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractInterruptibleChannel.blockedOn (1 samples, 0.02%)</title><rect x="972.1" y="1363.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="975.1" y="1374.0"></text>
</g>
<g>
<title>java/lang/System$2.blockedOn (1 samples, 0.02%)</title><rect x="972.1" y="1347.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="975.1" y="1358.0"></text>
</g>
<g>
<title>java/lang/Thread.blockedOn (1 samples, 0.02%)</title><rect x="972.1" y="1331.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="975.1" y="1342.0"></text>
</g>
<g>
<title>sun/nio/ch/SelectorImpl.processDeregisterQueue (1 samples, 0.02%)</title><rect x="972.3" y="1395.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="975.3" y="1406.0"></text>
</g>
<g>
<title>java/nio/channels/spi/AbstractSelector.cancelledKeys (1 samples, 0.02%)</title><rect x="972.3" y="1379.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="975.3" y="1390.0"></text>
</g>
<g>
<title>sun/nio/ch/EPollSelectorImpl.processUpdateQueue (1 samples, 0.02%)</title><rect x="972.3" y="1363.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="975.3" y="1374.0"></text>
</g>
<g>
<title>sun/nio/ch/Util$2.clear (1 samples, 0.02%)</title><rect x="972.6" y="1443.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="975.6" y="1454.0"></text>
</g>
<g>
<title>java/util/HashSet.clear (1 samples, 0.02%)</title><rect x="972.6" y="1427.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="975.6" y="1438.0"></text>
</g>
<g>
<title>java/util/HashMap.clear (1 samples, 0.02%)</title><rect x="972.6" y="1411.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="975.6" y="1422.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (520 samples, 11.32%)</title><rect x="972.9" y="1459.0" width="133.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="975.9" y="1470.0">one/nio/server/Se..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.02%)</title><rect x="973.9" y="1443.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="976.9" y="1454.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (2 samples, 0.04%)</title><rect x="974.1" y="1443.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="977.1" y="1454.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.04%)</title><rect x="974.7" y="1443.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="977.7" y="1454.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (2 samples, 0.04%)</title><rect x="974.7" y="1427.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="977.7" y="1438.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.02%)</title><rect x="975.2" y="1443.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="978.2" y="1454.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (130 samples, 2.83%)</title><rect x="975.4" y="1443.0" width="33.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="978.4" y="1454.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.07%)</title><rect x="976.5" y="1427.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="979.5" y="1438.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.07%)</title><rect x="976.5" y="1411.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="979.5" y="1422.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (123 samples, 2.68%)</title><rect x="977.2" y="1427.0" width="31.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="980.2" y="1438.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.11%)</title><rect x="980.1" y="1411.0" width="1.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="983.1" y="1422.0"></text>
</g>
<g>
<title>[unknown] (104 samples, 2.26%)</title><rect x="981.3" y="1411.0" width="26.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="984.3" y="1422.0">[..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="981.3" y="1395.0" width="0.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="984.3" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="981.3" y="1379.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="984.3" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="981.3" y="1363.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="984.3" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="981.3" y="1347.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="984.3" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="981.3" y="1331.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="984.3" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="981.3" y="1315.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="984.3" y="1326.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="981.6" y="1379.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="984.6" y="1390.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.04%)</title><rect x="981.9" y="1395.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="984.9" y="1406.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="982.4" y="1395.0" width="0.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="985.4" y="1406.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.11%)</title><rect x="982.6" y="1395.0" width="1.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="985.6" y="1406.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="983.1" y="1379.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="986.1" y="1390.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="983.7" y="1379.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="986.7" y="1390.0"></text>
</g>
<g>
<title>epoll_wait (94 samples, 2.05%)</title><rect x="983.9" y="1395.0" width="24.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="986.9" y="1406.0">e..</text>
</g>
<g>
<title>[unknown] (85 samples, 1.85%)</title><rect x="986.2" y="1379.0" width="21.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="989.2" y="1390.0">[..</text>
</g>
<g>
<title>[unknown] (85 samples, 1.85%)</title><rect x="986.2" y="1363.0" width="21.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="989.2" y="1374.0">[..</text>
</g>
<g>
<title>[unknown] (83 samples, 1.81%)</title><rect x="986.7" y="1347.0" width="21.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="989.7" y="1358.0">[..</text>
</g>
<g>
<title>[unknown] (83 samples, 1.81%)</title><rect x="986.7" y="1331.0" width="21.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="989.7" y="1342.0">[..</text>
</g>
<g>
<title>[unknown] (81 samples, 1.76%)</title><rect x="987.3" y="1315.0" width="20.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="990.3" y="1326.0"></text>
</g>
<g>
<title>[unknown] (74 samples, 1.61%)</title><rect x="989.1" y="1299.0" width="19.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="992.1" y="1310.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 1.42%)</title><rect x="991.4" y="1283.0" width="16.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="994.4" y="1294.0"></text>
</g>
<g>
<title>[unknown] (53 samples, 1.15%)</title><rect x="994.4" y="1267.0" width="13.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="997.4" y="1278.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.89%)</title><rect x="997.5" y="1251.0" width="10.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1000.5" y="1262.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.76%)</title><rect x="999.1" y="1235.0" width="9.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1002.1" y="1246.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="1008.1" y="1411.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1011.1" y="1422.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="1008.6" y="1411.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1011.6" y="1422.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (380 samples, 8.28%)</title><rect x="1008.8" y="1443.0" width="97.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1011.8" y="1454.0">one/nio/net..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1009.4" y="1427.0" width="0.2" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1012.4" y="1438.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1009.4" y="1411.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1012.4" y="1422.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1009.4" y="1395.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1012.4" y="1406.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1009.4" y="1379.0" width="0.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1012.4" y="1390.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1009.4" y="1363.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1012.4" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1009.4" y="1347.0" width="0.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1012.4" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1009.4" y="1331.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1012.4" y="1342.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (377 samples, 8.21%)</title><rect x="1009.6" y="1427.0" width="96.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1012.6" y="1438.0">one/nio/htt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (284 samples, 6.18%)</title><rect x="1010.1" y="1411.0" width="73.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1013.1" y="1422.0">one/nio/..</text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1010.4" y="1395.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1013.4" y="1406.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (228 samples, 4.97%)</title><rect x="1010.6" y="1395.0" width="58.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1013.6" y="1406.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (225 samples, 4.90%)</title><rect x="1011.4" y="1379.0" width="57.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1014.4" y="1390.0">one/ni..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (213 samples, 4.64%)</title><rect x="1011.4" y="1363.0" width="54.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1014.4" y="1374.0">Reque..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (8 samples, 0.17%)</title><rect x="1011.4" y="1347.0" width="2.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1014.4" y="1358.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.07%)</title><rect x="1011.4" y="1331.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1014.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="1011.7" y="1315.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1014.7" y="1326.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="1011.9" y="1299.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1014.9" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.02%)</title><rect x="1012.2" y="1331.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1015.2" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="1012.4" y="1331.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1015.4" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsBeginEnd (1 samples, 0.02%)</title><rect x="1012.4" y="1315.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1015.4" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="1012.7" y="1315.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1015.7" y="1326.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.04%)</title><rect x="1012.9" y="1331.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1015.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1013.2" y="1315.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1016.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="1013.2" y="1299.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1016.2" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="1013.2" y="1283.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1016.2" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.entity (205 samples, 4.46%)</title><rect x="1013.5" y="1347.0" width="52.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1016.5" y="1358.0">ru/ma..</text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1065614321.linkToTargetMethod (1 samples, 0.02%)</title><rect x="1015.0" y="1331.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1018.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$DMH/380062173.invokeStatic (1 samples, 0.02%)</title><rect x="1015.0" y="1315.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1018.0" y="1326.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$343/480297865.get$Lambda (1 samples, 0.02%)</title><rect x="1015.0" y="1299.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1018.0" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$343/480297865.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1015.0" y="1283.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1018.0" y="1294.0"></text>
</g>
<g>
<title>java/util/HashSet.add (2 samples, 0.04%)</title><rect x="1015.3" y="1331.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1018.3" y="1342.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.02%)</title><rect x="1015.8" y="1331.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1018.8" y="1342.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (8 samples, 0.17%)</title><rect x="1016.0" y="1331.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1019.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.09%)</title><rect x="1016.8" y="1315.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1019.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="1017.1" y="1299.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1020.1" y="1310.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="1017.3" y="1299.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1020.3" y="1310.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="1017.6" y="1283.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1020.6" y="1294.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="1017.6" y="1267.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1020.6" y="1278.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="1017.8" y="1315.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1020.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="1017.8" y="1299.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1020.8" y="1310.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="1017.8" y="1283.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1020.8" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ConsistentHashImpl.all (65 samples, 1.42%)</title><rect x="1018.1" y="1331.0" width="16.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1021.1" y="1342.0"></text>
</g>
<g>
<title>java/util/Set.copyOf (64 samples, 1.39%)</title><rect x="1018.3" y="1315.0" width="16.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1021.3" y="1326.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.toArray (14 samples, 0.30%)</title><rect x="1018.3" y="1299.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1021.3" y="1310.0"></text>
</g>
<g>
<title>java/util/HashMap$KeyIterator.next (3 samples, 0.07%)</title><rect x="1020.1" y="1283.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1023.1" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap$HashIterator.nextNode (3 samples, 0.07%)</title><rect x="1020.1" y="1267.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1023.1" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1020.7" y="1251.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1023.7" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1020.7" y="1235.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1023.7" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1020.7" y="1219.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1023.7" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1020.7" y="1203.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1023.7" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1020.7" y="1187.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1023.7" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1020.7" y="1171.0" width="0.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1023.7" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1020.7" y="1155.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1023.7" y="1166.0"></text>
</g>
<g>
<title>java/util/HashSet.iterator (3 samples, 0.07%)</title><rect x="1020.9" y="1283.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1023.9" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.keySet (3 samples, 0.07%)</title><rect x="1020.9" y="1267.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1023.9" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1021.4" y="1251.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1024.4" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1021.4" y="1235.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1024.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1021.4" y="1219.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1024.4" y="1230.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$AbstractImmutableList.iterator (1 samples, 0.02%)</title><rect x="1021.7" y="1283.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1024.7" y="1294.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListItr.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1021.7" y="1267.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1024.7" y="1278.0"></text>
</g>
<g>
<title>java/util/HashSet.&lt;init&gt; (45 samples, 0.98%)</title><rect x="1021.9" y="1299.0" width="11.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1024.9" y="1310.0"></text>
</g>
<g>
<title>java/util/AbstractCollection.addAll (37 samples, 0.81%)</title><rect x="1022.5" y="1283.0" width="9.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1025.5" y="1294.0"></text>
</g>
<g>
<title>java/util/HashSet.add (26 samples, 0.57%)</title><rect x="1023.0" y="1267.0" width="6.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1026.0" y="1278.0"></text>
</g>
<g>
<title>java/util/HashMap.put (26 samples, 0.57%)</title><rect x="1023.0" y="1251.0" width="6.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1026.0" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="1023.0" y="1235.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1026.0" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="1023.2" y="1219.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1026.2" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (24 samples, 0.52%)</title><rect x="1023.5" y="1235.0" width="6.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1026.5" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.04%)</title><rect x="1024.3" y="1219.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1027.3" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.afterNodeInsertion (4 samples, 0.09%)</title><rect x="1024.8" y="1219.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1027.8" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (8 samples, 0.17%)</title><rect x="1025.8" y="1219.0" width="2.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1028.8" y="1230.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (2 samples, 0.04%)</title><rect x="1027.9" y="1219.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1030.9" y="1230.0"></text>
</g>
<g>
<title>vtable stub (5 samples, 0.11%)</title><rect x="1028.4" y="1219.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1031.4" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeyIterator.next (1 samples, 0.02%)</title><rect x="1029.7" y="1267.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1032.7" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.nextEntry (1 samples, 0.02%)</title><rect x="1029.7" y="1251.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1032.7" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.successor (1 samples, 0.02%)</title><rect x="1029.7" y="1235.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1032.7" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (1 samples, 0.02%)</title><rect x="1029.9" y="1267.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1032.9" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (2 samples, 0.04%)</title><rect x="1030.2" y="1267.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1033.2" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeSet.iterator (5 samples, 0.11%)</title><rect x="1030.7" y="1267.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.7" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap$KeySet.iterator (4 samples, 0.09%)</title><rect x="1030.7" y="1251.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.7" y="1262.0"></text>
</g>
<g>
<title>java/util/TreeMap.keyIterator (4 samples, 0.09%)</title><rect x="1030.7" y="1235.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1033.7" y="1246.0"></text>
</g>
<g>
<title>java/util/TreeMap.getFirstEntry (2 samples, 0.04%)</title><rect x="1031.2" y="1219.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1034.2" y="1230.0"></text>
</g>
<g>
<title>java/util/TreeMap.navigableKeySet (1 samples, 0.02%)</title><rect x="1031.7" y="1251.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1034.7" y="1262.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (5 samples, 0.11%)</title><rect x="1032.0" y="1283.0" width="1.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1035.0" y="1294.0"></text>
</g>
<g>
<title>java/util/HashMap.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1032.0" y="1267.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1035.0" y="1278.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (2 samples, 0.04%)</title><rect x="1032.7" y="1267.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1035.7" y="1278.0"></text>
</g>
<g>
<title>java/util/TreeMap$PrivateEntryIterator.hasNext (1 samples, 0.02%)</title><rect x="1033.2" y="1283.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1036.2" y="1294.0"></text>
</g>
<g>
<title>java/util/Set.of (5 samples, 0.11%)</title><rect x="1033.5" y="1299.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1036.5" y="1310.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1034.3" y="1283.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1037.3" y="1294.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$SetN.probe (1 samples, 0.02%)</title><rect x="1034.5" y="1267.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1037.5" y="1278.0"></text>
</g>
<g>
<title>java/lang/Math.floorMod (1 samples, 0.02%)</title><rect x="1034.5" y="1251.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1037.5" y="1262.0"></text>
</g>
<g>
<title>java/lang/Math.floorDiv (1 samples, 0.02%)</title><rect x="1034.5" y="1235.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1037.5" y="1246.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/RF.from (39 samples, 0.85%)</title><rect x="1034.8" y="1331.0" width="10.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1037.8" y="1342.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.02%)</title><rect x="1035.3" y="1315.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1038.3" y="1326.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.on (1 samples, 0.02%)</title><rect x="1035.3" y="1299.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1038.3" y="1310.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splitToList (30 samples, 0.65%)</title><rect x="1035.6" y="1315.0" width="7.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1038.6" y="1326.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (18 samples, 0.39%)</title><rect x="1035.8" y="1299.0" width="4.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1038.8" y="1310.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (17 samples, 0.37%)</title><rect x="1036.1" y="1283.0" width="4.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1039.1" y="1294.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (16 samples, 0.35%)</title><rect x="1036.3" y="1267.0" width="4.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1039.3" y="1278.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.computeNext (16 samples, 0.35%)</title><rect x="1036.3" y="1251.0" width="4.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1039.3" y="1262.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.separatorStart (5 samples, 0.11%)</title><rect x="1037.4" y="1235.0" width="1.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1040.4" y="1246.0"></text>
</g>
<g>
<title>com/google/common/base/CharMatcher.indexIn (4 samples, 0.09%)</title><rect x="1037.6" y="1219.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1040.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.04%)</title><rect x="1038.1" y="1203.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1041.1" y="1214.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.02%)</title><rect x="1038.4" y="1187.0" width="0.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1041.4" y="1198.0"></text>
</g>
<g>
<title>java/lang/String.subSequence (7 samples, 0.15%)</title><rect x="1038.6" y="1235.0" width="1.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1041.6" y="1246.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.11%)</title><rect x="1039.2" y="1219.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1042.2" y="1230.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="1039.7" y="1203.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1042.7" y="1214.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="1040.2" y="1187.0" width="0.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1043.2" y="1198.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.next (4 samples, 0.09%)</title><rect x="1040.4" y="1299.0" width="1.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1043.4" y="1310.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.hasNext (4 samples, 0.09%)</title><rect x="1040.4" y="1283.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1043.4" y="1294.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.tryToComputeNext (1 samples, 0.02%)</title><rect x="1041.5" y="1299.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1044.5" y="1310.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter.splittingIterator (3 samples, 0.07%)</title><rect x="1041.7" y="1299.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.7" y="1310.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (3 samples, 0.07%)</title><rect x="1041.7" y="1283.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1044.7" y="1294.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1.iterator (3 samples, 0.07%)</title><rect x="1041.7" y="1267.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1044.7" y="1278.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$1$1.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1042.2" y="1251.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1045.2" y="1262.0"></text>
</g>
<g>
<title>com/google/common/base/Splitter$SplittingIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1042.2" y="1235.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1045.2" y="1246.0"></text>
</g>
<g>
<title>com/google/common/base/AbstractIterator.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1042.2" y="1219.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.2" y="1230.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="1042.5" y="1299.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1045.5" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (2 samples, 0.04%)</title><rect x="1042.5" y="1283.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1045.5" y="1294.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="1042.5" y="1267.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1045.5" y="1278.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (2 samples, 0.04%)</title><rect x="1042.5" y="1251.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1045.5" y="1262.0"></text>
</g>
<g>
<title>java/util/ArrayList.newCapacity (2 samples, 0.04%)</title><rect x="1042.5" y="1235.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1045.5" y="1246.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableList (1 samples, 0.02%)</title><rect x="1043.0" y="1299.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1046.0" y="1310.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.02%)</title><rect x="1043.3" y="1315.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1046.3" y="1326.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.02%)</title><rect x="1043.3" y="1299.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1046.3" y="1310.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableList.get (5 samples, 0.11%)</title><rect x="1043.5" y="1315.0" width="1.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1046.5" y="1326.0"></text>
</g>
<g>
<title>java/util/ArrayList.get (1 samples, 0.02%)</title><rect x="1044.6" y="1299.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1047.6" y="1310.0"></text>
</g>
<g>
<title>java/util/ArrayList.elementData (1 samples, 0.02%)</title><rect x="1044.6" y="1283.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1047.6" y="1294.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer.executeAsync (83 samples, 1.81%)</title><rect x="1044.8" y="1331.0" width="21.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1047.8" y="1342.0">r..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.04%)</title><rect x="1044.8" y="1315.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1047.8" y="1326.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.04%)</title><rect x="1044.8" y="1299.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1047.8" y="1310.0"></text>
</g>
<g>
<title>ru/mail/polis/service/alex/ReplicatedHttpServer$$Lambda$109/2125614715.get$Lambda (2 samples, 0.04%)</title><rect x="1044.8" y="1283.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1047.8" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (81 samples, 1.76%)</title><rect x="1045.3" y="1315.0" width="20.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1048.3" y="1326.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.offer (81 samples, 1.76%)</title><rect x="1045.3" y="1299.0" width="20.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1048.3" y="1310.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue$Node.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1045.3" y="1283.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1048.3" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.enqueue (4 samples, 0.09%)</title><rect x="1045.6" y="1283.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1048.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/LinkedBlockingQueue.signalNotEmpty (66 samples, 1.44%)</title><rect x="1046.6" y="1283.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1049.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (66 samples, 1.44%)</title><rect x="1046.6" y="1267.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1049.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (66 samples, 1.44%)</title><rect x="1046.6" y="1251.0" width="17.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1049.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (66 samples, 1.44%)</title><rect x="1046.6" y="1235.0" width="17.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1049.6" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (66 samples, 1.44%)</title><rect x="1046.6" y="1219.0" width="17.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1049.6" y="1230.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (66 samples, 1.44%)</title><rect x="1046.6" y="1203.0" width="17.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1049.6" y="1214.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.02%)</title><rect x="1046.6" y="1187.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1049.6" y="1198.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.02%)</title><rect x="1046.9" y="1187.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1049.9" y="1198.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="1047.1" y="1187.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1050.1" y="1198.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.22%)</title><rect x="1047.4" y="1187.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1050.4" y="1198.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.216] (1 samples, 0.02%)</title><rect x="1047.6" y="1171.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1050.6" y="1182.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="1047.9" y="1171.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1050.9" y="1182.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="1048.2" y="1171.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1051.2" y="1182.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.07%)</title><rect x="1048.4" y="1171.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1051.4" y="1182.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.04%)</title><rect x="1049.2" y="1171.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1052.2" y="1182.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="1049.7" y="1171.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1052.7" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.04%)</title><rect x="1050.0" y="1187.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1053.0" y="1198.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="1050.5" y="1187.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1053.5" y="1198.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (49 samples, 1.07%)</title><rect x="1051.0" y="1187.0" width="12.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1054.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.96%)</title><rect x="1052.3" y="1171.0" width="11.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1055.3" y="1182.0"></text>
</g>
<g>
<title>[unknown] (44 samples, 0.96%)</title><rect x="1052.3" y="1155.0" width="11.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1055.3" y="1166.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.89%)</title><rect x="1053.0" y="1139.0" width="10.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1056.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.89%)</title><rect x="1053.0" y="1123.0" width="10.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1056.0" y="1134.0"></text>
</g>
<g>
<title>[unknown] (41 samples, 0.89%)</title><rect x="1053.0" y="1107.0" width="10.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1056.0" y="1118.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.78%)</title><rect x="1054.3" y="1091.0" width="9.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1057.3" y="1102.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.72%)</title><rect x="1055.1" y="1075.0" width="8.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1058.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (32 samples, 0.70%)</title><rect x="1055.3" y="1059.0" width="8.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1058.3" y="1070.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.getAndIncrement (2 samples, 0.04%)</title><rect x="1063.6" y="1283.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1066.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (4 samples, 0.09%)</title><rect x="1064.1" y="1283.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1067.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (4 samples, 0.09%)</title><rect x="1064.1" y="1267.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1067.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (3 samples, 0.07%)</title><rect x="1064.3" y="1251.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1067.3" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.compareAndSetWaitStatus (2 samples, 0.04%)</title><rect x="1064.3" y="1235.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1067.3" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.02%)</title><rect x="1064.9" y="1235.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1067.9" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$Node.setPrevRelaxed (1 samples, 0.02%)</title><rect x="1064.9" y="1219.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1067.9" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LL_V (1 samples, 0.02%)</title><rect x="1064.9" y="1203.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1067.9" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.set (1 samples, 0.02%)</title><rect x="1064.9" y="1187.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1067.9" y="1198.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.lock (2 samples, 0.04%)</title><rect x="1065.1" y="1283.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1068.1" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="1065.1" y="1267.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1068.1" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$NonfairSync.tryAcquire (2 samples, 0.04%)</title><rect x="1065.1" y="1251.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1068.1" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock$Sync.nonfairTryAcquire (2 samples, 0.04%)</title><rect x="1065.1" y="1235.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1068.1" y="1246.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.02%)</title><rect x="1065.6" y="1283.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1068.6" y="1294.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="1065.6" y="1267.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1068.6" y="1278.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.02%)</title><rect x="1065.6" y="1251.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1068.6" y="1262.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.02%)</title><rect x="1065.6" y="1235.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1068.6" y="1246.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="1065.6" y="1219.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1068.6" y="1230.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.02%)</title><rect x="1065.6" y="1203.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1068.6" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1065.6" y="1187.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1068.6" y="1198.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1065.6" y="1171.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1068.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1065.6" y="1155.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1068.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1065.6" y="1139.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1068.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1065.6" y="1123.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1068.6" y="1134.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1065.6" y="1107.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1068.6" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1065.6" y="1091.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1068.6" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1065.6" y="1075.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1068.6" y="1086.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.02%)</title><rect x="1065.9" y="1283.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1068.9" y="1294.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.04%)</title><rect x="1066.1" y="1363.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1069.1" y="1374.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.15%)</title><rect x="1066.7" y="1363.0" width="1.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1069.7" y="1374.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.15%)</title><rect x="1066.7" y="1347.0" width="1.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1069.7" y="1358.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.09%)</title><rect x="1066.9" y="1331.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1069.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.04%)</title><rect x="1067.4" y="1315.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1070.4" y="1326.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.04%)</title><rect x="1067.9" y="1331.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1070.9" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.02%)</title><rect x="1068.2" y="1315.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1071.2" y="1326.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="1068.2" y="1299.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1071.2" y="1310.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.07%)</title><rect x="1068.5" y="1363.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1071.5" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.07%)</title><rect x="1068.5" y="1347.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1071.5" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.07%)</title><rect x="1068.5" y="1331.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1071.5" y="1342.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1068.5" y="1315.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1071.5" y="1326.0"></text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (1 samples, 0.02%)</title><rect x="1068.5" y="1299.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1071.5" y="1310.0"></text>
</g>
<g>
<title>itable stub (2 samples, 0.04%)</title><rect x="1068.7" y="1299.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1071.7" y="1310.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30 samples, 0.65%)</title><rect x="1069.2" y="1395.0" width="7.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1072.2" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="1069.2" y="1379.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1072.2" y="1390.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (18 samples, 0.39%)</title><rect x="1069.7" y="1379.0" width="4.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.7" y="1390.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.07%)</title><rect x="1072.8" y="1363.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1075.8" y="1374.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="1073.6" y="1363.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1076.6" y="1374.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.20%)</title><rect x="1074.4" y="1379.0" width="2.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1077.4" y="1390.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.17%)</title><rect x="1074.6" y="1363.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1077.6" y="1374.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1076.2" y="1347.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1079.2" y="1358.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1076.2" y="1331.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1079.2" y="1342.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1076.2" y="1315.0" width="0.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1079.2" y="1326.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1076.2" y="1299.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1079.2" y="1310.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1076.2" y="1283.0" width="0.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1079.2" y="1294.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1076.2" y="1267.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1079.2" y="1278.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getByte (1 samples, 0.02%)</title><rect x="1076.4" y="1347.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1079.4" y="1358.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.02%)</title><rect x="1076.7" y="1379.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1079.7" y="1390.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.13%)</title><rect x="1076.9" y="1395.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1079.9" y="1406.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.04%)</title><rect x="1077.2" y="1379.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1080.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.04%)</title><rect x="1077.2" y="1363.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1080.2" y="1374.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (3 samples, 0.07%)</title><rect x="1077.7" y="1379.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1080.7" y="1390.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (12 samples, 0.26%)</title><rect x="1078.5" y="1395.0" width="3.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1081.5" y="1406.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.09%)</title><rect x="1079.2" y="1379.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1082.2" y="1390.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="1079.2" y="1363.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1082.2" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.02%)</title><rect x="1079.2" y="1347.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1082.2" y="1358.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.07%)</title><rect x="1079.5" y="1363.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1082.5" y="1374.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="1080.0" y="1347.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1083.0" y="1358.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="1080.0" y="1331.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1083.0" y="1342.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="1080.0" y="1315.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1083.0" y="1326.0"></text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 0.11%)</title><rect x="1080.3" y="1379.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.3" y="1390.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 0.11%)</title><rect x="1080.3" y="1363.0" width="1.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1083.3" y="1374.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1080.3" y="1347.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1083.3" y="1358.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1080.3" y="1331.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1083.3" y="1342.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 0.09%)</title><rect x="1080.5" y="1347.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1083.5" y="1358.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.13%)</title><rect x="1081.6" y="1395.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1084.6" y="1406.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.13%)</title><rect x="1081.6" y="1379.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1084.6" y="1390.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (91 samples, 1.98%)</title><rect x="1083.1" y="1411.0" width="23.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1086.1" y="1422.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (90 samples, 1.96%)</title><rect x="1083.4" y="1395.0" width="23.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1086.4" y="1406.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="1085.2" y="1379.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1088.2" y="1390.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.59%)</title><rect x="1085.7" y="1379.0" width="6.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1088.7" y="1390.0"></text>
</g>
<g>
<title>[unknown] (27 samples, 0.59%)</title><rect x="1085.7" y="1363.0" width="6.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1088.7" y="1374.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (24 samples, 0.52%)</title><rect x="1085.7" y="1347.0" width="6.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1088.7" y="1358.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="1086.7" y="1331.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1089.7" y="1342.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (2 samples, 0.04%)</title><rect x="1087.2" y="1331.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1090.2" y="1342.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (3 samples, 0.07%)</title><rect x="1087.7" y="1331.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1090.7" y="1342.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (12 samples, 0.26%)</title><rect x="1088.5" y="1331.0" width="3.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1091.5" y="1342.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.02%)</title><rect x="1089.0" y="1315.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1092.0" y="1326.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.198] (3 samples, 0.07%)</title><rect x="1089.3" y="1315.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1092.3" y="1326.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.13%)</title><rect x="1090.0" y="1315.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1093.0" y="1326.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (2 samples, 0.04%)</title><rect x="1091.1" y="1299.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1094.1" y="1310.0"></text>
</g>
<g>
<title>oopDesc* JNIHandles::resolve_impl&lt;false&gt;(_jobject*) (1 samples, 0.02%)</title><rect x="1091.6" y="1331.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1094.6" y="1342.0"></text>
</g>
<g>
<title>__GI___recv (3 samples, 0.07%)</title><rect x="1091.8" y="1347.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1094.8" y="1358.0"></text>
</g>
<g>
<title>__GI___recv (54 samples, 1.18%)</title><rect x="1092.6" y="1379.0" width="13.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1095.6" y="1390.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.18%)</title><rect x="1092.6" y="1363.0" width="13.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1095.6" y="1374.0"></text>
</g>
<g>
<title>[unknown] (54 samples, 1.18%)</title><rect x="1092.6" y="1347.0" width="13.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1095.6" y="1358.0"></text>
</g>
<g>
<title>[unknown] (50 samples, 1.09%)</title><rect x="1093.6" y="1331.0" width="12.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1096.6" y="1342.0"></text>
</g>
<g>
<title>[unknown] (49 samples, 1.07%)</title><rect x="1093.9" y="1315.0" width="12.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1096.9" y="1326.0"></text>
</g>
<g>
<title>[unknown] (47 samples, 1.02%)</title><rect x="1094.4" y="1299.0" width="12.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1097.4" y="1310.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.98%)</title><rect x="1094.9" y="1283.0" width="11.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1097.9" y="1294.0"></text>
</g>
<g>
<title>[unknown] (39 samples, 0.85%)</title><rect x="1096.5" y="1267.0" width="10.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1099.5" y="1278.0"></text>
</g>
<g>
<title>[unknown] (30 samples, 0.65%)</title><rect x="1098.8" y="1251.0" width="7.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1101.8" y="1262.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.37%)</title><rect x="1102.1" y="1235.0" width="4.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1105.1" y="1246.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.22%)</title><rect x="1103.9" y="1219.0" width="2.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1106.9" y="1230.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="1105.2" y="1203.0" width="1.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1108.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.09%)</title><rect x="1105.5" y="1187.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1108.5" y="1198.0"></text>
</g>
<g>
<title>start_thread (325 samples, 7.08%)</title><rect x="1106.5" y="1459.0" width="83.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1109.5" y="1470.0">start_thr..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (325 samples, 7.08%)</title><rect x="1106.5" y="1443.0" width="83.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1109.5" y="1454.0">thread_na..</text>
</g>
<g>
<title>Thread::call_run() (325 samples, 7.08%)</title><rect x="1106.5" y="1427.0" width="83.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1109.5" y="1438.0">Thread::c..</text>
</g>
<g>
<title>GangWorker::loop() (57 samples, 1.24%)</title><rect x="1106.5" y="1411.0" width="14.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1109.5" y="1422.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (54 samples, 1.18%)</title><rect x="1106.5" y="1395.0" width="13.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1109.5" y="1406.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (9 samples, 0.20%)</title><rect x="1106.7" y="1379.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1109.7" y="1390.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.02%)</title><rect x="1106.7" y="1363.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1109.7" y="1374.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.02%)</title><rect x="1106.7" y="1347.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1109.7" y="1358.0"></text>
</g>
<g>
<title>SpinPause (8 samples, 0.17%)</title><rect x="1107.0" y="1363.0" width="2.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1110.0" y="1374.0"></text>
</g>
<g>
<title>G1RemSet::oops_into_collection_set_do(G1ParScanThreadState*, unsigned int) (40 samples, 0.87%)</title><rect x="1109.1" y="1379.0" width="10.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1112.1" y="1390.0"></text>
</g>
<g>
<title>G1RemSet::update_rem_set(G1ParScanThreadState*, unsigned int) (40 samples, 0.87%)</title><rect x="1109.1" y="1363.0" width="10.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1112.1" y="1374.0"></text>
</g>
<g>
<title>G1CollectedHeap::iterate_dirty_card_closure(CardTableEntryClosure*, unsigned int) (40 samples, 0.87%)</title><rect x="1109.1" y="1347.0" width="10.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1112.1" y="1358.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::apply_closure_during_gc(CardTableEntryClosure*, unsigned int) (40 samples, 0.87%)</title><rect x="1109.1" y="1331.0" width="10.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1112.1" y="1342.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.02%)</title><rect x="1109.1" y="1315.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1112.1" y="1326.0"></text>
</g>
<g>
<title>G1RefineCardClosure::do_card_ptr(signed char*, unsigned int) (39 samples, 0.85%)</title><rect x="1109.3" y="1315.0" width="10.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1112.3" y="1326.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.02%)</title><rect x="1109.3" y="1299.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1112.3" y="1310.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (18 samples, 0.39%)</title><rect x="1109.6" y="1299.0" width="4.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1112.6" y="1310.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (11 samples, 0.24%)</title><rect x="1111.4" y="1283.0" width="2.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1114.4" y="1294.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (3 samples, 0.07%)</title><rect x="1113.4" y="1267.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1116.4" y="1278.0"></text>
</g>
<g>
<title>G1RemSet::refine_card_during_gc(signed char*, G1ScanObjsDuringUpdateRSClosure*) [clone .part.123] (20 samples, 0.44%)</title><rect x="1114.2" y="1299.0" width="5.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1117.2" y="1310.0"></text>
</g>
<g>
<title>bool HeapRegion::oops_on_card_seq_iterate_careful&lt;true, G1ScanObjsDuringUpdateRSClosure&gt;(MemRegion, G1ScanObjsDuringUpdateRSClosure*) (18 samples, 0.39%)</title><rect x="1114.2" y="1283.0" width="4.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1117.2" y="1294.0"></text>
</g>
<g>
<title>G1BlockOffsetTablePart::forward_to_block_containing_addr_slow(HeapWord*, HeapWord*, void const*) (2 samples, 0.04%)</title><rect x="1115.0" y="1267.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1118.0" y="1278.0"></text>
</g>
<g>
<title>G1CollectedHeap::heap() (1 samples, 0.02%)</title><rect x="1115.0" y="1251.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1118.0" y="1262.0"></text>
</g>
<g>
<title>HeapRegion::block_size(HeapWord const*) const (1 samples, 0.02%)</title><rect x="1115.2" y="1251.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1118.2" y="1262.0"></text>
</g>
<g>
<title>void G1ScanObjsDuringUpdateRSClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (8 samples, 0.17%)</title><rect x="1115.5" y="1267.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1118.5" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1117.3" y="1251.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1120.3" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1117.3" y="1235.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1120.3" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1117.3" y="1219.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1120.3" y="1230.0"></text>
</g>
<g>
<title>void OopOopIterateDispatch&lt;G1ScanObjsDuringUpdateRSClosure&gt;::Table::oop_oop_iterate&lt;InstanceKlass, unsigned int&gt;(G1ScanObjsDuringUpdateRSClosure*, oopDesc*, Klass*) (5 samples, 0.11%)</title><rect x="1117.5" y="1267.0" width="1.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1120.5" y="1278.0"></text>
</g>
<g>
<title>oopDesc::size() (1 samples, 0.02%)</title><rect x="1118.8" y="1283.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1121.8" y="1294.0"></text>
</g>
<g>
<title>oopDesc::size_given_klass(Klass*) (1 samples, 0.02%)</title><rect x="1119.1" y="1283.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1122.1" y="1294.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.02%)</title><rect x="1119.3" y="1379.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1122.3" y="1390.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.02%)</title><rect x="1119.3" y="1363.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1122.3" y="1374.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1119.3" y="1347.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1122.3" y="1358.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::scan_rem_set_roots(HeapRegion*) (1 samples, 0.02%)</title><rect x="1119.3" y="1331.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1122.3" y="1342.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (3 samples, 0.07%)</title><rect x="1119.6" y="1379.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1122.6" y="1390.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (2 samples, 0.04%)</title><rect x="1119.6" y="1363.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1122.6" y="1374.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_oops_do(bool, OopClosure*, CodeBlobClosure*) (2 samples, 0.04%)</title><rect x="1119.6" y="1347.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1122.6" y="1358.0"></text>
</g>
<g>
<title>JavaThread::oops_do(OopClosure*, CodeBlobClosure*) (2 samples, 0.04%)</title><rect x="1119.6" y="1331.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1122.6" y="1342.0"></text>
</g>
<g>
<title>frame::oops_do_internal(OopClosure*, CodeBlobClosure*, RegisterMap*, bool) (2 samples, 0.04%)</title><rect x="1119.6" y="1315.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1122.6" y="1326.0"></text>
</g>
<g>
<title>OopMapSet::oops_do(frame const*, RegisterMap const*, OopClosure*) (1 samples, 0.02%)</title><rect x="1119.8" y="1299.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1122.8" y="1310.0"></text>
</g>
<g>
<title>StringTable::possibly_parallel_oops_do(OopStorage::ParState&lt;false, false&gt;*, OopClosure*) (1 samples, 0.02%)</title><rect x="1120.1" y="1363.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1123.1" y="1374.0"></text>
</g>
<g>
<title>G1RedirtyLoggedCardsTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1120.4" y="1395.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1123.4" y="1406.0"></text>
</g>
<g>
<title>DirtyCardQueueSet::par_apply_closure_to_all_completed_buffers(CardTableEntryClosure*) (1 samples, 0.02%)</title><rect x="1120.4" y="1379.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1123.4" y="1390.0"></text>
</g>
<g>
<title>RedirtyLoggedCardTableEntryClosure::do_card_ptr(signed char*, unsigned int) (1 samples, 0.02%)</title><rect x="1120.4" y="1363.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1123.4" y="1374.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (2 samples, 0.04%)</title><rect x="1120.6" y="1395.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1123.6" y="1406.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (2 samples, 0.04%)</title><rect x="1120.6" y="1379.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1123.6" y="1390.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) [clone .part.67] (2 samples, 0.04%)</title><rect x="1120.6" y="1363.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1123.6" y="1374.0"></text>
</g>
<g>
<title>StackFrameStream::StackFrameStream(JavaThread*, bool) (1 samples, 0.02%)</title><rect x="1120.6" y="1347.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1123.6" y="1358.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.02%)</title><rect x="1120.6" y="1331.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1123.6" y="1342.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.02%)</title><rect x="1120.6" y="1315.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1123.6" y="1326.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.02%)</title><rect x="1120.9" y="1347.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1123.9" y="1358.0"></text>
</g>
<g>
<title>OopMapSet::update_register_map(frame const*, RegisterMap*) (1 samples, 0.02%)</title><rect x="1120.9" y="1331.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1123.9" y="1342.0"></text>
</g>
<g>
<title>OopMapStream::find_next() (1 samples, 0.02%)</title><rect x="1120.9" y="1315.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1123.9" y="1326.0"></text>
</g>
<g>
<title>JavaThread::run() (263 samples, 5.73%)</title><rect x="1121.1" y="1411.0" width="67.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1124.1" y="1422.0">JavaThr..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (263 samples, 5.73%)</title><rect x="1121.1" y="1395.0" width="67.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1124.1" y="1406.0">JavaThr..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (262 samples, 5.71%)</title><rect x="1121.1" y="1379.0" width="67.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1124.1" y="1390.0">Compile..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (262 samples, 5.71%)</title><rect x="1121.1" y="1363.0" width="67.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1124.1" y="1374.0">Compile..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (255 samples, 5.55%)</title><rect x="1121.1" y="1347.0" width="65.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.1" y="1358.0">C2Compi..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (255 samples, 5.55%)</title><rect x="1121.1" y="1331.0" width="65.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1124.1" y="1342.0">Compile..</text>
</g>
<g>
<title>CallGenerator::for_inline(ciMethod*, float) (1 samples, 0.02%)</title><rect x="1121.1" y="1315.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.1" y="1326.0"></text>
</g>
<g>
<title>InlineTree::check_can_parse(ciMethod*) (1 samples, 0.02%)</title><rect x="1121.1" y="1299.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1124.1" y="1310.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1121.1" y="1283.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.1" y="1294.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1121.1" y="1267.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.1" y="1278.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1121.1" y="1251.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1124.1" y="1262.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1121.1" y="1235.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1124.1" y="1246.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1121.1" y="1219.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1124.1" y="1230.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1121.1" y="1203.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1124.1" y="1214.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1121.1" y="1187.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1124.1" y="1198.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.02%)</title><rect x="1121.1" y="1171.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.1" y="1182.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1121.1" y="1155.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1124.1" y="1166.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.02%)</title><rect x="1121.1" y="1139.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1124.1" y="1150.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1121.1" y="1123.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1124.1" y="1134.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.02%)</title><rect x="1121.1" y="1107.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1124.1" y="1118.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (161 samples, 3.51%)</title><rect x="1121.4" y="1315.0" width="41.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.4" y="1326.0">Com..</text>
</g>
<g>
<title>Compile::Output() (5 samples, 0.11%)</title><rect x="1121.4" y="1299.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1124.4" y="1310.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (3 samples, 0.07%)</title><rect x="1121.4" y="1283.0" width="0.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1124.4" y="1294.0"></text>
</g>
<g>
<title>OopFlow::compute_reach(PhaseRegAlloc*, int, Dict*) (1 samples, 0.02%)</title><rect x="1121.9" y="1267.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1124.9" y="1278.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.02%)</title><rect x="1122.2" y="1283.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1125.2" y="1294.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.02%)</title><rect x="1122.2" y="1267.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1125.2" y="1278.0"></text>
</g>
<g>
<title>Compile::scratch_emit_size(Node const*) (1 samples, 0.02%)</title><rect x="1122.2" y="1251.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1125.2" y="1262.0"></text>
</g>
<g>
<title>MachSpillCopyNode::implementation(CodeBuffer*, PhaseRegAlloc*, bool, outputStream*) const (1 samples, 0.02%)</title><rect x="1122.2" y="1235.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1125.2" y="1246.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="1122.4" y="1283.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1125.4" y="1294.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (7 samples, 0.15%)</title><rect x="1122.7" y="1299.0" width="1.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1125.7" y="1310.0"></text>
</g>
<g>
<title>Compile::FillExceptionTables(unsigned int, unsigned int*, unsigned int*, Label*) (1 samples, 0.02%)</title><rect x="1123.4" y="1283.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1126.4" y="1294.0"></text>
</g>
<g>
<title>Compile::Process_OopMap_Node(MachNode*, int) (2 samples, 0.04%)</title><rect x="1123.7" y="1283.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1126.7" y="1294.0"></text>
</g>
<g>
<title>DebugInformationRecorder::create_scope_values(GrowableArray&lt;ScopeValue*&gt;*) (2 samples, 0.04%)</title><rect x="1123.7" y="1267.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1126.7" y="1278.0"></text>
</g>
<g>
<title>DebugInformationRecorder::find_sharable_decode_offset(int) (2 samples, 0.04%)</title><rect x="1123.7" y="1251.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1126.7" y="1262.0"></text>
</g>
<g>
<title>NonSafepointEmitter::emit_non_safepoint() (1 samples, 0.02%)</title><rect x="1124.2" y="1283.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1127.2" y="1294.0"></text>
</g>
<g>
<title>DebugInformationRecorder::describe_scope(int, methodHandle const&amp;, ciMethod*, int, bool, bool, bool, bool, DebugToken*, DebugToken*, DebugToken*) (1 samples, 0.02%)</title><rect x="1124.2" y="1267.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1127.2" y="1278.0"></text>
</g>
<g>
<title>ValueRecorder&lt;Metadata*&gt;::maybe_find_index(Metadata*) (1 samples, 0.02%)</title><rect x="1124.2" y="1251.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1127.2" y="1262.0"></text>
</g>
<g>
<title>Matcher::match() (9 samples, 0.20%)</title><rect x="1124.5" y="1299.0" width="2.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1127.5" y="1310.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.02%)</title><rect x="1124.5" y="1283.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1127.5" y="1294.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (8 samples, 0.17%)</title><rect x="1124.7" y="1283.0" width="2.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1127.7" y="1294.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.02%)</title><rect x="1125.2" y="1267.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1128.2" y="1278.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (4 samples, 0.09%)</title><rect x="1125.5" y="1267.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1128.5" y="1278.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.04%)</title><rect x="1125.5" y="1251.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1128.5" y="1262.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.04%)</title><rect x="1125.5" y="1235.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1128.5" y="1246.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.04%)</title><rect x="1125.5" y="1219.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1128.5" y="1230.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1125.8" y="1203.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1128.8" y="1214.0"></text>
</g>
<g>
<title>ProjNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1125.8" y="1187.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1128.8" y="1198.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (2 samples, 0.04%)</title><rect x="1126.0" y="1251.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1129.0" y="1262.0"></text>
</g>
<g>
<title>Matcher::ReduceInst_Interior(State*, int, Node*&amp;, MachNode*, unsigned int) (1 samples, 0.02%)</title><rect x="1126.0" y="1235.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1129.0" y="1246.0"></text>
</g>
<g>
<title>Matcher::ReduceOper(State*, int, Node*&amp;, MachNode*) (1 samples, 0.02%)</title><rect x="1126.0" y="1219.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1129.0" y="1230.0"></text>
</g>
<g>
<title>Node::Node(unsigned int) (1 samples, 0.02%)</title><rect x="1126.3" y="1235.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1129.3" y="1246.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1126.5" y="1267.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1129.5" y="1278.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (3 samples, 0.07%)</title><rect x="1126.8" y="1299.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1129.8" y="1310.0"></text>
</g>
<g>
<title>PhaseBlockLayout::find_edges() (2 samples, 0.04%)</title><rect x="1126.8" y="1283.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1129.8" y="1294.0"></text>
</g>
<g>
<title>PhaseBlockLayout::reorder_traces(int) (1 samples, 0.02%)</title><rect x="1127.3" y="1283.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1130.3" y="1294.0"></text>
</g>
<g>
<title>Trace::fixup_blocks(PhaseCFG&amp;) (1 samples, 0.02%)</title><rect x="1127.3" y="1267.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1130.3" y="1278.0"></text>
</g>
<g>
<title>Block::num_fall_throughs() (1 samples, 0.02%)</title><rect x="1127.3" y="1251.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1130.3" y="1262.0"></text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.02%)</title><rect x="1127.3" y="1235.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1130.3" y="1246.0"></text>
</g>
<g>
<title>PhaseCFG::PhaseCFG(Arena*, RootNode*, Matcher&amp;) (1 samples, 0.02%)</title><rect x="1127.6" y="1299.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1130.6" y="1310.0"></text>
</g>
<g>
<title>PhaseCFG::build_cfg() (1 samples, 0.02%)</title><rect x="1127.6" y="1283.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1130.6" y="1294.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (15 samples, 0.33%)</title><rect x="1127.8" y="1299.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.8" y="1310.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (15 samples, 0.33%)</title><rect x="1127.8" y="1283.0" width="3.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1130.8" y="1294.0"></text>
</g>
<g>
<title>MachProjNode::ideal_reg() const (1 samples, 0.02%)</title><rect x="1127.8" y="1267.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1130.8" y="1278.0"></text>
</g>
<g>
<title>PhaseCFG::call_catch_cleanup(Block*) (1 samples, 0.02%)</title><rect x="1128.1" y="1267.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1131.1" y="1278.0"></text>
</g>
<g>
<title>PhaseCFG::implicit_null_check(Block*, Node*, Node*, int) (1 samples, 0.02%)</title><rect x="1128.3" y="1267.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1131.3" y="1278.0"></text>
</g>
<g>
<title>PhaseCFG::latency_from_uses(Node*) (1 samples, 0.02%)</title><rect x="1128.3" y="1251.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.3" y="1262.0"></text>
</g>
<g>
<title>compL_rReg_immNode::pipeline() const (1 samples, 0.02%)</title><rect x="1128.3" y="1235.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1131.3" y="1246.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="1128.6" y="1267.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1131.6" y="1278.0"></text>
</g>
<g>
<title>PhaseCFG::replace_block_proj_ctrl(Node*) (1 samples, 0.02%)</title><rect x="1128.6" y="1251.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1131.6" y="1262.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (3 samples, 0.07%)</title><rect x="1128.8" y="1267.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1131.8" y="1278.0"></text>
</g>
<g>
<title>Node::needs_anti_dependence_check() const (1 samples, 0.02%)</title><rect x="1128.8" y="1251.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1131.8" y="1262.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_node_into_block(Node*, Block*) (2 samples, 0.04%)</title><rect x="1129.1" y="1251.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1132.1" y="1262.0"></text>
</g>
<g>
<title>Node_Array::insert(unsigned int, Node*) (1 samples, 0.02%)</title><rect x="1129.1" y="1235.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1132.1" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1129.4" y="1235.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1132.4" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1129.4" y="1219.0" width="0.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1132.4" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1129.4" y="1203.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1132.4" y="1214.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (2 samples, 0.04%)</title><rect x="1129.6" y="1267.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1132.6" y="1278.0"></text>
</g>
<g>
<title>PhaseCFG::needed_for_next_call(Block*, Node*, VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1129.6" y="1251.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1132.6" y="1262.0"></text>
</g>
<g>
<title>PhaseCFG::sched_call(Block*, unsigned int, Node_List&amp;, GrowableArray&lt;int&gt;&amp;, MachCallNode*, VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1129.9" y="1251.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1132.9" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (5 samples, 0.11%)</title><rect x="1130.1" y="1267.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1133.1" y="1278.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.04%)</title><rect x="1130.6" y="1251.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1133.6" y="1262.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1131.2" y="1251.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.2" y="1262.0"></text>
</g>
<g>
<title>Type::cmp(Type const*, Type const*) (1 samples, 0.02%)</title><rect x="1131.2" y="1235.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1134.2" y="1246.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.02%)</title><rect x="1131.4" y="1267.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1134.4" y="1278.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (119 samples, 2.59%)</title><rect x="1131.7" y="1299.0" width="30.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1134.7" y="1310.0">Ph..</text>
</g>
<g>
<title>CProjNode::is_block_proj() const (1 samples, 0.02%)</title><rect x="1131.7" y="1283.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1134.7" y="1294.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1131.9" y="1283.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1134.9" y="1294.0"></text>
</g>
<g>
<title>MachSpillCopyNode::out_RegMask() const (1 samples, 0.02%)</title><rect x="1132.2" y="1283.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1135.2" y="1294.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.02%)</title><rect x="1132.4" y="1283.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1135.4" y="1294.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (2 samples, 0.04%)</title><rect x="1132.7" y="1283.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1135.7" y="1294.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (10 samples, 0.22%)</title><rect x="1133.2" y="1283.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1136.2" y="1294.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (8 samples, 0.17%)</title><rect x="1133.7" y="1267.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1136.7" y="1278.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.02%)</title><rect x="1134.5" y="1251.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1137.5" y="1262.0"></text>
</g>
<g>
<title>IndexSetIterator::IndexSetIterator(IndexSet*) (1 samples, 0.02%)</title><rect x="1134.8" y="1251.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1137.8" y="1262.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.04%)</title><rect x="1135.0" y="1251.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1138.0" y="1262.0"></text>
</g>
<g>
<title>VectorSet::operator&gt;&gt;=(unsigned int) (1 samples, 0.02%)</title><rect x="1135.5" y="1251.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1138.5" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (6 samples, 0.13%)</title><rect x="1135.8" y="1283.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.8" y="1294.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1136.0" y="1267.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1139.0" y="1278.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (4 samples, 0.09%)</title><rect x="1136.3" y="1267.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1139.3" y="1278.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (3 samples, 0.07%)</title><rect x="1136.6" y="1251.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1139.6" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (10 samples, 0.22%)</title><rect x="1137.3" y="1283.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1140.3" y="1294.0"></text>
</g>
<g>
<title>PhaseChaitin::new_lrg(Node const*, unsigned int) (1 samples, 0.02%)</title><rect x="1139.6" y="1267.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1142.6" y="1278.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (32 samples, 0.70%)</title><rect x="1139.9" y="1283.0" width="8.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1142.9" y="1294.0"></text>
</g>
<g>
<title>IndexSet::IndexSet(IndexSet*) (1 samples, 0.02%)</title><rect x="1141.2" y="1267.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.2" y="1278.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1141.4" y="1267.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1144.4" y="1278.0"></text>
</g>
<g>
<title>Node::jvms() const (1 samples, 0.02%)</title><rect x="1141.7" y="1267.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1144.7" y="1278.0"></text>
</g>
<g>
<title>PhaseChaitin::add_input_to_liveout(Block*, Node*, IndexSet*, double, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (2 samples, 0.04%)</title><rect x="1141.9" y="1267.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1144.9" y="1278.0"></text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.02%)</title><rect x="1141.9" y="1251.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1144.9" y="1262.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.02%)</title><rect x="1141.9" y="1235.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1144.9" y="1246.0"></text>
</g>
<g>
<title>checkCastPPNode::two_adr() const (1 samples, 0.02%)</title><rect x="1142.2" y="1251.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1145.2" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::check_for_high_pressure_transition_at_fatproj(unsigned int&amp;, unsigned int, LRG&amp;, PhaseChaitin::Pressure&amp;, int) (1 samples, 0.02%)</title><rect x="1142.5" y="1267.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1145.5" y="1278.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.02%)</title><rect x="1142.5" y="1251.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1145.5" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (10 samples, 0.22%)</title><rect x="1142.7" y="1267.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1145.7" y="1278.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (5 samples, 0.11%)</title><rect x="1144.0" y="1251.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1147.0" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (9 samples, 0.20%)</title><rect x="1145.3" y="1267.0" width="2.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1148.3" y="1278.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.07%)</title><rect x="1145.5" y="1251.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1148.5" y="1262.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (5 samples, 0.11%)</title><rect x="1146.3" y="1251.0" width="1.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1149.3" y="1262.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (2 samples, 0.04%)</title><rect x="1147.6" y="1267.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1150.6" y="1278.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (2 samples, 0.04%)</title><rect x="1148.1" y="1283.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1151.1" y="1294.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.04%)</title><rect x="1148.1" y="1267.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1151.1" y="1278.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1148.1" y="1251.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.1" y="1262.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1148.4" y="1251.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1151.4" y="1262.0"></text>
</g>
<g>
<title>PhaseChaitin::cache_lrg_info() (1 samples, 0.02%)</title><rect x="1148.6" y="1283.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1151.6" y="1294.0"></text>
</g>
<g>
<title>PhaseChaitin::compact() (1 samples, 0.02%)</title><rect x="1148.9" y="1283.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1151.9" y="1294.0"></text>
</g>
<g>
<title>PhaseChaitin::de_ssa() (2 samples, 0.04%)</title><rect x="1149.1" y="1283.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1152.1" y="1294.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (11 samples, 0.24%)</title><rect x="1149.7" y="1283.0" width="2.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1152.7" y="1294.0"></text>
</g>
<g>
<title>MachNode::ideal_reg() const (1 samples, 0.02%)</title><rect x="1150.9" y="1267.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.9" y="1278.0"></text>
</g>
<g>
<title>rRegPOper::type() const (1 samples, 0.02%)</title><rect x="1150.9" y="1251.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1153.9" y="1262.0"></text>
</g>
<g>
<title>RegMask::Size() const (4 samples, 0.09%)</title><rect x="1151.2" y="1267.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.2" y="1278.0"></text>
</g>
<g>
<title>RegMask::is_bound1() const (1 samples, 0.02%)</title><rect x="1152.2" y="1267.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1155.2" y="1278.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.82] (3 samples, 0.07%)</title><rect x="1152.5" y="1283.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.5" y="1294.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.02%)</title><rect x="1153.0" y="1267.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1156.0" y="1278.0"></text>
</g>
<g>
<title>PhaseChaitin::merge_multidefs() (1 samples, 0.02%)</title><rect x="1153.3" y="1283.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1156.3" y="1294.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (15 samples, 0.33%)</title><rect x="1153.5" y="1283.0" width="3.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1156.5" y="1294.0"></text>
</g>
<g>
<title>Node_Array::grow(unsigned int) (1 samples, 0.02%)</title><rect x="1154.8" y="1267.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1157.8" y="1278.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1154.8" y="1251.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1157.8" y="1262.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1154.8" y="1235.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.8" y="1246.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1154.8" y="1219.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1157.8" y="1230.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (6 samples, 0.13%)</title><rect x="1155.1" y="1267.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1158.1" y="1278.0"></text>
</g>
<g>
<title>PhaseChaitin::yank_if_dead_recurse(Node*, Node*, Block*, Node_List*, Node_List*) [clone .part.40] (1 samples, 0.02%)</title><rect x="1156.3" y="1251.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1159.3" y="1262.0"></text>
</g>
<g>
<title>Block::find_remove(Node const*) (1 samples, 0.02%)</title><rect x="1156.3" y="1235.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.3" y="1246.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (3 samples, 0.07%)</title><rect x="1156.6" y="1267.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1159.6" y="1278.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (4 samples, 0.09%)</title><rect x="1157.4" y="1283.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1160.4" y="1294.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::coalesce(Block*) (2 samples, 0.04%)</title><rect x="1157.4" y="1267.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1160.4" y="1278.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (2 samples, 0.04%)</title><rect x="1157.9" y="1267.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1160.9" y="1278.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::union_helper(Node*, Node*, unsigned int, unsigned int, Node*, Node*, Node*, Block*, unsigned int) (1 samples, 0.02%)</title><rect x="1158.1" y="1251.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1161.1" y="1262.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (3 samples, 0.07%)</title><rect x="1158.4" y="1283.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.4" y="1294.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1158.9" y="1267.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.9" y="1278.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (4 samples, 0.09%)</title><rect x="1159.2" y="1283.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1162.2" y="1294.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1159.9" y="1267.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.9" y="1278.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (2 samples, 0.04%)</title><rect x="1160.2" y="1283.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1163.2" y="1294.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (2 samples, 0.04%)</title><rect x="1160.2" y="1267.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1163.2" y="1278.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (5 samples, 0.11%)</title><rect x="1160.7" y="1283.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1163.7" y="1294.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.02%)</title><rect x="1161.5" y="1267.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1164.5" y="1278.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.02%)</title><rect x="1161.7" y="1267.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1164.7" y="1278.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.02%)</title><rect x="1161.7" y="1251.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.7" y="1262.0"></text>
</g>
<g>
<title>__memset_erms (1 samples, 0.02%)</title><rect x="1162.0" y="1283.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1165.0" y="1294.0"></text>
</g>
<g>
<title>PhasePeephole::do_transform() (1 samples, 0.02%)</title><rect x="1162.2" y="1299.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.2" y="1310.0"></text>
</g>
<g>
<title>__memset_erms (1 samples, 0.02%)</title><rect x="1162.5" y="1299.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1165.5" y="1310.0"></text>
</g>
<g>
<title>Compile::Optimize() (55 samples, 1.20%)</title><rect x="1162.8" y="1315.0" width="14.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.8" y="1326.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.02%)</title><rect x="1162.8" y="1299.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1165.8" y="1310.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.02%)</title><rect x="1162.8" y="1283.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1165.8" y="1294.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_impl(Node*, Final_Reshape_Counts&amp;) [clone .part.252] (1 samples, 0.02%)</title><rect x="1162.8" y="1267.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.8" y="1278.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1162.8" y="1251.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.8" y="1262.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1162.8" y="1235.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1165.8" y="1246.0"></text>
</g>
<g>
<title>TypeNarrowPtr::hash() const (1 samples, 0.02%)</title><rect x="1162.8" y="1219.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.8" y="1230.0"></text>
</g>
<g>
<title>ciBaseObject::ident() (1 samples, 0.02%)</title><rect x="1162.8" y="1203.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1165.8" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (4 samples, 0.09%)</title><rect x="1163.0" y="1299.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.0" y="1310.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (4 samples, 0.09%)</title><rect x="1163.0" y="1283.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.0" y="1294.0"></text>
</g>
<g>
<title>ConnectionGraph::add_field(Node*, PointsToNode::EscapeState, int) [clone .part.170] (1 samples, 0.02%)</title><rect x="1163.3" y="1267.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.3" y="1278.0"></text>
</g>
<g>
<title>ConnectionGraph::is_oop_field(Node*, int, bool*) (1 samples, 0.02%)</title><rect x="1163.3" y="1251.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.3" y="1262.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="1163.3" y="1235.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1166.3" y="1246.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1163.3" y="1219.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1166.3" y="1230.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1163.3" y="1203.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.3" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (2 samples, 0.04%)</title><rect x="1163.5" y="1267.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.5" y="1278.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (2 samples, 0.04%)</title><rect x="1163.5" y="1251.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.5" y="1262.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1235.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1166.5" y="1246.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1219.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.5" y="1230.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1203.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.5" y="1214.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1187.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.5" y="1198.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1171.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.5" y="1182.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1155.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1166.5" y="1166.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1139.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.5" y="1150.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1123.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.5" y="1134.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1107.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.5" y="1118.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1091.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.5" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1075.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1166.5" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1059.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.5" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1043.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.5" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1027.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.5" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="1011.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.5" y="1022.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="995.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1166.5" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="979.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1166.5" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="963.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1166.5" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="947.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1166.5" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1166.5" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="915.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.5" y="926.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="899.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.5" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="883.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.5" y="894.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="867.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.5" y="878.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="851.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1166.5" y="862.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="835.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.5" y="846.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="819.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.5" y="830.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.5" y="814.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1166.5" y="798.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="771.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.5" y="782.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="755.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.5" y="766.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="739.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1166.5" y="750.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.5" y="723.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.5" y="734.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1163.8" y="1235.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1166.8" y="1246.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="1163.8" y="1219.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1166.8" y="1230.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.239] (1 samples, 0.02%)</title><rect x="1163.8" y="1203.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1166.8" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::Opcode() const (1 samples, 0.02%)</title><rect x="1164.0" y="1299.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1167.0" y="1310.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (5 samples, 0.11%)</title><rect x="1164.3" y="1299.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1167.3" y="1310.0"></text>
</g>
<g>
<title>IfNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="1165.1" y="1283.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1168.1" y="1294.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="1165.3" y="1283.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1168.3" y="1294.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.02%)</title><rect x="1165.6" y="1299.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1168.6" y="1310.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.02%)</title><rect x="1165.6" y="1283.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1168.6" y="1294.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (31 samples, 0.68%)</title><rect x="1165.8" y="1299.0" width="8.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1168.8" y="1310.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.02%)</title><rect x="1165.8" y="1283.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1168.8" y="1294.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (9 samples, 0.20%)</title><rect x="1166.1" y="1283.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1169.1" y="1294.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.02%)</title><rect x="1167.9" y="1267.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.9" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1168.2" y="1267.0" width="0.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1171.2" y="1278.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1168.2" y="1251.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1171.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1168.2" y="1235.0" width="0.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1171.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1168.2" y="1219.0" width="0.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1171.2" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1168.2" y="1203.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1171.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1168.2" y="1187.0" width="0.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1171.2" y="1198.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.09%)</title><rect x="1168.4" y="1283.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.4" y="1294.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.09%)</title><rect x="1169.4" y="1283.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1172.4" y="1294.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (4 samples, 0.09%)</title><rect x="1169.4" y="1267.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.4" y="1278.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (3 samples, 0.07%)</title><rect x="1169.4" y="1251.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1172.4" y="1262.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.02%)</title><rect x="1169.7" y="1235.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1172.7" y="1246.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.02%)</title><rect x="1170.0" y="1235.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1173.0" y="1246.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.02%)</title><rect x="1170.2" y="1251.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1170.2" y="1235.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1173.2" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1170.2" y="1219.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1173.2" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1170.2" y="1203.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1173.2" y="1214.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (5 samples, 0.11%)</title><rect x="1170.5" y="1283.0" width="1.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1173.5" y="1294.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree_impl(Node*, int) (2 samples, 0.04%)</title><rect x="1171.0" y="1267.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.0" y="1278.0"></text>
</g>
<g>
<title>PhaseIdealLoop::sort(IdealLoopTree*, IdealLoopTree*) (1 samples, 0.02%)</title><rect x="1171.5" y="1267.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1174.5" y="1278.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (5 samples, 0.11%)</title><rect x="1171.8" y="1283.0" width="1.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.8" y="1294.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (4 samples, 0.09%)</title><rect x="1171.8" y="1267.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1174.8" y="1278.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (1 samples, 0.02%)</title><rect x="1172.0" y="1251.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1175.0" y="1262.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.02%)</title><rect x="1172.3" y="1251.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1175.3" y="1262.0"></text>
</g>
<g>
<title>LoadNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="1172.3" y="1235.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.3" y="1246.0"></text>
</g>
<g>
<title>Type::make_constant_from_field(ciInstance*, int, bool, BasicType) (1 samples, 0.02%)</title><rect x="1172.3" y="1219.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1175.3" y="1230.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_field_by_offset(int, bool) (1 samples, 0.02%)</title><rect x="1172.3" y="1203.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.3" y="1214.0"></text>
</g>
<g>
<title>ciField::ciField(fieldDescriptor*) (1 samples, 0.02%)</title><rect x="1172.3" y="1187.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1175.3" y="1198.0"></text>
</g>
<g>
<title>vmSymbols::find_sid(Symbol const*) (1 samples, 0.02%)</title><rect x="1172.3" y="1171.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.3" y="1182.0"></text>
</g>
<g>
<title>PhaseIdealLoop::try_move_store_before_loop(Node*, Node*) (1 samples, 0.02%)</title><rect x="1172.5" y="1251.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1175.5" y="1262.0"></text>
</g>
<g>
<title>RegionNode::Opcode() const (1 samples, 0.02%)</title><rect x="1172.8" y="1267.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.8" y="1278.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.04%)</title><rect x="1173.0" y="1283.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.0" y="1294.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.04%)</title><rect x="1173.0" y="1267.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1176.0" y="1278.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1173.0" y="1251.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.0" y="1262.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1173.3" y="1251.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.3" y="1262.0"></text>
</g>
<g>
<title>RegionNode::is_unreachable_region(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="1173.3" y="1235.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1176.3" y="1246.0"></text>
</g>
<g>
<title>ProjNode::pinned() const (1 samples, 0.02%)</title><rect x="1173.6" y="1283.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.6" y="1294.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (10 samples, 0.22%)</title><rect x="1173.8" y="1299.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1176.8" y="1310.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (9 samples, 0.20%)</title><rect x="1174.1" y="1283.0" width="2.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.1" y="1294.0"></text>
</g>
<g>
<title>IfNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1174.1" y="1267.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1177.1" y="1278.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1174.1" y="1251.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1177.1" y="1262.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1174.1" y="1235.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1177.1" y="1246.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1174.3" y="1267.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1177.3" y="1278.0"></text>
</g>
<g>
<title>Node::destruct() (1 samples, 0.02%)</title><rect x="1174.6" y="1267.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1177.6" y="1278.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (2 samples, 0.04%)</title><rect x="1174.8" y="1267.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1177.8" y="1278.0"></text>
</g>
<g>
<title>MemNode::optimize_memory_chain(Node*, TypePtr const*, Node*, PhaseGVN*) (1 samples, 0.02%)</title><rect x="1175.1" y="1251.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1178.1" y="1262.0"></text>
</g>
<g>
<title>PhiNode::adr_type() const (1 samples, 0.02%)</title><rect x="1175.4" y="1267.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.4" y="1278.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (2 samples, 0.04%)</title><rect x="1175.6" y="1267.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1178.6" y="1278.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.136] (1 samples, 0.02%)</title><rect x="1175.6" y="1251.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.6" y="1262.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1175.6" y="1235.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.6" y="1246.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1175.6" y="1219.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.6" y="1230.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1175.6" y="1203.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.6" y="1214.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1175.6" y="1187.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1178.6" y="1198.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1175.6" y="1171.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.6" y="1182.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1175.6" y="1155.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1178.6" y="1166.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1175.6" y="1139.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.6" y="1150.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1175.6" y="1123.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1178.6" y="1134.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.02%)</title><rect x="1175.6" y="1107.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.6" y="1118.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.129] (1 samples, 0.02%)</title><rect x="1175.6" y="1091.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1178.6" y="1102.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1175.6" y="1075.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1178.6" y="1086.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1175.9" y="1251.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1178.9" y="1262.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.239] (1 samples, 0.02%)</title><rect x="1175.9" y="1235.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.9" y="1246.0"></text>
</g>
<g>
<title>Compile::flatten_alias_type(TypePtr const*) const (1 samples, 0.02%)</title><rect x="1175.9" y="1219.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1178.9" y="1230.0"></text>
</g>
<g>
<title>ciInstanceKlass::get_canonical_holder(int) (1 samples, 0.02%)</title><rect x="1175.9" y="1203.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.9" y="1214.0"></text>
</g>
<g>
<title>TypeRawPtr::add_offset(long) const (1 samples, 0.02%)</title><rect x="1176.1" y="1267.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.1" y="1278.0"></text>
</g>
<g>
<title>PhaseRenumberLive::PhaseRenumberLive(PhaseGVN*, Unique_Node_List*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.04%)</title><rect x="1176.4" y="1299.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1179.4" y="1310.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.04%)</title><rect x="1176.4" y="1283.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.4" y="1294.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.02%)</title><rect x="1176.6" y="1267.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1179.6" y="1278.0"></text>
</g>
<g>
<title>CompileWrapper::CompileWrapper(Compile*) (1 samples, 0.02%)</title><rect x="1176.9" y="1315.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.9" y="1326.0"></text>
</g>
<g>
<title>DictI::operator++() (1 samples, 0.02%)</title><rect x="1176.9" y="1299.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.9" y="1310.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (33 samples, 0.72%)</title><rect x="1177.2" y="1315.0" width="8.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.2" y="1326.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (33 samples, 0.72%)</title><rect x="1177.2" y="1299.0" width="8.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.2" y="1310.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (33 samples, 0.72%)</title><rect x="1177.2" y="1283.0" width="8.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.2" y="1294.0"></text>
</g>
<g>
<title>Parse::do_one_block() (33 samples, 0.72%)</title><rect x="1177.2" y="1267.0" width="8.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.2" y="1278.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (33 samples, 0.72%)</title><rect x="1177.2" y="1251.0" width="8.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.2" y="1262.0"></text>
</g>
<g>
<title>Parse::do_call() (30 samples, 0.65%)</title><rect x="1177.2" y="1235.0" width="7.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.2" y="1246.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.04%)</title><rect x="1177.2" y="1219.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.2" y="1230.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.04%)</title><rect x="1177.2" y="1203.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.2" y="1214.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.04%)</title><rect x="1177.2" y="1187.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.2" y="1198.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (2 samples, 0.04%)</title><rect x="1177.2" y="1171.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1180.2" y="1182.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (2 samples, 0.04%)</title><rect x="1177.2" y="1155.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.2" y="1166.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.04%)</title><rect x="1177.2" y="1139.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.2" y="1150.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (2 samples, 0.04%)</title><rect x="1177.2" y="1123.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.2" y="1134.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (2 samples, 0.04%)</title><rect x="1177.2" y="1107.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.2" y="1118.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (2 samples, 0.04%)</title><rect x="1177.2" y="1091.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1180.2" y="1102.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (2 samples, 0.04%)</title><rect x="1177.2" y="1075.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.2" y="1086.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (2 samples, 0.04%)</title><rect x="1177.2" y="1059.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.2" y="1070.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (2 samples, 0.04%)</title><rect x="1177.2" y="1043.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.2" y="1054.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (2 samples, 0.04%)</title><rect x="1177.2" y="1027.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.2" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (2 samples, 0.04%)</title><rect x="1177.2" y="1011.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.2" y="1022.0"></text>
</g>
<g>
<title>SystemDictionary::find_instance_or_array_klass(Symbol*, Handle, Handle, Thread*) (1 samples, 0.02%)</title><rect x="1177.2" y="995.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.2" y="1006.0"></text>
</g>
<g>
<title>ProtectionDomainEntry::object_no_keepalive() (1 samples, 0.02%)</title><rect x="1177.2" y="979.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.2" y="990.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.02%)</title><rect x="1177.4" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1180.4" y="1006.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.02%)</title><rect x="1177.4" y="979.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1180.4" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1177.4" y="963.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1180.4" y="974.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1177.4" y="947.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1180.4" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (21 samples, 0.46%)</title><rect x="1177.7" y="1219.0" width="5.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.7" y="1230.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (21 samples, 0.46%)</title><rect x="1177.7" y="1203.0" width="5.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.7" y="1214.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (21 samples, 0.46%)</title><rect x="1177.7" y="1187.0" width="5.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1180.7" y="1198.0"></text>
</g>
<g>
<title>Parse::do_one_block() (21 samples, 0.46%)</title><rect x="1177.7" y="1171.0" width="5.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.7" y="1182.0"></text>
</g>
<g>
<title>Parse::do_exceptions() (1 samples, 0.02%)</title><rect x="1177.7" y="1155.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.7" y="1166.0"></text>
</g>
<g>
<title>Parse::throw_to_exit(SafePointNode*) (1 samples, 0.02%)</title><rect x="1177.7" y="1139.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.7" y="1150.0"></text>
</g>
<g>
<title>GraphKit::set_map_clone(SafePointNode*) (1 samples, 0.02%)</title><rect x="1177.7" y="1123.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.7" y="1134.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.02%)</title><rect x="1177.7" y="1107.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.7" y="1118.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (20 samples, 0.44%)</title><rect x="1177.9" y="1155.0" width="5.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.9" y="1166.0"></text>
</g>
<g>
<title>Parse::do_call() (19 samples, 0.41%)</title><rect x="1177.9" y="1139.0" width="4.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1180.9" y="1150.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.04%)</title><rect x="1177.9" y="1123.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.9" y="1134.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (2 samples, 0.04%)</title><rect x="1177.9" y="1107.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.9" y="1118.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (2 samples, 0.04%)</title><rect x="1177.9" y="1091.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.9" y="1102.0"></text>
</g>
<g>
<title>ciTypeFlow::ciTypeFlow(ciEnv*, ciMethod*, int) (1 samples, 0.02%)</title><rect x="1177.9" y="1075.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.9" y="1086.0"></text>
</g>
<g>
<title>ciMethod::get_method_blocks() (1 samples, 0.02%)</title><rect x="1177.9" y="1059.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1180.9" y="1070.0"></text>
</g>
<g>
<title>ciMethodBlocks::ciMethodBlocks(Arena*, ciMethod*) (1 samples, 0.02%)</title><rect x="1177.9" y="1043.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.9" y="1054.0"></text>
</g>
<g>
<title>ciMethodBlocks::do_analysis() (1 samples, 0.02%)</title><rect x="1177.9" y="1027.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.9" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1178.2" y="1075.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.2" y="1086.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1178.2" y="1059.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.2" y="1070.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1178.2" y="1043.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.2" y="1054.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1178.2" y="1027.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.2" y="1038.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1178.2" y="1011.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.2" y="1022.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1178.2" y="995.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.2" y="1006.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1178.2" y="979.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.2" y="990.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1178.2" y="963.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.2" y="974.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1178.2" y="947.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.2" y="958.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.02%)</title><rect x="1178.2" y="931.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.2" y="942.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.02%)</title><rect x="1178.2" y="915.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1181.2" y="926.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.02%)</title><rect x="1178.2" y="899.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1181.2" y="910.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="1178.2" y="883.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.2" y="894.0"></text>
</g>
<g>
<title>InstanceKlass::find_method_index(Array&lt;Method*&gt; const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.269] (1 samples, 0.02%)</title><rect x="1178.2" y="867.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.2" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (16 samples, 0.35%)</title><rect x="1178.4" y="1123.0" width="4.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.4" y="1134.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (16 samples, 0.35%)</title><rect x="1178.4" y="1107.0" width="4.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.4" y="1118.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (16 samples, 0.35%)</title><rect x="1178.4" y="1091.0" width="4.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1181.4" y="1102.0"></text>
</g>
<g>
<title>Parse::do_one_block() (16 samples, 0.35%)</title><rect x="1178.4" y="1075.0" width="4.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.4" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (16 samples, 0.35%)</title><rect x="1178.4" y="1059.0" width="4.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.4" y="1070.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.02%)</title><rect x="1178.4" y="1043.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.4" y="1054.0"></text>
</g>
<g>
<title>GraphKit::cast_not_null(Node*, bool) (1 samples, 0.02%)</title><rect x="1178.4" y="1027.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.4" y="1038.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1178.4" y="1011.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.4" y="1022.0"></text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 0.02%)</title><rect x="1178.4" y="995.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1181.4" y="1006.0"></text>
</g>
<g>
<title>CastPPNode::Opcode() const (1 samples, 0.02%)</title><rect x="1178.4" y="979.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1181.4" y="990.0"></text>
</g>
<g>
<title>Parse::do_call() (15 samples, 0.33%)</title><rect x="1178.7" y="1043.0" width="3.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.7" y="1054.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1178.7" y="1027.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.7" y="1038.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1178.7" y="1011.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.7" y="1022.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1178.7" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.7" y="1006.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.02%)</title><rect x="1178.7" y="979.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1181.7" y="990.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1179.0" y="1027.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.0" y="1038.0"></text>
</g>
<g>
<title>LibraryCallKit::try_to_inline(int) (1 samples, 0.02%)</title><rect x="1179.0" y="1011.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1182.0" y="1022.0"></text>
</g>
<g>
<title>LibraryCallKit::inline_unsafe_load_store(BasicType, LibraryCallKit::LoadStoreKind, LibraryCallKit::AccessKind) [clone .part.166] (1 samples, 0.02%)</title><rect x="1179.0" y="995.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.0" y="1006.0"></text>
</g>
<g>
<title>GraphKit::access_atomic_cmpxchg_bool_at(Node*, Node*, Node*, TypePtr const*, int, Node*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1179.0" y="979.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1182.0" y="990.0"></text>
</g>
<g>
<title>BarrierSetC2::atomic_cmpxchg_bool_at(C2AtomicAccess&amp;, Node*, Node*, Type const*) const (1 samples, 0.02%)</title><rect x="1179.0" y="963.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.0" y="974.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::atomic_cmpxchg_bool_at_resolved(C2AtomicAccess&amp;, Node*, Node*, Type const*) const (1 samples, 0.02%)</title><rect x="1179.0" y="947.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.0" y="958.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.02%)</title><rect x="1179.0" y="931.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.0" y="942.0"></text>
</g>
<g>
<title>IdealKit::store(Node*, Node*, Node*, BasicType, int, MemNode::MemOrd, bool, bool) (1 samples, 0.02%)</title><rect x="1179.0" y="915.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.0" y="926.0"></text>
</g>
<g>
<title>MergeMemNode::set_memory_at(unsigned int, Node*) (1 samples, 0.02%)</title><rect x="1179.0" y="899.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.0" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.17%)</title><rect x="1179.2" y="1027.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.2" y="1038.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.17%)</title><rect x="1179.2" y="1011.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.2" y="1022.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.17%)</title><rect x="1179.2" y="995.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.2" y="1006.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.17%)</title><rect x="1179.2" y="979.0" width="2.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.2" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.17%)</title><rect x="1179.2" y="963.0" width="2.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.2" y="974.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.17%)</title><rect x="1179.2" y="947.0" width="2.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.2" y="958.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.02%)</title><rect x="1179.2" y="931.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.2" y="942.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.02%)</title><rect x="1179.2" y="915.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.2" y="926.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.02%)</title><rect x="1179.2" y="899.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.2" y="910.0"></text>
</g>
<g>
<title>MethodLiveness::init_basic_blocks() (1 samples, 0.02%)</title><rect x="1179.2" y="883.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.2" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.15%)</title><rect x="1179.5" y="931.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.5" y="942.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.15%)</title><rect x="1179.5" y="915.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.5" y="926.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.02%)</title><rect x="1179.5" y="899.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1182.5" y="910.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) (1 samples, 0.02%)</title><rect x="1179.5" y="883.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.5" y="894.0"></text>
</g>
<g>
<title>GraphKit::builtin_throw(Deoptimization::DeoptReason, Node*) (1 samples, 0.02%)</title><rect x="1179.5" y="867.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.5" y="878.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1179.5" y="851.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1182.5" y="862.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1179.5" y="835.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.5" y="846.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1179.5" y="819.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1182.5" y="830.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.02%)</title><rect x="1179.5" y="803.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.5" y="814.0"></text>
</g>
<g>
<title>IdealKit::if_then(Node*, BoolTest::mask, Node*, float, float, bool) (1 samples, 0.02%)</title><rect x="1179.5" y="787.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.5" y="798.0"></text>
</g>
<g>
<title>IdealKit::copy_cvstate() (1 samples, 0.02%)</title><rect x="1179.5" y="771.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1182.5" y="782.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.02%)</title><rect x="1179.5" y="755.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.5" y="766.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.02%)</title><rect x="1179.5" y="739.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.5" y="750.0"></text>
</g>
<g>
<title>Node::add_req(Node*) (1 samples, 0.02%)</title><rect x="1179.5" y="723.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1182.5" y="734.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1179.5" y="707.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.5" y="718.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1179.5" y="691.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1182.5" y="702.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1179.5" y="675.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.13%)</title><rect x="1179.7" y="899.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.7" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.13%)</title><rect x="1179.7" y="883.0" width="1.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.7" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.13%)</title><rect x="1179.7" y="867.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.7" y="878.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.09%)</title><rect x="1179.7" y="851.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.7" y="862.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1179.7" y="835.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1182.7" y="846.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1179.7" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.7" y="830.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1179.7" y="803.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1182.7" y="814.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.02%)</title><rect x="1179.7" y="787.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.7" y="798.0"></text>
</g>
<g>
<title>ExceptionMark::ExceptionMark(Thread*&amp;) (1 samples, 0.02%)</title><rect x="1179.7" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1182.7" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1180.0" y="835.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.0" y="846.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1180.0" y="819.0" width="0.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1180.0" y="803.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.0" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1180.0" y="787.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.0" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1180.0" y="771.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1180.0" y="755.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1183.0" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1180.0" y="739.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.0" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1180.0" y="723.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.0" y="734.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.02%)</title><rect x="1180.0" y="707.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.0" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1180.2" y="707.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1183.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1180.2" y="691.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1180.2" y="675.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1180.2" y="659.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.2" y="670.0"></text>
</g>
<g>
<title>LibraryIntrinsic::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1180.2" y="643.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.2" y="654.0"></text>
</g>
<g>
<title>LibraryCallKit::LibraryCallKit(JVMState*, LibraryIntrinsic*) (1 samples, 0.02%)</title><rect x="1180.2" y="627.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.2" y="638.0"></text>
</g>
<g>
<title>ciMethod::get_method_at_bci(int, bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1180.2" y="611.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.2" y="622.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1180.2" y="595.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1183.2" y="606.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1180.2" y="579.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.2" y="590.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1180.2" y="563.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.2" y="574.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1180.2" y="547.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.2" y="558.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1180.2" y="531.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1183.2" y="542.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (1 samples, 0.02%)</title><rect x="1180.5" y="803.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1183.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_new() (1 samples, 0.02%)</title><rect x="1180.7" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1183.7" y="862.0"></text>
</g>
<g>
<title>GraphKit::new_instance(Node*, Node*, Node**, bool) (1 samples, 0.02%)</title><rect x="1180.7" y="835.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1183.7" y="846.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1180.7" y="819.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.7" y="830.0"></text>
</g>
<g>
<title>Parse::return_current(Node*) (1 samples, 0.02%)</title><rect x="1181.0" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.0" y="862.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.09%)</title><rect x="1181.3" y="1027.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.3" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.09%)</title><rect x="1181.3" y="1011.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.3" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.09%)</title><rect x="1181.3" y="995.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.3" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.09%)</title><rect x="1181.3" y="979.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.3" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.09%)</title><rect x="1181.3" y="963.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.3" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.09%)</title><rect x="1181.3" y="947.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.09%)</title><rect x="1181.3" y="931.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.3" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.09%)</title><rect x="1181.3" y="915.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.3" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.09%)</title><rect x="1181.3" y="899.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.3" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.09%)</title><rect x="1181.3" y="883.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.3" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.09%)</title><rect x="1181.3" y="867.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.3" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.09%)</title><rect x="1181.3" y="851.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1184.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.09%)</title><rect x="1181.3" y="835.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.3" y="846.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1181.3" y="819.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.3" y="830.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1181.3" y="803.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.3" y="814.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1181.3" y="787.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.3" y="798.0"></text>
</g>
<g>
<title>DirectiveSet::should_not_inline(ciMethod*) (1 samples, 0.02%)</title><rect x="1181.3" y="771.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.3" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1181.5" y="819.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.5" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1181.5" y="803.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1181.5" y="787.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="1181.5" y="771.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.5" y="782.0"></text>
</g>
<g>
<title>Arena::Amalloc_D(unsigned long, AllocFailStrategy::AllocFailEnum) [clone .constprop.124] (1 samples, 0.02%)</title><rect x="1181.5" y="755.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1184.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1181.8" y="755.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1181.8" y="739.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.8" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1181.8" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.8" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1181.8" y="707.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.8" y="718.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.02%)</title><rect x="1181.8" y="691.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.8" y="702.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.02%)</title><rect x="1181.8" y="675.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.8" y="686.0"></text>
</g>
<g>
<title>ReplacedNodes::clone() (1 samples, 0.02%)</title><rect x="1181.8" y="659.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1182.0" y="691.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1182.0" y="675.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1182.0" y="659.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.0" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1182.0" y="643.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.0" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1182.0" y="627.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.0" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1182.0" y="611.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1182.0" y="595.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.0" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1182.0" y="579.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1182.0" y="563.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.0" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1182.0" y="547.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.0" y="558.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1182.3" y="1027.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.3" y="1038.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1182.3" y="1011.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.3" y="1022.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1182.3" y="995.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.3" y="1006.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1182.3" y="979.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.3" y="990.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1182.5" y="1123.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.5" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1182.5" y="1107.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.5" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1182.5" y="1091.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.5" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1182.5" y="1075.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.5" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1182.5" y="1059.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.5" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1182.5" y="1043.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.5" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1182.5" y="1027.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.5" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1182.5" y="1011.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.5" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1182.5" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.5" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1182.5" y="979.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.5" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1182.5" y="963.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.5" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1182.5" y="947.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.5" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1182.5" y="931.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.5" y="942.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1182.5" y="915.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.5" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1182.5" y="899.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.5" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1182.5" y="883.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.5" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1182.5" y="867.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.5" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1182.5" y="851.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.5" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1182.5" y="835.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.5" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1182.5" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.5" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1182.5" y="803.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1182.5" y="787.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1182.5" y="771.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1182.5" y="755.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1182.5" y="739.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1182.5" y="723.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.5" y="734.0"></text>
</g>
<g>
<title>GraphKit::make_constant_from_field(ciField*, Node*) (1 samples, 0.02%)</title><rect x="1182.5" y="707.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.5" y="718.0"></text>
</g>
<g>
<title>Type::make_constant_from_field(ciField*, ciInstance*, BasicType, bool) (1 samples, 0.02%)</title><rect x="1182.5" y="691.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.5" y="702.0"></text>
</g>
<g>
<title>ciInstance::field_value_impl(BasicType, int) (1 samples, 0.02%)</title><rect x="1182.5" y="675.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1182.8" y="1139.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.8" y="1150.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1182.8" y="1123.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.8" y="1134.0"></text>
</g>
<g>
<title>Compile::AliasType::Init(int, TypePtr const*) (1 samples, 0.02%)</title><rect x="1182.8" y="1107.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.8" y="1118.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (7 samples, 0.15%)</title><rect x="1183.1" y="1219.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.1" y="1230.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.15%)</title><rect x="1183.1" y="1203.0" width="1.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.1" y="1214.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.15%)</title><rect x="1183.1" y="1187.0" width="1.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.1" y="1198.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.15%)</title><rect x="1183.1" y="1171.0" width="1.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.1" y="1182.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.15%)</title><rect x="1183.1" y="1155.0" width="1.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.1" y="1166.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.15%)</title><rect x="1183.1" y="1139.0" width="1.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.1" y="1150.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.15%)</title><rect x="1183.1" y="1123.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.1" y="1134.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.15%)</title><rect x="1183.1" y="1107.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.1" y="1118.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.15%)</title><rect x="1183.1" y="1091.0" width="1.8" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.1" y="1102.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.15%)</title><rect x="1183.1" y="1075.0" width="1.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.1" y="1086.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.15%)</title><rect x="1183.1" y="1059.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.1" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.15%)</title><rect x="1183.1" y="1043.0" width="1.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.1" y="1054.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.15%)</title><rect x="1183.1" y="1027.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.1" y="1038.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1183.1" y="1011.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.1" y="1022.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1183.1" y="995.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.1" y="1006.0"></text>
</g>
<g>
<title>InlineTree::try_to_inline(ciMethod*, ciMethod*, int, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1183.1" y="979.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.1" y="990.0"></text>
</g>
<g>
<title>ciMethod::has_unloaded_classes_in_signature() (1 samples, 0.02%)</title><rect x="1183.1" y="963.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.1" y="974.0"></text>
</g>
<g>
<title>SignatureStream::next_non_primitive(int) (1 samples, 0.02%)</title><rect x="1183.1" y="947.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.1" y="958.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.13%)</title><rect x="1183.3" y="1011.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.3" y="1022.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.13%)</title><rect x="1183.3" y="995.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.3" y="1006.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.13%)</title><rect x="1183.3" y="979.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.3" y="990.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.13%)</title><rect x="1183.3" y="963.0" width="1.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.3" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.13%)</title><rect x="1183.3" y="947.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.3" y="958.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.13%)</title><rect x="1183.3" y="931.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.3" y="942.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1183.3" y="915.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.3" y="926.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.02%)</title><rect x="1183.3" y="899.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.3" y="910.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.02%)</title><rect x="1183.3" y="883.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.3" y="894.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.02%)</title><rect x="1183.3" y="867.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.3" y="878.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.02%)</title><rect x="1183.3" y="851.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.3" y="862.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1183.3" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.3" y="846.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.02%)</title><rect x="1183.3" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.3" y="830.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.02%)</title><rect x="1183.3" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.3" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_invoke(ciBytecodeStream*, bool) (1 samples, 0.02%)</title><rect x="1183.3" y="787.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.3" y="798.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1183.3" y="771.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.3" y="782.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1183.3" y="755.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.3" y="766.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1183.3" y="739.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.3" y="750.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1183.3" y="723.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.3" y="734.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.02%)</title><rect x="1183.3" y="707.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.3" y="718.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1183.3" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.3" y="702.0"></text>
</g>
<g>
<title>Method::invocation_count() (1 samples, 0.02%)</title><rect x="1183.3" y="675.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.3" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.11%)</title><rect x="1183.6" y="915.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.6" y="926.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.11%)</title><rect x="1183.6" y="899.0" width="1.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.09%)</title><rect x="1183.6" y="883.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.6" y="894.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.09%)</title><rect x="1183.6" y="867.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.6" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.09%)</title><rect x="1183.6" y="851.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.09%)</title><rect x="1183.6" y="835.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.6" y="846.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1183.6" y="819.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.6" y="830.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1183.6" y="803.0" width="0.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.6" y="814.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1183.6" y="787.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.6" y="798.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="1183.6" y="771.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.6" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="1183.6" y="755.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.6" y="766.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1183.6" y="739.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.6" y="750.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1183.6" y="723.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.6" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1183.6" y="707.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.6" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1183.6" y="691.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.6" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1183.6" y="675.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.6" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1183.6" y="659.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.6" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1183.6" y="643.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.6" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1183.6" y="627.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.6" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1183.6" y="611.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.6" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1183.6" y="595.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.6" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1183.6" y="579.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.6" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1183.6" y="563.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.6" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1183.6" y="547.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.6" y="558.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.02%)</title><rect x="1183.6" y="531.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.6" y="542.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.02%)</title><rect x="1183.8" y="595.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.8" y="606.0"></text>
</g>
<g>
<title>ciMethod::is_initializer() const (1 samples, 0.02%)</title><rect x="1183.8" y="579.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.8" y="590.0"></text>
</g>
<g>
<title>Method::is_initializer() const (1 samples, 0.02%)</title><rect x="1183.8" y="563.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1184.1" y="739.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.1" y="750.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1184.1" y="723.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.1" y="734.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1184.1" y="707.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.1" y="718.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1184.1" y="691.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.1" y="702.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1184.1" y="675.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.1" y="686.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1184.1" y="659.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.1" y="670.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1184.1" y="643.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.1" y="654.0"></text>
</g>
<g>
<title>DecodeNNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="1184.1" y="627.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1187.1" y="638.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1184.3" y="819.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.3" y="830.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1184.3" y="803.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.3" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1184.3" y="787.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.3" y="798.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.02%)</title><rect x="1184.3" y="771.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.3" y="782.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_virtual_method_or_null(LinkInfo const&amp;) (1 samples, 0.02%)</title><rect x="1184.3" y="755.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.3" y="766.0"></text>
</g>
<g>
<title>LinkResolver::lookup_method_in_klasses(LinkInfo const&amp;, bool, bool) (1 samples, 0.02%)</title><rect x="1184.3" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.3" y="750.0"></text>
</g>
<g>
<title>InstanceKlass::uncached_lookup_method(Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::PrivateLookupMode) const (1 samples, 0.02%)</title><rect x="1184.3" y="723.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.3" y="734.0"></text>
</g>
<g>
<title>method_matches(Method const*, Symbol const*, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1184.3" y="707.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1187.3" y="718.0"></text>
</g>
<g>
<title>ciMethod::method_data() [clone .part.84] (1 samples, 0.02%)</title><rect x="1184.6" y="883.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.6" y="894.0"></text>
</g>
<g>
<title>ciMethodData::load_data() (1 samples, 0.02%)</title><rect x="1184.6" y="867.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.6" y="878.0"></text>
</g>
<g>
<title>ReceiverTypeData::is_ReceiverTypeData() const (1 samples, 0.02%)</title><rect x="1184.6" y="851.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.6" y="862.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1184.9" y="1235.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.9" y="1246.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1184.9" y="1219.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.9" y="1230.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1184.9" y="1203.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.9" y="1214.0"></text>
</g>
<g>
<title>BarrierSetC2::store_at(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1184.9" y="1187.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.9" y="1198.0"></text>
</g>
<g>
<title>ModRefBarrierSetC2::store_at_resolved(C2Access&amp;, C2AccessValue&amp;) const (1 samples, 0.02%)</title><rect x="1184.9" y="1171.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.9" y="1182.0"></text>
</g>
<g>
<title>G1BarrierSetC2::pre_barrier(GraphKit*, bool, Node*, Node*, Node*, unsigned int, Node*, TypeOopPtr const*, Node*, BasicType) const (1 samples, 0.02%)</title><rect x="1184.9" y="1155.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.9" y="1166.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1184.9" y="1139.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.9" y="1150.0"></text>
</g>
<g>
<title>LoadLNode::Opcode() const (1 samples, 0.02%)</title><rect x="1184.9" y="1123.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.9" y="1134.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.02%)</title><rect x="1185.1" y="1235.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.1" y="1246.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.02%)</title><rect x="1185.1" y="1219.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.1" y="1230.0"></text>
</g>
<g>
<title>GraphKit::add_predicate(int) (1 samples, 0.02%)</title><rect x="1185.1" y="1203.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.1" y="1214.0"></text>
</g>
<g>
<title>GraphKit::add_predicate_impl(Deoptimization::DeoptReason, int) [clone .part.185] (1 samples, 0.02%)</title><rect x="1185.1" y="1187.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.1" y="1198.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.02%)</title><rect x="1185.1" y="1171.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.1" y="1182.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1185.1" y="1155.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.1" y="1166.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1185.1" y="1139.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.1" y="1150.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.02%)</title><rect x="1185.4" y="1235.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.4" y="1246.0"></text>
</g>
<g>
<title>Parse::adjust_map_after_if(BoolTest::mask, Node*, float, Parse::Block*, Parse::Block*) (1 samples, 0.02%)</title><rect x="1185.4" y="1219.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.4" y="1230.0"></text>
</g>
<g>
<title>Parse::sharpen_type_after_if(BoolTest::mask, Node*, Type const*, Node*, Type const*) (1 samples, 0.02%)</title><rect x="1185.4" y="1203.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.4" y="1214.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1185.4" y="1187.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.4" y="1198.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (3 samples, 0.07%)</title><rect x="1185.6" y="1315.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.6" y="1326.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (2 samples, 0.04%)</title><rect x="1185.9" y="1299.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.9" y="1310.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.02%)</title><rect x="1186.4" y="1315.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.4" y="1326.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.02%)</title><rect x="1186.4" y="1299.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.4" y="1310.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.02%)</title><rect x="1186.4" y="1283.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.4" y="1294.0"></text>
</g>
<g>
<title>CompiledMethod::CompiledMethod(Method*, char const*, CompilerType, int, int, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.02%)</title><rect x="1186.4" y="1267.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.4" y="1278.0"></text>
</g>
<g>
<title>CodeBlob::CodeBlob(char const*, CompilerType, CodeBlobLayout const&amp;, CodeBuffer*, int, int, OopMapSet*, bool) (1 samples, 0.02%)</title><rect x="1186.4" y="1251.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.4" y="1262.0"></text>
</g>
<g>
<title>ImmutableOopMapSet::build_from(OopMapSet const*) (1 samples, 0.02%)</title><rect x="1186.4" y="1235.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.4" y="1246.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (7 samples, 0.15%)</title><rect x="1186.7" y="1347.0" width="1.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.7" y="1358.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (7 samples, 0.15%)</title><rect x="1186.7" y="1331.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.7" y="1342.0"></text>
</g>
<g>
<title>Compilation::compile_method() (7 samples, 0.15%)</title><rect x="1186.7" y="1315.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.7" y="1326.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (7 samples, 0.15%)</title><rect x="1186.7" y="1299.0" width="1.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.7" y="1310.0"></text>
</g>
<g>
<title>Compilation::build_hir() [clone .part.93] (4 samples, 0.09%)</title><rect x="1186.7" y="1283.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.7" y="1294.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (3 samples, 0.07%)</title><rect x="1186.7" y="1267.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.7" y="1278.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (3 samples, 0.07%)</title><rect x="1186.7" y="1251.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.7" y="1262.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (3 samples, 0.07%)</title><rect x="1186.7" y="1235.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.7" y="1246.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(BlockClosure*) (1 samples, 0.02%)</title><rect x="1186.7" y="1219.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.7" y="1230.0"></text>
</g>
<g>
<title>BlockBegin::iterate_preorder(GrowableArray&lt;bool&gt;&amp;, BlockClosure*) (1 samples, 0.02%)</title><rect x="1186.7" y="1203.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.7" y="1214.0"></text>
</g>
<g>
<title>PhiSimplifier::block_do(BlockBegin*) (1 samples, 0.02%)</title><rect x="1186.7" y="1187.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.7" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (2 samples, 0.04%)</title><rect x="1186.9" y="1219.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.9" y="1230.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (2 samples, 0.04%)</title><rect x="1186.9" y="1203.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.9" y="1214.0"></text>
</g>
<g>
<title>GraphBuilder::check_cast(int) (1 samples, 0.02%)</title><rect x="1186.9" y="1187.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.9" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1187.2" y="1187.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.2" y="1198.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1187.2" y="1171.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.2" y="1182.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1187.2" y="1155.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.2" y="1166.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1187.2" y="1139.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.2" y="1150.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.02%)</title><rect x="1187.2" y="1123.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.2" y="1134.0"></text>
</g>
<g>
<title>BlockListBuilder::set_leaders() (1 samples, 0.02%)</title><rect x="1187.2" y="1107.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.2" y="1118.0"></text>
</g>
<g>
<title>ciMethod::bci_block_start() (1 samples, 0.02%)</title><rect x="1187.2" y="1091.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.2" y="1102.0"></text>
</g>
<g>
<title>MethodLiveness::compute_liveness() (1 samples, 0.02%)</title><rect x="1187.2" y="1075.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.2" y="1086.0"></text>
</g>
<g>
<title>GenericGrowableArray::raw_allocate(int) (1 samples, 0.02%)</title><rect x="1187.2" y="1059.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.2" y="1070.0"></text>
</g>
<g>
<title>RangeCheckElimination::eliminate(IR*) (1 samples, 0.02%)</title><rect x="1187.4" y="1267.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.4" y="1278.0"></text>
</g>
<g>
<title>RangeCheckEliminator::calc_bounds(BlockBegin*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1187.4" y="1251.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.4" y="1262.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1187.4" y="1235.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.4" y="1246.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (3 samples, 0.07%)</title><rect x="1187.7" y="1283.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.7" y="1294.0"></text>
</g>
<g>
<title>BlockList::iterate_forward(BlockClosure*) (1 samples, 0.02%)</title><rect x="1187.7" y="1267.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.7" y="1278.0"></text>
</g>
<g>
<title>non-virtual thunk to LIRGenerator::block_do(BlockBegin*) (1 samples, 0.02%)</title><rect x="1187.7" y="1251.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.7" y="1262.0"></text>
</g>
<g>
<title>LIRGenerator::do_Goto(Goto*) (1 samples, 0.02%)</title><rect x="1187.7" y="1235.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.7" y="1246.0"></text>
</g>
<g>
<title>LIRGenerator::move_to_phi(ValueStack*) (1 samples, 0.02%)</title><rect x="1187.7" y="1219.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.7" y="1230.0"></text>
</g>
<g>
<title>PhiResolverState::reset(int) (1 samples, 0.02%)</title><rect x="1187.7" y="1203.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.7" y="1214.0"></text>
</g>
<g>
<title>GrowableArray&lt;ResolveNode*&gt;::grow(int) (1 samples, 0.02%)</title><rect x="1187.7" y="1187.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.7" y="1198.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.02%)</title><rect x="1187.7" y="1171.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.7" y="1182.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 0.04%)</title><rect x="1187.9" y="1267.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.9" y="1278.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num() (1 samples, 0.02%)</title><rect x="1187.9" y="1251.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.9" y="1262.0"></text>
</g>
<g>
<title>LinearScan::assign_reg_num(GrowableArray&lt;LIR_Op*&gt;*, IntervalWalker*) (1 samples, 0.02%)</title><rect x="1187.9" y="1235.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.9" y="1246.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.02%)</title><rect x="1187.9" y="1219.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.9" y="1230.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.02%)</title><rect x="1187.9" y="1203.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1190.9" y="1214.0"></text>
</g>
<g>
<title>LinearScan::compute_debug_info_for_scope(int, IRScope*, ValueStack*, ValueStack*) (1 samples, 0.02%)</title><rect x="1187.9" y="1187.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1190.9" y="1198.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value(int, Instruction*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.02%)</title><rect x="1187.9" y="1171.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1190.9" y="1182.0"></text>
</g>
<g>
<title>LinearScan::append_scope_value_for_operand(LIR_OprDesc*, GrowableArray&lt;ScopeValue*&gt;*) (1 samples, 0.02%)</title><rect x="1187.9" y="1155.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.9" y="1166.0"></text>
</g>
<g>
<title>LinearScan::build_intervals() (1 samples, 0.02%)</title><rect x="1188.2" y="1251.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.2" y="1262.0"></text>
</g>
<g>
<title>LIR_OpVisitState::visit(LIR_Op*) (1 samples, 0.02%)</title><rect x="1188.2" y="1235.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.2" y="1246.0"></text>
</g>
<g>
<title>ServiceThread::service_thread_entry(JavaThread*, Thread*) (1 samples, 0.02%)</title><rect x="1188.5" y="1379.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.5" y="1390.0"></text>
</g>
<g>
<title>JvmtiDeferredEvent::post() (1 samples, 0.02%)</title><rect x="1188.5" y="1363.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.5" y="1374.0"></text>
</g>
<g>
<title>JvmtiExport::post_compiled_method_load(nmethod*) (1 samples, 0.02%)</title><rect x="1188.5" y="1347.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.5" y="1358.0"></text>
</g>
<g>
<title>JvmtiCodeBlobEvents::build_jvmti_addr_location_map(nmethod*, _jvmtiAddrLocationMap**, int*) (1 samples, 0.02%)</title><rect x="1188.5" y="1331.0" width="0.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.5" y="1342.0"></text>
</g>
<g>
<title>ScopeDesc::sender() const (1 samples, 0.02%)</title><rect x="1188.5" y="1315.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1191.5" y="1326.0"></text>
</g>
<g>
<title>ScopeDesc::decode_body() (1 samples, 0.02%)</title><rect x="1188.5" y="1299.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.5" y="1310.0"></text>
</g>
<g>
<title>VMThread::run() (5 samples, 0.11%)</title><rect x="1188.7" y="1411.0" width="1.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.7" y="1422.0"></text>
</g>
<g>
<title>VMThread::loop() (5 samples, 0.11%)</title><rect x="1188.7" y="1395.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.7" y="1406.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.02%)</title><rect x="1188.7" y="1379.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.7" y="1390.0"></text>
</g>
<g>
<title>VMThread::evaluate_operation(VM_Operation*) [clone .constprop.66] (2 samples, 0.04%)</title><rect x="1189.0" y="1379.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.0" y="1390.0"></text>
</g>
<g>
<title>VM_Operation::evaluate() (2 samples, 0.04%)</title><rect x="1189.0" y="1363.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.0" y="1374.0"></text>
</g>
<g>
<title>VM_G1CollectForAllocation::doit() (2 samples, 0.04%)</title><rect x="1189.0" y="1347.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.0" y="1358.0"></text>
</g>
<g>
<title>G1CollectedHeap::do_collection_pause_at_safepoint(double) (2 samples, 0.04%)</title><rect x="1189.0" y="1331.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.0" y="1342.0"></text>
</g>
<g>
<title>G1CollectedHeap::register_humongous_regions_with_cset() (1 samples, 0.02%)</title><rect x="1189.0" y="1315.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.0" y="1326.0"></text>
</g>
<g>
<title>RegisterHumongousWithInCSetFastTestClosure::do_heap_region(HeapRegion*) (1 samples, 0.02%)</title><rect x="1189.0" y="1299.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.0" y="1310.0"></text>
</g>
<g>
<title>G1Policy::record_collection_pause_end(double, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="1189.2" y="1315.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.2" y="1326.0"></text>
</g>
<g>
<title>G1AdaptiveIHOPControl::send_trace_event(G1NewTracer*) (1 samples, 0.02%)</title><rect x="1189.2" y="1299.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1192.2" y="1310.0"></text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 0.04%)</title><rect x="1189.5" y="1379.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1192.5" y="1390.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1189.5" y="1363.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1192.5" y="1374.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1189.5" y="1347.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1192.5" y="1358.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1189.5" y="1331.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1192.5" y="1342.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1189.5" y="1315.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1192.5" y="1326.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1189.5" y="1299.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1192.5" y="1310.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="1189.5" y="1283.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1192.5" y="1294.0"></text>
</g>
</g>
</svg>
